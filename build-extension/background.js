/*! For license information please see background.js.LICENSE.txt */
(() => {
  var e = {
      3299: (e, t, r) => {
        'use strict';
        var a, o;
        r.d(t, { A: () => a, R: () => o }),
          (function (e) {
            (e.CONNECT = 'connectRequest'),
              (e.DISCONNECT = 'disconnect'),
              (e.IS_CONNECTED = 'isConnected'),
              (e.GET_PUB_KEYS = 'getPubKeys'),
              (e.GET_ADDRESSES = 'getAddresses'),
              (e.GET_NETWORK = 'getNetwork'),
              (e.GET_BALANCE = 'getBalance'),
              (e.GET_ORDINALS = 'getOrdinals'),
              (e.GET_BSV20S = 'getBsv20s'),
              (e.SEND_BSV = 'sendBsvRequest'),
              (e.SEND_BSV20 = 'sendBsv20Request'),
              (e.TRANSFER_ORDINAL = 'transferOrdinalRequest'),
              (e.SIGN_MESSAGE = 'signMessageRequest'),
              (e.BROADCAST = 'broadcastRequest'),
              (e.GET_SIGNATURES = 'getSignaturesRequest'),
              (e.GET_SOCIAL_PROFILE = 'getSocialProfile'),
              (e.GET_PAYMENT_UTXOS = 'getPaymentUtxos'),
              (e.GET_EXCHANGE_RATE = 'getExchangeRate'),
              (e.PURCHASE_ORDINAL = 'purchaseOrdinalRequest'),
              (e.PURCHASE_BSV20 = 'purchaseOrdinalRequest'),
              (e.GENERATE_TAGGED_KEYS = 'generateTaggedKeysRequest'),
              (e.GET_TAGGED_KEYS = 'getTaggedKeys'),
              (e.INSCRIBE = 'sendBsvRequest'),
              (e.ENCRYPT = 'encryptRequest'),
              (e.DECRYPT = 'decryptRequest'),
              (e.SIGNED_OUT = 'signedOut'),
              (e.USER_CONNECT_RESPONSE = 'userConnectResponse'),
              (e.SEND_BSV_RESPONSE = 'sendBsvResponse'),
              (e.SEND_BSV20_RESPONSE = 'sendBsv20Response'),
              (e.TRANSFER_ORDINAL_RESPONSE = 'transferOrdinalResponse'),
              (e.PURCHASE_ORDINAL_RESPONSE = 'purchaseOrdinalResponse'),
              (e.SIGN_MESSAGE_RESPONSE = 'signMessageResponse'),
              (e.BROADCAST_RESPONSE = 'broadcastResponse'),
              (e.GET_SIGNATURES_RESPONSE = 'getSignaturesResponse'),
              (e.GENERATE_TAGGED_KEYS_RESPONSE = 'generateTaggedKeysResponse'),
              (e.ENCRYPT_RESPONSE = 'encryptResponse'),
              (e.DECRYPT_RESPONSE = 'decryptResponse'),
              (e.SYNC_UTXOS = 'syncUtxos'),
              (e.QUEUE_STATUS_UPDATE = 'queueStatusUpdate'),
              (e.IMPORT_STATUS_UPDATE = 'importStatusUpdate'),
              (e.FETCHING_TX_STATUS_UPDATE = 'fetchingTx'),
              (e.BLOCK_HEIGHT_UPDATE = 'blockHeightUpdate'),
              (e.SWITCH_ACCOUNT = 'switchAccount');
          })(a || (a = {})),
          (function (e) {
            (e.YOURS_EMIT_EVENT = 'YoursEmitEvent'),
              (e.YOURS_REQUEST = 'YoursRequest'),
              (e.YOURS_RESPONSE = 'YoursResponse');
          })(o || (o = {}));
        const i = (e) => async (t) =>
            new Promise((r, a) => {
              const i = `${e}-${Date.now()}-${Math.random()}`,
                n = new CustomEvent(o.YOURS_REQUEST, { detail: { messageId: i, type: e, params: t } });
              self.addEventListener(
                i,
                function (t) {
                  const o = t,
                    { detail: i } = o;
                  i.type === e && (i.success ? r(i.data) : a(i.error));
                },
                { once: !0 },
              ),
                self.dispatchEvent(n);
            }),
          n = [a.SIGNED_OUT, a.SWITCH_ACCOUNT],
          {
            on: s,
            removeListener: c,
            emit: l,
          } = (() => {
            const e = new Map();
            return {
              on: (t, r) => {
                var a;
                n.includes(t)
                  ? (e.has(t) || e.set(t, []), null === (a = e.get(t)) || void 0 === a || a.push(r))
                  : console.error('Event name is not whitelisted:', t);
              },
              removeListener: (t, r) => {
                const a = e.get(t);
                a &&
                  e.set(
                    t,
                    a.filter((e) => e !== r),
                  );
              },
              emit: (t, r) => {
                const a = e.get(t);
                a && a.forEach((e) => e(r));
              },
            };
          })(),
          u = {
            isReady: !0,
            on: s,
            removeListener: c,
            connect: i(a.CONNECT),
            disconnect: i(a.DISCONNECT),
            isConnected: i(a.IS_CONNECTED),
            getPubKeys: i(a.GET_PUB_KEYS),
            getAddresses: i(a.GET_ADDRESSES),
            getNetwork: i(a.GET_NETWORK),
            getBalance: i(a.GET_BALANCE),
            getOrdinals: i(a.GET_ORDINALS),
            getBsv20s: i(a.GET_BSV20S),
            sendBsv: i(a.SEND_BSV),
            sendBsv20: i(a.SEND_BSV20),
            transferOrdinal: i(a.TRANSFER_ORDINAL),
            signMessage: i(a.SIGN_MESSAGE),
            broadcast: i(a.BROADCAST),
            getSignatures: i(a.GET_SIGNATURES),
            getSocialProfile: i(a.GET_SOCIAL_PROFILE),
            getPaymentUtxos: i(a.GET_PAYMENT_UTXOS),
            getExchangeRate: i(a.GET_EXCHANGE_RATE),
            purchaseOrdinal: i(a.PURCHASE_ORDINAL),
            purchaseBsv20: i(a.PURCHASE_BSV20),
            generateTaggedKeys: i(a.GENERATE_TAGGED_KEYS),
            getTaggedKeys: i(a.GET_TAGGED_KEYS),
            inscribe: i(a.INSCRIBE),
            encrypt: i(a.ENCRYPT),
            decrypt: i(a.DECRYPT),
          };
        'undefined' !== typeof window && ((window.panda = u), (window.yours = u));
        self.addEventListener(o.YOURS_EMIT_EVENT, (e) => {
          const t = e,
            { action: r, params: a } = t.detail;
          ((e, t) => {
            n.includes(e) && l(e, t);
          })(r, a);
        });
      },
      4963: (e, t, r) => {
        'use strict';
        r.d(t, { L: () => u });
        var a = r(3286),
          o = r(4389),
          i = r(3299),
          n = r(5917),
          s = r(7627),
          c = r(5761),
          l = r(6801);
        class u {
          constructor() {
            (this.storage = void 0),
              (this.set = async (e) =>
                new Promise((t, r) => {
                  chrome.storage.local.set(e, async () => {
                    chrome.runtime.lastError ? r(chrome.runtime.lastError) : (await this.getAndSetStorage(), t());
                  });
                })),
              (this.get = async (e) =>
                new Promise((t, r) => {
                  chrome.storage.local.get(e, (e) => {
                    chrome.runtime.lastError ? r(chrome.runtime.lastError) : t(e);
                  });
                })),
              (this.remove = async (e) =>
                new Promise((t, r) => {
                  chrome.storage.local.remove(e, () => {
                    chrome.runtime.lastError ? r(chrome.runtime.lastError) : t();
                  });
                })),
              (this.clear = async () =>
                new Promise((e, t) => {
                  chrome.storage.local.clear(() => {
                    chrome.runtime.lastError ? t(chrome.runtime.lastError) : e();
                  });
                })),
              (this.mapDeprecatedStorageToNewInterface = async (e) => {
                var t, r, a, i, n, c, l, u, d, h;
                const {
                    appState: f,
                    colorTheme: p,
                    derivationTags: b,
                    encryptedKeys: m,
                    exchangeRateCache: g,
                    lastActiveTime: v,
                    network: y,
                    noApprovalLimit: w,
                    passKey: k,
                    popupWindowId: E,
                    salt: S,
                    socialProfile: x,
                    whitelist: _,
                  } = e,
                  A = {
                    accounts: {
                      [f.addresses.identityAddress]: {
                        name: 'Account 1',
                        icon: null !== (t = null === x || void 0 === x ? void 0 : x.avatar) && void 0 !== t ? t : s.Nv,
                        encryptedKeys: m,
                        derivationTags: null !== b && void 0 !== b ? b : [],
                        settings: {
                          noApprovalLimit: null !== w && void 0 !== w ? w : 0,
                          whitelist: null !== _ && void 0 !== _ ? _ : [],
                          isPasswordRequired: f.isPasswordRequired,
                          socialProfile: {
                            displayName:
                              null !== (r = null === x || void 0 === x ? void 0 : x.displayName) && void 0 !== r
                                ? r
                                : 'Anonymous',
                            avatar:
                              null !== (a = null === x || void 0 === x ? void 0 : x.avatar) && void 0 !== a ? a : s.Nv,
                          },
                          favoriteTokens: [],
                          customFeeRate: 10,
                        },
                        addresses: {
                          bsvAddress: f.addresses.bsvAddress,
                          ordAddress: f.addresses.ordAddress,
                          identityAddress: f.addresses.identityAddress,
                        },
                        balance: {
                          bsv:
                            null !== (i = null === (n = f.balance) || void 0 === n ? void 0 : n.bsv) && void 0 !== i
                              ? i
                              : 0,
                          satoshis:
                            null !== (c = null === (l = f.balance) || void 0 === l ? void 0 : l.satoshis) &&
                            void 0 !== c
                              ? c
                              : 0,
                          usdInCents:
                            null !== (u = null === (d = f.balance) || void 0 === d ? void 0 : d.usdInCents) &&
                            void 0 !== u
                              ? u
                              : 0,
                        },
                        pubKeys: {
                          bsvPubKey: f.pubKeys.bsvPubKey,
                          ordPubKey: f.pubKeys.ordPubKey,
                          identityPubKey: f.pubKeys.identityPubKey,
                        },
                        network:
                          null !== (h = null !== y && void 0 !== y ? y : f.network) && void 0 !== h
                            ? h
                            : o.NetWork.Mainnet,
                      },
                    },
                    selectedAccount: f.addresses.identityAddress,
                    accountNumber: 1,
                    colorTheme: p,
                    isLocked: null === f || void 0 === f ? void 0 : f.isLocked,
                    popupWindowId: E,
                    exchangeRateCache: g,
                    lastActiveTime: v,
                    passKey: k,
                    salt: S,
                    version: s.GP,
                    hasUpgradedToSPV: !1,
                  };
                return (
                  await this.set(A),
                  await this.remove([
                    'appState',
                    'derivationTags',
                    'encryptedKeys',
                    'socialProfile',
                    'noApprovalLimit',
                    'network',
                    'paymentUtxos',
                    'whitelist',
                  ]),
                  A
                );
              }),
              (this.setOldAppStateIfMissing = async (e) => {
                if (null === e || void 0 === e || !e.appState) {
                  const t = this.retrieveKeysFromOldStorage(e);
                  return t
                    ? ((e.appState = {
                        isLocked: !0,
                        ordinals: [],
                        balance: { bsv: 0, satoshis: 0, usdInCents: 0 },
                        network: o.NetWork.Mainnet,
                        isPasswordRequired: !0,
                        addresses: {
                          bsvAddress: t.walletAddress || '',
                          ordAddress: t.ordAddress || '',
                          identityAddress: t.identityAddress || '',
                        },
                        pubKeys: {
                          bsvPubKey: t.walletPubKey || '',
                          ordPubKey: t.ordPubKey || '',
                          identityPubKey: (null === t || void 0 === t ? void 0 : t.identityPubKey) || '',
                        },
                      }),
                      await this.set(e),
                      e)
                    : e;
                }
                return e;
              }),
              (this.getAndSetStorage = async () => {
                if (((this.storage = await this.get(null)), !this.storage.version && !this.storage.hasUpgradedToSPV)) {
                  if (((this.storage = await this.setOldAppStateIfMissing(this.storage)), !this.storage.appState))
                    return;
                  this.storage = await this.mapDeprecatedStorageToNewInterface(this.storage);
                }
                return this.storage;
              }),
              (this.updateNested = async (e, t) => {
                try {
                  var r;
                  const a = null !== (r = (await this.get([e]))[e]) && void 0 !== r ? r : {},
                    o = (0, l.$)(a, t),
                    i = { [e]: o };
                  await this.set(i);
                } catch (a) {
                  throw new Error(`Failed to set nested object value: ${a}`);
                }
              }),
              (this.removeNested = async (e, t) => {
                try {
                  var r;
                  const a = null !== (r = (await this.get([e]))[e]) && void 0 !== r ? r : {};
                  delete a[t];
                  const o = { [e]: a };
                  await this.set(o);
                } catch (a) {
                  throw new Error(`Failed to remove nested object value: ${a}`);
                }
              }),
              (this.update = async (e) => {
                try {
                  const t = await this.get(null),
                    r = (0, l.$)(t, e);
                  await this.set(r);
                } catch (t) {
                  throw new Error(`Failed to update storage: ${t}`);
                }
              }),
              (this.getCurrentAccountObject = () => {
                if (null === this.storage || void 0 === this.storage) throw new Error('Storage is not initialized.');
                const { accounts: e, selectedAccount: t } = this.storage;
                return e
                  ? {
                      selectedAccount: t,
                      account: e[t],
                      exchangeRateCache: this.storage.exchangeRateCache,
                      isLocked: this.storage.isLocked,
                      lastActiveTime: this.storage.lastActiveTime,
                      passKey: this.storage.passKey,
                      salt: this.storage.salt,
                    }
                  : this.storage;
              }),
              (this.getNetwork = () => {
                if (null === this.storage || void 0 === this.storage) throw new Error('Storage is not initialized.');
                const { accounts: e, selectedAccount: t } = this.storage;
                if (!e || !t) return o.NetWork.Mainnet;
                const r = e[t],
                  { network: a } = r;
                return null !== a && void 0 !== a ? a : o.NetWork.Mainnet;
              }),
              (this.getCustomFeeRate = () => {
                var e, t, r;
                if (!this.storage) return 10;
                const { accounts: a, selectedAccount: o } = this.storage;
                return a &&
                  o &&
                  null !==
                    (e =
                      null === (t = a[o]) || void 0 === t || null === (r = t.settings) || void 0 === r
                        ? void 0
                        : r.customFeeRate) &&
                  void 0 !== e
                  ? e
                  : 10;
              }),
              (this.isPasswordRequired = () => {
                if (null === this.storage || void 0 === this.storage) return !0;
                const { accounts: e, selectedAccount: t } = this.storage;
                if (!e || !t) return !0;
                const r = e[t];
                return void 0 === r.settings.isPasswordRequired || r.settings.isPasswordRequired;
              }),
              (this.getAllAccounts = () => {
                if (null === this.storage || void 0 === this.storage) return [];
                const { accounts: e } = this.storage;
                if (!e) return [];
                return Object.entries(e).map((e) => {
                  let [t, r] = e;
                  return { ...r, address: t };
                });
              }),
              (this.switchAccount = async (e) => {
                await this.update({ selectedAccount: e }), (0, n._z)({ action: i.A.SWITCH_ACCOUNT });
              });
          }
          retrieveKeysFromOldStorage(e) {
            const { encryptedKeys: t, passKey: r, network: i } = e;
            try {
              if (!t || !r) return;
              const e = (0, c.Yc)(t, r),
                n = JSON.parse(e),
                l = a.Aq.toBase58Check(a.Aq.fromBase58Check(n.walletAddress).data, [
                  i !== o.NetWork.Mainnet && i ? s.aO : s.jH,
                ]),
                u = a.Aq.toBase58Check(a.Aq.fromBase58Check(n.ordAddress).data, [
                  i !== o.NetWork.Mainnet && i ? s.aO : s.jH,
                ]);
              let d = '',
                h = '';
              return (
                n.identityAddress &&
                  ((d = a.Aq.toBase58Check(a.Aq.fromBase58Check(n.identityAddress).data, [
                    i !== o.NetWork.Mainnet && i ? s.aO : s.jH,
                  ])),
                  (h = n.identityPubKey)),
                {
                  ordAddress: u,
                  walletAddress: l,
                  walletPubKey: n.walletPubKey,
                  ordPubKey: n.ordPubKey,
                  identityAddress: d,
                  identityPubKey: h,
                }
              );
            } catch (n) {
              console.log('Error in retrieveKeys:', n);
            }
          }
        }
      },
      8700: (e, t, r) => {
        'use strict';
        r.d(t, { Q: () => s });
        var a = r(6213),
          o = r(4389),
          i = r(7627),
          n = r(306);
        class s {
          constructor(e) {
            var t = this;
            (this.chromeStorageService = void 0),
              (this.getUtxoByOutpoint = async (e) => {
                try {
                  const t = this.chromeStorageService.getNetwork(),
                    { data: r } = await a.A.get(`${this.getBaseUrl(t)}/api/txos/${e}?script=true`),
                    o = r;
                  if (!o.script) throw Error('No script when fetching by outpoint');
                  return o;
                } catch (t) {
                  throw new Error(JSON.stringify(t));
                }
              }),
              (this.getTokenPriceInSats = async (e) => {
                const t = this.chromeStorageService.getNetwork(),
                  r = [];
                for (const o of e) {
                  const { data: e } = await a.A.get(
                    `${this.getBaseUrl(t)}/api/bsv20/market?sort=price_per_token&dir=asc&limit=1&offset=0&${o.length > 30 ? 'id' : 'tick'}=${o}`,
                  );
                  e.length > 0 && r.push({ id: o, satPrice: e[0].pricePer });
                }
                return r;
              }),
              (this.getBsv20Balances = async (e) => {
                const t = this.chromeStorageService.getNetwork(),
                  r = `${this.getBaseUrl(t)}/api/bsv20/balance?addresses=${e.join('&addresses=')}`;
                return (await a.A.get(r)).data.map((e) => ({
                  id: e.tick || e.id,
                  tick: e.tick,
                  sym: e.sym || null,
                  icon: e.icon || null,
                  dec: e.dec,
                  all: { confirmed: BigInt(e.all.confirmed), pending: BigInt(e.all.pending) },
                  listed: { confirmed: BigInt(e.all.confirmed), pending: BigInt(e.all.pending) },
                }));
              }),
              (this.getBSV20Utxos = async function (e) {
                let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                try {
                  const o = t.chromeStorageService.getNetwork(),
                    i = [];
                  return (
                    await Promise.all(
                      r.map(async (r) => {
                        const s = (0, n.ez)(e)
                          ? `${t.getBaseUrl(o)}/api/bsv20/${r}/id/${e}?limit=10000`
                          : `${t.getBaseUrl(o)}/api/bsv20/${r}/tick/${e}?limit=10000`;
                        (await a.A.get(s)).data.forEach((e) => {
                          1 !== e.status || e.listing || i.push(e);
                        });
                      }),
                    ),
                    i
                  );
                } catch (o) {
                  return console.error('getBSV20Utxos', o), [];
                }
              }),
              (this.getBsv20Details = async (e) => {
                try {
                  const t = this.chromeStorageService.getNetwork(),
                    r = (0, n.ez)(e)
                      ? `${this.getBaseUrl(t)}/api/bsv20/id/${e}`
                      : `${this.getBaseUrl(t)}/api/bsv20/tick/${e}`;
                  return (await a.A.get(r)).data;
                } catch (t) {
                  console.error('getBsv20Details', t);
                }
              }),
              (this.chromeStorageService = e);
          }
          getBaseUrl(e) {
            return e === o.NetWork.Mainnet ? i.kD : i.QN;
          }
        }
      },
      6801: (e, t, r) => {
        'use strict';
        r.d(t, { $: () => a });
        r(3286), r(4292), r(4389), r(5761), r(8948), r(8189), r(6382).hp;
        const a = (e, t) => {
          for (const r of Object.keys(t))
            t[r] && 'object' === typeof t[r] && !Array.isArray(t[r])
              ? (e[r] || (e[r] = {}), a(e[r], t[r]))
              : (e[r] = t[r]);
          return e;
        };
      },
      3329: (e, t, r) => {
        'use strict';
        r.d(t, { w: () => a });
        const a = {
          color: {
            component: {
              bottomMenuBackground: '#010101',
              bottomMenuText: '#FFFFFF',
              ordinalSelectedBorder: '#A1FF8B',
              ordinalTypeJson: '#34D399',
              ordinalTypePlainText: '#34D399',
              ordinalTypeUnsupported: '#FFFFFF',
              pageLoaderSpinner: '#A1FF8B',
              pageLoaderSpinnerBorder: '#FFFFFF50',
              pageLoaderText: '#FFFFFF',
              primaryButtonLeftGradient: '#A1FF8B',
              primaryButtonRightGradient: '#34D399',
              primaryButtonText: '#010101',
              progressBar: '#34D399',
              progressBarTrack: '#F5F5F5',
              queueBannerSynced: '#34D399',
              queueBannerSyncedText: '#000000',
              queueBannerSyncing: '#F79009',
              queueBannerSyncingText: '#000000',
              secondaryOutlineButtonGradientLeft: '#A1FF8B',
              secondaryOutlineButtonGradientRight: '#34D399',
              secondaryOutlineButtonText: '#010101',
              snackbarError: '#FF4646',
              snackbarErrorText: '#000000',
              snackbarSuccess: '#34D399',
              snackbarSuccessText: '#000000',
              snackbarWarning: '#F79009',
              snackbarWarningText: '#000000',
              tabSelectedLeftGradient: '#A1FF8B',
              tabSelectedRightGradient: '#34D399',
              tabSelectedText: '#010101',
              tabUnselected: '#17191E',
              tabUnselectedText: '#FFFFFF',
              toggleSwitchOn: '#34D399',
              warningButton: '#FF4646',
              warningButtonText: '#FFFFFF',
            },
            global: {
              neutral: '#000000',
              gray: '#98A2B3',
              row: '#17191E',
              walletBackground: '#010101',
              contrast: '#FFFFFF',
            },
          },
          settings: {
            repo: 'https://github.com/yours-org/yours-wallet',
            services: { apps: !0, bsv20: !0, locks: !0, ordinals: !0 },
            walletName: 'Yours',
          },
        };
      },
      5917: (e, t, r) => {
        'use strict';
        r.d(t, { _z: () => o, aT: () => n, lM: () => i });
        var a = r(7627);
        const o = (e) => {
            try {
              chrome.runtime.sendMessage(e, () => {
                chrome.runtime.lastError && console.warn(chrome.runtime.lastError.message);
              });
            } catch (t) {
              console.error(t);
            }
          },
          i = (e) => {
            try {
              chrome.windows.remove(e, () => {
                chrome.runtime.lastError && console.warn(chrome.runtime.lastError.message);
              });
            } catch (t) {
              console.error(t);
            }
          },
          n = (e) => {
            chrome.notifications.create(
              {
                type: 'basic',
                iconUrl: a.Nv,
                title: 'New Transactions',
                message: `Your SPV wallet has received ${e} new transaction${e > 1 ? 's' : ''}!`,
                priority: 2,
              },
              (e) => {
                chrome.runtime.lastError
                  ? console.error('Notification error:', chrome.runtime.lastError.message || chrome.runtime.lastError)
                  : console.log('Notification sent:', e);
              },
            );
          };
      },
      7627: (e, t, r) => {
        'use strict';
        r.d(t, { GP: () => l, Nv: () => c, QN: () => i, aO: () => s, jH: () => n, kD: () => o });
        var a = r(4389);
        const o = 'https://ordinals.gorillapool.io',
          i = 'https://testnet.ordinals.gorillapool.io',
          n = 0,
          s = 111,
          c = 'https://i.ibb.co/zGcthBv/yours-org-light.png',
          l = 1;
        a.NetWork.Mainnet;
      },
      5761: (e, t, r) => {
        'use strict';
        r.d(t, { Yc: () => i });
        r(3286);
        var a = r(6111),
          o = r.n(a);
        const i = (e, t) => {
          const r = o().enc.Hex.parse(e.slice(0, 32)),
            a = o().enc.Hex.parse(e.slice(32, 64)),
            i = e.slice(64),
            n = o().PBKDF2(t, r, { keySize: 8, iterations: 1e3 });
          return o().AES.decrypt(i, n, { iv: a }).toString(o().enc.Utf8);
        };
      },
      8948: (e, t, r) => {
        'use strict';
        r(6674), r(4389), r(7627), r(8189), r(3286);
      },
      306: (e, t, r) => {
        'use strict';
        r.d(t, { ez: () => a });
        r(3286), r(6382).hp;
        function a(e) {
          return /^[a-fA-F0-9]{64}_\d+$/.test(e);
        }
      },
      7461: (e, t, r) => {
        'use strict';
        r.d(t, { Q: () => o });
        var a = r(3286);
        function o(e) {
          var t,
            r,
            o,
            i,
            n,
            s,
            c,
            l,
            u,
            d,
            h,
            f,
            p,
            b,
            m,
            g,
            v,
            y,
            w,
            k,
            E,
            S,
            x,
            _,
            A,
            O,
            P,
            I,
            B,
            N,
            T,
            z,
            R,
            M,
            F,
            C,
            j,
            U,
            D,
            L,
            q,
            H,
            G,
            K,
            V,
            $;
          return {
            txid: e.outpoint.txid,
            vout: e.outpoint.vout,
            outpoint: e.outpoint.toString(),
            satoshis: Number(e.satoshis),
            script: a.Aq.toBase64(e.script),
            owner: e.owner,
            spend: '',
            origin: e.data.origin && {
              outpoint: e.data.origin.data.outpoint,
              nonce: Number(e.data.origin.data.nonce),
              num: e.block.height < 5e7 ? `${e.block.height}:${e.block.idx}:${e.outpoint.vout}` : void 0,
              data: {
                insc: {
                  file: (null === (t = e.data) ||
                  void 0 === t ||
                  null === (r = t.origin) ||
                  void 0 === r ||
                  null === (o = r.data) ||
                  void 0 === o ||
                  null === (i = o.insc) ||
                  void 0 === i
                    ? void 0
                    : i.file) && {
                    type: e.data.origin.data.insc.file.type,
                    size: Number(e.data.origin.data.insc.file.size),
                    hash: e.data.origin.data.insc.file.hash,
                    text:
                      ((null === (n = e.data.origin) ||
                      void 0 === n ||
                      null === (s = n.data) ||
                      void 0 === s ||
                      null === (c = s.insc) ||
                      void 0 === c ||
                      null === (l = c.file) ||
                      void 0 === l
                        ? void 0
                        : l.type.startsWith('text')) ||
                        (null === (u = e.data.origin) ||
                        void 0 === u ||
                        null === (d = u.data) ||
                        void 0 === d ||
                        null === (h = d.insc) ||
                        void 0 === h ||
                        null === (f = h.file) ||
                        void 0 === f
                          ? void 0
                          : f.type.startsWith('application/op-ns'))) &&
                      (null === (p = e.data.origin.data.insc) || void 0 === p || null === (b = p.file) || void 0 === b
                        ? void 0
                        : b.content) &&
                      a.Aq.toUTF8(e.data.origin.data.insc.file.content),
                    json:
                      (null === (m = e.data.origin) ||
                      void 0 === m ||
                      null === (g = m.data) ||
                      void 0 === g ||
                      null === (v = g.insc) ||
                      void 0 === v ||
                      null === (y = v.file) ||
                      void 0 === y
                        ? void 0
                        : y.type.startsWith('application/json')) &&
                      (null === (w = e.data.origin) ||
                      void 0 === w ||
                      null === (k = w.data) ||
                      void 0 === k ||
                      null === (E = k.insc) ||
                      void 0 === E ||
                      null === (S = E.file) ||
                      void 0 === S
                        ? void 0
                        : S.content) &&
                      JSON.parse(a.Aq.toUTF8(e.data.origin.data.insc.file.content)),
                  },
                },
                map: null === (x = e.data.origin.data) || void 0 === x ? void 0 : x.map,
                sigma: (
                  (null === (_ = e.data.origin.data) || void 0 === _ || null === (A = _.sigma) || void 0 === A
                    ? void 0
                    : A.data) || []
                ).map((e) => ({ ...e, signature: a.Aq.toBase64(e.signature) })),
              },
            },
            height: null === (O = e.block) || void 0 === O ? void 0 : O.height,
            idx: Number(null === (P = e.block) || void 0 === P ? void 0 : P.idx),
            data: {
              insc: {
                file: (null === (I = e.data) ||
                void 0 === I ||
                null === (B = I.insc) ||
                void 0 === B ||
                null === (N = B.data) ||
                void 0 === N
                  ? void 0
                  : N.file) && {
                  type: e.data.insc.data.file.type,
                  size: e.data.insc.data.file.size,
                  hash: e.data.insc.data.file.hash,
                  text:
                    (null === (T = e.data.insc) ||
                    void 0 === T ||
                    null === (z = T.data) ||
                    void 0 === z ||
                    null === (R = z.file) ||
                    void 0 === R
                      ? void 0
                      : R.type.startsWith('text')) &&
                    e.data.insc.data.file.content &&
                    a.Aq.toUTF8(e.data.insc.data.file.content),
                  json:
                    (null === (M = e.data.insc) ||
                    void 0 === M ||
                    null === (F = M.data) ||
                    void 0 === F ||
                    null === (C = F.file) ||
                    void 0 === C
                      ? void 0
                      : C.type.startsWith('application/json')) &&
                    e.data.insc.data.file.content &&
                    JSON.parse(a.Aq.toUTF8(e.data.insc.data.file.content)),
                },
              },
              list: e.data.list && {
                payout: a.Aq.toBase58(e.data.list.data.payout),
                price: Number(e.data.list.data.price),
              },
              lock: null === (j = e.data.lock) || void 0 === j ? void 0 : j.data,
              map: null === (U = e.data.map) || void 0 === U ? void 0 : U.data,
              bsv20: ((null === (D = e.data.bsv20) || void 0 === D ? void 0 : D.data) ||
                (null === (L = e.data.bsv21) || void 0 === L ? void 0 : L.data)) && {
                ...((null === (q = e.data.bsv20) || void 0 === q ? void 0 : q.data) ||
                  (null === (H = e.data.bsv21) || void 0 === H ? void 0 : H.data)),
                amt: Number(
                  (null === (G = e.data.bsv20) || void 0 === G || null === (K = G.data) || void 0 === K
                    ? void 0
                    : K.amt) ||
                    (null === (V = e.data.bsv21) || void 0 === V || null === ($ = V.data) || void 0 === $
                      ? void 0
                      : $.amt),
                ),
              },
            },
          };
        }
      },
      8189: (e, t, r) => {
        'use strict';
        r(4389), r(3286), r(7627);
      },
      7250: (e, t) => {
        'use strict';
        function r(e) {
          if (!Number.isSafeInteger(e) || e < 0) throw new Error(`positive integer expected, not ${e}`);
        }
        function a(e) {
          if ('boolean' !== typeof e) throw new Error(`boolean expected, not ${e}`);
        }
        function o(e) {
          return e instanceof Uint8Array || (null != e && 'object' === typeof e && 'Uint8Array' === e.constructor.name);
        }
        function i(e) {
          if (!o(e)) throw new Error('Uint8Array expected');
          for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) r[a - 1] = arguments[a];
          if (r.length > 0 && !r.includes(e.length))
            throw new Error(`Uint8Array expected of length ${r}, not of length=${e.length}`);
        }
        function n(e) {
          if ('function' !== typeof e || 'function' !== typeof e.create)
            throw new Error('Hash should be wrapped by utils.wrapConstructor');
          r(e.outputLen), r(e.blockLen);
        }
        function s(e) {
          let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if (e.destroyed) throw new Error('Hash instance has been destroyed');
          if (t && e.finished) throw new Error('Hash#digest() has already been called');
        }
        function c(e, t) {
          i(e);
          const r = t.outputLen;
          if (e.length < r) throw new Error(`digestInto() expects output buffer of length at least ${r}`);
        }
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.isBytes = o),
          (t.number = r),
          (t.bool = a),
          (t.bytes = i),
          (t.hash = n),
          (t.exists = s),
          (t.output = c);
        const l = { number: r, bool: a, bytes: i, hash: n, exists: s, output: c };
        t.default = l;
      },
      1193: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }), (t.HashMD = t.Maj = t.Chi = void 0);
        const a = r(7250),
          o = r(684);
        t.Chi = (e, t, r) => (e & t) ^ (~e & r);
        t.Maj = (e, t, r) => (e & t) ^ (e & r) ^ (t & r);
        class i extends o.Hash {
          constructor(e, t, r, a) {
            super(),
              (this.blockLen = e),
              (this.outputLen = t),
              (this.padOffset = r),
              (this.isLE = a),
              (this.finished = !1),
              (this.length = 0),
              (this.pos = 0),
              (this.destroyed = !1),
              (this.buffer = new Uint8Array(e)),
              (this.view = (0, o.createView)(this.buffer));
          }
          update(e) {
            (0, a.exists)(this);
            const { view: t, buffer: r, blockLen: i } = this,
              n = (e = (0, o.toBytes)(e)).length;
            for (let a = 0; a < n; ) {
              const s = Math.min(i - this.pos, n - a);
              if (s !== i)
                r.set(e.subarray(a, a + s), this.pos),
                  (this.pos += s),
                  (a += s),
                  this.pos === i && (this.process(t, 0), (this.pos = 0));
              else {
                const t = (0, o.createView)(e);
                for (; i <= n - a; a += i) this.process(t, a);
              }
            }
            return (this.length += e.length), this.roundClean(), this;
          }
          digestInto(e) {
            (0, a.exists)(this), (0, a.output)(e, this), (this.finished = !0);
            const { buffer: t, view: r, blockLen: i, isLE: n } = this;
            let { pos: s } = this;
            (t[s++] = 128), this.buffer.subarray(s).fill(0), this.padOffset > i - s && (this.process(r, 0), (s = 0));
            for (let a = s; a < i; a++) t[a] = 0;
            !(function (e, t, r, a) {
              if ('function' === typeof e.setBigUint64) return e.setBigUint64(t, r, a);
              const o = BigInt(32),
                i = BigInt(4294967295),
                n = Number((r >> o) & i),
                s = Number(r & i),
                c = a ? 4 : 0,
                l = a ? 0 : 4;
              e.setUint32(t + c, n, a), e.setUint32(t + l, s, a);
            })(r, i - 8, BigInt(8 * this.length), n),
              this.process(r, 0);
            const c = (0, o.createView)(e),
              l = this.outputLen;
            if (l % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');
            const u = l / 4,
              d = this.get();
            if (u > d.length) throw new Error('_sha2: outputLen bigger than state');
            for (let a = 0; a < u; a++) c.setUint32(4 * a, d[a], n);
          }
          digest() {
            const { buffer: e, outputLen: t } = this;
            this.digestInto(e);
            const r = e.slice(0, t);
            return this.destroy(), r;
          }
          _cloneInto(e) {
            e || (e = new this.constructor()), e.set(...this.get());
            const { blockLen: t, buffer: r, length: a, finished: o, destroyed: i, pos: n } = this;
            return (e.length = a), (e.pos = n), (e.finished = o), (e.destroyed = i), a % t && e.buffer.set(r), e;
          }
        }
        t.HashMD = i;
      },
      7459: (e, t) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.add5L =
            t.add5H =
            t.add4H =
            t.add4L =
            t.add3H =
            t.add3L =
            t.rotlBL =
            t.rotlBH =
            t.rotlSL =
            t.rotlSH =
            t.rotr32L =
            t.rotr32H =
            t.rotrBL =
            t.rotrBH =
            t.rotrSL =
            t.rotrSH =
            t.shrSL =
            t.shrSH =
            t.toBig =
              void 0),
          (t.fromBig = o),
          (t.split = i),
          (t.add = y);
        const r = BigInt(2 ** 32 - 1),
          a = BigInt(32);
        function o(e) {
          return arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
            ? { h: Number(e & r), l: Number((e >> a) & r) }
            : { h: 0 | Number((e >> a) & r), l: 0 | Number(e & r) };
        }
        function i(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            r = new Uint32Array(e.length),
            a = new Uint32Array(e.length);
          for (let i = 0; i < e.length; i++) {
            const { h: n, l: s } = o(e[i], t);
            [r[i], a[i]] = [n, s];
          }
          return [r, a];
        }
        const n = (e, t) => (BigInt(e >>> 0) << a) | BigInt(t >>> 0);
        t.toBig = n;
        const s = (e, t, r) => e >>> r;
        t.shrSH = s;
        const c = (e, t, r) => (e << (32 - r)) | (t >>> r);
        t.shrSL = c;
        const l = (e, t, r) => (e >>> r) | (t << (32 - r));
        t.rotrSH = l;
        const u = (e, t, r) => (e << (32 - r)) | (t >>> r);
        t.rotrSL = u;
        const d = (e, t, r) => (e << (64 - r)) | (t >>> (r - 32));
        t.rotrBH = d;
        const h = (e, t, r) => (e >>> (r - 32)) | (t << (64 - r));
        t.rotrBL = h;
        const f = (e, t) => t;
        t.rotr32H = f;
        const p = (e, t) => e;
        t.rotr32L = p;
        const b = (e, t, r) => (e << r) | (t >>> (32 - r));
        t.rotlSH = b;
        const m = (e, t, r) => (t << r) | (e >>> (32 - r));
        t.rotlSL = m;
        const g = (e, t, r) => (t << (r - 32)) | (e >>> (64 - r));
        t.rotlBH = g;
        const v = (e, t, r) => (e << (r - 32)) | (t >>> (64 - r));
        function y(e, t, r, a) {
          const o = (t >>> 0) + (a >>> 0);
          return { h: (e + r + ((o / 2 ** 32) | 0)) | 0, l: 0 | o };
        }
        t.rotlBL = v;
        const w = (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0);
        t.add3L = w;
        const k = (e, t, r, a) => (t + r + a + ((e / 2 ** 32) | 0)) | 0;
        t.add3H = k;
        const E = (e, t, r, a) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (a >>> 0);
        t.add4L = E;
        const S = (e, t, r, a, o) => (t + r + a + o + ((e / 2 ** 32) | 0)) | 0;
        t.add4H = S;
        const x = (e, t, r, a, o) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (a >>> 0) + (o >>> 0);
        t.add5L = x;
        const _ = (e, t, r, a, o, i) => (t + r + a + o + i + ((e / 2 ** 32) | 0)) | 0;
        t.add5H = _;
        const A = {
          fromBig: o,
          split: i,
          toBig: n,
          shrSH: s,
          shrSL: c,
          rotrSH: l,
          rotrSL: u,
          rotrBH: d,
          rotrBL: h,
          rotr32H: f,
          rotr32L: p,
          rotlSH: b,
          rotlSL: m,
          rotlBH: g,
          rotlBL: v,
          add: y,
          add3L: w,
          add3H: k,
          add4L: E,
          add4H: S,
          add5H: _,
          add5L: x,
        };
        t.default = A;
      },
      7932: (e, t) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.crypto = void 0),
          (t.crypto = 'object' === typeof globalThis && 'crypto' in globalThis ? globalThis.crypto : void 0);
      },
      1858: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }), (t.hmac = t.HMAC = void 0);
        const a = r(7250),
          o = r(684);
        class i extends o.Hash {
          constructor(e, t) {
            super(), (this.finished = !1), (this.destroyed = !1), (0, a.hash)(e);
            const r = (0, o.toBytes)(t);
            if (((this.iHash = e.create()), 'function' !== typeof this.iHash.update))
              throw new Error('Expected instance of class which extends utils.Hash');
            (this.blockLen = this.iHash.blockLen), (this.outputLen = this.iHash.outputLen);
            const i = this.blockLen,
              n = new Uint8Array(i);
            n.set(r.length > i ? e.create().update(r).digest() : r);
            for (let a = 0; a < n.length; a++) n[a] ^= 54;
            this.iHash.update(n), (this.oHash = e.create());
            for (let a = 0; a < n.length; a++) n[a] ^= 106;
            this.oHash.update(n), n.fill(0);
          }
          update(e) {
            return (0, a.exists)(this), this.iHash.update(e), this;
          }
          digestInto(e) {
            (0, a.exists)(this),
              (0, a.bytes)(e, this.outputLen),
              (this.finished = !0),
              this.iHash.digestInto(e),
              this.oHash.update(e),
              this.oHash.digestInto(e),
              this.destroy();
          }
          digest() {
            const e = new Uint8Array(this.oHash.outputLen);
            return this.digestInto(e), e;
          }
          _cloneInto(e) {
            e || (e = Object.create(Object.getPrototypeOf(this), {}));
            const { oHash: t, iHash: r, finished: a, destroyed: o, blockLen: i, outputLen: n } = this;
            return (
              (e.finished = a),
              (e.destroyed = o),
              (e.blockLen = i),
              (e.outputLen = n),
              (e.oHash = t._cloneInto(e.oHash)),
              (e.iHash = r._cloneInto(e.iHash)),
              e
            );
          }
          destroy() {
            (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
          }
        }
        t.HMAC = i;
        (t.hmac = (e, t, r) => new i(e, t).update(r).digest()), (t.hmac.create = (e, t) => new i(e, t));
      },
      9924: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.pbkdf2 = function (e, t, r, a) {
            const { c: o, dkLen: c, DK: l, PRF: u, PRFSalt: d } = n(e, t, r, a);
            let h;
            const f = new Uint8Array(4),
              p = (0, i.createView)(f),
              b = new Uint8Array(u.outputLen);
            for (let i = 1, n = 0; n < c; i++, n += u.outputLen) {
              const e = l.subarray(n, n + u.outputLen);
              p.setInt32(0, i, !1), (h = d._cloneInto(h)).update(f).digestInto(b), e.set(b.subarray(0, e.length));
              for (let t = 1; t < o; t++) {
                u._cloneInto(h).update(b).digestInto(b);
                for (let t = 0; t < e.length; t++) e[t] ^= b[t];
              }
            }
            return s(u, d, l, h, b);
          }),
          (t.pbkdf2Async = async function (e, t, r, a) {
            const { c: o, dkLen: c, asyncTick: l, DK: u, PRF: d, PRFSalt: h } = n(e, t, r, a);
            let f;
            const p = new Uint8Array(4),
              b = (0, i.createView)(p),
              m = new Uint8Array(d.outputLen);
            for (let n = 1, s = 0; s < c; n++, s += d.outputLen) {
              const e = u.subarray(s, s + d.outputLen);
              b.setInt32(0, n, !1),
                (f = h._cloneInto(f)).update(p).digestInto(m),
                e.set(m.subarray(0, e.length)),
                await (0, i.asyncLoop)(o - 1, l, () => {
                  d._cloneInto(f).update(m).digestInto(m);
                  for (let t = 0; t < e.length; t++) e[t] ^= m[t];
                });
            }
            return s(d, h, u, f, m);
          });
        const a = r(7250),
          o = r(1858),
          i = r(684);
        function n(e, t, r, n) {
          (0, a.hash)(e);
          const s = (0, i.checkOpts)({ dkLen: 32, asyncTick: 10 }, n),
            { c: c, dkLen: l, asyncTick: u } = s;
          if (((0, a.number)(c), (0, a.number)(l), (0, a.number)(u), c < 1))
            throw new Error('PBKDF2: iterations (c) should be >= 1');
          const d = (0, i.toBytes)(t),
            h = (0, i.toBytes)(r),
            f = new Uint8Array(l),
            p = o.hmac.create(e, d),
            b = p._cloneInto().update(h);
          return { c: c, dkLen: l, asyncTick: u, DK: f, PRF: p, PRFSalt: b };
        }
        function s(e, t, r, a, o) {
          return e.destroy(), t.destroy(), a && a.destroy(), o.fill(0), r;
        }
      },
      1678: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }), (t.sha224 = t.sha256 = t.SHA256 = void 0);
        const a = r(1193),
          o = r(684),
          i = new Uint32Array([
            1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080,
            310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
            264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808,
            3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,
            1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817,
            3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,
            1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ]),
          n = new Uint32Array([
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225,
          ]),
          s = new Uint32Array(64);
        class c extends a.HashMD {
          constructor() {
            super(64, 32, 8, !1),
              (this.A = 0 | n[0]),
              (this.B = 0 | n[1]),
              (this.C = 0 | n[2]),
              (this.D = 0 | n[3]),
              (this.E = 0 | n[4]),
              (this.F = 0 | n[5]),
              (this.G = 0 | n[6]),
              (this.H = 0 | n[7]);
          }
          get() {
            const { A: e, B: t, C: r, D: a, E: o, F: i, G: n, H: s } = this;
            return [e, t, r, a, o, i, n, s];
          }
          set(e, t, r, a, o, i, n, s) {
            (this.A = 0 | e),
              (this.B = 0 | t),
              (this.C = 0 | r),
              (this.D = 0 | a),
              (this.E = 0 | o),
              (this.F = 0 | i),
              (this.G = 0 | n),
              (this.H = 0 | s);
          }
          process(e, t) {
            for (let a = 0; a < 16; a++, t += 4) s[a] = e.getUint32(t, !1);
            for (let a = 16; a < 64; a++) {
              const e = s[a - 15],
                t = s[a - 2],
                r = (0, o.rotr)(e, 7) ^ (0, o.rotr)(e, 18) ^ (e >>> 3),
                i = (0, o.rotr)(t, 17) ^ (0, o.rotr)(t, 19) ^ (t >>> 10);
              s[a] = (i + s[a - 7] + r + s[a - 16]) | 0;
            }
            let { A: r, B: n, C: c, D: l, E: u, F: d, G: h, H: f } = this;
            for (let p = 0; p < 64; p++) {
              const e =
                  (f +
                    ((0, o.rotr)(u, 6) ^ (0, o.rotr)(u, 11) ^ (0, o.rotr)(u, 25)) +
                    (0, a.Chi)(u, d, h) +
                    i[p] +
                    s[p]) |
                  0,
                t = (((0, o.rotr)(r, 2) ^ (0, o.rotr)(r, 13) ^ (0, o.rotr)(r, 22)) + (0, a.Maj)(r, n, c)) | 0;
              (f = h), (h = d), (d = u), (u = (l + e) | 0), (l = c), (c = n), (n = r), (r = (e + t) | 0);
            }
            (r = (r + this.A) | 0),
              (n = (n + this.B) | 0),
              (c = (c + this.C) | 0),
              (l = (l + this.D) | 0),
              (u = (u + this.E) | 0),
              (d = (d + this.F) | 0),
              (h = (h + this.G) | 0),
              (f = (f + this.H) | 0),
              this.set(r, n, c, l, u, d, h, f);
          }
          roundClean() {
            s.fill(0);
          }
          destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
          }
        }
        t.SHA256 = c;
        class l extends c {
          constructor() {
            super(),
              (this.A = -1056596264),
              (this.B = 914150663),
              (this.C = 812702999),
              (this.D = -150054599),
              (this.E = -4191439),
              (this.F = 1750603025),
              (this.G = 1694076839),
              (this.H = -1090891868),
              (this.outputLen = 28);
          }
        }
        (t.sha256 = (0, o.wrapConstructor)(() => new c())), (t.sha224 = (0, o.wrapConstructor)(() => new l()));
      },
      2703: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.sha384 =
            t.sha512_256 =
            t.sha512_224 =
            t.sha512 =
            t.SHA384 =
            t.SHA512_256 =
            t.SHA512_224 =
            t.SHA512 =
              void 0);
        const a = r(1193),
          o = r(7459),
          i = r(684),
          [n, s] = (() =>
            o.default.split(
              [
                '0x428a2f98d728ae22',
                '0x7137449123ef65cd',
                '0xb5c0fbcfec4d3b2f',
                '0xe9b5dba58189dbbc',
                '0x3956c25bf348b538',
                '0x59f111f1b605d019',
                '0x923f82a4af194f9b',
                '0xab1c5ed5da6d8118',
                '0xd807aa98a3030242',
                '0x12835b0145706fbe',
                '0x243185be4ee4b28c',
                '0x550c7dc3d5ffb4e2',
                '0x72be5d74f27b896f',
                '0x80deb1fe3b1696b1',
                '0x9bdc06a725c71235',
                '0xc19bf174cf692694',
                '0xe49b69c19ef14ad2',
                '0xefbe4786384f25e3',
                '0x0fc19dc68b8cd5b5',
                '0x240ca1cc77ac9c65',
                '0x2de92c6f592b0275',
                '0x4a7484aa6ea6e483',
                '0x5cb0a9dcbd41fbd4',
                '0x76f988da831153b5',
                '0x983e5152ee66dfab',
                '0xa831c66d2db43210',
                '0xb00327c898fb213f',
                '0xbf597fc7beef0ee4',
                '0xc6e00bf33da88fc2',
                '0xd5a79147930aa725',
                '0x06ca6351e003826f',
                '0x142929670a0e6e70',
                '0x27b70a8546d22ffc',
                '0x2e1b21385c26c926',
                '0x4d2c6dfc5ac42aed',
                '0x53380d139d95b3df',
                '0x650a73548baf63de',
                '0x766a0abb3c77b2a8',
                '0x81c2c92e47edaee6',
                '0x92722c851482353b',
                '0xa2bfe8a14cf10364',
                '0xa81a664bbc423001',
                '0xc24b8b70d0f89791',
                '0xc76c51a30654be30',
                '0xd192e819d6ef5218',
                '0xd69906245565a910',
                '0xf40e35855771202a',
                '0x106aa07032bbd1b8',
                '0x19a4c116b8d2d0c8',
                '0x1e376c085141ab53',
                '0x2748774cdf8eeb99',
                '0x34b0bcb5e19b48a8',
                '0x391c0cb3c5c95a63',
                '0x4ed8aa4ae3418acb',
                '0x5b9cca4f7763e373',
                '0x682e6ff3d6b2b8a3',
                '0x748f82ee5defb2fc',
                '0x78a5636f43172f60',
                '0x84c87814a1f0ab72',
                '0x8cc702081a6439ec',
                '0x90befffa23631e28',
                '0xa4506cebde82bde9',
                '0xbef9a3f7b2c67915',
                '0xc67178f2e372532b',
                '0xca273eceea26619c',
                '0xd186b8c721c0c207',
                '0xeada7dd6cde0eb1e',
                '0xf57d4f7fee6ed178',
                '0x06f067aa72176fba',
                '0x0a637dc5a2c898a6',
                '0x113f9804bef90dae',
                '0x1b710b35131c471b',
                '0x28db77f523047d84',
                '0x32caab7b40c72493',
                '0x3c9ebe0a15c9bebc',
                '0x431d67c49c100d4c',
                '0x4cc5d4becb3e42b6',
                '0x597f299cfc657e2a',
                '0x5fcb6fab3ad6faec',
                '0x6c44198c4a475817',
              ].map((e) => BigInt(e)),
            ))(),
          c = new Uint32Array(80),
          l = new Uint32Array(80);
        class u extends a.HashMD {
          constructor() {
            super(128, 64, 16, !1),
              (this.Ah = 1779033703),
              (this.Al = -205731576),
              (this.Bh = -1150833019),
              (this.Bl = -2067093701),
              (this.Ch = 1013904242),
              (this.Cl = -23791573),
              (this.Dh = -1521486534),
              (this.Dl = 1595750129),
              (this.Eh = 1359893119),
              (this.El = -1377402159),
              (this.Fh = -1694144372),
              (this.Fl = 725511199),
              (this.Gh = 528734635),
              (this.Gl = -79577749),
              (this.Hh = 1541459225),
              (this.Hl = 327033209);
          }
          get() {
            const {
              Ah: e,
              Al: t,
              Bh: r,
              Bl: a,
              Ch: o,
              Cl: i,
              Dh: n,
              Dl: s,
              Eh: c,
              El: l,
              Fh: u,
              Fl: d,
              Gh: h,
              Gl: f,
              Hh: p,
              Hl: b,
            } = this;
            return [e, t, r, a, o, i, n, s, c, l, u, d, h, f, p, b];
          }
          set(e, t, r, a, o, i, n, s, c, l, u, d, h, f, p, b) {
            (this.Ah = 0 | e),
              (this.Al = 0 | t),
              (this.Bh = 0 | r),
              (this.Bl = 0 | a),
              (this.Ch = 0 | o),
              (this.Cl = 0 | i),
              (this.Dh = 0 | n),
              (this.Dl = 0 | s),
              (this.Eh = 0 | c),
              (this.El = 0 | l),
              (this.Fh = 0 | u),
              (this.Fl = 0 | d),
              (this.Gh = 0 | h),
              (this.Gl = 0 | f),
              (this.Hh = 0 | p),
              (this.Hl = 0 | b);
          }
          process(e, t) {
            for (let o = 0; o < 16; o++, t += 4) (c[o] = e.getUint32(t)), (l[o] = e.getUint32((t += 4)));
            for (let n = 16; n < 80; n++) {
              const e = 0 | c[n - 15],
                t = 0 | l[n - 15],
                r = o.default.rotrSH(e, t, 1) ^ o.default.rotrSH(e, t, 8) ^ o.default.shrSH(e, t, 7),
                a = o.default.rotrSL(e, t, 1) ^ o.default.rotrSL(e, t, 8) ^ o.default.shrSL(e, t, 7),
                i = 0 | c[n - 2],
                s = 0 | l[n - 2],
                u = o.default.rotrSH(i, s, 19) ^ o.default.rotrBH(i, s, 61) ^ o.default.shrSH(i, s, 6),
                d = o.default.rotrSL(i, s, 19) ^ o.default.rotrBL(i, s, 61) ^ o.default.shrSL(i, s, 6),
                h = o.default.add4L(a, d, l[n - 7], l[n - 16]),
                f = o.default.add4H(h, r, u, c[n - 7], c[n - 16]);
              (c[n] = 0 | f), (l[n] = 0 | h);
            }
            let {
              Ah: r,
              Al: a,
              Bh: i,
              Bl: u,
              Ch: d,
              Cl: h,
              Dh: f,
              Dl: p,
              Eh: b,
              El: m,
              Fh: g,
              Fl: v,
              Gh: y,
              Gl: w,
              Hh: k,
              Hl: E,
            } = this;
            for (let S = 0; S < 80; S++) {
              const e = o.default.rotrSH(b, m, 14) ^ o.default.rotrSH(b, m, 18) ^ o.default.rotrBH(b, m, 41),
                t = o.default.rotrSL(b, m, 14) ^ o.default.rotrSL(b, m, 18) ^ o.default.rotrBL(b, m, 41),
                x = (b & g) ^ (~b & y),
                _ = (m & v) ^ (~m & w),
                A = o.default.add5L(E, t, _, s[S], l[S]),
                O = o.default.add5H(A, k, e, x, n[S], c[S]),
                P = 0 | A,
                I = o.default.rotrSH(r, a, 28) ^ o.default.rotrBH(r, a, 34) ^ o.default.rotrBH(r, a, 39),
                B = o.default.rotrSL(r, a, 28) ^ o.default.rotrBL(r, a, 34) ^ o.default.rotrBL(r, a, 39),
                N = (r & i) ^ (r & d) ^ (i & d),
                T = (a & u) ^ (a & h) ^ (u & h);
              (k = 0 | y),
                (E = 0 | w),
                (y = 0 | g),
                (w = 0 | v),
                (g = 0 | b),
                (v = 0 | m),
                ({ h: b, l: m } = o.default.add(0 | f, 0 | p, 0 | O, 0 | P)),
                (f = 0 | d),
                (p = 0 | h),
                (d = 0 | i),
                (h = 0 | u),
                (i = 0 | r),
                (u = 0 | a);
              const z = o.default.add3L(P, B, T);
              (r = o.default.add3H(z, O, I, N)), (a = 0 | z);
            }
            ({ h: r, l: a } = o.default.add(0 | this.Ah, 0 | this.Al, 0 | r, 0 | a)),
              ({ h: i, l: u } = o.default.add(0 | this.Bh, 0 | this.Bl, 0 | i, 0 | u)),
              ({ h: d, l: h } = o.default.add(0 | this.Ch, 0 | this.Cl, 0 | d, 0 | h)),
              ({ h: f, l: p } = o.default.add(0 | this.Dh, 0 | this.Dl, 0 | f, 0 | p)),
              ({ h: b, l: m } = o.default.add(0 | this.Eh, 0 | this.El, 0 | b, 0 | m)),
              ({ h: g, l: v } = o.default.add(0 | this.Fh, 0 | this.Fl, 0 | g, 0 | v)),
              ({ h: y, l: w } = o.default.add(0 | this.Gh, 0 | this.Gl, 0 | y, 0 | w)),
              ({ h: k, l: E } = o.default.add(0 | this.Hh, 0 | this.Hl, 0 | k, 0 | E)),
              this.set(r, a, i, u, d, h, f, p, b, m, g, v, y, w, k, E);
          }
          roundClean() {
            c.fill(0), l.fill(0);
          }
          destroy() {
            this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
          }
        }
        t.SHA512 = u;
        class d extends u {
          constructor() {
            super(),
              (this.Ah = -1942145080),
              (this.Al = 424955298),
              (this.Bh = 1944164710),
              (this.Bl = -1982016298),
              (this.Ch = 502970286),
              (this.Cl = 855612546),
              (this.Dh = 1738396948),
              (this.Dl = 1479516111),
              (this.Eh = 258812777),
              (this.El = 2077511080),
              (this.Fh = 2011393907),
              (this.Fl = 79989058),
              (this.Gh = 1067287976),
              (this.Gl = 1780299464),
              (this.Hh = 286451373),
              (this.Hl = -1848208735),
              (this.outputLen = 28);
          }
        }
        t.SHA512_224 = d;
        class h extends u {
          constructor() {
            super(),
              (this.Ah = 573645204),
              (this.Al = -64227540),
              (this.Bh = -1621794909),
              (this.Bl = -934517566),
              (this.Ch = 596883563),
              (this.Cl = 1867755857),
              (this.Dh = -1774684391),
              (this.Dl = 1497426621),
              (this.Eh = -1775747358),
              (this.El = -1467023389),
              (this.Fh = -1101128155),
              (this.Fl = 1401305490),
              (this.Gh = 721525244),
              (this.Gl = 746961066),
              (this.Hh = 246885852),
              (this.Hl = -2117784414),
              (this.outputLen = 32);
          }
        }
        t.SHA512_256 = h;
        class f extends u {
          constructor() {
            super(),
              (this.Ah = -876896931),
              (this.Al = -1056596264),
              (this.Bh = 1654270250),
              (this.Bl = 914150663),
              (this.Ch = -1856437926),
              (this.Cl = 812702999),
              (this.Dh = 355462360),
              (this.Dl = -150054599),
              (this.Eh = 1731405415),
              (this.El = -4191439),
              (this.Fh = -1900787065),
              (this.Fl = 1750603025),
              (this.Gh = -619958771),
              (this.Gl = 1694076839),
              (this.Hh = 1203062813),
              (this.Hl = -1090891868),
              (this.outputLen = 48);
          }
        }
        (t.SHA384 = f),
          (t.sha512 = (0, i.wrapConstructor)(() => new u())),
          (t.sha512_224 = (0, i.wrapConstructor)(() => new d())),
          (t.sha512_256 = (0, i.wrapConstructor)(() => new h())),
          (t.sha384 = (0, i.wrapConstructor)(() => new f()));
      },
      684: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.Hash =
            t.nextTick =
            t.byteSwapIfBE =
            t.byteSwap =
            t.isLE =
            t.rotl =
            t.rotr =
            t.createView =
            t.u32 =
            t.u8 =
              void 0),
          (t.isBytes = function (e) {
            return (
              e instanceof Uint8Array || (null != e && 'object' === typeof e && 'Uint8Array' === e.constructor.name)
            );
          }),
          (t.byteSwap32 = function (e) {
            for (let r = 0; r < e.length; r++) e[r] = (0, t.byteSwap)(e[r]);
          }),
          (t.bytesToHex = function (e) {
            (0, o.bytes)(e);
            let t = '';
            for (let r = 0; r < e.length; r++) t += i[e[r]];
            return t;
          }),
          (t.hexToBytes = function (e) {
            if ('string' !== typeof e) throw new Error('hex string expected, got ' + typeof e);
            const t = e.length,
              r = t / 2;
            if (t % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + t);
            const a = new Uint8Array(r);
            for (let o = 0, i = 0; o < r; o++, i += 2) {
              const t = s(e.charCodeAt(i)),
                r = s(e.charCodeAt(i + 1));
              if (void 0 === t || void 0 === r) {
                const t = e[i] + e[i + 1];
                throw new Error('hex string expected, got non-hex character "' + t + '" at index ' + i);
              }
              a[o] = 16 * t + r;
            }
            return a;
          }),
          (t.asyncLoop = async function (e, r, a) {
            let o = Date.now();
            for (let i = 0; i < e; i++) {
              a(i);
              const e = Date.now() - o;
              (e >= 0 && e < r) || (await (0, t.nextTick)(), (o += e));
            }
          }),
          (t.utf8ToBytes = c),
          (t.toBytes = l),
          (t.concatBytes = function () {
            let e = 0;
            for (let r = 0; r < arguments.length; r++) {
              const t = r < 0 || arguments.length <= r ? void 0 : arguments[r];
              (0, o.bytes)(t), (e += t.length);
            }
            const t = new Uint8Array(e);
            for (let r = 0, a = 0; r < arguments.length; r++) {
              const e = r < 0 || arguments.length <= r ? void 0 : arguments[r];
              t.set(e, a), (a += e.length);
            }
            return t;
          }),
          (t.checkOpts = function (e, t) {
            if (void 0 !== t && '[object Object]' !== u.call(t))
              throw new Error('Options should be object or undefined');
            return Object.assign(e, t);
          }),
          (t.wrapConstructor = function (e) {
            const t = (t) => e().update(l(t)).digest(),
              r = e();
            return (t.outputLen = r.outputLen), (t.blockLen = r.blockLen), (t.create = () => e()), t;
          }),
          (t.wrapConstructorWithOpts = function (e) {
            const t = (t, r) => e(r).update(l(t)).digest(),
              r = e({});
            return (t.outputLen = r.outputLen), (t.blockLen = r.blockLen), (t.create = (t) => e(t)), t;
          }),
          (t.wrapXOFConstructorWithOpts = function (e) {
            const t = (t, r) => e(r).update(l(t)).digest(),
              r = e({});
            return (t.outputLen = r.outputLen), (t.blockLen = r.blockLen), (t.create = (t) => e(t)), t;
          }),
          (t.randomBytes = function () {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 32;
            if (a.crypto && 'function' === typeof a.crypto.getRandomValues)
              return a.crypto.getRandomValues(new Uint8Array(e));
            if (a.crypto && 'function' === typeof a.crypto.randomBytes) return a.crypto.randomBytes(e);
            throw new Error('crypto.getRandomValues must be defined');
          });
        const a = r(7932),
          o = r(7250);
        t.u8 = (e) => new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
        t.u32 = (e) => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4));
        t.createView = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength);
        t.rotr = (e, t) => (e << (32 - t)) | (e >>> t);
        (t.rotl = (e, t) => (e << t) | ((e >>> (32 - t)) >>> 0)),
          (t.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]);
        (t.byteSwap = (e) =>
          ((e << 24) & 4278190080) | ((e << 8) & 16711680) | ((e >>> 8) & 65280) | ((e >>> 24) & 255)),
          (t.byteSwapIfBE = t.isLE ? (e) => e : (e) => (0, t.byteSwap)(e));
        const i = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, '0'));
        const n = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
        function s(e) {
          return e >= n._0 && e <= n._9
            ? e - n._0
            : e >= n._A && e <= n._F
              ? e - (n._A - 10)
              : e >= n._a && e <= n._f
                ? e - (n._a - 10)
                : void 0;
        }
        function c(e) {
          if ('string' !== typeof e) throw new Error('utf8ToBytes expected string, got ' + typeof e);
          return new Uint8Array(new TextEncoder().encode(e));
        }
        function l(e) {
          return 'string' === typeof e && (e = c(e)), (0, o.bytes)(e), e;
        }
        t.nextTick = async () => {};
        t.Hash = class {
          clone() {
            return this._cloneInto();
          }
        };
        const u = {}.toString;
      },
      4445: (e, t) => {
        'use strict';
        (t.byteLength = function (e) {
          var t = s(e),
            r = t[0],
            a = t[1];
          return (3 * (r + a)) / 4 - a;
        }),
          (t.toByteArray = function (e) {
            var t,
              r,
              i = s(e),
              n = i[0],
              c = i[1],
              l = new o(
                (function (e, t, r) {
                  return (3 * (t + r)) / 4 - r;
                })(0, n, c),
              ),
              u = 0,
              d = c > 0 ? n - 4 : n;
            for (r = 0; r < d; r += 4)
              (t =
                (a[e.charCodeAt(r)] << 18) |
                (a[e.charCodeAt(r + 1)] << 12) |
                (a[e.charCodeAt(r + 2)] << 6) |
                a[e.charCodeAt(r + 3)]),
                (l[u++] = (t >> 16) & 255),
                (l[u++] = (t >> 8) & 255),
                (l[u++] = 255 & t);
            2 === c && ((t = (a[e.charCodeAt(r)] << 2) | (a[e.charCodeAt(r + 1)] >> 4)), (l[u++] = 255 & t));
            1 === c &&
              ((t = (a[e.charCodeAt(r)] << 10) | (a[e.charCodeAt(r + 1)] << 4) | (a[e.charCodeAt(r + 2)] >> 2)),
              (l[u++] = (t >> 8) & 255),
              (l[u++] = 255 & t));
            return l;
          }),
          (t.fromByteArray = function (e) {
            for (var t, a = e.length, o = a % 3, i = [], n = 16383, s = 0, l = a - o; s < l; s += n)
              i.push(c(e, s, s + n > l ? l : s + n));
            1 === o
              ? ((t = e[a - 1]), i.push(r[t >> 2] + r[(t << 4) & 63] + '=='))
              : 2 === o &&
                ((t = (e[a - 2] << 8) + e[a - 1]), i.push(r[t >> 10] + r[(t >> 4) & 63] + r[(t << 2) & 63] + '='));
            return i.join('');
          });
        for (
          var r = [],
            a = [],
            o = 'undefined' !== typeof Uint8Array ? Uint8Array : Array,
            i = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
            n = 0;
          n < 64;
          ++n
        )
          (r[n] = i[n]), (a[i.charCodeAt(n)] = n);
        function s(e) {
          var t = e.length;
          if (t % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');
          var r = e.indexOf('=');
          return -1 === r && (r = t), [r, r === t ? 0 : 4 - (r % 4)];
        }
        function c(e, t, a) {
          for (var o, i, n = [], s = t; s < a; s += 3)
            (o = ((e[s] << 16) & 16711680) + ((e[s + 1] << 8) & 65280) + (255 & e[s + 2])),
              n.push(r[((i = o) >> 18) & 63] + r[(i >> 12) & 63] + r[(i >> 6) & 63] + r[63 & i]);
          return n.join('');
        }
        (a['-'.charCodeAt(0)] = 62), (a['_'.charCodeAt(0)] = 63);
      },
      6774: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 });
        const a = {};
        let o;
        (t.wordlists = a), (t._default = o);
        try {
          (t._default = o = r(2607)), (a.czech = o);
        } catch (i) {}
        try {
          (t._default = o = r(5898)), (a.chinese_simplified = o);
        } catch (i) {}
        try {
          (t._default = o = r(81)), (a.chinese_traditional = o);
        } catch (i) {}
        try {
          (t._default = o = r(5428)), (a.korean = o);
        } catch (i) {}
        try {
          (t._default = o = r(5040)), (a.french = o);
        } catch (i) {}
        try {
          (t._default = o = r(5576)), (a.italian = o);
        } catch (i) {}
        try {
          (t._default = o = r(5376)), (a.spanish = o);
        } catch (i) {}
        try {
          (t._default = o = r(7967)), (a.japanese = o), (a.JA = o);
        } catch (i) {}
        try {
          (t._default = o = r(7357)), (a.portuguese = o);
        } catch (i) {}
        try {
          (t._default = o = r(7736)), (a.english = o), (a.EN = o);
        } catch (i) {}
      },
      6674: (e, t, r) => {
        'use strict';
        var a = r(6382).hp;
        const o = r(1678),
          i = r(2703),
          n = r(9924),
          s = r(684),
          c = r(6774);
        let l = c._default;
        const u = 'Invalid mnemonic',
          d = 'Invalid entropy',
          h = 'A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.';
        function f(e) {
          return (e || '').normalize('NFKD');
        }
        function p(e, t, r) {
          for (; e.length < r; ) e = t + e;
          return e;
        }
        function b(e) {
          return parseInt(e, 2);
        }
        function m(e) {
          return e.map((e) => p(e.toString(2), '0', 8)).join('');
        }
        function g(e) {
          const t = (8 * e.length) / 32,
            r = o.sha256(Uint8Array.from(e));
          return m(Array.from(r)).slice(0, t);
        }
        function v(e) {
          return 'mnemonic' + (e || '');
        }
        function y(e, t) {
          if (!(t = t || l)) throw new Error(h);
          const r = f(e).split(' ');
          if (r.length % 3 !== 0) throw new Error(u);
          const o = r
              .map((e) => {
                const r = t.indexOf(e);
                if (-1 === r) throw new Error(u);
                return p(r.toString(2), '0', 11);
              })
              .join(''),
            i = 32 * Math.floor(o.length / 33),
            n = o.slice(0, i),
            s = o.slice(i),
            c = n.match(/(.{1,8})/g).map(b);
          if (c.length < 16) throw new Error(d);
          if (c.length > 32) throw new Error(d);
          if (c.length % 4 !== 0) throw new Error(d);
          const m = a.from(c);
          if (g(m) !== s) throw new Error('Invalid mnemonic checksum');
          return m.toString('hex');
        }
        function w(e, t) {
          if ((a.isBuffer(e) || (e = a.from(e, 'hex')), !(t = t || l))) throw new Error(h);
          if (e.length < 16) throw new TypeError(d);
          if (e.length > 32) throw new TypeError(d);
          if (e.length % 4 !== 0) throw new TypeError(d);
          const r = (m(Array.from(e)) + g(e)).match(/(.{1,11})/g).map((e) => {
            const r = b(e);
            return t[r];
          });
          return '\u3042\u3044\u3053\u304f\u3057\u3093' === t[0] ? r.join('\u3000') : r.join(' ');
        }
        r(6774).wordlists;
      },
      6382: (e, t, r) => {
        'use strict';
        const a = r(4445),
          o = r(6900),
          i =
            'function' === typeof Symbol && 'function' === typeof Symbol.for
              ? Symbol.for('nodejs.util.inspect.custom')
              : null;
        (t.hp = c), (t.IS = 50);
        const n = 2147483647;
        function s(e) {
          if (e > n) throw new RangeError('The value "' + e + '" is invalid for option "size"');
          const t = new Uint8Array(e);
          return Object.setPrototypeOf(t, c.prototype), t;
        }
        function c(e, t, r) {
          if ('number' === typeof e) {
            if ('string' === typeof t)
              throw new TypeError('The "string" argument must be of type string. Received type number');
            return d(e);
          }
          return l(e, t, r);
        }
        function l(e, t, r) {
          if ('string' === typeof e)
            return (function (e, t) {
              ('string' === typeof t && '' !== t) || (t = 'utf8');
              if (!c.isEncoding(t)) throw new TypeError('Unknown encoding: ' + t);
              const r = 0 | b(e, t);
              let a = s(r);
              const o = a.write(e, t);
              o !== r && (a = a.slice(0, o));
              return a;
            })(e, t);
          if (ArrayBuffer.isView(e))
            return (function (e) {
              if (Y(e, Uint8Array)) {
                const t = new Uint8Array(e);
                return f(t.buffer, t.byteOffset, t.byteLength);
              }
              return h(e);
            })(e);
          if (null == e)
            throw new TypeError(
              'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                typeof e,
            );
          if (Y(e, ArrayBuffer) || (e && Y(e.buffer, ArrayBuffer))) return f(e, t, r);
          if (
            'undefined' !== typeof SharedArrayBuffer &&
            (Y(e, SharedArrayBuffer) || (e && Y(e.buffer, SharedArrayBuffer)))
          )
            return f(e, t, r);
          if ('number' === typeof e)
            throw new TypeError('The "value" argument must not be of type number. Received type number');
          const a = e.valueOf && e.valueOf();
          if (null != a && a !== e) return c.from(a, t, r);
          const o = (function (e) {
            if (c.isBuffer(e)) {
              const t = 0 | p(e.length),
                r = s(t);
              return 0 === r.length || e.copy(r, 0, 0, t), r;
            }
            if (void 0 !== e.length) return 'number' !== typeof e.length || X(e.length) ? s(0) : h(e);
            if ('Buffer' === e.type && Array.isArray(e.data)) return h(e.data);
          })(e);
          if (o) return o;
          if (
            'undefined' !== typeof Symbol &&
            null != Symbol.toPrimitive &&
            'function' === typeof e[Symbol.toPrimitive]
          )
            return c.from(e[Symbol.toPrimitive]('string'), t, r);
          throw new TypeError(
            'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
              typeof e,
          );
        }
        function u(e) {
          if ('number' !== typeof e) throw new TypeError('"size" argument must be of type number');
          if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"');
        }
        function d(e) {
          return u(e), s(e < 0 ? 0 : 0 | p(e));
        }
        function h(e) {
          const t = e.length < 0 ? 0 : 0 | p(e.length),
            r = s(t);
          for (let a = 0; a < t; a += 1) r[a] = 255 & e[a];
          return r;
        }
        function f(e, t, r) {
          if (t < 0 || e.byteLength < t) throw new RangeError('"offset" is outside of buffer bounds');
          if (e.byteLength < t + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let a;
          return (
            (a =
              void 0 === t && void 0 === r
                ? new Uint8Array(e)
                : void 0 === r
                  ? new Uint8Array(e, t)
                  : new Uint8Array(e, t, r)),
            Object.setPrototypeOf(a, c.prototype),
            a
          );
        }
        function p(e) {
          if (e >= n)
            throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' + n.toString(16) + ' bytes');
          return 0 | e;
        }
        function b(e, t) {
          if (c.isBuffer(e)) return e.length;
          if (ArrayBuffer.isView(e) || Y(e, ArrayBuffer)) return e.byteLength;
          if ('string' !== typeof e)
            throw new TypeError(
              'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e,
            );
          const r = e.length,
            a = arguments.length > 2 && !0 === arguments[2];
          if (!a && 0 === r) return 0;
          let o = !1;
          for (;;)
            switch (t) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                return r;
              case 'utf8':
              case 'utf-8':
                return V(e).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return 2 * r;
              case 'hex':
                return r >>> 1;
              case 'base64':
                return $(e).length;
              default:
                if (o) return a ? -1 : V(e).length;
                (t = ('' + t).toLowerCase()), (o = !0);
            }
        }
        function m(e, t, r) {
          let a = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return '';
          if (((void 0 === r || r > this.length) && (r = this.length), r <= 0)) return '';
          if ((r >>>= 0) <= (t >>>= 0)) return '';
          for (e || (e = 'utf8'); ; )
            switch (e) {
              case 'hex':
                return B(this, t, r);
              case 'utf8':
              case 'utf-8':
                return A(this, t, r);
              case 'ascii':
                return P(this, t, r);
              case 'latin1':
              case 'binary':
                return I(this, t, r);
              case 'base64':
                return _(this, t, r);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return N(this, t, r);
              default:
                if (a) throw new TypeError('Unknown encoding: ' + e);
                (e = (e + '').toLowerCase()), (a = !0);
            }
        }
        function g(e, t, r) {
          const a = e[t];
          (e[t] = e[r]), (e[r] = a);
        }
        function v(e, t, r, a, o) {
          if (0 === e.length) return -1;
          if (
            ('string' === typeof r
              ? ((a = r), (r = 0))
              : r > 2147483647
                ? (r = 2147483647)
                : r < -2147483648 && (r = -2147483648),
            X((r = +r)) && (r = o ? 0 : e.length - 1),
            r < 0 && (r = e.length + r),
            r >= e.length)
          ) {
            if (o) return -1;
            r = e.length - 1;
          } else if (r < 0) {
            if (!o) return -1;
            r = 0;
          }
          if (('string' === typeof t && (t = c.from(t, a)), c.isBuffer(t)))
            return 0 === t.length ? -1 : y(e, t, r, a, o);
          if ('number' === typeof t)
            return (
              (t &= 255),
              'function' === typeof Uint8Array.prototype.indexOf
                ? o
                  ? Uint8Array.prototype.indexOf.call(e, t, r)
                  : Uint8Array.prototype.lastIndexOf.call(e, t, r)
                : y(e, [t], r, a, o)
            );
          throw new TypeError('val must be string, number or Buffer');
        }
        function y(e, t, r, a, o) {
          let i,
            n = 1,
            s = e.length,
            c = t.length;
          if (
            void 0 !== a &&
            ('ucs2' === (a = String(a).toLowerCase()) || 'ucs-2' === a || 'utf16le' === a || 'utf-16le' === a)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (n = 2), (s /= 2), (c /= 2), (r /= 2);
          }
          function l(e, t) {
            return 1 === n ? e[t] : e.readUInt16BE(t * n);
          }
          if (o) {
            let a = -1;
            for (i = r; i < s; i++)
              if (l(e, i) === l(t, -1 === a ? 0 : i - a)) {
                if ((-1 === a && (a = i), i - a + 1 === c)) return a * n;
              } else -1 !== a && (i -= i - a), (a = -1);
          } else
            for (r + c > s && (r = s - c), i = r; i >= 0; i--) {
              let r = !0;
              for (let a = 0; a < c; a++)
                if (l(e, i + a) !== l(t, a)) {
                  r = !1;
                  break;
                }
              if (r) return i;
            }
          return -1;
        }
        function w(e, t, r, a) {
          r = Number(r) || 0;
          const o = e.length - r;
          a ? (a = Number(a)) > o && (a = o) : (a = o);
          const i = t.length;
          let n;
          for (a > i / 2 && (a = i / 2), n = 0; n < a; ++n) {
            const a = parseInt(t.substr(2 * n, 2), 16);
            if (X(a)) return n;
            e[r + n] = a;
          }
          return n;
        }
        function k(e, t, r, a) {
          return W(V(t, e.length - r), e, r, a);
        }
        function E(e, t, r, a) {
          return W(
            (function (e) {
              const t = [];
              for (let r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
              return t;
            })(t),
            e,
            r,
            a,
          );
        }
        function S(e, t, r, a) {
          return W($(t), e, r, a);
        }
        function x(e, t, r, a) {
          return W(
            (function (e, t) {
              let r, a, o;
              const i = [];
              for (let n = 0; n < e.length && !((t -= 2) < 0); ++n)
                (r = e.charCodeAt(n)), (a = r >> 8), (o = r % 256), i.push(o), i.push(a);
              return i;
            })(t, e.length - r),
            e,
            r,
            a,
          );
        }
        function _(e, t, r) {
          return 0 === t && r === e.length ? a.fromByteArray(e) : a.fromByteArray(e.slice(t, r));
        }
        function A(e, t, r) {
          r = Math.min(e.length, r);
          const a = [];
          let o = t;
          for (; o < r; ) {
            const t = e[o];
            let i = null,
              n = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
            if (o + n <= r) {
              let r, a, s, c;
              switch (n) {
                case 1:
                  t < 128 && (i = t);
                  break;
                case 2:
                  (r = e[o + 1]), 128 === (192 & r) && ((c = ((31 & t) << 6) | (63 & r)), c > 127 && (i = c));
                  break;
                case 3:
                  (r = e[o + 1]),
                    (a = e[o + 2]),
                    128 === (192 & r) &&
                      128 === (192 & a) &&
                      ((c = ((15 & t) << 12) | ((63 & r) << 6) | (63 & a)),
                      c > 2047 && (c < 55296 || c > 57343) && (i = c));
                  break;
                case 4:
                  (r = e[o + 1]),
                    (a = e[o + 2]),
                    (s = e[o + 3]),
                    128 === (192 & r) &&
                      128 === (192 & a) &&
                      128 === (192 & s) &&
                      ((c = ((15 & t) << 18) | ((63 & r) << 12) | ((63 & a) << 6) | (63 & s)),
                      c > 65535 && c < 1114112 && (i = c));
              }
            }
            null === i
              ? ((i = 65533), (n = 1))
              : i > 65535 && ((i -= 65536), a.push(((i >>> 10) & 1023) | 55296), (i = 56320 | (1023 & i))),
              a.push(i),
              (o += n);
          }
          return (function (e) {
            const t = e.length;
            if (t <= O) return String.fromCharCode.apply(String, e);
            let r = '',
              a = 0;
            for (; a < t; ) r += String.fromCharCode.apply(String, e.slice(a, (a += O)));
            return r;
          })(a);
        }
        (c.TYPED_ARRAY_SUPPORT = (function () {
          try {
            const e = new Uint8Array(1),
              t = {
                foo: function () {
                  return 42;
                },
              };
            return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), 42 === e.foo();
          } catch (e) {
            return !1;
          }
        })()),
          c.TYPED_ARRAY_SUPPORT ||
            'undefined' === typeof console ||
            'function' !== typeof console.error ||
            console.error(
              'This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.',
            ),
          Object.defineProperty(c.prototype, 'parent', {
            enumerable: !0,
            get: function () {
              if (c.isBuffer(this)) return this.buffer;
            },
          }),
          Object.defineProperty(c.prototype, 'offset', {
            enumerable: !0,
            get: function () {
              if (c.isBuffer(this)) return this.byteOffset;
            },
          }),
          (c.poolSize = 8192),
          (c.from = function (e, t, r) {
            return l(e, t, r);
          }),
          Object.setPrototypeOf(c.prototype, Uint8Array.prototype),
          Object.setPrototypeOf(c, Uint8Array),
          (c.alloc = function (e, t, r) {
            return (function (e, t, r) {
              return (
                u(e), e <= 0 ? s(e) : void 0 !== t ? ('string' === typeof r ? s(e).fill(t, r) : s(e).fill(t)) : s(e)
              );
            })(e, t, r);
          }),
          (c.allocUnsafe = function (e) {
            return d(e);
          }),
          (c.allocUnsafeSlow = function (e) {
            return d(e);
          }),
          (c.isBuffer = function (e) {
            return null != e && !0 === e._isBuffer && e !== c.prototype;
          }),
          (c.compare = function (e, t) {
            if (
              (Y(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)),
              Y(t, Uint8Array) && (t = c.from(t, t.offset, t.byteLength)),
              !c.isBuffer(e) || !c.isBuffer(t))
            )
              throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
            if (e === t) return 0;
            let r = e.length,
              a = t.length;
            for (let o = 0, i = Math.min(r, a); o < i; ++o)
              if (e[o] !== t[o]) {
                (r = e[o]), (a = t[o]);
                break;
              }
            return r < a ? -1 : a < r ? 1 : 0;
          }),
          (c.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case 'hex':
              case 'utf8':
              case 'utf-8':
              case 'ascii':
              case 'latin1':
              case 'binary':
              case 'base64':
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return !0;
              default:
                return !1;
            }
          }),
          (c.concat = function (e, t) {
            if (!Array.isArray(e)) throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === e.length) return c.alloc(0);
            let r;
            if (void 0 === t) for (t = 0, r = 0; r < e.length; ++r) t += e[r].length;
            const a = c.allocUnsafe(t);
            let o = 0;
            for (r = 0; r < e.length; ++r) {
              let t = e[r];
              if (Y(t, Uint8Array))
                o + t.length > a.length
                  ? (c.isBuffer(t) || (t = c.from(t)), t.copy(a, o))
                  : Uint8Array.prototype.set.call(a, t, o);
              else {
                if (!c.isBuffer(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                t.copy(a, o);
              }
              o += t.length;
            }
            return a;
          }),
          (c.byteLength = b),
          (c.prototype._isBuffer = !0),
          (c.prototype.swap16 = function () {
            const e = this.length;
            if (e % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits');
            for (let t = 0; t < e; t += 2) g(this, t, t + 1);
            return this;
          }),
          (c.prototype.swap32 = function () {
            const e = this.length;
            if (e % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits');
            for (let t = 0; t < e; t += 4) g(this, t, t + 3), g(this, t + 1, t + 2);
            return this;
          }),
          (c.prototype.swap64 = function () {
            const e = this.length;
            if (e % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits');
            for (let t = 0; t < e; t += 8)
              g(this, t, t + 7), g(this, t + 1, t + 6), g(this, t + 2, t + 5), g(this, t + 3, t + 4);
            return this;
          }),
          (c.prototype.toString = function () {
            const e = this.length;
            return 0 === e ? '' : 0 === arguments.length ? A(this, 0, e) : m.apply(this, arguments);
          }),
          (c.prototype.toLocaleString = c.prototype.toString),
          (c.prototype.equals = function (e) {
            if (!c.isBuffer(e)) throw new TypeError('Argument must be a Buffer');
            return this === e || 0 === c.compare(this, e);
          }),
          (c.prototype.inspect = function () {
            let e = '';
            const r = t.IS;
            return (
              (e = this.toString('hex', 0, r)
                .replace(/(.{2})/g, '$1 ')
                .trim()),
              this.length > r && (e += ' ... '),
              '<Buffer ' + e + '>'
            );
          }),
          i && (c.prototype[i] = c.prototype.inspect),
          (c.prototype.compare = function (e, t, r, a, o) {
            if ((Y(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)), !c.isBuffer(e)))
              throw new TypeError(
                'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e,
              );
            if (
              (void 0 === t && (t = 0),
              void 0 === r && (r = e ? e.length : 0),
              void 0 === a && (a = 0),
              void 0 === o && (o = this.length),
              t < 0 || r > e.length || a < 0 || o > this.length)
            )
              throw new RangeError('out of range index');
            if (a >= o && t >= r) return 0;
            if (a >= o) return -1;
            if (t >= r) return 1;
            if (this === e) return 0;
            let i = (o >>>= 0) - (a >>>= 0),
              n = (r >>>= 0) - (t >>>= 0);
            const s = Math.min(i, n),
              l = this.slice(a, o),
              u = e.slice(t, r);
            for (let c = 0; c < s; ++c)
              if (l[c] !== u[c]) {
                (i = l[c]), (n = u[c]);
                break;
              }
            return i < n ? -1 : n < i ? 1 : 0;
          }),
          (c.prototype.includes = function (e, t, r) {
            return -1 !== this.indexOf(e, t, r);
          }),
          (c.prototype.indexOf = function (e, t, r) {
            return v(this, e, t, r, !0);
          }),
          (c.prototype.lastIndexOf = function (e, t, r) {
            return v(this, e, t, r, !1);
          }),
          (c.prototype.write = function (e, t, r, a) {
            if (void 0 === t) (a = 'utf8'), (r = this.length), (t = 0);
            else if (void 0 === r && 'string' === typeof t) (a = t), (r = this.length), (t = 0);
            else {
              if (!isFinite(t))
                throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
              (t >>>= 0), isFinite(r) ? ((r >>>= 0), void 0 === a && (a = 'utf8')) : ((a = r), (r = void 0));
            }
            const o = this.length - t;
            if (((void 0 === r || r > o) && (r = o), (e.length > 0 && (r < 0 || t < 0)) || t > this.length))
              throw new RangeError('Attempt to write outside buffer bounds');
            a || (a = 'utf8');
            let i = !1;
            for (;;)
              switch (a) {
                case 'hex':
                  return w(this, e, t, r);
                case 'utf8':
                case 'utf-8':
                  return k(this, e, t, r);
                case 'ascii':
                case 'latin1':
                case 'binary':
                  return E(this, e, t, r);
                case 'base64':
                  return S(this, e, t, r);
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return x(this, e, t, r);
                default:
                  if (i) throw new TypeError('Unknown encoding: ' + a);
                  (a = ('' + a).toLowerCase()), (i = !0);
              }
          }),
          (c.prototype.toJSON = function () {
            return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) };
          });
        const O = 4096;
        function P(e, t, r) {
          let a = '';
          r = Math.min(e.length, r);
          for (let o = t; o < r; ++o) a += String.fromCharCode(127 & e[o]);
          return a;
        }
        function I(e, t, r) {
          let a = '';
          r = Math.min(e.length, r);
          for (let o = t; o < r; ++o) a += String.fromCharCode(e[o]);
          return a;
        }
        function B(e, t, r) {
          const a = e.length;
          (!t || t < 0) && (t = 0), (!r || r < 0 || r > a) && (r = a);
          let o = '';
          for (let i = t; i < r; ++i) o += J[e[i]];
          return o;
        }
        function N(e, t, r) {
          const a = e.slice(t, r);
          let o = '';
          for (let i = 0; i < a.length - 1; i += 2) o += String.fromCharCode(a[i] + 256 * a[i + 1]);
          return o;
        }
        function T(e, t, r) {
          if (e % 1 !== 0 || e < 0) throw new RangeError('offset is not uint');
          if (e + t > r) throw new RangeError('Trying to access beyond buffer length');
        }
        function z(e, t, r, a, o, i) {
          if (!c.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t > o || t < i) throw new RangeError('"value" argument is out of bounds');
          if (r + a > e.length) throw new RangeError('Index out of range');
        }
        function R(e, t, r, a, o) {
          q(t, a, o, e, r, 7);
          let i = Number(t & BigInt(4294967295));
          (e[r++] = i), (i >>= 8), (e[r++] = i), (i >>= 8), (e[r++] = i), (i >>= 8), (e[r++] = i);
          let n = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (e[r++] = n), (n >>= 8), (e[r++] = n), (n >>= 8), (e[r++] = n), (n >>= 8), (e[r++] = n), r;
        }
        function M(e, t, r, a, o) {
          q(t, a, o, e, r, 7);
          let i = Number(t & BigInt(4294967295));
          (e[r + 7] = i), (i >>= 8), (e[r + 6] = i), (i >>= 8), (e[r + 5] = i), (i >>= 8), (e[r + 4] = i);
          let n = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (e[r + 3] = n), (n >>= 8), (e[r + 2] = n), (n >>= 8), (e[r + 1] = n), (n >>= 8), (e[r] = n), r + 8;
        }
        function F(e, t, r, a, o, i) {
          if (r + a > e.length) throw new RangeError('Index out of range');
          if (r < 0) throw new RangeError('Index out of range');
        }
        function C(e, t, r, a, i) {
          return (t = +t), (r >>>= 0), i || F(e, 0, r, 4), o.write(e, t, r, a, 23, 4), r + 4;
        }
        function j(e, t, r, a, i) {
          return (t = +t), (r >>>= 0), i || F(e, 0, r, 8), o.write(e, t, r, a, 52, 8), r + 8;
        }
        (c.prototype.slice = function (e, t) {
          const r = this.length;
          (e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
            (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
            t < e && (t = e);
          const a = this.subarray(e, t);
          return Object.setPrototypeOf(a, c.prototype), a;
        }),
          (c.prototype.readUintLE = c.prototype.readUIntLE =
            function (e, t, r) {
              (e >>>= 0), (t >>>= 0), r || T(e, t, this.length);
              let a = this[e],
                o = 1,
                i = 0;
              for (; ++i < t && (o *= 256); ) a += this[e + i] * o;
              return a;
            }),
          (c.prototype.readUintBE = c.prototype.readUIntBE =
            function (e, t, r) {
              (e >>>= 0), (t >>>= 0), r || T(e, t, this.length);
              let a = this[e + --t],
                o = 1;
              for (; t > 0 && (o *= 256); ) a += this[e + --t] * o;
              return a;
            }),
          (c.prototype.readUint8 = c.prototype.readUInt8 =
            function (e, t) {
              return (e >>>= 0), t || T(e, 1, this.length), this[e];
            }),
          (c.prototype.readUint16LE = c.prototype.readUInt16LE =
            function (e, t) {
              return (e >>>= 0), t || T(e, 2, this.length), this[e] | (this[e + 1] << 8);
            }),
          (c.prototype.readUint16BE = c.prototype.readUInt16BE =
            function (e, t) {
              return (e >>>= 0), t || T(e, 2, this.length), (this[e] << 8) | this[e + 1];
            }),
          (c.prototype.readUint32LE = c.prototype.readUInt32LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || T(e, 4, this.length),
                (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) + 16777216 * this[e + 3]
              );
            }),
          (c.prototype.readUint32BE = c.prototype.readUInt32BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || T(e, 4, this.length),
                16777216 * this[e] + ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
              );
            }),
          (c.prototype.readBigUInt64LE = Q(function (e) {
            H((e >>>= 0), 'offset');
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || G(e, this.length - 8);
            const a = t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24,
              o = this[++e] + 256 * this[++e] + 65536 * this[++e] + r * 2 ** 24;
            return BigInt(a) + (BigInt(o) << BigInt(32));
          })),
          (c.prototype.readBigUInt64BE = Q(function (e) {
            H((e >>>= 0), 'offset');
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || G(e, this.length - 8);
            const a = t * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + this[++e],
              o = this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r;
            return (BigInt(a) << BigInt(32)) + BigInt(o);
          })),
          (c.prototype.readIntLE = function (e, t, r) {
            (e >>>= 0), (t >>>= 0), r || T(e, t, this.length);
            let a = this[e],
              o = 1,
              i = 0;
            for (; ++i < t && (o *= 256); ) a += this[e + i] * o;
            return (o *= 128), a >= o && (a -= Math.pow(2, 8 * t)), a;
          }),
          (c.prototype.readIntBE = function (e, t, r) {
            (e >>>= 0), (t >>>= 0), r || T(e, t, this.length);
            let a = t,
              o = 1,
              i = this[e + --a];
            for (; a > 0 && (o *= 256); ) i += this[e + --a] * o;
            return (o *= 128), i >= o && (i -= Math.pow(2, 8 * t)), i;
          }),
          (c.prototype.readInt8 = function (e, t) {
            return (e >>>= 0), t || T(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
          }),
          (c.prototype.readInt16LE = function (e, t) {
            (e >>>= 0), t || T(e, 2, this.length);
            const r = this[e] | (this[e + 1] << 8);
            return 32768 & r ? 4294901760 | r : r;
          }),
          (c.prototype.readInt16BE = function (e, t) {
            (e >>>= 0), t || T(e, 2, this.length);
            const r = this[e + 1] | (this[e] << 8);
            return 32768 & r ? 4294901760 | r : r;
          }),
          (c.prototype.readInt32LE = function (e, t) {
            return (
              (e >>>= 0),
              t || T(e, 4, this.length),
              this[e] | (this[e + 1] << 8) | (this[e + 2] << 16) | (this[e + 3] << 24)
            );
          }),
          (c.prototype.readInt32BE = function (e, t) {
            return (
              (e >>>= 0),
              t || T(e, 4, this.length),
              (this[e] << 24) | (this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3]
            );
          }),
          (c.prototype.readBigInt64LE = Q(function (e) {
            H((e >>>= 0), 'offset');
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || G(e, this.length - 8);
            const a = this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24);
            return (BigInt(a) << BigInt(32)) + BigInt(t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24);
          })),
          (c.prototype.readBigInt64BE = Q(function (e) {
            H((e >>>= 0), 'offset');
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || G(e, this.length - 8);
            const a = (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e];
            return (BigInt(a) << BigInt(32)) + BigInt(this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r);
          })),
          (c.prototype.readFloatLE = function (e, t) {
            return (e >>>= 0), t || T(e, 4, this.length), o.read(this, e, !0, 23, 4);
          }),
          (c.prototype.readFloatBE = function (e, t) {
            return (e >>>= 0), t || T(e, 4, this.length), o.read(this, e, !1, 23, 4);
          }),
          (c.prototype.readDoubleLE = function (e, t) {
            return (e >>>= 0), t || T(e, 8, this.length), o.read(this, e, !0, 52, 8);
          }),
          (c.prototype.readDoubleBE = function (e, t) {
            return (e >>>= 0), t || T(e, 8, this.length), o.read(this, e, !1, 52, 8);
          }),
          (c.prototype.writeUintLE = c.prototype.writeUIntLE =
            function (e, t, r, a) {
              if (((e = +e), (t >>>= 0), (r >>>= 0), !a)) {
                z(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
              }
              let o = 1,
                i = 0;
              for (this[t] = 255 & e; ++i < r && (o *= 256); ) this[t + i] = (e / o) & 255;
              return t + r;
            }),
          (c.prototype.writeUintBE = c.prototype.writeUIntBE =
            function (e, t, r, a) {
              if (((e = +e), (t >>>= 0), (r >>>= 0), !a)) {
                z(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
              }
              let o = r - 1,
                i = 1;
              for (this[t + o] = 255 & e; --o >= 0 && (i *= 256); ) this[t + o] = (e / i) & 255;
              return t + r;
            }),
          (c.prototype.writeUint8 = c.prototype.writeUInt8 =
            function (e, t, r) {
              return (e = +e), (t >>>= 0), r || z(this, e, t, 1, 255, 0), (this[t] = 255 & e), t + 1;
            }),
          (c.prototype.writeUint16LE = c.prototype.writeUInt16LE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || z(this, e, t, 2, 65535, 0),
                (this[t] = 255 & e),
                (this[t + 1] = e >>> 8),
                t + 2
              );
            }),
          (c.prototype.writeUint16BE = c.prototype.writeUInt16BE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || z(this, e, t, 2, 65535, 0),
                (this[t] = e >>> 8),
                (this[t + 1] = 255 & e),
                t + 2
              );
            }),
          (c.prototype.writeUint32LE = c.prototype.writeUInt32LE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || z(this, e, t, 4, 4294967295, 0),
                (this[t + 3] = e >>> 24),
                (this[t + 2] = e >>> 16),
                (this[t + 1] = e >>> 8),
                (this[t] = 255 & e),
                t + 4
              );
            }),
          (c.prototype.writeUint32BE = c.prototype.writeUInt32BE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || z(this, e, t, 4, 4294967295, 0),
                (this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e),
                t + 4
              );
            }),
          (c.prototype.writeBigUInt64LE = Q(function (e) {
            return R(
              this,
              e,
              arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
              BigInt(0),
              BigInt('0xffffffffffffffff'),
            );
          })),
          (c.prototype.writeBigUInt64BE = Q(function (e) {
            return M(
              this,
              e,
              arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
              BigInt(0),
              BigInt('0xffffffffffffffff'),
            );
          })),
          (c.prototype.writeIntLE = function (e, t, r, a) {
            if (((e = +e), (t >>>= 0), !a)) {
              const a = Math.pow(2, 8 * r - 1);
              z(this, e, t, r, a - 1, -a);
            }
            let o = 0,
              i = 1,
              n = 0;
            for (this[t] = 255 & e; ++o < r && (i *= 256); )
              e < 0 && 0 === n && 0 !== this[t + o - 1] && (n = 1), (this[t + o] = (((e / i) | 0) - n) & 255);
            return t + r;
          }),
          (c.prototype.writeIntBE = function (e, t, r, a) {
            if (((e = +e), (t >>>= 0), !a)) {
              const a = Math.pow(2, 8 * r - 1);
              z(this, e, t, r, a - 1, -a);
            }
            let o = r - 1,
              i = 1,
              n = 0;
            for (this[t + o] = 255 & e; --o >= 0 && (i *= 256); )
              e < 0 && 0 === n && 0 !== this[t + o + 1] && (n = 1), (this[t + o] = (((e / i) | 0) - n) & 255);
            return t + r;
          }),
          (c.prototype.writeInt8 = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || z(this, e, t, 1, 127, -128),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (c.prototype.writeInt16LE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || z(this, e, t, 2, 32767, -32768),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              t + 2
            );
          }),
          (c.prototype.writeInt16BE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || z(this, e, t, 2, 32767, -32768),
              (this[t] = e >>> 8),
              (this[t + 1] = 255 & e),
              t + 2
            );
          }),
          (c.prototype.writeInt32LE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || z(this, e, t, 4, 2147483647, -2147483648),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              (this[t + 2] = e >>> 16),
              (this[t + 3] = e >>> 24),
              t + 4
            );
          }),
          (c.prototype.writeInt32BE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || z(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              (this[t] = e >>> 24),
              (this[t + 1] = e >>> 16),
              (this[t + 2] = e >>> 8),
              (this[t + 3] = 255 & e),
              t + 4
            );
          }),
          (c.prototype.writeBigInt64LE = Q(function (e) {
            return R(
              this,
              e,
              arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
              -BigInt('0x8000000000000000'),
              BigInt('0x7fffffffffffffff'),
            );
          })),
          (c.prototype.writeBigInt64BE = Q(function (e) {
            return M(
              this,
              e,
              arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
              -BigInt('0x8000000000000000'),
              BigInt('0x7fffffffffffffff'),
            );
          })),
          (c.prototype.writeFloatLE = function (e, t, r) {
            return C(this, e, t, !0, r);
          }),
          (c.prototype.writeFloatBE = function (e, t, r) {
            return C(this, e, t, !1, r);
          }),
          (c.prototype.writeDoubleLE = function (e, t, r) {
            return j(this, e, t, !0, r);
          }),
          (c.prototype.writeDoubleBE = function (e, t, r) {
            return j(this, e, t, !1, r);
          }),
          (c.prototype.copy = function (e, t, r, a) {
            if (!c.isBuffer(e)) throw new TypeError('argument should be a Buffer');
            if (
              (r || (r = 0),
              a || 0 === a || (a = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              a > 0 && a < r && (a = r),
              a === r)
            )
              return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError('targetStart out of bounds');
            if (r < 0 || r >= this.length) throw new RangeError('Index out of range');
            if (a < 0) throw new RangeError('sourceEnd out of bounds');
            a > this.length && (a = this.length), e.length - t < a - r && (a = e.length - t + r);
            const o = a - r;
            return (
              this === e && 'function' === typeof Uint8Array.prototype.copyWithin
                ? this.copyWithin(t, r, a)
                : Uint8Array.prototype.set.call(e, this.subarray(r, a), t),
              o
            );
          }),
          (c.prototype.fill = function (e, t, r, a) {
            if ('string' === typeof e) {
              if (
                ('string' === typeof t
                  ? ((a = t), (t = 0), (r = this.length))
                  : 'string' === typeof r && ((a = r), (r = this.length)),
                void 0 !== a && 'string' !== typeof a)
              )
                throw new TypeError('encoding must be a string');
              if ('string' === typeof a && !c.isEncoding(a)) throw new TypeError('Unknown encoding: ' + a);
              if (1 === e.length) {
                const t = e.charCodeAt(0);
                (('utf8' === a && t < 128) || 'latin1' === a) && (e = t);
              }
            } else 'number' === typeof e ? (e &= 255) : 'boolean' === typeof e && (e = Number(e));
            if (t < 0 || this.length < t || this.length < r) throw new RangeError('Out of range index');
            if (r <= t) return this;
            let o;
            if (((t >>>= 0), (r = void 0 === r ? this.length : r >>> 0), e || (e = 0), 'number' === typeof e))
              for (o = t; o < r; ++o) this[o] = e;
            else {
              const i = c.isBuffer(e) ? e : c.from(e, a),
                n = i.length;
              if (0 === n) throw new TypeError('The value "' + e + '" is invalid for argument "value"');
              for (o = 0; o < r - t; ++o) this[o + t] = i[o % n];
            }
            return this;
          });
        const U = {};
        function D(e, t, r) {
          U[e] = class extends r {
            constructor() {
              super(),
                Object.defineProperty(this, 'message', {
                  value: t.apply(this, arguments),
                  writable: !0,
                  configurable: !0,
                }),
                (this.name = `${this.name} [${e}]`),
                this.stack,
                delete this.name;
            }
            get code() {
              return e;
            }
            set code(e) {
              Object.defineProperty(this, 'code', { configurable: !0, enumerable: !0, value: e, writable: !0 });
            }
            toString() {
              return `${this.name} [${e}]: ${this.message}`;
            }
          };
        }
        function L(e) {
          let t = '',
            r = e.length;
          const a = '-' === e[0] ? 1 : 0;
          for (; r >= a + 4; r -= 3) t = `_${e.slice(r - 3, r)}${t}`;
          return `${e.slice(0, r)}${t}`;
        }
        function q(e, t, r, a, o, i) {
          if (e > r || e < t) {
            const a = 'bigint' === typeof t ? 'n' : '';
            let o;
            throw (
              ((o =
                i > 3
                  ? 0 === t || t === BigInt(0)
                    ? `>= 0${a} and < 2${a} ** ${8 * (i + 1)}${a}`
                    : `>= -(2${a} ** ${8 * (i + 1) - 1}${a}) and < 2 ** ${8 * (i + 1) - 1}${a}`
                  : `>= ${t}${a} and <= ${r}${a}`),
              new U.ERR_OUT_OF_RANGE('value', o, e))
            );
          }
          !(function (e, t, r) {
            H(t, 'offset'), (void 0 !== e[t] && void 0 !== e[t + r]) || G(t, e.length - (r + 1));
          })(a, o, i);
        }
        function H(e, t) {
          if ('number' !== typeof e) throw new U.ERR_INVALID_ARG_TYPE(t, 'number', e);
        }
        function G(e, t, r) {
          if (Math.floor(e) !== e) throw (H(e, r), new U.ERR_OUT_OF_RANGE(r || 'offset', 'an integer', e));
          if (t < 0) throw new U.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new U.ERR_OUT_OF_RANGE(r || 'offset', `>= ${r ? 1 : 0} and <= ${t}`, e);
        }
        D(
          'ERR_BUFFER_OUT_OF_BOUNDS',
          function (e) {
            return e ? `${e} is outside of buffer bounds` : 'Attempt to access memory outside buffer bounds';
          },
          RangeError,
        ),
          D(
            'ERR_INVALID_ARG_TYPE',
            function (e, t) {
              return `The "${e}" argument must be of type number. Received type ${typeof t}`;
            },
            TypeError,
          ),
          D(
            'ERR_OUT_OF_RANGE',
            function (e, t, r) {
              let a = `The value of "${e}" is out of range.`,
                o = r;
              return (
                Number.isInteger(r) && Math.abs(r) > 2 ** 32
                  ? (o = L(String(r)))
                  : 'bigint' === typeof r &&
                    ((o = String(r)),
                    (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (o = L(o)),
                    (o += 'n')),
                (a += ` It must be ${t}. Received ${o}`),
                a
              );
            },
            RangeError,
          );
        const K = /[^+/0-9A-Za-z-_]/g;
        function V(e, t) {
          let r;
          t = t || 1 / 0;
          const a = e.length;
          let o = null;
          const i = [];
          for (let n = 0; n < a; ++n) {
            if (((r = e.charCodeAt(n)), r > 55295 && r < 57344)) {
              if (!o) {
                if (r > 56319) {
                  (t -= 3) > -1 && i.push(239, 191, 189);
                  continue;
                }
                if (n + 1 === a) {
                  (t -= 3) > -1 && i.push(239, 191, 189);
                  continue;
                }
                o = r;
                continue;
              }
              if (r < 56320) {
                (t -= 3) > -1 && i.push(239, 191, 189), (o = r);
                continue;
              }
              r = 65536 + (((o - 55296) << 10) | (r - 56320));
            } else o && (t -= 3) > -1 && i.push(239, 191, 189);
            if (((o = null), r < 128)) {
              if ((t -= 1) < 0) break;
              i.push(r);
            } else if (r < 2048) {
              if ((t -= 2) < 0) break;
              i.push((r >> 6) | 192, (63 & r) | 128);
            } else if (r < 65536) {
              if ((t -= 3) < 0) break;
              i.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (63 & r) | 128);
            } else {
              if (!(r < 1114112)) throw new Error('Invalid code point');
              if ((t -= 4) < 0) break;
              i.push((r >> 18) | 240, ((r >> 12) & 63) | 128, ((r >> 6) & 63) | 128, (63 & r) | 128);
            }
          }
          return i;
        }
        function $(e) {
          return a.toByteArray(
            (function (e) {
              if ((e = (e = e.split('=')[0]).trim().replace(K, '')).length < 2) return '';
              for (; e.length % 4 !== 0; ) e += '=';
              return e;
            })(e),
          );
        }
        function W(e, t, r, a) {
          let o;
          for (o = 0; o < a && !(o + r >= t.length || o >= e.length); ++o) t[o + r] = e[o];
          return o;
        }
        function Y(e, t) {
          return (
            e instanceof t ||
            (null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name)
          );
        }
        function X(e) {
          return e !== e;
        }
        const J = (function () {
          const e = '0123456789abcdef',
            t = new Array(256);
          for (let r = 0; r < 16; ++r) {
            const a = 16 * r;
            for (let o = 0; o < 16; ++o) t[a + o] = e[r] + e[o];
          }
          return t;
        })();
        function Q(e) {
          return 'undefined' === typeof BigInt ? Z : e;
        }
        function Z() {
          throw new Error('BigInt not supported');
        }
      },
      7780: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.BlockCipher,
                a = t.algo,
                o = [],
                i = [],
                n = [],
                s = [],
                c = [],
                l = [],
                u = [],
                d = [],
                h = [],
                f = [];
              !(function () {
                for (var e = [], t = 0; t < 256; t++) e[t] = t < 128 ? t << 1 : (t << 1) ^ 283;
                var r = 0,
                  a = 0;
                for (t = 0; t < 256; t++) {
                  var p = a ^ (a << 1) ^ (a << 2) ^ (a << 3) ^ (a << 4);
                  (p = (p >>> 8) ^ (255 & p) ^ 99), (o[r] = p), (i[p] = r);
                  var b = e[r],
                    m = e[b],
                    g = e[m],
                    v = (257 * e[p]) ^ (16843008 * p);
                  (n[r] = (v << 24) | (v >>> 8)),
                    (s[r] = (v << 16) | (v >>> 16)),
                    (c[r] = (v << 8) | (v >>> 24)),
                    (l[r] = v),
                    (v = (16843009 * g) ^ (65537 * m) ^ (257 * b) ^ (16843008 * r)),
                    (u[p] = (v << 24) | (v >>> 8)),
                    (d[p] = (v << 16) | (v >>> 16)),
                    (h[p] = (v << 8) | (v >>> 24)),
                    (f[p] = v),
                    r ? ((r = b ^ e[e[e[g ^ b]]]), (a ^= e[e[a]])) : (r = a = 1);
                }
              })();
              var p = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                b = (a.AES = r.extend({
                  _doReset: function () {
                    if (!this._nRounds || this._keyPriorReset !== this._key) {
                      for (
                        var e = (this._keyPriorReset = this._key),
                          t = e.words,
                          r = e.sigBytes / 4,
                          a = 4 * ((this._nRounds = r + 6) + 1),
                          i = (this._keySchedule = []),
                          n = 0;
                        n < a;
                        n++
                      )
                        n < r
                          ? (i[n] = t[n])
                          : ((l = i[n - 1]),
                            n % r
                              ? r > 6 &&
                                n % r == 4 &&
                                (l =
                                  (o[l >>> 24] << 24) |
                                  (o[(l >>> 16) & 255] << 16) |
                                  (o[(l >>> 8) & 255] << 8) |
                                  o[255 & l])
                              : ((l =
                                  (o[(l = (l << 8) | (l >>> 24)) >>> 24] << 24) |
                                  (o[(l >>> 16) & 255] << 16) |
                                  (o[(l >>> 8) & 255] << 8) |
                                  o[255 & l]),
                                (l ^= p[(n / r) | 0] << 24)),
                            (i[n] = i[n - r] ^ l));
                      for (var s = (this._invKeySchedule = []), c = 0; c < a; c++) {
                        if (((n = a - c), c % 4)) var l = i[n];
                        else l = i[n - 4];
                        s[c] =
                          c < 4 || n <= 4
                            ? l
                            : u[o[l >>> 24]] ^ d[o[(l >>> 16) & 255]] ^ h[o[(l >>> 8) & 255]] ^ f[o[255 & l]];
                      }
                    }
                  },
                  encryptBlock: function (e, t) {
                    this._doCryptBlock(e, t, this._keySchedule, n, s, c, l, o);
                  },
                  decryptBlock: function (e, t) {
                    var r = e[t + 1];
                    (e[t + 1] = e[t + 3]),
                      (e[t + 3] = r),
                      this._doCryptBlock(e, t, this._invKeySchedule, u, d, h, f, i),
                      (r = e[t + 1]),
                      (e[t + 1] = e[t + 3]),
                      (e[t + 3] = r);
                  },
                  _doCryptBlock: function (e, t, r, a, o, i, n, s) {
                    for (
                      var c = this._nRounds,
                        l = e[t] ^ r[0],
                        u = e[t + 1] ^ r[1],
                        d = e[t + 2] ^ r[2],
                        h = e[t + 3] ^ r[3],
                        f = 4,
                        p = 1;
                      p < c;
                      p++
                    ) {
                      var b = a[l >>> 24] ^ o[(u >>> 16) & 255] ^ i[(d >>> 8) & 255] ^ n[255 & h] ^ r[f++],
                        m = a[u >>> 24] ^ o[(d >>> 16) & 255] ^ i[(h >>> 8) & 255] ^ n[255 & l] ^ r[f++],
                        g = a[d >>> 24] ^ o[(h >>> 16) & 255] ^ i[(l >>> 8) & 255] ^ n[255 & u] ^ r[f++],
                        v = a[h >>> 24] ^ o[(l >>> 16) & 255] ^ i[(u >>> 8) & 255] ^ n[255 & d] ^ r[f++];
                      (l = b), (u = m), (d = g), (h = v);
                    }
                    (b =
                      ((s[l >>> 24] << 24) | (s[(u >>> 16) & 255] << 16) | (s[(d >>> 8) & 255] << 8) | s[255 & h]) ^
                      r[f++]),
                      (m =
                        ((s[u >>> 24] << 24) | (s[(d >>> 16) & 255] << 16) | (s[(h >>> 8) & 255] << 8) | s[255 & l]) ^
                        r[f++]),
                      (g =
                        ((s[d >>> 24] << 24) | (s[(h >>> 16) & 255] << 16) | (s[(l >>> 8) & 255] << 8) | s[255 & u]) ^
                        r[f++]),
                      (v =
                        ((s[h >>> 24] << 24) | (s[(l >>> 16) & 255] << 16) | (s[(u >>> 8) & 255] << 8) | s[255 & d]) ^
                        r[f++]),
                      (e[t] = b),
                      (e[t + 1] = m),
                      (e[t + 2] = g),
                      (e[t + 3] = v);
                  },
                  keySize: 8,
                }));
              t.AES = r._createHelper(b);
            })(),
            e.AES
          );
        })(r(4488), r(8523), r(4199), r(8211), r(2238));
      },
      6501: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.BlockCipher,
                a = t.algo;
              const o = 16,
                i = [
                  608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022,
                  953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073,
                  2306472731,
                ],
                n = [
                  [
                    3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305,
                    614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238,
                    227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379,
                    3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486,
                    3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920,
                    1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050,
                    732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927,
                    999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402,
                    4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033,
                    772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088,
                    1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656,
                    2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502,
                    3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909,
                    936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567,
                    3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531,
                    1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577,
                    3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531,
                    1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056,
                    1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610,
                    2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459,
                    1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851,
                    2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624,
                    4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592,
                    3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540,
                    1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193,
                    3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313,
                    375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143,
                    3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935,
                    610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733,
                    2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269,
                    3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613,
                    3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946,
                  ],
                  [
                    1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590,
                    3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022,
                    1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673,
                    1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761,
                    1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720,
                    2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981,
                    3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255,
                    2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289,
                    1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655,
                    3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711,
                    2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066,
                    4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781,
                    1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769,
                    4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603,
                    1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202,
                    3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456,
                    1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576,
                    3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780,
                    354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879,
                    3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598,
                    1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511,
                    2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233,
                    238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670,
                    3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347,
                    1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240,
                    3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488,
                    3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533,
                    157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706,
                    2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508,
                    435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854,
                    3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021,
                    1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055,
                  ],
                  [
                    3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728,
                    3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640,
                    1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444,
                    2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035,
                    1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102,
                    2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499,
                    499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395,
                    4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547,
                    1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748,
                    4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548,
                    133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820,
                    628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701,
                    1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824,
                    3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846,
                    172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669,
                    3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403,
                    1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131,
                    926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300,
                    1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537,
                    1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982,
                    2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100,
                    2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297,
                    1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929,
                    2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396,
                    3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107,
                    3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185,
                    3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375,
                    2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386,
                    300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742,
                    1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620,
                    3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668,
                    1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504,
                  ],
                  [
                    976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686,
                    3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180,
                    1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814,
                    691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050,
                    3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286,
                    673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353,
                    2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145,
                    2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132,
                    3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136,
                    2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309,
                    3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361,
                    1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263,
                    1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738,
                    2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246,
                    3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891,
                    3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903,
                    3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381,
                    1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488,
                    1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877,
                    2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847,
                    445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343,
                    4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221,
                    4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506,
                    3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142,
                    453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637,
                    3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529,
                    4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580,
                    3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474,
                    3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507,
                    1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296,
                    2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033,
                    2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462,
                  ],
                ];
              var s = { pbox: [], sbox: [] };
              function c(e, t) {
                let r = (t >> 24) & 255,
                  a = (t >> 16) & 255,
                  o = (t >> 8) & 255,
                  i = 255 & t,
                  n = e.sbox[0][r] + e.sbox[1][a];
                return (n ^= e.sbox[2][o]), (n += e.sbox[3][i]), n;
              }
              function l(e, t, r) {
                let a,
                  i = t,
                  n = r;
                for (let s = 0; s < o; ++s) (i ^= e.pbox[s]), (n = c(e, i) ^ n), (a = i), (i = n), (n = a);
                return (a = i), (i = n), (n = a), (n ^= e.pbox[o]), (i ^= e.pbox[o + 1]), { left: i, right: n };
              }
              function u(e, t, r) {
                let a,
                  i = t,
                  n = r;
                for (let s = o + 1; s > 1; --s) (i ^= e.pbox[s]), (n = c(e, i) ^ n), (a = i), (i = n), (n = a);
                return (a = i), (i = n), (n = a), (n ^= e.pbox[1]), (i ^= e.pbox[0]), { left: i, right: n };
              }
              function d(e, t, r) {
                for (let o = 0; o < 4; o++) {
                  e.sbox[o] = [];
                  for (let t = 0; t < 256; t++) e.sbox[o][t] = n[o][t];
                }
                let a = 0;
                for (let n = 0; n < o + 2; n++) (e.pbox[n] = i[n] ^ t[a]), a++, a >= r && (a = 0);
                let s = 0,
                  c = 0,
                  u = 0;
                for (let i = 0; i < o + 2; i += 2)
                  (u = l(e, s, c)), (s = u.left), (c = u.right), (e.pbox[i] = s), (e.pbox[i + 1] = c);
                for (let o = 0; o < 4; o++)
                  for (let t = 0; t < 256; t += 2)
                    (u = l(e, s, c)), (s = u.left), (c = u.right), (e.sbox[o][t] = s), (e.sbox[o][t + 1] = c);
                return !0;
              }
              var h = (a.Blowfish = r.extend({
                _doReset: function () {
                  if (this._keyPriorReset !== this._key) {
                    var e = (this._keyPriorReset = this._key),
                      t = e.words,
                      r = e.sigBytes / 4;
                    d(s, t, r);
                  }
                },
                encryptBlock: function (e, t) {
                  var r = l(s, e[t], e[t + 1]);
                  (e[t] = r.left), (e[t + 1] = r.right);
                },
                decryptBlock: function (e, t) {
                  var r = u(s, e[t], e[t + 1]);
                  (e[t] = r.left), (e[t + 1] = r.right);
                },
                blockSize: 2,
                keySize: 4,
                ivSize: 2,
              }));
              t.Blowfish = r._createHelper(h);
            })(),
            e.Blowfish
          );
        })(r(4488), r(8523), r(4199), r(8211), r(2238));
      },
      2238: function (e, t, r) {
        e.exports = (function (e) {
          e.lib.Cipher ||
            (function (t) {
              var r = e,
                a = r.lib,
                o = a.Base,
                i = a.WordArray,
                n = a.BufferedBlockAlgorithm,
                s = r.enc,
                c = (s.Utf8, s.Base64),
                l = r.algo.EvpKDF,
                u = (a.Cipher = n.extend({
                  cfg: o.extend(),
                  createEncryptor: function (e, t) {
                    return this.create(this._ENC_XFORM_MODE, e, t);
                  },
                  createDecryptor: function (e, t) {
                    return this.create(this._DEC_XFORM_MODE, e, t);
                  },
                  init: function (e, t, r) {
                    (this.cfg = this.cfg.extend(r)), (this._xformMode = e), (this._key = t), this.reset();
                  },
                  reset: function () {
                    n.reset.call(this), this._doReset();
                  },
                  process: function (e) {
                    return this._append(e), this._process();
                  },
                  finalize: function (e) {
                    return e && this._append(e), this._doFinalize();
                  },
                  keySize: 4,
                  ivSize: 4,
                  _ENC_XFORM_MODE: 1,
                  _DEC_XFORM_MODE: 2,
                  _createHelper: (function () {
                    function e(e) {
                      return 'string' == typeof e ? y : g;
                    }
                    return function (t) {
                      return {
                        encrypt: function (r, a, o) {
                          return e(a).encrypt(t, r, a, o);
                        },
                        decrypt: function (r, a, o) {
                          return e(a).decrypt(t, r, a, o);
                        },
                      };
                    };
                  })(),
                })),
                d =
                  ((a.StreamCipher = u.extend({
                    _doFinalize: function () {
                      return this._process(!0);
                    },
                    blockSize: 1,
                  })),
                  (r.mode = {})),
                h = (a.BlockCipherMode = o.extend({
                  createEncryptor: function (e, t) {
                    return this.Encryptor.create(e, t);
                  },
                  createDecryptor: function (e, t) {
                    return this.Decryptor.create(e, t);
                  },
                  init: function (e, t) {
                    (this._cipher = e), (this._iv = t);
                  },
                })),
                f = (d.CBC = (function () {
                  var e = h.extend();
                  function r(e, r, a) {
                    var o,
                      i = this._iv;
                    i ? ((o = i), (this._iv = t)) : (o = this._prevBlock);
                    for (var n = 0; n < a; n++) e[r + n] ^= o[n];
                  }
                  return (
                    (e.Encryptor = e.extend({
                      processBlock: function (e, t) {
                        var a = this._cipher,
                          o = a.blockSize;
                        r.call(this, e, t, o), a.encryptBlock(e, t), (this._prevBlock = e.slice(t, t + o));
                      },
                    })),
                    (e.Decryptor = e.extend({
                      processBlock: function (e, t) {
                        var a = this._cipher,
                          o = a.blockSize,
                          i = e.slice(t, t + o);
                        a.decryptBlock(e, t), r.call(this, e, t, o), (this._prevBlock = i);
                      },
                    })),
                    e
                  );
                })()),
                p = ((r.pad = {}).Pkcs7 = {
                  pad: function (e, t) {
                    for (
                      var r = 4 * t, a = r - (e.sigBytes % r), o = (a << 24) | (a << 16) | (a << 8) | a, n = [], s = 0;
                      s < a;
                      s += 4
                    )
                      n.push(o);
                    var c = i.create(n, a);
                    e.concat(c);
                  },
                  unpad: function (e) {
                    var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
                    e.sigBytes -= t;
                  },
                }),
                b =
                  ((a.BlockCipher = u.extend({
                    cfg: u.cfg.extend({ mode: f, padding: p }),
                    reset: function () {
                      var e;
                      u.reset.call(this);
                      var t = this.cfg,
                        r = t.iv,
                        a = t.mode;
                      this._xformMode == this._ENC_XFORM_MODE
                        ? (e = a.createEncryptor)
                        : ((e = a.createDecryptor), (this._minBufferSize = 1)),
                        this._mode && this._mode.__creator == e
                          ? this._mode.init(this, r && r.words)
                          : ((this._mode = e.call(a, this, r && r.words)), (this._mode.__creator = e));
                    },
                    _doProcessBlock: function (e, t) {
                      this._mode.processBlock(e, t);
                    },
                    _doFinalize: function () {
                      var e,
                        t = this.cfg.padding;
                      return (
                        this._xformMode == this._ENC_XFORM_MODE
                          ? (t.pad(this._data, this.blockSize), (e = this._process(!0)))
                          : ((e = this._process(!0)), t.unpad(e)),
                        e
                      );
                    },
                    blockSize: 4,
                  })),
                  (a.CipherParams = o.extend({
                    init: function (e) {
                      this.mixIn(e);
                    },
                    toString: function (e) {
                      return (e || this.formatter).stringify(this);
                    },
                  }))),
                m = ((r.format = {}).OpenSSL = {
                  stringify: function (e) {
                    var t = e.ciphertext,
                      r = e.salt;
                    return (r ? i.create([1398893684, 1701076831]).concat(r).concat(t) : t).toString(c);
                  },
                  parse: function (e) {
                    var t,
                      r = c.parse(e),
                      a = r.words;
                    return (
                      1398893684 == a[0] &&
                        1701076831 == a[1] &&
                        ((t = i.create(a.slice(2, 4))), a.splice(0, 4), (r.sigBytes -= 16)),
                      b.create({ ciphertext: r, salt: t })
                    );
                  },
                }),
                g = (a.SerializableCipher = o.extend({
                  cfg: o.extend({ format: m }),
                  encrypt: function (e, t, r, a) {
                    a = this.cfg.extend(a);
                    var o = e.createEncryptor(r, a),
                      i = o.finalize(t),
                      n = o.cfg;
                    return b.create({
                      ciphertext: i,
                      key: r,
                      iv: n.iv,
                      algorithm: e,
                      mode: n.mode,
                      padding: n.padding,
                      blockSize: e.blockSize,
                      formatter: a.format,
                    });
                  },
                  decrypt: function (e, t, r, a) {
                    return (
                      (a = this.cfg.extend(a)),
                      (t = this._parse(t, a.format)),
                      e.createDecryptor(r, a).finalize(t.ciphertext)
                    );
                  },
                  _parse: function (e, t) {
                    return 'string' == typeof e ? t.parse(e, this) : e;
                  },
                })),
                v = ((r.kdf = {}).OpenSSL = {
                  execute: function (e, t, r, a, o) {
                    if ((a || (a = i.random(8)), o)) n = l.create({ keySize: t + r, hasher: o }).compute(e, a);
                    else var n = l.create({ keySize: t + r }).compute(e, a);
                    var s = i.create(n.words.slice(t), 4 * r);
                    return (n.sigBytes = 4 * t), b.create({ key: n, iv: s, salt: a });
                  },
                }),
                y = (a.PasswordBasedCipher = g.extend({
                  cfg: g.cfg.extend({ kdf: v }),
                  encrypt: function (e, t, r, a) {
                    var o = (a = this.cfg.extend(a)).kdf.execute(r, e.keySize, e.ivSize, a.salt, a.hasher);
                    a.iv = o.iv;
                    var i = g.encrypt.call(this, e, t, o.key, a);
                    return i.mixIn(o), i;
                  },
                  decrypt: function (e, t, r, a) {
                    (a = this.cfg.extend(a)), (t = this._parse(t, a.format));
                    var o = a.kdf.execute(r, e.keySize, e.ivSize, t.salt, a.hasher);
                    return (a.iv = o.iv), g.decrypt.call(this, e, t, o.key, a);
                  },
                }));
            })();
        })(r(4488), r(8211));
      },
      4488: function (e, t, r) {
        e.exports = (function () {
          var e =
            e ||
            (function (e, t) {
              var a;
              if (
                ('undefined' !== typeof window && window.crypto && (a = window.crypto),
                'undefined' !== typeof self && self.crypto && (a = self.crypto),
                'undefined' !== typeof globalThis && globalThis.crypto && (a = globalThis.crypto),
                !a && 'undefined' !== typeof window && window.msCrypto && (a = window.msCrypto),
                !a && 'undefined' !== typeof r.g && r.g.crypto && (a = r.g.crypto),
                !a)
              )
                try {
                  a = r(477);
                } catch (m) {}
              var o = function () {
                  if (a) {
                    if ('function' === typeof a.getRandomValues)
                      try {
                        return a.getRandomValues(new Uint32Array(1))[0];
                      } catch (m) {}
                    if ('function' === typeof a.randomBytes)
                      try {
                        return a.randomBytes(4).readInt32LE();
                      } catch (m) {}
                  }
                  throw new Error('Native crypto module could not be used to get secure random number.');
                },
                i =
                  Object.create ||
                  (function () {
                    function e() {}
                    return function (t) {
                      var r;
                      return (e.prototype = t), (r = new e()), (e.prototype = null), r;
                    };
                  })(),
                n = {},
                s = (n.lib = {}),
                c = (s.Base = {
                  extend: function (e) {
                    var t = i(this);
                    return (
                      e && t.mixIn(e),
                      (t.hasOwnProperty('init') && this.init !== t.init) ||
                        (t.init = function () {
                          t.$super.init.apply(this, arguments);
                        }),
                      (t.init.prototype = t),
                      (t.$super = this),
                      t
                    );
                  },
                  create: function () {
                    var e = this.extend();
                    return e.init.apply(e, arguments), e;
                  },
                  init: function () {},
                  mixIn: function (e) {
                    for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
                    e.hasOwnProperty('toString') && (this.toString = e.toString);
                  },
                  clone: function () {
                    return this.init.prototype.extend(this);
                  },
                }),
                l = (s.WordArray = c.extend({
                  init: function (e, r) {
                    (e = this.words = e || []), (this.sigBytes = r != t ? r : 4 * e.length);
                  },
                  toString: function (e) {
                    return (e || d).stringify(this);
                  },
                  concat: function (e) {
                    var t = this.words,
                      r = e.words,
                      a = this.sigBytes,
                      o = e.sigBytes;
                    if ((this.clamp(), a % 4))
                      for (var i = 0; i < o; i++) {
                        var n = (r[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
                        t[(a + i) >>> 2] |= n << (24 - ((a + i) % 4) * 8);
                      }
                    else for (var s = 0; s < o; s += 4) t[(a + s) >>> 2] = r[s >>> 2];
                    return (this.sigBytes += o), this;
                  },
                  clamp: function () {
                    var t = this.words,
                      r = this.sigBytes;
                    (t[r >>> 2] &= 4294967295 << (32 - (r % 4) * 8)), (t.length = e.ceil(r / 4));
                  },
                  clone: function () {
                    var e = c.clone.call(this);
                    return (e.words = this.words.slice(0)), e;
                  },
                  random: function (e) {
                    for (var t = [], r = 0; r < e; r += 4) t.push(o());
                    return new l.init(t, e);
                  },
                })),
                u = (n.enc = {}),
                d = (u.Hex = {
                  stringify: function (e) {
                    for (var t = e.words, r = e.sigBytes, a = [], o = 0; o < r; o++) {
                      var i = (t[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
                      a.push((i >>> 4).toString(16)), a.push((15 & i).toString(16));
                    }
                    return a.join('');
                  },
                  parse: function (e) {
                    for (var t = e.length, r = [], a = 0; a < t; a += 2)
                      r[a >>> 3] |= parseInt(e.substr(a, 2), 16) << (24 - (a % 8) * 4);
                    return new l.init(r, t / 2);
                  },
                }),
                h = (u.Latin1 = {
                  stringify: function (e) {
                    for (var t = e.words, r = e.sigBytes, a = [], o = 0; o < r; o++) {
                      var i = (t[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
                      a.push(String.fromCharCode(i));
                    }
                    return a.join('');
                  },
                  parse: function (e) {
                    for (var t = e.length, r = [], a = 0; a < t; a++)
                      r[a >>> 2] |= (255 & e.charCodeAt(a)) << (24 - (a % 4) * 8);
                    return new l.init(r, t);
                  },
                }),
                f = (u.Utf8 = {
                  stringify: function (e) {
                    try {
                      return decodeURIComponent(escape(h.stringify(e)));
                    } catch (t) {
                      throw new Error('Malformed UTF-8 data');
                    }
                  },
                  parse: function (e) {
                    return h.parse(unescape(encodeURIComponent(e)));
                  },
                }),
                p = (s.BufferedBlockAlgorithm = c.extend({
                  reset: function () {
                    (this._data = new l.init()), (this._nDataBytes = 0);
                  },
                  _append: function (e) {
                    'string' == typeof e && (e = f.parse(e)), this._data.concat(e), (this._nDataBytes += e.sigBytes);
                  },
                  _process: function (t) {
                    var r,
                      a = this._data,
                      o = a.words,
                      i = a.sigBytes,
                      n = this.blockSize,
                      s = i / (4 * n),
                      c = (s = t ? e.ceil(s) : e.max((0 | s) - this._minBufferSize, 0)) * n,
                      u = e.min(4 * c, i);
                    if (c) {
                      for (var d = 0; d < c; d += n) this._doProcessBlock(o, d);
                      (r = o.splice(0, c)), (a.sigBytes -= u);
                    }
                    return new l.init(r, u);
                  },
                  clone: function () {
                    var e = c.clone.call(this);
                    return (e._data = this._data.clone()), e;
                  },
                  _minBufferSize: 0,
                })),
                b =
                  ((s.Hasher = p.extend({
                    cfg: c.extend(),
                    init: function (e) {
                      (this.cfg = this.cfg.extend(e)), this.reset();
                    },
                    reset: function () {
                      p.reset.call(this), this._doReset();
                    },
                    update: function (e) {
                      return this._append(e), this._process(), this;
                    },
                    finalize: function (e) {
                      return e && this._append(e), this._doFinalize();
                    },
                    blockSize: 16,
                    _createHelper: function (e) {
                      return function (t, r) {
                        return new e.init(r).finalize(t);
                      };
                    },
                    _createHmacHelper: function (e) {
                      return function (t, r) {
                        return new b.HMAC.init(e, r).finalize(t);
                      };
                    },
                  })),
                  (n.algo = {}));
              return n;
            })(Math);
          return e;
        })();
      },
      8523: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.WordArray;
              function a(e, t, a) {
                for (var o = [], i = 0, n = 0; n < t; n++)
                  if (n % 4) {
                    var s = (a[e.charCodeAt(n - 1)] << ((n % 4) * 2)) | (a[e.charCodeAt(n)] >>> (6 - (n % 4) * 2));
                    (o[i >>> 2] |= s << (24 - (i % 4) * 8)), i++;
                  }
                return r.create(o, i);
              }
              t.enc.Base64 = {
                stringify: function (e) {
                  var t = e.words,
                    r = e.sigBytes,
                    a = this._map;
                  e.clamp();
                  for (var o = [], i = 0; i < r; i += 3)
                    for (
                      var n =
                          (((t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255) << 16) |
                          (((t[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 255) << 8) |
                          ((t[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 255),
                        s = 0;
                      s < 4 && i + 0.75 * s < r;
                      s++
                    )
                      o.push(a.charAt((n >>> (6 * (3 - s))) & 63));
                  var c = a.charAt(64);
                  if (c) for (; o.length % 4; ) o.push(c);
                  return o.join('');
                },
                parse: function (e) {
                  var t = e.length,
                    r = this._map,
                    o = this._reverseMap;
                  if (!o) {
                    o = this._reverseMap = [];
                    for (var i = 0; i < r.length; i++) o[r.charCodeAt(i)] = i;
                  }
                  var n = r.charAt(64);
                  if (n) {
                    var s = e.indexOf(n);
                    -1 !== s && (t = s);
                  }
                  return a(e, t, o);
                },
                _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
              };
            })(),
            e.enc.Base64
          );
        })(r(4488));
      },
      4646: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.WordArray;
              function a(e, t, a) {
                for (var o = [], i = 0, n = 0; n < t; n++)
                  if (n % 4) {
                    var s = (a[e.charCodeAt(n - 1)] << ((n % 4) * 2)) | (a[e.charCodeAt(n)] >>> (6 - (n % 4) * 2));
                    (o[i >>> 2] |= s << (24 - (i % 4) * 8)), i++;
                  }
                return r.create(o, i);
              }
              t.enc.Base64url = {
                stringify: function (e, t) {
                  void 0 === t && (t = !0);
                  var r = e.words,
                    a = e.sigBytes,
                    o = t ? this._safe_map : this._map;
                  e.clamp();
                  for (var i = [], n = 0; n < a; n += 3)
                    for (
                      var s =
                          (((r[n >>> 2] >>> (24 - (n % 4) * 8)) & 255) << 16) |
                          (((r[(n + 1) >>> 2] >>> (24 - ((n + 1) % 4) * 8)) & 255) << 8) |
                          ((r[(n + 2) >>> 2] >>> (24 - ((n + 2) % 4) * 8)) & 255),
                        c = 0;
                      c < 4 && n + 0.75 * c < a;
                      c++
                    )
                      i.push(o.charAt((s >>> (6 * (3 - c))) & 63));
                  var l = o.charAt(64);
                  if (l) for (; i.length % 4; ) i.push(l);
                  return i.join('');
                },
                parse: function (e, t) {
                  void 0 === t && (t = !0);
                  var r = e.length,
                    o = t ? this._safe_map : this._map,
                    i = this._reverseMap;
                  if (!i) {
                    i = this._reverseMap = [];
                    for (var n = 0; n < o.length; n++) i[o.charCodeAt(n)] = n;
                  }
                  var s = o.charAt(64);
                  if (s) {
                    var c = e.indexOf(s);
                    -1 !== c && (r = c);
                  }
                  return a(e, r, i);
                },
                _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
                _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
              };
            })(),
            e.enc.Base64url
          );
        })(r(4488));
      },
      8168: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.WordArray,
                a = t.enc;
              function o(e) {
                return ((e << 8) & 4278255360) | ((e >>> 8) & 16711935);
              }
              (a.Utf16 = a.Utf16BE =
                {
                  stringify: function (e) {
                    for (var t = e.words, r = e.sigBytes, a = [], o = 0; o < r; o += 2) {
                      var i = (t[o >>> 2] >>> (16 - (o % 4) * 8)) & 65535;
                      a.push(String.fromCharCode(i));
                    }
                    return a.join('');
                  },
                  parse: function (e) {
                    for (var t = e.length, a = [], o = 0; o < t; o++)
                      a[o >>> 1] |= e.charCodeAt(o) << (16 - (o % 2) * 16);
                    return r.create(a, 2 * t);
                  },
                }),
                (a.Utf16LE = {
                  stringify: function (e) {
                    for (var t = e.words, r = e.sigBytes, a = [], i = 0; i < r; i += 2) {
                      var n = o((t[i >>> 2] >>> (16 - (i % 4) * 8)) & 65535);
                      a.push(String.fromCharCode(n));
                    }
                    return a.join('');
                  },
                  parse: function (e) {
                    for (var t = e.length, a = [], i = 0; i < t; i++)
                      a[i >>> 1] |= o(e.charCodeAt(i) << (16 - (i % 2) * 16));
                    return r.create(a, 2 * t);
                  },
                });
            })(),
            e.enc.Utf16
          );
        })(r(4488));
      },
      8211: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib,
                a = r.Base,
                o = r.WordArray,
                i = t.algo,
                n = i.MD5,
                s = (i.EvpKDF = a.extend({
                  cfg: a.extend({ keySize: 4, hasher: n, iterations: 1 }),
                  init: function (e) {
                    this.cfg = this.cfg.extend(e);
                  },
                  compute: function (e, t) {
                    for (
                      var r,
                        a = this.cfg,
                        i = a.hasher.create(),
                        n = o.create(),
                        s = n.words,
                        c = a.keySize,
                        l = a.iterations;
                      s.length < c;

                    ) {
                      r && i.update(r), (r = i.update(e).finalize(t)), i.reset();
                      for (var u = 1; u < l; u++) (r = i.finalize(r)), i.reset();
                      n.concat(r);
                    }
                    return (n.sigBytes = 4 * c), n;
                  },
                }));
              t.EvpKDF = function (e, t, r) {
                return s.create(r).compute(e, t);
              };
            })(),
            e.EvpKDF
          );
        })(r(4488), r(2002), r(4220));
      },
      4708: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.CipherParams,
                a = t.enc.Hex;
              t.format.Hex = {
                stringify: function (e) {
                  return e.ciphertext.toString(a);
                },
                parse: function (e) {
                  var t = a.parse(e);
                  return r.create({ ciphertext: t });
                },
              };
            })(),
            e.format.Hex
          );
        })(r(4488), r(2238));
      },
      4220: function (e, t, r) {
        e.exports = (function (e) {
          !(function () {
            var t = e,
              r = t.lib.Base,
              a = t.enc.Utf8;
            t.algo.HMAC = r.extend({
              init: function (e, t) {
                (e = this._hasher = new e.init()), 'string' == typeof t && (t = a.parse(t));
                var r = e.blockSize,
                  o = 4 * r;
                t.sigBytes > o && (t = e.finalize(t)), t.clamp();
                for (
                  var i = (this._oKey = t.clone()), n = (this._iKey = t.clone()), s = i.words, c = n.words, l = 0;
                  l < r;
                  l++
                )
                  (s[l] ^= 1549556828), (c[l] ^= 909522486);
                (i.sigBytes = n.sigBytes = o), this.reset();
              },
              reset: function () {
                var e = this._hasher;
                e.reset(), e.update(this._iKey);
              },
              update: function (e) {
                return this._hasher.update(e), this;
              },
              finalize: function (e) {
                var t = this._hasher,
                  r = t.finalize(e);
                return t.reset(), t.finalize(this._oKey.clone().concat(r));
              },
            });
          })();
        })(r(4488));
      },
      6111: function (e, t, r) {
        e.exports = (function (e) {
          return e;
        })(
          r(4488),
          r(9749),
          r(4503),
          r(8168),
          r(8523),
          r(4646),
          r(4199),
          r(2002),
          r(6368),
          r(1641),
          r(7061),
          r(9092),
          r(6600),
          r(7423),
          r(4220),
          r(3930),
          r(8211),
          r(2238),
          r(1112),
          r(7962),
          r(8049),
          r(6380),
          r(8099),
          r(1884),
          r(9132),
          r(4423),
          r(548),
          r(4087),
          r(4708),
          r(7780),
          r(9475),
          r(9638),
          r(8875),
          r(1659),
          r(6501),
        );
      },
      4503: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              if ('function' == typeof ArrayBuffer) {
                var t = e.lib.WordArray,
                  r = t.init,
                  a = (t.init = function (e) {
                    if (
                      (e instanceof ArrayBuffer && (e = new Uint8Array(e)),
                      (e instanceof Int8Array ||
                        ('undefined' !== typeof Uint8ClampedArray && e instanceof Uint8ClampedArray) ||
                        e instanceof Int16Array ||
                        e instanceof Uint16Array ||
                        e instanceof Int32Array ||
                        e instanceof Uint32Array ||
                        e instanceof Float32Array ||
                        e instanceof Float64Array) &&
                        (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)),
                      e instanceof Uint8Array)
                    ) {
                      for (var t = e.byteLength, a = [], o = 0; o < t; o++) a[o >>> 2] |= e[o] << (24 - (o % 4) * 8);
                      r.call(this, a, t);
                    } else r.apply(this, arguments);
                  });
                a.prototype = t;
              }
            })(),
            e.lib.WordArray
          );
        })(r(4488));
      },
      4199: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function (t) {
              var r = e,
                a = r.lib,
                o = a.WordArray,
                i = a.Hasher,
                n = r.algo,
                s = [];
              !(function () {
                for (var e = 0; e < 64; e++) s[e] = (4294967296 * t.abs(t.sin(e + 1))) | 0;
              })();
              var c = (n.MD5 = i.extend({
                _doReset: function () {
                  this._hash = new o.init([1732584193, 4023233417, 2562383102, 271733878]);
                },
                _doProcessBlock: function (e, t) {
                  for (var r = 0; r < 16; r++) {
                    var a = t + r,
                      o = e[a];
                    e[a] = (16711935 & ((o << 8) | (o >>> 24))) | (4278255360 & ((o << 24) | (o >>> 8)));
                  }
                  var i = this._hash.words,
                    n = e[t + 0],
                    c = e[t + 1],
                    f = e[t + 2],
                    p = e[t + 3],
                    b = e[t + 4],
                    m = e[t + 5],
                    g = e[t + 6],
                    v = e[t + 7],
                    y = e[t + 8],
                    w = e[t + 9],
                    k = e[t + 10],
                    E = e[t + 11],
                    S = e[t + 12],
                    x = e[t + 13],
                    _ = e[t + 14],
                    A = e[t + 15],
                    O = i[0],
                    P = i[1],
                    I = i[2],
                    B = i[3];
                  (O = l(O, P, I, B, n, 7, s[0])),
                    (B = l(B, O, P, I, c, 12, s[1])),
                    (I = l(I, B, O, P, f, 17, s[2])),
                    (P = l(P, I, B, O, p, 22, s[3])),
                    (O = l(O, P, I, B, b, 7, s[4])),
                    (B = l(B, O, P, I, m, 12, s[5])),
                    (I = l(I, B, O, P, g, 17, s[6])),
                    (P = l(P, I, B, O, v, 22, s[7])),
                    (O = l(O, P, I, B, y, 7, s[8])),
                    (B = l(B, O, P, I, w, 12, s[9])),
                    (I = l(I, B, O, P, k, 17, s[10])),
                    (P = l(P, I, B, O, E, 22, s[11])),
                    (O = l(O, P, I, B, S, 7, s[12])),
                    (B = l(B, O, P, I, x, 12, s[13])),
                    (I = l(I, B, O, P, _, 17, s[14])),
                    (O = u(O, (P = l(P, I, B, O, A, 22, s[15])), I, B, c, 5, s[16])),
                    (B = u(B, O, P, I, g, 9, s[17])),
                    (I = u(I, B, O, P, E, 14, s[18])),
                    (P = u(P, I, B, O, n, 20, s[19])),
                    (O = u(O, P, I, B, m, 5, s[20])),
                    (B = u(B, O, P, I, k, 9, s[21])),
                    (I = u(I, B, O, P, A, 14, s[22])),
                    (P = u(P, I, B, O, b, 20, s[23])),
                    (O = u(O, P, I, B, w, 5, s[24])),
                    (B = u(B, O, P, I, _, 9, s[25])),
                    (I = u(I, B, O, P, p, 14, s[26])),
                    (P = u(P, I, B, O, y, 20, s[27])),
                    (O = u(O, P, I, B, x, 5, s[28])),
                    (B = u(B, O, P, I, f, 9, s[29])),
                    (I = u(I, B, O, P, v, 14, s[30])),
                    (O = d(O, (P = u(P, I, B, O, S, 20, s[31])), I, B, m, 4, s[32])),
                    (B = d(B, O, P, I, y, 11, s[33])),
                    (I = d(I, B, O, P, E, 16, s[34])),
                    (P = d(P, I, B, O, _, 23, s[35])),
                    (O = d(O, P, I, B, c, 4, s[36])),
                    (B = d(B, O, P, I, b, 11, s[37])),
                    (I = d(I, B, O, P, v, 16, s[38])),
                    (P = d(P, I, B, O, k, 23, s[39])),
                    (O = d(O, P, I, B, x, 4, s[40])),
                    (B = d(B, O, P, I, n, 11, s[41])),
                    (I = d(I, B, O, P, p, 16, s[42])),
                    (P = d(P, I, B, O, g, 23, s[43])),
                    (O = d(O, P, I, B, w, 4, s[44])),
                    (B = d(B, O, P, I, S, 11, s[45])),
                    (I = d(I, B, O, P, A, 16, s[46])),
                    (O = h(O, (P = d(P, I, B, O, f, 23, s[47])), I, B, n, 6, s[48])),
                    (B = h(B, O, P, I, v, 10, s[49])),
                    (I = h(I, B, O, P, _, 15, s[50])),
                    (P = h(P, I, B, O, m, 21, s[51])),
                    (O = h(O, P, I, B, S, 6, s[52])),
                    (B = h(B, O, P, I, p, 10, s[53])),
                    (I = h(I, B, O, P, k, 15, s[54])),
                    (P = h(P, I, B, O, c, 21, s[55])),
                    (O = h(O, P, I, B, y, 6, s[56])),
                    (B = h(B, O, P, I, A, 10, s[57])),
                    (I = h(I, B, O, P, g, 15, s[58])),
                    (P = h(P, I, B, O, x, 21, s[59])),
                    (O = h(O, P, I, B, b, 6, s[60])),
                    (B = h(B, O, P, I, E, 10, s[61])),
                    (I = h(I, B, O, P, f, 15, s[62])),
                    (P = h(P, I, B, O, w, 21, s[63])),
                    (i[0] = (i[0] + O) | 0),
                    (i[1] = (i[1] + P) | 0),
                    (i[2] = (i[2] + I) | 0),
                    (i[3] = (i[3] + B) | 0);
                },
                _doFinalize: function () {
                  var e = this._data,
                    r = e.words,
                    a = 8 * this._nDataBytes,
                    o = 8 * e.sigBytes;
                  r[o >>> 5] |= 128 << (24 - (o % 32));
                  var i = t.floor(a / 4294967296),
                    n = a;
                  (r[15 + (((o + 64) >>> 9) << 4)] =
                    (16711935 & ((i << 8) | (i >>> 24))) | (4278255360 & ((i << 24) | (i >>> 8)))),
                    (r[14 + (((o + 64) >>> 9) << 4)] =
                      (16711935 & ((n << 8) | (n >>> 24))) | (4278255360 & ((n << 24) | (n >>> 8)))),
                    (e.sigBytes = 4 * (r.length + 1)),
                    this._process();
                  for (var s = this._hash, c = s.words, l = 0; l < 4; l++) {
                    var u = c[l];
                    c[l] = (16711935 & ((u << 8) | (u >>> 24))) | (4278255360 & ((u << 24) | (u >>> 8)));
                  }
                  return s;
                },
                clone: function () {
                  var e = i.clone.call(this);
                  return (e._hash = this._hash.clone()), e;
                },
              }));
              function l(e, t, r, a, o, i, n) {
                var s = e + ((t & r) | (~t & a)) + o + n;
                return ((s << i) | (s >>> (32 - i))) + t;
              }
              function u(e, t, r, a, o, i, n) {
                var s = e + ((t & a) | (r & ~a)) + o + n;
                return ((s << i) | (s >>> (32 - i))) + t;
              }
              function d(e, t, r, a, o, i, n) {
                var s = e + (t ^ r ^ a) + o + n;
                return ((s << i) | (s >>> (32 - i))) + t;
              }
              function h(e, t, r, a, o, i, n) {
                var s = e + (r ^ (t | ~a)) + o + n;
                return ((s << i) | (s >>> (32 - i))) + t;
              }
              (r.MD5 = i._createHelper(c)), (r.HmacMD5 = i._createHmacHelper(c));
            })(Math),
            e.MD5
          );
        })(r(4488));
      },
      1112: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.mode.CFB = (function () {
              var t = e.lib.BlockCipherMode.extend();
              function r(e, t, r, a) {
                var o,
                  i = this._iv;
                i ? ((o = i.slice(0)), (this._iv = void 0)) : (o = this._prevBlock), a.encryptBlock(o, 0);
                for (var n = 0; n < r; n++) e[t + n] ^= o[n];
              }
              return (
                (t.Encryptor = t.extend({
                  processBlock: function (e, t) {
                    var a = this._cipher,
                      o = a.blockSize;
                    r.call(this, e, t, o, a), (this._prevBlock = e.slice(t, t + o));
                  },
                })),
                (t.Decryptor = t.extend({
                  processBlock: function (e, t) {
                    var a = this._cipher,
                      o = a.blockSize,
                      i = e.slice(t, t + o);
                    r.call(this, e, t, o, a), (this._prevBlock = i);
                  },
                })),
                t
              );
            })()),
            e.mode.CFB
          );
        })(r(4488), r(2238));
      },
      8049: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.mode.CTRGladman = (function () {
              var t = e.lib.BlockCipherMode.extend();
              function r(e) {
                if (255 === ((e >> 24) & 255)) {
                  var t = (e >> 16) & 255,
                    r = (e >> 8) & 255,
                    a = 255 & e;
                  255 === t ? ((t = 0), 255 === r ? ((r = 0), 255 === a ? (a = 0) : ++a) : ++r) : ++t,
                    (e = 0),
                    (e += t << 16),
                    (e += r << 8),
                    (e += a);
                } else e += 1 << 24;
                return e;
              }
              function a(e) {
                return 0 === (e[0] = r(e[0])) && (e[1] = r(e[1])), e;
              }
              var o = (t.Encryptor = t.extend({
                processBlock: function (e, t) {
                  var r = this._cipher,
                    o = r.blockSize,
                    i = this._iv,
                    n = this._counter;
                  i && ((n = this._counter = i.slice(0)), (this._iv = void 0)), a(n);
                  var s = n.slice(0);
                  r.encryptBlock(s, 0);
                  for (var c = 0; c < o; c++) e[t + c] ^= s[c];
                },
              }));
              return (t.Decryptor = o), t;
            })()),
            e.mode.CTRGladman
          );
        })(r(4488), r(2238));
      },
      7962: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.mode.CTR = (function () {
              var t = e.lib.BlockCipherMode.extend(),
                r = (t.Encryptor = t.extend({
                  processBlock: function (e, t) {
                    var r = this._cipher,
                      a = r.blockSize,
                      o = this._iv,
                      i = this._counter;
                    o && ((i = this._counter = o.slice(0)), (this._iv = void 0));
                    var n = i.slice(0);
                    r.encryptBlock(n, 0), (i[a - 1] = (i[a - 1] + 1) | 0);
                    for (var s = 0; s < a; s++) e[t + s] ^= n[s];
                  },
                }));
              return (t.Decryptor = r), t;
            })()),
            e.mode.CTR
          );
        })(r(4488), r(2238));
      },
      8099: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.mode.ECB = (function () {
              var t = e.lib.BlockCipherMode.extend();
              return (
                (t.Encryptor = t.extend({
                  processBlock: function (e, t) {
                    this._cipher.encryptBlock(e, t);
                  },
                })),
                (t.Decryptor = t.extend({
                  processBlock: function (e, t) {
                    this._cipher.decryptBlock(e, t);
                  },
                })),
                t
              );
            })()),
            e.mode.ECB
          );
        })(r(4488), r(2238));
      },
      6380: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.mode.OFB = (function () {
              var t = e.lib.BlockCipherMode.extend(),
                r = (t.Encryptor = t.extend({
                  processBlock: function (e, t) {
                    var r = this._cipher,
                      a = r.blockSize,
                      o = this._iv,
                      i = this._keystream;
                    o && ((i = this._keystream = o.slice(0)), (this._iv = void 0)), r.encryptBlock(i, 0);
                    for (var n = 0; n < a; n++) e[t + n] ^= i[n];
                  },
                }));
              return (t.Decryptor = r), t;
            })()),
            e.mode.OFB
          );
        })(r(4488), r(2238));
      },
      1884: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.pad.AnsiX923 = {
              pad: function (e, t) {
                var r = e.sigBytes,
                  a = 4 * t,
                  o = a - (r % a),
                  i = r + o - 1;
                e.clamp(), (e.words[i >>> 2] |= o << (24 - (i % 4) * 8)), (e.sigBytes += o);
              },
              unpad: function (e) {
                var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
                e.sigBytes -= t;
              },
            }),
            e.pad.Ansix923
          );
        })(r(4488), r(2238));
      },
      9132: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.pad.Iso10126 = {
              pad: function (t, r) {
                var a = 4 * r,
                  o = a - (t.sigBytes % a);
                t.concat(e.lib.WordArray.random(o - 1)).concat(e.lib.WordArray.create([o << 24], 1));
              },
              unpad: function (e) {
                var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
                e.sigBytes -= t;
              },
            }),
            e.pad.Iso10126
          );
        })(r(4488), r(2238));
      },
      4423: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.pad.Iso97971 = {
              pad: function (t, r) {
                t.concat(e.lib.WordArray.create([2147483648], 1)), e.pad.ZeroPadding.pad(t, r);
              },
              unpad: function (t) {
                e.pad.ZeroPadding.unpad(t), t.sigBytes--;
              },
            }),
            e.pad.Iso97971
          );
        })(r(4488), r(2238));
      },
      4087: function (e, t, r) {
        e.exports = (function (e) {
          return (e.pad.NoPadding = { pad: function () {}, unpad: function () {} }), e.pad.NoPadding;
        })(r(4488), r(2238));
      },
      548: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (e.pad.ZeroPadding = {
              pad: function (e, t) {
                var r = 4 * t;
                e.clamp(), (e.sigBytes += r - (e.sigBytes % r || r));
              },
              unpad: function (e) {
                var t = e.words,
                  r = e.sigBytes - 1;
                for (r = e.sigBytes - 1; r >= 0; r--)
                  if ((t[r >>> 2] >>> (24 - (r % 4) * 8)) & 255) {
                    e.sigBytes = r + 1;
                    break;
                  }
              },
            }),
            e.pad.ZeroPadding
          );
        })(r(4488), r(2238));
      },
      3930: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib,
                a = r.Base,
                o = r.WordArray,
                i = t.algo,
                n = i.SHA256,
                s = i.HMAC,
                c = (i.PBKDF2 = a.extend({
                  cfg: a.extend({ keySize: 4, hasher: n, iterations: 25e4 }),
                  init: function (e) {
                    this.cfg = this.cfg.extend(e);
                  },
                  compute: function (e, t) {
                    for (
                      var r = this.cfg,
                        a = s.create(r.hasher, e),
                        i = o.create(),
                        n = o.create([1]),
                        c = i.words,
                        l = n.words,
                        u = r.keySize,
                        d = r.iterations;
                      c.length < u;

                    ) {
                      var h = a.update(t).finalize(n);
                      a.reset();
                      for (var f = h.words, p = f.length, b = h, m = 1; m < d; m++) {
                        (b = a.finalize(b)), a.reset();
                        for (var g = b.words, v = 0; v < p; v++) f[v] ^= g[v];
                      }
                      i.concat(h), l[0]++;
                    }
                    return (i.sigBytes = 4 * u), i;
                  },
                }));
              t.PBKDF2 = function (e, t, r) {
                return c.create(r).compute(e, t);
              };
            })(),
            e.PBKDF2
          );
        })(r(4488), r(6368), r(4220));
      },
      1659: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.StreamCipher,
                a = t.algo,
                o = [],
                i = [],
                n = [],
                s = (a.RabbitLegacy = r.extend({
                  _doReset: function () {
                    var e = this._key.words,
                      t = this.cfg.iv,
                      r = (this._X = [
                        e[0],
                        (e[3] << 16) | (e[2] >>> 16),
                        e[1],
                        (e[0] << 16) | (e[3] >>> 16),
                        e[2],
                        (e[1] << 16) | (e[0] >>> 16),
                        e[3],
                        (e[2] << 16) | (e[1] >>> 16),
                      ]),
                      a = (this._C = [
                        (e[2] << 16) | (e[2] >>> 16),
                        (4294901760 & e[0]) | (65535 & e[1]),
                        (e[3] << 16) | (e[3] >>> 16),
                        (4294901760 & e[1]) | (65535 & e[2]),
                        (e[0] << 16) | (e[0] >>> 16),
                        (4294901760 & e[2]) | (65535 & e[3]),
                        (e[1] << 16) | (e[1] >>> 16),
                        (4294901760 & e[3]) | (65535 & e[0]),
                      ]);
                    this._b = 0;
                    for (var o = 0; o < 4; o++) c.call(this);
                    for (o = 0; o < 8; o++) a[o] ^= r[(o + 4) & 7];
                    if (t) {
                      var i = t.words,
                        n = i[0],
                        s = i[1],
                        l = (16711935 & ((n << 8) | (n >>> 24))) | (4278255360 & ((n << 24) | (n >>> 8))),
                        u = (16711935 & ((s << 8) | (s >>> 24))) | (4278255360 & ((s << 24) | (s >>> 8))),
                        d = (l >>> 16) | (4294901760 & u),
                        h = (u << 16) | (65535 & l);
                      for (
                        a[0] ^= l, a[1] ^= d, a[2] ^= u, a[3] ^= h, a[4] ^= l, a[5] ^= d, a[6] ^= u, a[7] ^= h, o = 0;
                        o < 4;
                        o++
                      )
                        c.call(this);
                    }
                  },
                  _doProcessBlock: function (e, t) {
                    var r = this._X;
                    c.call(this),
                      (o[0] = r[0] ^ (r[5] >>> 16) ^ (r[3] << 16)),
                      (o[1] = r[2] ^ (r[7] >>> 16) ^ (r[5] << 16)),
                      (o[2] = r[4] ^ (r[1] >>> 16) ^ (r[7] << 16)),
                      (o[3] = r[6] ^ (r[3] >>> 16) ^ (r[1] << 16));
                    for (var a = 0; a < 4; a++)
                      (o[a] =
                        (16711935 & ((o[a] << 8) | (o[a] >>> 24))) | (4278255360 & ((o[a] << 24) | (o[a] >>> 8)))),
                        (e[t + a] ^= o[a]);
                  },
                  blockSize: 4,
                  ivSize: 2,
                }));
              function c() {
                for (var e = this._X, t = this._C, r = 0; r < 8; r++) i[r] = t[r];
                for (
                  t[0] = (t[0] + 1295307597 + this._b) | 0,
                    t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < i[0] >>> 0 ? 1 : 0)) | 0,
                    t[2] = (t[2] + 886263092 + (t[1] >>> 0 < i[1] >>> 0 ? 1 : 0)) | 0,
                    t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < i[2] >>> 0 ? 1 : 0)) | 0,
                    t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < i[3] >>> 0 ? 1 : 0)) | 0,
                    t[5] = (t[5] + 886263092 + (t[4] >>> 0 < i[4] >>> 0 ? 1 : 0)) | 0,
                    t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < i[5] >>> 0 ? 1 : 0)) | 0,
                    t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < i[6] >>> 0 ? 1 : 0)) | 0,
                    this._b = t[7] >>> 0 < i[7] >>> 0 ? 1 : 0,
                    r = 0;
                  r < 8;
                  r++
                ) {
                  var a = e[r] + t[r],
                    o = 65535 & a,
                    s = a >>> 16,
                    c = ((((o * o) >>> 17) + o * s) >>> 15) + s * s,
                    l = (((4294901760 & a) * a) | 0) + (((65535 & a) * a) | 0);
                  n[r] = c ^ l;
                }
                (e[0] = (n[0] + ((n[7] << 16) | (n[7] >>> 16)) + ((n[6] << 16) | (n[6] >>> 16))) | 0),
                  (e[1] = (n[1] + ((n[0] << 8) | (n[0] >>> 24)) + n[7]) | 0),
                  (e[2] = (n[2] + ((n[1] << 16) | (n[1] >>> 16)) + ((n[0] << 16) | (n[0] >>> 16))) | 0),
                  (e[3] = (n[3] + ((n[2] << 8) | (n[2] >>> 24)) + n[1]) | 0),
                  (e[4] = (n[4] + ((n[3] << 16) | (n[3] >>> 16)) + ((n[2] << 16) | (n[2] >>> 16))) | 0),
                  (e[5] = (n[5] + ((n[4] << 8) | (n[4] >>> 24)) + n[3]) | 0),
                  (e[6] = (n[6] + ((n[5] << 16) | (n[5] >>> 16)) + ((n[4] << 16) | (n[4] >>> 16))) | 0),
                  (e[7] = (n[7] + ((n[6] << 8) | (n[6] >>> 24)) + n[5]) | 0);
              }
              t.RabbitLegacy = r._createHelper(s);
            })(),
            e.RabbitLegacy
          );
        })(r(4488), r(8523), r(4199), r(8211), r(2238));
      },
      8875: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.StreamCipher,
                a = t.algo,
                o = [],
                i = [],
                n = [],
                s = (a.Rabbit = r.extend({
                  _doReset: function () {
                    for (var e = this._key.words, t = this.cfg.iv, r = 0; r < 4; r++)
                      e[r] = (16711935 & ((e[r] << 8) | (e[r] >>> 24))) | (4278255360 & ((e[r] << 24) | (e[r] >>> 8)));
                    var a = (this._X = [
                        e[0],
                        (e[3] << 16) | (e[2] >>> 16),
                        e[1],
                        (e[0] << 16) | (e[3] >>> 16),
                        e[2],
                        (e[1] << 16) | (e[0] >>> 16),
                        e[3],
                        (e[2] << 16) | (e[1] >>> 16),
                      ]),
                      o = (this._C = [
                        (e[2] << 16) | (e[2] >>> 16),
                        (4294901760 & e[0]) | (65535 & e[1]),
                        (e[3] << 16) | (e[3] >>> 16),
                        (4294901760 & e[1]) | (65535 & e[2]),
                        (e[0] << 16) | (e[0] >>> 16),
                        (4294901760 & e[2]) | (65535 & e[3]),
                        (e[1] << 16) | (e[1] >>> 16),
                        (4294901760 & e[3]) | (65535 & e[0]),
                      ]);
                    for (this._b = 0, r = 0; r < 4; r++) c.call(this);
                    for (r = 0; r < 8; r++) o[r] ^= a[(r + 4) & 7];
                    if (t) {
                      var i = t.words,
                        n = i[0],
                        s = i[1],
                        l = (16711935 & ((n << 8) | (n >>> 24))) | (4278255360 & ((n << 24) | (n >>> 8))),
                        u = (16711935 & ((s << 8) | (s >>> 24))) | (4278255360 & ((s << 24) | (s >>> 8))),
                        d = (l >>> 16) | (4294901760 & u),
                        h = (u << 16) | (65535 & l);
                      for (
                        o[0] ^= l, o[1] ^= d, o[2] ^= u, o[3] ^= h, o[4] ^= l, o[5] ^= d, o[6] ^= u, o[7] ^= h, r = 0;
                        r < 4;
                        r++
                      )
                        c.call(this);
                    }
                  },
                  _doProcessBlock: function (e, t) {
                    var r = this._X;
                    c.call(this),
                      (o[0] = r[0] ^ (r[5] >>> 16) ^ (r[3] << 16)),
                      (o[1] = r[2] ^ (r[7] >>> 16) ^ (r[5] << 16)),
                      (o[2] = r[4] ^ (r[1] >>> 16) ^ (r[7] << 16)),
                      (o[3] = r[6] ^ (r[3] >>> 16) ^ (r[1] << 16));
                    for (var a = 0; a < 4; a++)
                      (o[a] =
                        (16711935 & ((o[a] << 8) | (o[a] >>> 24))) | (4278255360 & ((o[a] << 24) | (o[a] >>> 8)))),
                        (e[t + a] ^= o[a]);
                  },
                  blockSize: 4,
                  ivSize: 2,
                }));
              function c() {
                for (var e = this._X, t = this._C, r = 0; r < 8; r++) i[r] = t[r];
                for (
                  t[0] = (t[0] + 1295307597 + this._b) | 0,
                    t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < i[0] >>> 0 ? 1 : 0)) | 0,
                    t[2] = (t[2] + 886263092 + (t[1] >>> 0 < i[1] >>> 0 ? 1 : 0)) | 0,
                    t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < i[2] >>> 0 ? 1 : 0)) | 0,
                    t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < i[3] >>> 0 ? 1 : 0)) | 0,
                    t[5] = (t[5] + 886263092 + (t[4] >>> 0 < i[4] >>> 0 ? 1 : 0)) | 0,
                    t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < i[5] >>> 0 ? 1 : 0)) | 0,
                    t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < i[6] >>> 0 ? 1 : 0)) | 0,
                    this._b = t[7] >>> 0 < i[7] >>> 0 ? 1 : 0,
                    r = 0;
                  r < 8;
                  r++
                ) {
                  var a = e[r] + t[r],
                    o = 65535 & a,
                    s = a >>> 16,
                    c = ((((o * o) >>> 17) + o * s) >>> 15) + s * s,
                    l = (((4294901760 & a) * a) | 0) + (((65535 & a) * a) | 0);
                  n[r] = c ^ l;
                }
                (e[0] = (n[0] + ((n[7] << 16) | (n[7] >>> 16)) + ((n[6] << 16) | (n[6] >>> 16))) | 0),
                  (e[1] = (n[1] + ((n[0] << 8) | (n[0] >>> 24)) + n[7]) | 0),
                  (e[2] = (n[2] + ((n[1] << 16) | (n[1] >>> 16)) + ((n[0] << 16) | (n[0] >>> 16))) | 0),
                  (e[3] = (n[3] + ((n[2] << 8) | (n[2] >>> 24)) + n[1]) | 0),
                  (e[4] = (n[4] + ((n[3] << 16) | (n[3] >>> 16)) + ((n[2] << 16) | (n[2] >>> 16))) | 0),
                  (e[5] = (n[5] + ((n[4] << 8) | (n[4] >>> 24)) + n[3]) | 0),
                  (e[6] = (n[6] + ((n[5] << 16) | (n[5] >>> 16)) + ((n[4] << 16) | (n[4] >>> 16))) | 0),
                  (e[7] = (n[7] + ((n[6] << 8) | (n[6] >>> 24)) + n[5]) | 0);
              }
              t.Rabbit = r._createHelper(s);
            })(),
            e.Rabbit
          );
        })(r(4488), r(8523), r(4199), r(8211), r(2238));
      },
      9638: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.StreamCipher,
                a = t.algo,
                o = (a.RC4 = r.extend({
                  _doReset: function () {
                    for (var e = this._key, t = e.words, r = e.sigBytes, a = (this._S = []), o = 0; o < 256; o++)
                      a[o] = o;
                    o = 0;
                    for (var i = 0; o < 256; o++) {
                      var n = o % r,
                        s = (t[n >>> 2] >>> (24 - (n % 4) * 8)) & 255;
                      i = (i + a[o] + s) % 256;
                      var c = a[o];
                      (a[o] = a[i]), (a[i] = c);
                    }
                    this._i = this._j = 0;
                  },
                  _doProcessBlock: function (e, t) {
                    e[t] ^= i.call(this);
                  },
                  keySize: 8,
                  ivSize: 0,
                }));
              function i() {
                for (var e = this._S, t = this._i, r = this._j, a = 0, o = 0; o < 4; o++) {
                  r = (r + e[(t = (t + 1) % 256)]) % 256;
                  var i = e[t];
                  (e[t] = e[r]), (e[r] = i), (a |= e[(e[t] + e[r]) % 256] << (24 - 8 * o));
                }
                return (this._i = t), (this._j = r), a;
              }
              t.RC4 = r._createHelper(o);
              var n = (a.RC4Drop = o.extend({
                cfg: o.cfg.extend({ drop: 192 }),
                _doReset: function () {
                  o._doReset.call(this);
                  for (var e = this.cfg.drop; e > 0; e--) i.call(this);
                },
              }));
              t.RC4Drop = r._createHelper(n);
            })(),
            e.RC4
          );
        })(r(4488), r(8523), r(4199), r(8211), r(2238));
      },
      7423: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib,
                a = r.WordArray,
                o = r.Hasher,
                i = t.algo,
                n = a.create([
                  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14,
                  11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15,
                  14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
                ]),
                s = a.create([
                  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9,
                  1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9,
                  7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
                ]),
                c = a.create([
                  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11,
                  7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9,
                  14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,
                ]),
                l = a.create([
                  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6,
                  15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9,
                  12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,
                ]),
                u = a.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                d = a.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                h = (i.RIPEMD160 = o.extend({
                  _doReset: function () {
                    this._hash = a.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                  },
                  _doProcessBlock: function (e, t) {
                    for (var r = 0; r < 16; r++) {
                      var a = t + r,
                        o = e[a];
                      e[a] = (16711935 & ((o << 8) | (o >>> 24))) | (4278255360 & ((o << 24) | (o >>> 8)));
                    }
                    var i,
                      h,
                      y,
                      w,
                      k,
                      E,
                      S,
                      x,
                      _,
                      A,
                      O,
                      P = this._hash.words,
                      I = u.words,
                      B = d.words,
                      N = n.words,
                      T = s.words,
                      z = c.words,
                      R = l.words;
                    for (E = i = P[0], S = h = P[1], x = y = P[2], _ = w = P[3], A = k = P[4], r = 0; r < 80; r += 1)
                      (O = (i + e[t + N[r]]) | 0),
                        (O +=
                          r < 16
                            ? f(h, y, w) + I[0]
                            : r < 32
                              ? p(h, y, w) + I[1]
                              : r < 48
                                ? b(h, y, w) + I[2]
                                : r < 64
                                  ? m(h, y, w) + I[3]
                                  : g(h, y, w) + I[4]),
                        (O = ((O = v((O |= 0), z[r])) + k) | 0),
                        (i = k),
                        (k = w),
                        (w = v(y, 10)),
                        (y = h),
                        (h = O),
                        (O = (E + e[t + T[r]]) | 0),
                        (O +=
                          r < 16
                            ? g(S, x, _) + B[0]
                            : r < 32
                              ? m(S, x, _) + B[1]
                              : r < 48
                                ? b(S, x, _) + B[2]
                                : r < 64
                                  ? p(S, x, _) + B[3]
                                  : f(S, x, _) + B[4]),
                        (O = ((O = v((O |= 0), R[r])) + A) | 0),
                        (E = A),
                        (A = _),
                        (_ = v(x, 10)),
                        (x = S),
                        (S = O);
                    (O = (P[1] + y + _) | 0),
                      (P[1] = (P[2] + w + A) | 0),
                      (P[2] = (P[3] + k + E) | 0),
                      (P[3] = (P[4] + i + S) | 0),
                      (P[4] = (P[0] + h + x) | 0),
                      (P[0] = O);
                  },
                  _doFinalize: function () {
                    var e = this._data,
                      t = e.words,
                      r = 8 * this._nDataBytes,
                      a = 8 * e.sigBytes;
                    (t[a >>> 5] |= 128 << (24 - (a % 32))),
                      (t[14 + (((a + 64) >>> 9) << 4)] =
                        (16711935 & ((r << 8) | (r >>> 24))) | (4278255360 & ((r << 24) | (r >>> 8)))),
                      (e.sigBytes = 4 * (t.length + 1)),
                      this._process();
                    for (var o = this._hash, i = o.words, n = 0; n < 5; n++) {
                      var s = i[n];
                      i[n] = (16711935 & ((s << 8) | (s >>> 24))) | (4278255360 & ((s << 24) | (s >>> 8)));
                    }
                    return o;
                  },
                  clone: function () {
                    var e = o.clone.call(this);
                    return (e._hash = this._hash.clone()), e;
                  },
                }));
              function f(e, t, r) {
                return e ^ t ^ r;
              }
              function p(e, t, r) {
                return (e & t) | (~e & r);
              }
              function b(e, t, r) {
                return (e | ~t) ^ r;
              }
              function m(e, t, r) {
                return (e & r) | (t & ~r);
              }
              function g(e, t, r) {
                return e ^ (t | ~r);
              }
              function v(e, t) {
                return (e << t) | (e >>> (32 - t));
              }
              (t.RIPEMD160 = o._createHelper(h)), (t.HmacRIPEMD160 = o._createHmacHelper(h));
            })(Math),
            e.RIPEMD160
          );
        })(r(4488));
      },
      2002: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib,
                a = r.WordArray,
                o = r.Hasher,
                i = t.algo,
                n = [],
                s = (i.SHA1 = o.extend({
                  _doReset: function () {
                    this._hash = new a.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                  },
                  _doProcessBlock: function (e, t) {
                    for (
                      var r = this._hash.words, a = r[0], o = r[1], i = r[2], s = r[3], c = r[4], l = 0;
                      l < 80;
                      l++
                    ) {
                      if (l < 16) n[l] = 0 | e[t + l];
                      else {
                        var u = n[l - 3] ^ n[l - 8] ^ n[l - 14] ^ n[l - 16];
                        n[l] = (u << 1) | (u >>> 31);
                      }
                      var d = ((a << 5) | (a >>> 27)) + c + n[l];
                      (d +=
                        l < 20
                          ? 1518500249 + ((o & i) | (~o & s))
                          : l < 40
                            ? 1859775393 + (o ^ i ^ s)
                            : l < 60
                              ? ((o & i) | (o & s) | (i & s)) - 1894007588
                              : (o ^ i ^ s) - 899497514),
                        (c = s),
                        (s = i),
                        (i = (o << 30) | (o >>> 2)),
                        (o = a),
                        (a = d);
                    }
                    (r[0] = (r[0] + a) | 0),
                      (r[1] = (r[1] + o) | 0),
                      (r[2] = (r[2] + i) | 0),
                      (r[3] = (r[3] + s) | 0),
                      (r[4] = (r[4] + c) | 0);
                  },
                  _doFinalize: function () {
                    var e = this._data,
                      t = e.words,
                      r = 8 * this._nDataBytes,
                      a = 8 * e.sigBytes;
                    return (
                      (t[a >>> 5] |= 128 << (24 - (a % 32))),
                      (t[14 + (((a + 64) >>> 9) << 4)] = Math.floor(r / 4294967296)),
                      (t[15 + (((a + 64) >>> 9) << 4)] = r),
                      (e.sigBytes = 4 * t.length),
                      this._process(),
                      this._hash
                    );
                  },
                  clone: function () {
                    var e = o.clone.call(this);
                    return (e._hash = this._hash.clone()), e;
                  },
                }));
              (t.SHA1 = o._createHelper(s)), (t.HmacSHA1 = o._createHmacHelper(s));
            })(),
            e.SHA1
          );
        })(r(4488));
      },
      1641: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.WordArray,
                a = t.algo,
                o = a.SHA256,
                i = (a.SHA224 = o.extend({
                  _doReset: function () {
                    this._hash = new r.init([
                      3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428,
                    ]);
                  },
                  _doFinalize: function () {
                    var e = o._doFinalize.call(this);
                    return (e.sigBytes -= 4), e;
                  },
                }));
              (t.SHA224 = o._createHelper(i)), (t.HmacSHA224 = o._createHmacHelper(i));
            })(),
            e.SHA224
          );
        })(r(4488), r(6368));
      },
      6368: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function (t) {
              var r = e,
                a = r.lib,
                o = a.WordArray,
                i = a.Hasher,
                n = r.algo,
                s = [],
                c = [];
              !(function () {
                function e(e) {
                  for (var r = t.sqrt(e), a = 2; a <= r; a++) if (!(e % a)) return !1;
                  return !0;
                }
                function r(e) {
                  return (4294967296 * (e - (0 | e))) | 0;
                }
                for (var a = 2, o = 0; o < 64; )
                  e(a) && (o < 8 && (s[o] = r(t.pow(a, 0.5))), (c[o] = r(t.pow(a, 1 / 3))), o++), a++;
              })();
              var l = [],
                u = (n.SHA256 = i.extend({
                  _doReset: function () {
                    this._hash = new o.init(s.slice(0));
                  },
                  _doProcessBlock: function (e, t) {
                    for (
                      var r = this._hash.words,
                        a = r[0],
                        o = r[1],
                        i = r[2],
                        n = r[3],
                        s = r[4],
                        u = r[5],
                        d = r[6],
                        h = r[7],
                        f = 0;
                      f < 64;
                      f++
                    ) {
                      if (f < 16) l[f] = 0 | e[t + f];
                      else {
                        var p = l[f - 15],
                          b = ((p << 25) | (p >>> 7)) ^ ((p << 14) | (p >>> 18)) ^ (p >>> 3),
                          m = l[f - 2],
                          g = ((m << 15) | (m >>> 17)) ^ ((m << 13) | (m >>> 19)) ^ (m >>> 10);
                        l[f] = b + l[f - 7] + g + l[f - 16];
                      }
                      var v = (a & o) ^ (a & i) ^ (o & i),
                        y = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22)),
                        w =
                          h +
                          (((s << 26) | (s >>> 6)) ^ ((s << 21) | (s >>> 11)) ^ ((s << 7) | (s >>> 25))) +
                          ((s & u) ^ (~s & d)) +
                          c[f] +
                          l[f];
                      (h = d), (d = u), (u = s), (s = (n + w) | 0), (n = i), (i = o), (o = a), (a = (w + (y + v)) | 0);
                    }
                    (r[0] = (r[0] + a) | 0),
                      (r[1] = (r[1] + o) | 0),
                      (r[2] = (r[2] + i) | 0),
                      (r[3] = (r[3] + n) | 0),
                      (r[4] = (r[4] + s) | 0),
                      (r[5] = (r[5] + u) | 0),
                      (r[6] = (r[6] + d) | 0),
                      (r[7] = (r[7] + h) | 0);
                  },
                  _doFinalize: function () {
                    var e = this._data,
                      r = e.words,
                      a = 8 * this._nDataBytes,
                      o = 8 * e.sigBytes;
                    return (
                      (r[o >>> 5] |= 128 << (24 - (o % 32))),
                      (r[14 + (((o + 64) >>> 9) << 4)] = t.floor(a / 4294967296)),
                      (r[15 + (((o + 64) >>> 9) << 4)] = a),
                      (e.sigBytes = 4 * r.length),
                      this._process(),
                      this._hash
                    );
                  },
                  clone: function () {
                    var e = i.clone.call(this);
                    return (e._hash = this._hash.clone()), e;
                  },
                }));
              (r.SHA256 = i._createHelper(u)), (r.HmacSHA256 = i._createHmacHelper(u));
            })(Math),
            e.SHA256
          );
        })(r(4488));
      },
      6600: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function (t) {
              var r = e,
                a = r.lib,
                o = a.WordArray,
                i = a.Hasher,
                n = r.x64.Word,
                s = r.algo,
                c = [],
                l = [],
                u = [];
              !(function () {
                for (var e = 1, t = 0, r = 0; r < 24; r++) {
                  c[e + 5 * t] = (((r + 1) * (r + 2)) / 2) % 64;
                  var a = (2 * e + 3 * t) % 5;
                  (e = t % 5), (t = a);
                }
                for (e = 0; e < 5; e++) for (t = 0; t < 5; t++) l[e + 5 * t] = t + ((2 * e + 3 * t) % 5) * 5;
                for (var o = 1, i = 0; i < 24; i++) {
                  for (var s = 0, d = 0, h = 0; h < 7; h++) {
                    if (1 & o) {
                      var f = (1 << h) - 1;
                      f < 32 ? (d ^= 1 << f) : (s ^= 1 << (f - 32));
                    }
                    128 & o ? (o = (o << 1) ^ 113) : (o <<= 1);
                  }
                  u[i] = n.create(s, d);
                }
              })();
              var d = [];
              !(function () {
                for (var e = 0; e < 25; e++) d[e] = n.create();
              })();
              var h = (s.SHA3 = i.extend({
                cfg: i.cfg.extend({ outputLength: 512 }),
                _doReset: function () {
                  for (var e = (this._state = []), t = 0; t < 25; t++) e[t] = new n.init();
                  this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                },
                _doProcessBlock: function (e, t) {
                  for (var r = this._state, a = this.blockSize / 2, o = 0; o < a; o++) {
                    var i = e[t + 2 * o],
                      n = e[t + 2 * o + 1];
                    (i = (16711935 & ((i << 8) | (i >>> 24))) | (4278255360 & ((i << 24) | (i >>> 8)))),
                      (n = (16711935 & ((n << 8) | (n >>> 24))) | (4278255360 & ((n << 24) | (n >>> 8)))),
                      ((P = r[o]).high ^= n),
                      (P.low ^= i);
                  }
                  for (var s = 0; s < 24; s++) {
                    for (var h = 0; h < 5; h++) {
                      for (var f = 0, p = 0, b = 0; b < 5; b++) (f ^= (P = r[h + 5 * b]).high), (p ^= P.low);
                      var m = d[h];
                      (m.high = f), (m.low = p);
                    }
                    for (h = 0; h < 5; h++) {
                      var g = d[(h + 4) % 5],
                        v = d[(h + 1) % 5],
                        y = v.high,
                        w = v.low;
                      for (f = g.high ^ ((y << 1) | (w >>> 31)), p = g.low ^ ((w << 1) | (y >>> 31)), b = 0; b < 5; b++)
                        ((P = r[h + 5 * b]).high ^= f), (P.low ^= p);
                    }
                    for (var k = 1; k < 25; k++) {
                      var E = (P = r[k]).high,
                        S = P.low,
                        x = c[k];
                      x < 32
                        ? ((f = (E << x) | (S >>> (32 - x))), (p = (S << x) | (E >>> (32 - x))))
                        : ((f = (S << (x - 32)) | (E >>> (64 - x))), (p = (E << (x - 32)) | (S >>> (64 - x))));
                      var _ = d[l[k]];
                      (_.high = f), (_.low = p);
                    }
                    var A = d[0],
                      O = r[0];
                    for (A.high = O.high, A.low = O.low, h = 0; h < 5; h++)
                      for (b = 0; b < 5; b++) {
                        var P = r[(k = h + 5 * b)],
                          I = d[k],
                          B = d[((h + 1) % 5) + 5 * b],
                          N = d[((h + 2) % 5) + 5 * b];
                        (P.high = I.high ^ (~B.high & N.high)), (P.low = I.low ^ (~B.low & N.low));
                      }
                    P = r[0];
                    var T = u[s];
                    (P.high ^= T.high), (P.low ^= T.low);
                  }
                },
                _doFinalize: function () {
                  var e = this._data,
                    r = e.words,
                    a = (this._nDataBytes, 8 * e.sigBytes),
                    i = 32 * this.blockSize;
                  (r[a >>> 5] |= 1 << (24 - (a % 32))),
                    (r[((t.ceil((a + 1) / i) * i) >>> 5) - 1] |= 128),
                    (e.sigBytes = 4 * r.length),
                    this._process();
                  for (var n = this._state, s = this.cfg.outputLength / 8, c = s / 8, l = [], u = 0; u < c; u++) {
                    var d = n[u],
                      h = d.high,
                      f = d.low;
                    (h = (16711935 & ((h << 8) | (h >>> 24))) | (4278255360 & ((h << 24) | (h >>> 8)))),
                      (f = (16711935 & ((f << 8) | (f >>> 24))) | (4278255360 & ((f << 24) | (f >>> 8)))),
                      l.push(f),
                      l.push(h);
                  }
                  return new o.init(l, s);
                },
                clone: function () {
                  for (var e = i.clone.call(this), t = (e._state = this._state.slice(0)), r = 0; r < 25; r++)
                    t[r] = t[r].clone();
                  return e;
                },
              }));
              (r.SHA3 = i._createHelper(h)), (r.HmacSHA3 = i._createHmacHelper(h));
            })(Math),
            e.SHA3
          );
        })(r(4488), r(9749));
      },
      9092: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.x64,
                a = r.Word,
                o = r.WordArray,
                i = t.algo,
                n = i.SHA512,
                s = (i.SHA384 = n.extend({
                  _doReset: function () {
                    this._hash = new o.init([
                      new a.init(3418070365, 3238371032),
                      new a.init(1654270250, 914150663),
                      new a.init(2438529370, 812702999),
                      new a.init(355462360, 4144912697),
                      new a.init(1731405415, 4290775857),
                      new a.init(2394180231, 1750603025),
                      new a.init(3675008525, 1694076839),
                      new a.init(1203062813, 3204075428),
                    ]);
                  },
                  _doFinalize: function () {
                    var e = n._doFinalize.call(this);
                    return (e.sigBytes -= 16), e;
                  },
                }));
              (t.SHA384 = n._createHelper(s)), (t.HmacSHA384 = n._createHmacHelper(s));
            })(),
            e.SHA384
          );
        })(r(4488), r(9749), r(7061));
      },
      7061: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib.Hasher,
                a = t.x64,
                o = a.Word,
                i = a.WordArray,
                n = t.algo;
              function s() {
                return o.create.apply(o, arguments);
              }
              var c = [
                  s(1116352408, 3609767458),
                  s(1899447441, 602891725),
                  s(3049323471, 3964484399),
                  s(3921009573, 2173295548),
                  s(961987163, 4081628472),
                  s(1508970993, 3053834265),
                  s(2453635748, 2937671579),
                  s(2870763221, 3664609560),
                  s(3624381080, 2734883394),
                  s(310598401, 1164996542),
                  s(607225278, 1323610764),
                  s(1426881987, 3590304994),
                  s(1925078388, 4068182383),
                  s(2162078206, 991336113),
                  s(2614888103, 633803317),
                  s(3248222580, 3479774868),
                  s(3835390401, 2666613458),
                  s(4022224774, 944711139),
                  s(264347078, 2341262773),
                  s(604807628, 2007800933),
                  s(770255983, 1495990901),
                  s(1249150122, 1856431235),
                  s(1555081692, 3175218132),
                  s(1996064986, 2198950837),
                  s(2554220882, 3999719339),
                  s(2821834349, 766784016),
                  s(2952996808, 2566594879),
                  s(3210313671, 3203337956),
                  s(3336571891, 1034457026),
                  s(3584528711, 2466948901),
                  s(113926993, 3758326383),
                  s(338241895, 168717936),
                  s(666307205, 1188179964),
                  s(773529912, 1546045734),
                  s(1294757372, 1522805485),
                  s(1396182291, 2643833823),
                  s(1695183700, 2343527390),
                  s(1986661051, 1014477480),
                  s(2177026350, 1206759142),
                  s(2456956037, 344077627),
                  s(2730485921, 1290863460),
                  s(2820302411, 3158454273),
                  s(3259730800, 3505952657),
                  s(3345764771, 106217008),
                  s(3516065817, 3606008344),
                  s(3600352804, 1432725776),
                  s(4094571909, 1467031594),
                  s(275423344, 851169720),
                  s(430227734, 3100823752),
                  s(506948616, 1363258195),
                  s(659060556, 3750685593),
                  s(883997877, 3785050280),
                  s(958139571, 3318307427),
                  s(1322822218, 3812723403),
                  s(1537002063, 2003034995),
                  s(1747873779, 3602036899),
                  s(1955562222, 1575990012),
                  s(2024104815, 1125592928),
                  s(2227730452, 2716904306),
                  s(2361852424, 442776044),
                  s(2428436474, 593698344),
                  s(2756734187, 3733110249),
                  s(3204031479, 2999351573),
                  s(3329325298, 3815920427),
                  s(3391569614, 3928383900),
                  s(3515267271, 566280711),
                  s(3940187606, 3454069534),
                  s(4118630271, 4000239992),
                  s(116418474, 1914138554),
                  s(174292421, 2731055270),
                  s(289380356, 3203993006),
                  s(460393269, 320620315),
                  s(685471733, 587496836),
                  s(852142971, 1086792851),
                  s(1017036298, 365543100),
                  s(1126000580, 2618297676),
                  s(1288033470, 3409855158),
                  s(1501505948, 4234509866),
                  s(1607167915, 987167468),
                  s(1816402316, 1246189591),
                ],
                l = [];
              !(function () {
                for (var e = 0; e < 80; e++) l[e] = s();
              })();
              var u = (n.SHA512 = r.extend({
                _doReset: function () {
                  this._hash = new i.init([
                    new o.init(1779033703, 4089235720),
                    new o.init(3144134277, 2227873595),
                    new o.init(1013904242, 4271175723),
                    new o.init(2773480762, 1595750129),
                    new o.init(1359893119, 2917565137),
                    new o.init(2600822924, 725511199),
                    new o.init(528734635, 4215389547),
                    new o.init(1541459225, 327033209),
                  ]);
                },
                _doProcessBlock: function (e, t) {
                  for (
                    var r = this._hash.words,
                      a = r[0],
                      o = r[1],
                      i = r[2],
                      n = r[3],
                      s = r[4],
                      u = r[5],
                      d = r[6],
                      h = r[7],
                      f = a.high,
                      p = a.low,
                      b = o.high,
                      m = o.low,
                      g = i.high,
                      v = i.low,
                      y = n.high,
                      w = n.low,
                      k = s.high,
                      E = s.low,
                      S = u.high,
                      x = u.low,
                      _ = d.high,
                      A = d.low,
                      O = h.high,
                      P = h.low,
                      I = f,
                      B = p,
                      N = b,
                      T = m,
                      z = g,
                      R = v,
                      M = y,
                      F = w,
                      C = k,
                      j = E,
                      U = S,
                      D = x,
                      L = _,
                      q = A,
                      H = O,
                      G = P,
                      K = 0;
                    K < 80;
                    K++
                  ) {
                    var V,
                      $,
                      W = l[K];
                    if (K < 16) ($ = W.high = 0 | e[t + 2 * K]), (V = W.low = 0 | e[t + 2 * K + 1]);
                    else {
                      var Y = l[K - 15],
                        X = Y.high,
                        J = Y.low,
                        Q = ((X >>> 1) | (J << 31)) ^ ((X >>> 8) | (J << 24)) ^ (X >>> 7),
                        Z = ((J >>> 1) | (X << 31)) ^ ((J >>> 8) | (X << 24)) ^ ((J >>> 7) | (X << 25)),
                        ee = l[K - 2],
                        te = ee.high,
                        re = ee.low,
                        ae = ((te >>> 19) | (re << 13)) ^ ((te << 3) | (re >>> 29)) ^ (te >>> 6),
                        oe = ((re >>> 19) | (te << 13)) ^ ((re << 3) | (te >>> 29)) ^ ((re >>> 6) | (te << 26)),
                        ie = l[K - 7],
                        ne = ie.high,
                        se = ie.low,
                        ce = l[K - 16],
                        le = ce.high,
                        ue = ce.low;
                      ($ =
                        ($ =
                          ($ = Q + ne + ((V = Z + se) >>> 0 < Z >>> 0 ? 1 : 0)) +
                          ae +
                          ((V += oe) >>> 0 < oe >>> 0 ? 1 : 0)) +
                        le +
                        ((V += ue) >>> 0 < ue >>> 0 ? 1 : 0)),
                        (W.high = $),
                        (W.low = V);
                    }
                    var de,
                      he = (C & U) ^ (~C & L),
                      fe = (j & D) ^ (~j & q),
                      pe = (I & N) ^ (I & z) ^ (N & z),
                      be = (B & T) ^ (B & R) ^ (T & R),
                      me = ((I >>> 28) | (B << 4)) ^ ((I << 30) | (B >>> 2)) ^ ((I << 25) | (B >>> 7)),
                      ge = ((B >>> 28) | (I << 4)) ^ ((B << 30) | (I >>> 2)) ^ ((B << 25) | (I >>> 7)),
                      ve = ((C >>> 14) | (j << 18)) ^ ((C >>> 18) | (j << 14)) ^ ((C << 23) | (j >>> 9)),
                      ye = ((j >>> 14) | (C << 18)) ^ ((j >>> 18) | (C << 14)) ^ ((j << 23) | (C >>> 9)),
                      we = c[K],
                      ke = we.high,
                      Ee = we.low,
                      Se = H + ve + ((de = G + ye) >>> 0 < G >>> 0 ? 1 : 0),
                      xe = ge + be;
                    (H = L),
                      (G = q),
                      (L = U),
                      (q = D),
                      (U = C),
                      (D = j),
                      (C =
                        (M +
                          (Se =
                            (Se =
                              (Se = Se + he + ((de += fe) >>> 0 < fe >>> 0 ? 1 : 0)) +
                              ke +
                              ((de += Ee) >>> 0 < Ee >>> 0 ? 1 : 0)) +
                            $ +
                            ((de += V) >>> 0 < V >>> 0 ? 1 : 0)) +
                          ((j = (F + de) | 0) >>> 0 < F >>> 0 ? 1 : 0)) |
                        0),
                      (M = z),
                      (F = R),
                      (z = N),
                      (R = T),
                      (N = I),
                      (T = B),
                      (I =
                        (Se +
                          (me + pe + (xe >>> 0 < ge >>> 0 ? 1 : 0)) +
                          ((B = (de + xe) | 0) >>> 0 < de >>> 0 ? 1 : 0)) |
                        0);
                  }
                  (p = a.low = p + B),
                    (a.high = f + I + (p >>> 0 < B >>> 0 ? 1 : 0)),
                    (m = o.low = m + T),
                    (o.high = b + N + (m >>> 0 < T >>> 0 ? 1 : 0)),
                    (v = i.low = v + R),
                    (i.high = g + z + (v >>> 0 < R >>> 0 ? 1 : 0)),
                    (w = n.low = w + F),
                    (n.high = y + M + (w >>> 0 < F >>> 0 ? 1 : 0)),
                    (E = s.low = E + j),
                    (s.high = k + C + (E >>> 0 < j >>> 0 ? 1 : 0)),
                    (x = u.low = x + D),
                    (u.high = S + U + (x >>> 0 < D >>> 0 ? 1 : 0)),
                    (A = d.low = A + q),
                    (d.high = _ + L + (A >>> 0 < q >>> 0 ? 1 : 0)),
                    (P = h.low = P + G),
                    (h.high = O + H + (P >>> 0 < G >>> 0 ? 1 : 0));
                },
                _doFinalize: function () {
                  var e = this._data,
                    t = e.words,
                    r = 8 * this._nDataBytes,
                    a = 8 * e.sigBytes;
                  return (
                    (t[a >>> 5] |= 128 << (24 - (a % 32))),
                    (t[30 + (((a + 128) >>> 10) << 5)] = Math.floor(r / 4294967296)),
                    (t[31 + (((a + 128) >>> 10) << 5)] = r),
                    (e.sigBytes = 4 * t.length),
                    this._process(),
                    this._hash.toX32()
                  );
                },
                clone: function () {
                  var e = r.clone.call(this);
                  return (e._hash = this._hash.clone()), e;
                },
                blockSize: 32,
              }));
              (t.SHA512 = r._createHelper(u)), (t.HmacSHA512 = r._createHmacHelper(u));
            })(),
            e.SHA512
          );
        })(r(4488), r(9749));
      },
      9475: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function () {
              var t = e,
                r = t.lib,
                a = r.WordArray,
                o = r.BlockCipher,
                i = t.algo,
                n = [
                  57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52,
                  44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5,
                  28, 20, 12, 4,
                ],
                s = [
                  14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31,
                  37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32,
                ],
                c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
                l = [
                  {
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378,
                  },
                  {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672,
                  },
                  {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792,
                  },
                  {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464,
                  },
                  {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040,
                  },
                  {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656,
                  },
                  {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577,
                  },
                  {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848,
                  },
                ],
                u = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
                d = (i.DES = o.extend({
                  _doReset: function () {
                    for (var e = this._key.words, t = [], r = 0; r < 56; r++) {
                      var a = n[r] - 1;
                      t[r] = (e[a >>> 5] >>> (31 - (a % 32))) & 1;
                    }
                    for (var o = (this._subKeys = []), i = 0; i < 16; i++) {
                      var l = (o[i] = []),
                        u = c[i];
                      for (r = 0; r < 24; r++)
                        (l[(r / 6) | 0] |= t[(s[r] - 1 + u) % 28] << (31 - (r % 6))),
                          (l[4 + ((r / 6) | 0)] |= t[28 + ((s[r + 24] - 1 + u) % 28)] << (31 - (r % 6)));
                      for (l[0] = (l[0] << 1) | (l[0] >>> 31), r = 1; r < 7; r++) l[r] = l[r] >>> (4 * (r - 1) + 3);
                      l[7] = (l[7] << 5) | (l[7] >>> 27);
                    }
                    var d = (this._invSubKeys = []);
                    for (r = 0; r < 16; r++) d[r] = o[15 - r];
                  },
                  encryptBlock: function (e, t) {
                    this._doCryptBlock(e, t, this._subKeys);
                  },
                  decryptBlock: function (e, t) {
                    this._doCryptBlock(e, t, this._invSubKeys);
                  },
                  _doCryptBlock: function (e, t, r) {
                    (this._lBlock = e[t]),
                      (this._rBlock = e[t + 1]),
                      h.call(this, 4, 252645135),
                      h.call(this, 16, 65535),
                      f.call(this, 2, 858993459),
                      f.call(this, 8, 16711935),
                      h.call(this, 1, 1431655765);
                    for (var a = 0; a < 16; a++) {
                      for (var o = r[a], i = this._lBlock, n = this._rBlock, s = 0, c = 0; c < 8; c++)
                        s |= l[c][((n ^ o[c]) & u[c]) >>> 0];
                      (this._lBlock = n), (this._rBlock = i ^ s);
                    }
                    var d = this._lBlock;
                    (this._lBlock = this._rBlock),
                      (this._rBlock = d),
                      h.call(this, 1, 1431655765),
                      f.call(this, 8, 16711935),
                      f.call(this, 2, 858993459),
                      h.call(this, 16, 65535),
                      h.call(this, 4, 252645135),
                      (e[t] = this._lBlock),
                      (e[t + 1] = this._rBlock);
                  },
                  keySize: 2,
                  ivSize: 2,
                  blockSize: 2,
                }));
              function h(e, t) {
                var r = ((this._lBlock >>> e) ^ this._rBlock) & t;
                (this._rBlock ^= r), (this._lBlock ^= r << e);
              }
              function f(e, t) {
                var r = ((this._rBlock >>> e) ^ this._lBlock) & t;
                (this._lBlock ^= r), (this._rBlock ^= r << e);
              }
              t.DES = o._createHelper(d);
              var p = (i.TripleDES = o.extend({
                _doReset: function () {
                  var e = this._key.words;
                  if (2 !== e.length && 4 !== e.length && e.length < 6)
                    throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');
                  var t = e.slice(0, 2),
                    r = e.length < 4 ? e.slice(0, 2) : e.slice(2, 4),
                    o = e.length < 6 ? e.slice(0, 2) : e.slice(4, 6);
                  (this._des1 = d.createEncryptor(a.create(t))),
                    (this._des2 = d.createEncryptor(a.create(r))),
                    (this._des3 = d.createEncryptor(a.create(o)));
                },
                encryptBlock: function (e, t) {
                  this._des1.encryptBlock(e, t), this._des2.decryptBlock(e, t), this._des3.encryptBlock(e, t);
                },
                decryptBlock: function (e, t) {
                  this._des3.decryptBlock(e, t), this._des2.encryptBlock(e, t), this._des1.decryptBlock(e, t);
                },
                keySize: 6,
                ivSize: 2,
                blockSize: 2,
              }));
              t.TripleDES = o._createHelper(p);
            })(),
            e.TripleDES
          );
        })(r(4488), r(8523), r(4199), r(8211), r(2238));
      },
      9749: function (e, t, r) {
        e.exports = (function (e) {
          return (
            (function (t) {
              var r = e,
                a = r.lib,
                o = a.Base,
                i = a.WordArray,
                n = (r.x64 = {});
              (n.Word = o.extend({
                init: function (e, t) {
                  (this.high = e), (this.low = t);
                },
              })),
                (n.WordArray = o.extend({
                  init: function (e, r) {
                    (e = this.words = e || []), (this.sigBytes = r != t ? r : 8 * e.length);
                  },
                  toX32: function () {
                    for (var e = this.words, t = e.length, r = [], a = 0; a < t; a++) {
                      var o = e[a];
                      r.push(o.high), r.push(o.low);
                    }
                    return i.create(r, this.sigBytes);
                  },
                  clone: function () {
                    for (
                      var e = o.clone.call(this), t = (e.words = this.words.slice(0)), r = t.length, a = 0;
                      a < r;
                      a++
                    )
                      t[a] = t[a].clone();
                    return e;
                  },
                }));
            })(),
            e
          );
        })(r(4488));
      },
      6900: (e, t) => {
        (t.read = function (e, t, r, a, o) {
          var i,
            n,
            s = 8 * o - a - 1,
            c = (1 << s) - 1,
            l = c >> 1,
            u = -7,
            d = r ? o - 1 : 0,
            h = r ? -1 : 1,
            f = e[t + d];
          for (d += h, i = f & ((1 << -u) - 1), f >>= -u, u += s; u > 0; i = 256 * i + e[t + d], d += h, u -= 8);
          for (n = i & ((1 << -u) - 1), i >>= -u, u += a; u > 0; n = 256 * n + e[t + d], d += h, u -= 8);
          if (0 === i) i = 1 - l;
          else {
            if (i === c) return n ? NaN : (1 / 0) * (f ? -1 : 1);
            (n += Math.pow(2, a)), (i -= l);
          }
          return (f ? -1 : 1) * n * Math.pow(2, i - a);
        }),
          (t.write = function (e, t, r, a, o, i) {
            var n,
              s,
              c,
              l = 8 * i - o - 1,
              u = (1 << l) - 1,
              d = u >> 1,
              h = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
              f = a ? 0 : i - 1,
              p = a ? 1 : -1,
              b = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
            for (
              t = Math.abs(t),
                isNaN(t) || t === 1 / 0
                  ? ((s = isNaN(t) ? 1 : 0), (n = u))
                  : ((n = Math.floor(Math.log(t) / Math.LN2)),
                    t * (c = Math.pow(2, -n)) < 1 && (n--, (c *= 2)),
                    (t += n + d >= 1 ? h / c : h * Math.pow(2, 1 - d)) * c >= 2 && (n++, (c /= 2)),
                    n + d >= u
                      ? ((s = 0), (n = u))
                      : n + d >= 1
                        ? ((s = (t * c - 1) * Math.pow(2, o)), (n += d))
                        : ((s = t * Math.pow(2, d - 1) * Math.pow(2, o)), (n = 0)));
              o >= 8;
              e[r + f] = 255 & s, f += p, s /= 256, o -= 8
            );
            for (n = (n << o) | s, l += o; l > 0; e[r + f] = 255 & n, f += p, n /= 256, l -= 8);
            e[r + f - p] |= 128 * b;
          });
      },
      2285: (e) => {
        var t,
          r,
          a = (e.exports = {});
        function o() {
          throw new Error('setTimeout has not been defined');
        }
        function i() {
          throw new Error('clearTimeout has not been defined');
        }
        function n(e) {
          if (t === setTimeout) return setTimeout(e, 0);
          if ((t === o || !t) && setTimeout) return (t = setTimeout), setTimeout(e, 0);
          try {
            return t(e, 0);
          } catch (r) {
            try {
              return t.call(null, e, 0);
            } catch (r) {
              return t.call(this, e, 0);
            }
          }
        }
        !(function () {
          try {
            t = 'function' === typeof setTimeout ? setTimeout : o;
          } catch (e) {
            t = o;
          }
          try {
            r = 'function' === typeof clearTimeout ? clearTimeout : i;
          } catch (e) {
            r = i;
          }
        })();
        var s,
          c = [],
          l = !1,
          u = -1;
        function d() {
          l && s && ((l = !1), s.length ? (c = s.concat(c)) : (u = -1), c.length && h());
        }
        function h() {
          if (!l) {
            var e = n(d);
            l = !0;
            for (var t = c.length; t; ) {
              for (s = c, c = []; ++u < t; ) s && s[u].run();
              (u = -1), (t = c.length);
            }
            (s = null),
              (l = !1),
              (function (e) {
                if (r === clearTimeout) return clearTimeout(e);
                if ((r === i || !r) && clearTimeout) return (r = clearTimeout), clearTimeout(e);
                try {
                  return r(e);
                } catch (t) {
                  try {
                    return r.call(null, e);
                  } catch (t) {
                    return r.call(this, e);
                  }
                }
              })(e);
          }
        }
        function f(e, t) {
          (this.fun = e), (this.array = t);
        }
        function p() {}
        (a.nextTick = function (e) {
          var t = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
          c.push(new f(e, t)), 1 !== c.length || l || n(h);
        }),
          (f.prototype.run = function () {
            this.fun.apply(null, this.array);
          }),
          (a.title = 'browser'),
          (a.browser = !0),
          (a.env = {}),
          (a.argv = []),
          (a.version = ''),
          (a.versions = {}),
          (a.on = p),
          (a.addListener = p),
          (a.once = p),
          (a.off = p),
          (a.removeListener = p),
          (a.removeAllListeners = p),
          (a.emit = p),
          (a.prependListener = p),
          (a.prependOnceListener = p),
          (a.listeners = function (e) {
            return [];
          }),
          (a.binding = function (e) {
            throw new Error('process.binding is not supported');
          }),
          (a.cwd = function () {
            return '/';
          }),
          (a.chdir = function (e) {
            throw new Error('process.chdir is not supported');
          }),
          (a.umask = function () {
            return 0;
          });
      },
      1153: (e, t, r) => {
        'use strict';
        var a = r(5043),
          o = Symbol.for('react.element'),
          i = Symbol.for('react.fragment'),
          n = Object.prototype.hasOwnProperty,
          s = a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
          c = { key: !0, ref: !0, __self: !0, __source: !0 };
        function l(e, t, r) {
          var a,
            i = {},
            l = null,
            u = null;
          for (a in (void 0 !== r && (l = '' + r),
          void 0 !== t.key && (l = '' + t.key),
          void 0 !== t.ref && (u = t.ref),
          t))
            n.call(t, a) && !c.hasOwnProperty(a) && (i[a] = t[a]);
          if (e && e.defaultProps) for (a in (t = e.defaultProps)) void 0 === i[a] && (i[a] = t[a]);
          return { $$typeof: o, type: e, key: l, ref: u, props: i, _owner: s.current };
        }
        (t.Fragment = i), (t.jsx = l), (t.jsxs = l);
      },
      4202: (e, t) => {
        'use strict';
        var r = Symbol.for('react.element'),
          a = Symbol.for('react.portal'),
          o = Symbol.for('react.fragment'),
          i = Symbol.for('react.strict_mode'),
          n = Symbol.for('react.profiler'),
          s = Symbol.for('react.provider'),
          c = Symbol.for('react.context'),
          l = Symbol.for('react.forward_ref'),
          u = Symbol.for('react.suspense'),
          d = Symbol.for('react.memo'),
          h = Symbol.for('react.lazy'),
          f = Symbol.iterator;
        var p = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          b = Object.assign,
          m = {};
        function g(e, t, r) {
          (this.props = e), (this.context = t), (this.refs = m), (this.updater = r || p);
        }
        function v() {}
        function y(e, t, r) {
          (this.props = e), (this.context = t), (this.refs = m), (this.updater = r || p);
        }
        (g.prototype.isReactComponent = {}),
          (g.prototype.setState = function (e, t) {
            if ('object' !== typeof e && 'function' !== typeof e && null != e)
              throw Error(
                'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
              );
            this.updater.enqueueSetState(this, e, t, 'setState');
          }),
          (g.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
          }),
          (v.prototype = g.prototype);
        var w = (y.prototype = new v());
        (w.constructor = y), b(w, g.prototype), (w.isPureReactComponent = !0);
        var k = Array.isArray,
          E = Object.prototype.hasOwnProperty,
          S = { current: null },
          x = { key: !0, ref: !0, __self: !0, __source: !0 };
        function _(e, t, a) {
          var o,
            i = {},
            n = null,
            s = null;
          if (null != t)
            for (o in (void 0 !== t.ref && (s = t.ref), void 0 !== t.key && (n = '' + t.key), t))
              E.call(t, o) && !x.hasOwnProperty(o) && (i[o] = t[o]);
          var c = arguments.length - 2;
          if (1 === c) i.children = a;
          else if (1 < c) {
            for (var l = Array(c), u = 0; u < c; u++) l[u] = arguments[u + 2];
            i.children = l;
          }
          if (e && e.defaultProps) for (o in (c = e.defaultProps)) void 0 === i[o] && (i[o] = c[o]);
          return { $$typeof: r, type: e, key: n, ref: s, props: i, _owner: S.current };
        }
        function A(e) {
          return 'object' === typeof e && null !== e && e.$$typeof === r;
        }
        var O = /\/+/g;
        function P(e, t) {
          return 'object' === typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { '=': '=0', ':': '=2' };
                return (
                  '$' +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })('' + e.key)
            : t.toString(36);
        }
        function I(e, t, o, i, n) {
          var s = typeof e;
          ('undefined' !== s && 'boolean' !== s) || (e = null);
          var c = !1;
          if (null === e) c = !0;
          else
            switch (s) {
              case 'string':
              case 'number':
                c = !0;
                break;
              case 'object':
                switch (e.$$typeof) {
                  case r:
                  case a:
                    c = !0;
                }
            }
          if (c)
            return (
              (n = n((c = e))),
              (e = '' === i ? '.' + P(c, 0) : i),
              k(n)
                ? ((o = ''),
                  null != e && (o = e.replace(O, '$&/') + '/'),
                  I(n, t, o, '', function (e) {
                    return e;
                  }))
                : null != n &&
                  (A(n) &&
                    (n = (function (e, t) {
                      return { $$typeof: r, type: e.type, key: t, ref: e.ref, props: e.props, _owner: e._owner };
                    })(n, o + (!n.key || (c && c.key === n.key) ? '' : ('' + n.key).replace(O, '$&/') + '/') + e)),
                  t.push(n)),
              1
            );
          if (((c = 0), (i = '' === i ? '.' : i + ':'), k(e)))
            for (var l = 0; l < e.length; l++) {
              var u = i + P((s = e[l]), l);
              c += I(s, t, o, u, n);
            }
          else if (
            ((u = (function (e) {
              return null === e || 'object' !== typeof e
                ? null
                : 'function' === typeof (e = (f && e[f]) || e['@@iterator'])
                  ? e
                  : null;
            })(e)),
            'function' === typeof u)
          )
            for (e = u.call(e), l = 0; !(s = e.next()).done; ) c += I((s = s.value), t, o, (u = i + P(s, l++)), n);
          else if ('object' === s)
            throw (
              ((t = String(e)),
              Error(
                'Objects are not valid as a React child (found: ' +
                  ('[object Object]' === t ? 'object with keys {' + Object.keys(e).join(', ') + '}' : t) +
                  '). If you meant to render a collection of children, use an array instead.',
              ))
            );
          return c;
        }
        function B(e, t, r) {
          if (null == e) return e;
          var a = [],
            o = 0;
          return (
            I(e, a, '', '', function (e) {
              return t.call(r, e, o++);
            }),
            a
          );
        }
        function N(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()).then(
              function (t) {
                (0 !== e._status && -1 !== e._status) || ((e._status = 1), (e._result = t));
              },
              function (t) {
                (0 !== e._status && -1 !== e._status) || ((e._status = 2), (e._result = t));
              },
            ),
              -1 === e._status && ((e._status = 0), (e._result = t));
          }
          if (1 === e._status) return e._result.default;
          throw e._result;
        }
        var T = { current: null },
          z = { transition: null },
          R = { ReactCurrentDispatcher: T, ReactCurrentBatchConfig: z, ReactCurrentOwner: S };
        function M() {
          throw Error('act(...) is not supported in production builds of React.');
        }
        (t.Children = {
          map: B,
          forEach: function (e, t, r) {
            B(
              e,
              function () {
                t.apply(this, arguments);
              },
              r,
            );
          },
          count: function (e) {
            var t = 0;
            return (
              B(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              B(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!A(e)) throw Error('React.Children.only expected to receive a single React element child.');
            return e;
          },
        }),
          (t.Component = g),
          (t.Fragment = o),
          (t.Profiler = n),
          (t.PureComponent = y),
          (t.StrictMode = i),
          (t.Suspense = u),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = R),
          (t.act = M),
          (t.cloneElement = function (e, t, a) {
            if (null === e || void 0 === e)
              throw Error('React.cloneElement(...): The argument must be a React element, but you passed ' + e + '.');
            var o = b({}, e.props),
              i = e.key,
              n = e.ref,
              s = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((n = t.ref), (s = S.current)),
                void 0 !== t.key && (i = '' + t.key),
                e.type && e.type.defaultProps)
              )
                var c = e.type.defaultProps;
              for (l in t)
                E.call(t, l) && !x.hasOwnProperty(l) && (o[l] = void 0 === t[l] && void 0 !== c ? c[l] : t[l]);
            }
            var l = arguments.length - 2;
            if (1 === l) o.children = a;
            else if (1 < l) {
              c = Array(l);
              for (var u = 0; u < l; u++) c[u] = arguments[u + 2];
              o.children = c;
            }
            return { $$typeof: r, type: e.type, key: i, ref: n, props: o, _owner: s };
          }),
          (t.createContext = function (e) {
            return (
              ((e = {
                $$typeof: c,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null,
              }).Provider = { $$typeof: s, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = _),
          (t.createFactory = function (e) {
            var t = _.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: l, render: e };
          }),
          (t.isValidElement = A),
          (t.lazy = function (e) {
            return { $$typeof: h, _payload: { _status: -1, _result: e }, _init: N };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: d, type: e, compare: void 0 === t ? null : t };
          }),
          (t.startTransition = function (e) {
            var t = z.transition;
            z.transition = {};
            try {
              e();
            } finally {
              z.transition = t;
            }
          }),
          (t.unstable_act = M),
          (t.useCallback = function (e, t) {
            return T.current.useCallback(e, t);
          }),
          (t.useContext = function (e) {
            return T.current.useContext(e);
          }),
          (t.useDebugValue = function () {}),
          (t.useDeferredValue = function (e) {
            return T.current.useDeferredValue(e);
          }),
          (t.useEffect = function (e, t) {
            return T.current.useEffect(e, t);
          }),
          (t.useId = function () {
            return T.current.useId();
          }),
          (t.useImperativeHandle = function (e, t, r) {
            return T.current.useImperativeHandle(e, t, r);
          }),
          (t.useInsertionEffect = function (e, t) {
            return T.current.useInsertionEffect(e, t);
          }),
          (t.useLayoutEffect = function (e, t) {
            return T.current.useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return T.current.useMemo(e, t);
          }),
          (t.useReducer = function (e, t, r) {
            return T.current.useReducer(e, t, r);
          }),
          (t.useRef = function (e) {
            return T.current.useRef(e);
          }),
          (t.useState = function (e) {
            return T.current.useState(e);
          }),
          (t.useSyncExternalStore = function (e, t, r) {
            return T.current.useSyncExternalStore(e, t, r);
          }),
          (t.useTransition = function () {
            return T.current.useTransition();
          }),
          (t.version = '18.3.1');
      },
      5043: (e, t, r) => {
        'use strict';
        e.exports = r(4202);
      },
      579: (e, t, r) => {
        'use strict';
        e.exports = r(1153);
      },
      3319: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }), (t.YoursIcon = void 0);
        var a = r(579);
        t.YoursIcon = function (e) {
          return (0, a.jsxs)('svg', {
            width: e.size,
            height: e.size,
            viewBox: '0 0 32 38',
            fill: 'none',
            xmlns: 'http://www.w3.org/2000/svg',
            children: [
              (0, a.jsxs)('g', {
                filter: 'url(#filter0_dd_503_133)',
                children: [
                  (0, a.jsx)('path', {
                    d: 'M24.5381 23.031C24.5383 25.5506 23.6971 27.9982 22.148 29.9854C20.7442 31.7861 18.832 33.1152 16.6673 33.8061C16.3251 33.9153 15.9869 33.6517 15.9869 33.2924V30.0716C15.9869 29.6329 16.2511 29.2428 16.6326 29.0262C17.5831 28.4867 18.395 27.727 18.9976 26.8069C19.7325 25.6847 20.1242 24.3725 20.1246 23.031C20.1248 22.74 20.1069 22.4494 20.0708 22.1607C19.8778 20.6567 19.1954 19.258 18.1288 18.1802C18.0268 18.0754 17.9206 17.9747 17.8102 17.8782C16.8727 17.0443 15.7255 16.482 14.492 16.2518C13.2586 16.0217 11.9858 16.1324 10.8106 16.572C9.74214 15.4956 9.05941 14.0962 8.86865 12.5916C10.9508 11.7221 13.2455 11.4954 15.4575 11.9405C17.6696 12.3856 19.6979 13.4822 21.2818 15.0893C21.3756 15.1831 21.468 15.2797 21.5576 15.379C21.9853 15.842 22.3724 16.3408 22.7148 16.8699C23.847 18.6051 24.478 20.6193 24.5381 22.6903C24.5381 22.8034 24.5381 22.9165 24.5381 23.031Z',
                    fill: 'url(#paint0_linear_503_133)',
                  }),
                  (0, a.jsx)('path', {
                    d: 'M20.0708 22.1606C18.6896 22.7366 17.2076 23.0324 15.7111 23.0309H15.4918C13.4865 22.9904 11.5278 22.4182 9.81608 21.3728C8.10432 20.3274 6.70077 18.8463 5.74886 17.0809C5.54475 16.7029 5.36282 16.3136 5.20391 15.9149C5.05428 15.5394 5.14812 15.112 5.4409 14.8333C6.43642 13.8859 7.59771 13.1266 8.86869 12.5942C9.05945 14.0989 9.74218 15.4983 10.8107 16.5747C10.9569 16.7218 11.109 16.8625 11.2672 16.9968C12.1899 17.7746 13.3005 18.2967 14.4881 18.5109C15.6758 18.7251 16.8988 18.6239 18.0351 18.2174L18.1275 18.1829C19.1941 19.2607 19.8765 20.6594 20.0695 22.1634L20.0708 22.1606Z',
                    fill: 'url(#paint1_linear_503_133)',
                  }),
                  (0, a.jsx)('path', {
                    d: 'M27.0206 11.7209C27.0234 14.5949 25.9287 17.3616 23.9601 19.4556C23.659 18.5452 23.2418 17.6774 22.7188 16.8737C22.3764 16.3446 21.9892 15.8457 21.5616 15.3828C22.2566 14.271 22.6203 12.9842 22.61 11.6731C22.5998 10.3621 22.216 9.08111 21.5037 7.98039C22.3253 6.70516 23.5438 5.73579 24.9711 5.22192C26.3093 7.12443 27.0253 9.39483 27.0206 11.7209Z',
                    fill: 'url(#paint2_linear_503_133)',
                  }),
                  (0, a.jsx)('path', {
                    d: 'M24.971 5.22741C24.0273 5.56535 23.1687 6.10493 22.4548 6.8086C21.741 7.51226 21.1891 8.36308 20.8376 9.30181C20.4862 10.2405 20.3436 11.2446 20.4198 12.244C20.4959 13.2435 20.7891 14.2143 21.2788 15.0889C19.8285 13.6115 17.9995 12.5617 15.9922 12.0546C15.9922 11.9415 15.9922 11.8284 15.9922 11.714C15.9921 9.75573 16.5005 7.83103 17.4676 6.12826C18.3259 4.61703 19.5194 3.32656 20.9528 2.35419C21.2889 2.12614 21.7291 2.12661 22.0647 2.35535C23.1981 3.12757 24.1833 4.1003 24.971 5.22741Z',
                    fill: 'url(#paint3_linear_503_133)',
                  }),
                ],
              }),
              (0, a.jsxs)('defs', {
                children: [
                  (0, a.jsxs)('filter', {
                    id: 'filter0_dd_503_133',
                    x: '-3',
                    y: '0',
                    width: '38',
                    height: '38',
                    filterUnits: 'userSpaceOnUse',
                    colorInterpolationFilters: 'sRGB',
                    children: [
                      (0, a.jsx)('feFlood', { floodOpacity: '0', result: 'BackgroundImageFix' }),
                      (0, a.jsx)('feColorMatrix', {
                        in: 'SourceAlpha',
                        type: 'matrix',
                        values: '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0',
                        result: 'hardAlpha',
                      }),
                      (0, a.jsx)('feOffset', { dy: '1' }),
                      (0, a.jsx)('feGaussianBlur', { stdDeviation: '1' }),
                      (0, a.jsx)('feColorMatrix', {
                        type: 'matrix',
                        values: '0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.06 0',
                      }),
                      (0, a.jsx)('feBlend', {
                        mode: 'normal',
                        in2: 'BackgroundImageFix',
                        result: 'effect1_dropShadow_503_133',
                      }),
                      (0, a.jsx)('feColorMatrix', {
                        in: 'SourceAlpha',
                        type: 'matrix',
                        values: '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0',
                        result: 'hardAlpha',
                      }),
                      (0, a.jsx)('feOffset', { dy: '1' }),
                      (0, a.jsx)('feGaussianBlur', { stdDeviation: '1.5' }),
                      (0, a.jsx)('feColorMatrix', {
                        type: 'matrix',
                        values: '0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.1 0',
                      }),
                      (0, a.jsx)('feBlend', {
                        mode: 'normal',
                        in2: 'effect1_dropShadow_503_133',
                        result: 'effect2_dropShadow_503_133',
                      }),
                      (0, a.jsx)('feBlend', {
                        mode: 'normal',
                        in: 'SourceGraphic',
                        in2: 'effect2_dropShadow_503_133',
                        result: 'shape',
                      }),
                    ],
                  }),
                  (0, a.jsxs)('linearGradient', {
                    id: 'paint0_linear_503_133',
                    x1: '5.98944',
                    y1: '25.9973',
                    x2: '17.5783',
                    y2: '35.1517',
                    gradientUnits: 'userSpaceOnUse',
                    children: [
                      (0, a.jsx)('stop', { stopColor: '#109464' }),
                      (0, a.jsx)('stop', { offset: '0.509773', stopColor: '#5FE493' }),
                      (0, a.jsx)('stop', { offset: '1', stopColor: '#A1FF8B' }),
                    ],
                  }),
                  (0, a.jsxs)('linearGradient', {
                    id: 'paint1_linear_503_133',
                    x1: '8.03835',
                    y1: '23.0901',
                    x2: '17.5332',
                    y2: '23.8983',
                    gradientUnits: 'userSpaceOnUse',
                    children: [
                      (0, a.jsx)('stop', { stopColor: '#A1FF8B' }),
                      (0, a.jsx)('stop', { offset: '0.509773', stopColor: '#5FE493' }),
                      (0, a.jsx)('stop', { offset: '1', stopColor: '#109464' }),
                    ],
                  }),
                  (0, a.jsxs)('linearGradient', {
                    id: 'paint2_linear_503_133',
                    x1: '24.2412',
                    y1: '7.15592',
                    x2: '18.5366',
                    y2: '15.9753',
                    gradientUnits: 'userSpaceOnUse',
                    children: [
                      (0, a.jsx)('stop', { stopColor: '#109464' }),
                      (0, a.jsx)('stop', { offset: '0.328125', stopColor: '#5FE493' }),
                      (0, a.jsx)('stop', { offset: '0.604167', stopColor: '#A1FF8B' }),
                      (0, a.jsx)('stop', { offset: '1', stopColor: '#1A9E6A' }),
                    ],
                  }),
                  (0, a.jsxs)('linearGradient', {
                    id: 'paint3_linear_503_133',
                    x1: '12.8652',
                    y1: '12.1236',
                    x2: '15.4536',
                    y2: '4.7723',
                    gradientUnits: 'userSpaceOnUse',
                    children: [
                      (0, a.jsx)('stop', { stopColor: '#109464' }),
                      (0, a.jsx)('stop', { offset: '0.509773', stopColor: '#5FE493' }),
                      (0, a.jsx)('stop', { offset: '1', stopColor: '#A1FF8B' }),
                    ],
                  }),
                ],
              }),
            ],
          });
        };
      },
      1053: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }), (t.YoursProvider = t.YoursContext = void 0);
        var a = r(579),
          o = r(5043);
        t.YoursContext = (0, o.createContext)(void 0);
        t.YoursProvider = function (e) {
          var r = e.children,
            i = (0, o.useState)({ isReady: !1 }),
            n = i[0],
            s = i[1];
          return (
            (0, o.useEffect)(function () {
              var e = function () {
                var e;
                'yours' in window &&
                  (null === (e = window.yours) || void 0 === e ? void 0 : e.isReady) &&
                  s(window.yours);
              };
              e();
              var t = setInterval(e, 1e3);
              return function () {
                return clearInterval(t);
              };
            }, []),
            (0, a.jsx)(t.YoursContext.Provider, { value: n, children: r })
          );
        };
      },
      8433: (e, t, r) => {
        'use strict';
        Object.defineProperty(t, '__esModule', { value: !0 }), (t.useYoursWallet = void 0);
        var a = r(5043),
          o = r(1053);
        t.useYoursWallet = function () {
          var e = (0, a.useContext)(o.YoursContext);
          if (!e) throw new Error('useYoursWallet must be used within a YoursProvider');
          return e;
        };
      },
      4389: function (e, t, r) {
        'use strict';
        var a =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, r, a) {
                  void 0 === a && (a = r);
                  var o = Object.getOwnPropertyDescriptor(t, r);
                  (o && !('get' in o ? !t.__esModule : o.writable || o.configurable)) ||
                    (o = {
                      enumerable: !0,
                      get: function () {
                        return t[r];
                      },
                    }),
                    Object.defineProperty(e, a, o);
                }
              : function (e, t, r, a) {
                  void 0 === a && (a = r), (e[a] = t[r]);
                }),
          o =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var r in e) 'default' === r || Object.prototype.hasOwnProperty.call(t, r) || a(t, e, r);
            };
        Object.defineProperty(t, '__esModule', { value: !0 }),
          o(r(1053), t),
          o(r(8433), t),
          o(r(9373), t),
          o(r(3319), t);
      },
      9373: (e, t) => {
        'use strict';
        var r, a;
        Object.defineProperty(t, '__esModule', { value: !0 }),
          (t.NetWork = t.Bsv20Status = void 0),
          (function (e) {
            (e[(e.Invalid = -1)] = 'Invalid'), (e[(e.Pending = 0)] = 'Pending'), (e[(e.Valid = 1)] = 'Valid');
          })(r || (t.Bsv20Status = r = {})),
          (function (e) {
            (e.Mainnet = 'mainnet'), (e.Testnet = 'testnet');
          })(a || (t.NetWork = a = {}));
      },
      477: () => {},
      3286: (e, t, r) => {
        'use strict';
        r.d(t, {
          J_: () => i,
          gH: () => n,
          HD: () => _t,
          Vw: () => a,
          EN: () => dt,
          OP: () => rt,
          eF: () => at,
          to: () => qe,
          ZX: () => yt,
          Aq: () => o,
          f2: () => wt,
        });
        var a = {};
        r.r(a),
          r.d(a, {
            RIPEMD160: () => X,
            SHA1: () => Q,
            SHA1HMAC: () => fe,
            SHA256: () => J,
            SHA256HMAC: () => he,
            SHA512: () => Z,
            SHA512HMAC: () => pe,
            hash160: () => we,
            hash256: () => ye,
            pbkdf2: () => Se,
            ripemd160: () => be,
            sha1: () => me,
            sha256: () => ge,
            sha256hmac: () => ke,
            sha512: () => ve,
            sha512hmac: () => Ee,
            toArray: () => m,
          });
        var o = {};
        r.r(o),
          r.d(o, {
            Reader: () => Fe,
            Writer: () => Me,
            encode: () => Pe,
            fromBase58: () => Ne,
            fromBase58Check: () => Re,
            minimallyEncode: () => Ce,
            toArray: () => Ae,
            toBase58: () => Te,
            toBase58Check: () => ze,
            toBase64: () => Ie,
            toHex: () => _e,
            toUTF8: () => Oe,
            zero2: () => xe,
          });
        var i = {};
        r.r(i), r.d(i, { magicHash: () => Et, sign: () => St, verify: () => xt });
        class n {
          static zeros = [
            '',
            '0',
            '00',
            '000',
            '0000',
            '00000',
            '000000',
            '0000000',
            '00000000',
            '000000000',
            '0000000000',
            '00000000000',
            '000000000000',
            '0000000000000',
            '00000000000000',
            '000000000000000',
            '0000000000000000',
            '00000000000000000',
            '000000000000000000',
            '0000000000000000000',
            '00000000000000000000',
            '000000000000000000000',
            '0000000000000000000000',
            '00000000000000000000000',
            '000000000000000000000000',
            '0000000000000000000000000',
          ];
          static groupSizes = [
            0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            5, 5, 5,
          ];
          static groupBases = [
            0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171,
            35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632,
            6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393,
            45435424, 52521875, 60466176,
          ];
          static wordSize = 26;
          negative;
          words;
          length;
          red;
          static isBN(e) {
            return (
              e instanceof n ||
              (null !== e && 'object' === typeof e && e.constructor.wordSize === n.wordSize && Array.isArray(e.words))
            );
          }
          static max(e, t) {
            return e.cmp(t) > 0 ? e : t;
          }
          static min(e, t) {
            return e.cmp(t) < 0 ? e : t;
          }
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'be';
            if (((this.negative = 0), (this.words = []), (this.length = 0), (this.red = null), null !== e)) {
              if ((('le' !== t && 'be' !== t) || ((r = t), (t = 10)), 'number' === typeof e))
                return this.initNumber(e, t, r);
              if ('object' === typeof e) return this.initArray(e, r);
              'hex' === t && (t = 16),
                this.assert(t === (0 | t) && t >= 2 && t <= 36),
                (e = e.toString().replace(/\s+/g, ''));
              let a = 0;
              '-' === e[0] && (a++, (this.negative = 1)),
                a < e.length &&
                  (16 === t
                    ? this.parseHex(e, a, r)
                    : (this.parseBase(e, t, a), 'le' === r && this.initArray(this.toArray(), r)));
            }
          }
          assert(e) {
            if (!e)
              throw new Error(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'Assertion failed');
          }
          initNumber(e, t, r) {
            return (
              e < 0 && ((this.negative = 1), (e = -e)),
              e < 67108864
                ? ((this.words = [67108863 & e]), (this.length = 1))
                : e < 4503599627370496
                  ? ((this.words = [67108863 & e, (e / 67108864) & 67108863]), (this.length = 2))
                  : (this.assert(e < 9007199254740992, 'The number is larger than 2 ^ 53 (unsafe)'),
                    (this.words = [67108863 & e, (e / 67108864) & 67108863, 1]),
                    (this.length = 3)),
              'le' !== r || this.initArray(this.toArray(), r),
              this
            );
          }
          initArray(e, t) {
            if ((this.assert('number' === typeof e.length, 'The number must have a length'), e.length <= 0))
              return (this.words = [0]), (this.length = 1), this;
            (this.length = Math.ceil(e.length / 3)), (this.words = new Array(this.length));
            let r,
              a,
              o = 0;
            for (; o < this.length; o++) this.words[o] = 0;
            let i = 0;
            if ('be' === t)
              for (o = e.length - 1, r = 0; o >= 0; o -= 3)
                (a = e[o] | (e[o - 1] << 8) | (e[o - 2] << 16)),
                  (this.words[r] |= (a << i) & 67108863),
                  (this.words[r + 1] = (a >>> (26 - i)) & 67108863),
                  (i += 24),
                  i >= 26 && ((i -= 26), r++);
            else if ('le' === t)
              for (o = 0, r = 0; o < e.length; o += 3)
                (a = e[o] | (e[o + 1] << 8) | (e[o + 2] << 16)),
                  (this.words[r] |= (a << i) & 67108863),
                  (this.words[r + 1] = (a >>> (26 - i)) & 67108863),
                  (i += 24),
                  i >= 26 && ((i -= 26), r++);
            return this.strip();
          }
          parseHex4Bits(e, t) {
            const r = e.charCodeAt(t);
            if (r >= 48 && r <= 57) return r - 48;
            if (r >= 65 && r <= 70) return r - 55;
            if (r >= 97 && r <= 102) return r - 87;
            throw new Error('Invalid character in ' + e);
          }
          parseHexByte(e, t, r) {
            let a = this.parseHex4Bits(e, r);
            return r - 1 >= t && (a |= this.parseHex4Bits(e, r - 1) << 4), a;
          }
          parseHex(e, t, r) {
            (this.length = Math.ceil((e.length - t) / 6)), (this.words = new Array(this.length));
            let a = 0;
            for (; a < this.length; a++) this.words[a] = 0;
            let o,
              i = 0,
              n = 0;
            if ('be' === r)
              for (a = e.length - 1; a >= t; a -= 2)
                (o = this.parseHexByte(e, t, a) << i),
                  (this.words[n] |= 67108863 & o),
                  i >= 18 ? ((i -= 18), (n += 1), (this.words[n] |= o >>> 26)) : (i += 8);
            else {
              for (a = (e.length - t) % 2 === 0 ? t + 1 : t; a < e.length; a += 2)
                (o = this.parseHexByte(e, t, a) << i),
                  (this.words[n] |= 67108863 & o),
                  i >= 18 ? ((i -= 18), (n += 1), (this.words[n] |= o >>> 26)) : (i += 8);
            }
            return this.strip();
          }
          parseBaseWord(e, t, r, a) {
            let o = 0,
              i = 0;
            const n = Math.min(e.length, r);
            for (let s = t; s < n; s++) {
              const t = e.charCodeAt(s) - 48;
              (o *= a),
                (i = t >= 49 ? t - 49 + 10 : t >= 17 ? t - 17 + 10 : t),
                this.assert(t >= 0 && i < a, 'Invalid character'),
                (o += i);
            }
            return o;
          }
          parseBase(e, t, r) {
            (this.words = [0]), (this.length = 1);
            let a = 0,
              o = 1;
            for (; o <= 67108863; o *= t) a++;
            a--, (o = (o / t) | 0);
            const i = e.length - r,
              n = i % a,
              s = Math.min(i, i - n) + r;
            let c = 0,
              l = r;
            for (; l < s; l += a)
              (c = this.parseBaseWord(e, l, l + a, t)),
                this.imuln(o),
                this.words[0] + c < 67108864 ? (this.words[0] += c) : this._iaddn(c);
            if (0 !== n) {
              let r = 1;
              for (c = this.parseBaseWord(e, l, e.length, t), l = 0; l < n; l++) r *= t;
              this.imuln(r), this.words[0] + c < 67108864 ? (this.words[0] += c) : this._iaddn(c);
            }
            return this.strip();
          }
          copy(e) {
            e.words = new Array(this.length);
            for (let t = 0; t < this.length; t++) e.words[t] = this.words[t];
            (e.length = this.length), (e.negative = this.negative), (e.red = this.red);
          }
          static move(e, t) {
            (e.words = t.words), (e.length = t.length), (e.negative = t.negative), (e.red = t.red);
          }
          clone() {
            const e = new n();
            return this.copy(e), e;
          }
          expand(e) {
            for (; this.length < e; ) this.words[this.length++] = 0;
            return this;
          }
          strip() {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
            return this.normSign();
          }
          normSign() {
            return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
          }
          inspect() {
            return (null !== this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
          }
          toString() {
            let e,
              t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,
              r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
            if (16 === t || 'hex' === t) {
              e = '';
              let t = 0,
                a = 0;
              for (let r = 0; r < this.length; r++) {
                const o = this.words[r],
                  i = (16777215 & ((o << t) | a)).toString(16);
                (a = (o >>> (24 - t)) & 16777215),
                  (t += 2),
                  t >= 26 && ((t -= 26), r--),
                  (e = 0 !== a || r !== this.length - 1 ? n.zeros[6 - i.length] + i + e : i + e);
              }
              if ((0 !== a && (e = a.toString(16) + e), 0 === r && '0' === e)) return '';
              for (; e.length % r !== 0 && 0 !== r; ) e = '0' + e;
              return 0 !== this.negative && (e = '-' + e), e;
            }
            if (t === (0 | t) && t >= 2 && t <= 36) {
              const a = n.groupSizes[t],
                o = n.groupBases[t];
              e = '';
              let i = this.clone();
              for (i.negative = 0; !i.isZero(); ) {
                const r = i.modrn(o).toString(t);
                (i = i.idivn(o)), (e = i.isZero() ? r + e : n.zeros[a - r.length] + r + e);
              }
              for (this.isZero() && (e = '0' + e); e.length % r !== 0; ) e = '0' + e;
              return 0 !== this.negative && (e = '-' + e), e;
            }
            throw new Error('Base should be between 2 and 36');
          }
          toNumber() {
            let e = this.words[0];
            if (2 === this.length) e += 67108864 * this.words[1];
            else if (3 === this.length && 1 === this.words[2]) e += 4503599627370496 + 67108864 * this.words[1];
            else if (this.length > 2) throw new Error('Number can only safely store up to 53 bits');
            return 0 !== this.negative ? -e : e;
          }
          toJSON() {
            return this.toString(16);
          }
          toArrayLikeLE(e, t) {
            let r = 0,
              a = 0;
            for (let o = 0, i = 0; o < this.length; o++) {
              const t = (this.words[o] << i) | a;
              (e[r++] = 255 & t),
                r < e.length && (e[r++] = (t >> 8) & 255),
                r < e.length && (e[r++] = (t >> 16) & 255),
                6 === i ? (r < e.length && (e[r++] = (t >> 24) & 255), (a = 0), (i = 0)) : ((a = t >>> 24), (i += 2));
            }
            if (r < e.length) for (e[r++] = a; r < e.length; ) e[r++] = 0;
          }
          toArrayLikeBE(e, t) {
            let r = e.length - 1,
              a = 0;
            for (let o = 0, i = 0; o < this.length; o++) {
              const t = (this.words[o] << i) | a;
              (e[r--] = 255 & t),
                r >= 0 && (e[r--] = (t >> 8) & 255),
                r >= 0 && (e[r--] = (t >> 16) & 255),
                6 === i ? (r >= 0 && (e[r--] = (t >> 24) & 255), (a = 0), (i = 0)) : ((a = t >>> 24), (i += 2));
            }
            if (r >= 0) for (e[r--] = a; r >= 0; ) e[r--] = 0;
          }
          toArray() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'be',
              t = arguments.length > 1 ? arguments[1] : void 0;
            this.strip();
            const r = this.byteLength(),
              a = t ?? Math.max(1, r);
            this.assert(r <= a, 'byte array longer than desired length'),
              this.assert(a > 0, 'Requested array length <= 0');
            const o = new Array(a);
            return 'le' === e ? this.toArrayLikeLE(o, r) : this.toArrayLikeBE(o, r), o;
          }
          countWordBits(e) {
            if ('function' === typeof Math.clz32) return 32 - Math.clz32(e);
            let t = e,
              r = 0;
            return (
              t >= 4096 && ((r += 13), (t >>>= 13)),
              t >= 64 && ((r += 7), (t >>>= 7)),
              t >= 8 && ((r += 4), (t >>>= 4)),
              t >= 2 && ((r += 2), (t >>>= 2)),
              r + t
            );
          }
          zeroWordBits(e) {
            if (0 === e) return 26;
            let t = e,
              r = 0;
            return (
              0 === (8191 & t) && ((r += 13), (t >>>= 13)),
              0 === (127 & t) && ((r += 7), (t >>>= 7)),
              0 === (15 & t) && ((r += 4), (t >>>= 4)),
              0 === (3 & t) && ((r += 2), (t >>>= 2)),
              0 === (1 & t) && r++,
              r
            );
          }
          bitLength() {
            const e = this.words[this.length - 1],
              t = this.countWordBits(e);
            return 26 * (this.length - 1) + t;
          }
          static toBitArray(e) {
            const t = new Array(e.bitLength());
            for (let r = 0; r < t.length; r++) {
              const a = (r / 26) | 0,
                o = r % 26;
              t[r] = (e.words[a] >>> o) & 1;
            }
            return t;
          }
          toBitArray() {
            return n.toBitArray(this);
          }
          zeroBits() {
            if (this.isZero()) return 0;
            let e = 0;
            for (let t = 0; t < this.length; t++) {
              const r = this.zeroWordBits(this.words[t]);
              if (((e += r), 26 !== r)) break;
            }
            return e;
          }
          byteLength() {
            return Math.ceil(this.bitLength() / 8);
          }
          toTwos(e) {
            return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone();
          }
          fromTwos(e) {
            return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone();
          }
          isNeg() {
            return 0 !== this.negative;
          }
          neg() {
            return this.clone().ineg();
          }
          ineg() {
            return this.isZero() || (this.negative ^= 1), this;
          }
          iuor(e) {
            for (; this.length < e.length; ) this.words[this.length++] = 0;
            for (let t = 0; t < e.length; t++) this.words[t] = this.words[t] | e.words[t];
            return this.strip();
          }
          ior(e) {
            return this.assert(0 === (this.negative | e.negative)), this.iuor(e);
          }
          or(e) {
            return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this);
          }
          uor(e) {
            return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this);
          }
          iuand(e) {
            const t = Math.min(this.length, e.length);
            for (let r = 0; r < t; r++) this.words[r] = this.words[r] & e.words[r];
            return (this.length = t), this.strip();
          }
          iand(e) {
            return this.assert(0 === (this.negative | e.negative)), this.iuand(e);
          }
          and(e) {
            return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this);
          }
          uand(e) {
            return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this);
          }
          iuxor(e) {
            if (this.length > e.length) for (let t = 0; t < e.length; t++) this.words[t] = this.words[t] ^ e.words[t];
            else {
              for (let t = 0; t < this.length; t++) this.words[t] = this.words[t] ^ e.words[t];
              for (let t = this.length; t < e.length; t++) this.words[t] = e.words[t];
              this.length = e.length;
            }
            return this.strip();
          }
          ixor(e) {
            return this.assert(0 === (this.negative | e.negative), 'Neither number can be negative'), this.iuxor(e);
          }
          xor(e) {
            return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this);
          }
          uxor(e) {
            return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this);
          }
          inotn(e) {
            this.assert('number' === typeof e && e >= 0, 'The width needs to be a number greater than zero');
            let t = 0 | Math.ceil(e / 26);
            const r = e % 26;
            this.expand(t), r > 0 && t--;
            let a = 0;
            for (; a < t; a++) this.words[a] = 67108863 & ~this.words[a];
            return r > 0 && (this.words[a] = ~this.words[a] & (67108863 >> (26 - r))), this.strip();
          }
          notn(e) {
            return this.clone().inotn(e);
          }
          setn(e, t) {
            this.assert('number' === typeof e && e >= 0);
            const r = (e / 26) | 0,
              a = e % 26;
            return (
              this.expand(r + 1),
              (this.words[r] = 1 === t || !0 === t ? this.words[r] | (1 << a) : this.words[r] & ~(1 << a)),
              this.strip()
            );
          }
          iadd(e) {
            let t, r, a;
            if (0 !== this.negative && 0 === e.negative)
              return (this.negative = 0), (t = this.isub(e)), (this.negative ^= 1), this.normSign();
            if (0 === this.negative && 0 !== e.negative)
              return (e.negative = 0), (t = this.isub(e)), (e.negative = 1), t.normSign();
            this.length > e.length ? ((r = this), (a = e)) : ((r = e), (a = this));
            let o = 0,
              i = 0;
            for (; i < a.length; i++)
              (t = (0 | r.words[i]) + (0 | a.words[i]) + o), (this.words[i] = 67108863 & t), (o = t >>> 26);
            for (; 0 !== o && i < r.length; i++)
              (t = (0 | r.words[i]) + o), (this.words[i] = 67108863 & t), (o = t >>> 26);
            if (((this.length = r.length), 0 !== o)) (this.words[this.length] = o), this.length++;
            else if (r !== this) for (; i < r.length; i++) this.words[i] = r.words[i];
            return this;
          }
          add(e) {
            let t;
            return 0 !== e.negative && 0 === this.negative
              ? ((e.negative = 0), (t = this.sub(e)), (e.negative ^= 1), t)
              : 0 === e.negative && 0 !== this.negative
                ? ((this.negative = 0), (t = e.sub(this)), (this.negative = 1), t)
                : this.length > e.length
                  ? this.clone().iadd(e)
                  : e.clone().iadd(this);
          }
          isub(e) {
            let t;
            if (0 !== e.negative) return (e.negative = 0), (t = this.iadd(e)), (e.negative = 1), t.normSign();
            if (0 !== this.negative) return (this.negative = 0), this.iadd(e), (this.negative = 1), this.normSign();
            const r = this.cmp(e);
            if (0 === r) return (this.negative = 0), (this.length = 1), (this.words[0] = 0), this;
            let a, o;
            r > 0 ? ((a = this), (o = e)) : ((a = e), (o = this));
            let i = 0,
              n = 0;
            for (; n < o.length; n++)
              (t = (0 | a.words[n]) - (0 | o.words[n]) + i), (i = t >> 26), (this.words[n] = 67108863 & t);
            for (; 0 !== i && n < a.length; n++)
              (t = (0 | a.words[n]) + i), (i = t >> 26), (this.words[n] = 67108863 & t);
            if (0 === i && n < a.length && a !== this) for (; n < a.length; n++) this.words[n] = a.words[n];
            return (this.length = Math.max(this.length, n)), a !== this && (this.negative = 1), this.strip();
          }
          sub(e) {
            return this.clone().isub(e);
          }
          smallMulTo(e, t, r) {
            r.negative = t.negative ^ e.negative;
            let a = (e.length + t.length) | 0;
            (r.length = a), (a = (a - 1) | 0);
            let o = 0 | e.words[0],
              i = 0 | t.words[0],
              n = o * i;
            const s = 67108863 & n;
            let c = (n / 67108864) | 0;
            r.words[0] = s;
            let l = 1;
            for (; l < a; l++) {
              let a = c >>> 26,
                s = 67108863 & c;
              const u = Math.min(l, t.length - 1);
              for (let r = Math.max(0, l - e.length + 1); r <= u; r++) {
                const c = (l - r) | 0;
                (o = 0 | e.words[c]),
                  (i = 0 | t.words[r]),
                  (n = o * i + s),
                  (a += (n / 67108864) | 0),
                  (s = 67108863 & n);
              }
              (r.words[l] = 0 | s), (c = 0 | a);
            }
            return 0 !== c ? (r.words[l] = 0 | c) : r.length--, r.strip();
          }
          comb10MulTo(e, t, r) {
            const a = e.words,
              o = t.words,
              i = r.words;
            let n,
              s,
              c,
              l = 0;
            const u = 0 | a[0],
              d = 8191 & u,
              h = u >>> 13,
              f = 0 | a[1],
              p = 8191 & f,
              b = f >>> 13,
              m = 0 | a[2],
              g = 8191 & m,
              v = m >>> 13,
              y = 0 | a[3],
              w = 8191 & y,
              k = y >>> 13,
              E = 0 | a[4],
              S = 8191 & E,
              x = E >>> 13,
              _ = 0 | a[5],
              A = 8191 & _,
              O = _ >>> 13,
              P = 0 | a[6],
              I = 8191 & P,
              B = P >>> 13,
              N = 0 | a[7],
              T = 8191 & N,
              z = N >>> 13,
              R = 0 | a[8],
              M = 8191 & R,
              F = R >>> 13,
              C = 0 | a[9],
              j = 8191 & C,
              U = C >>> 13,
              D = 0 | o[0],
              L = 8191 & D,
              q = D >>> 13,
              H = 0 | o[1],
              G = 8191 & H,
              K = H >>> 13,
              V = 0 | o[2],
              $ = 8191 & V,
              W = V >>> 13,
              Y = 0 | o[3],
              X = 8191 & Y,
              J = Y >>> 13,
              Q = 0 | o[4],
              Z = 8191 & Q,
              ee = Q >>> 13,
              te = 0 | o[5],
              re = 8191 & te,
              ae = te >>> 13,
              oe = 0 | o[6],
              ie = 8191 & oe,
              ne = oe >>> 13,
              se = 0 | o[7],
              ce = 8191 & se,
              le = se >>> 13,
              ue = 0 | o[8],
              de = 8191 & ue,
              he = ue >>> 13,
              fe = 0 | o[9],
              pe = 8191 & fe,
              be = fe >>> 13;
            (r.negative = e.negative ^ t.negative),
              (r.length = 19),
              (n = Math.imul(d, L)),
              (s = Math.imul(d, q)),
              (s = (s + Math.imul(h, L)) | 0),
              (c = Math.imul(h, q));
            let me = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (me >>> 26)) | 0),
              (me &= 67108863),
              (n = Math.imul(p, L)),
              (s = Math.imul(p, q)),
              (s = (s + Math.imul(b, L)) | 0),
              (c = Math.imul(b, q)),
              (n = (n + Math.imul(d, G)) | 0),
              (s = (s + Math.imul(d, K)) | 0),
              (s = (s + Math.imul(h, G)) | 0),
              (c = (c + Math.imul(h, K)) | 0);
            let ge = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (ge >>> 26)) | 0),
              (ge &= 67108863),
              (n = Math.imul(g, L)),
              (s = Math.imul(g, q)),
              (s = (s + Math.imul(v, L)) | 0),
              (c = Math.imul(v, q)),
              (n = (n + Math.imul(p, G)) | 0),
              (s = (s + Math.imul(p, K)) | 0),
              (s = (s + Math.imul(b, G)) | 0),
              (c = (c + Math.imul(b, K)) | 0),
              (n = (n + Math.imul(d, $)) | 0),
              (s = (s + Math.imul(d, W)) | 0),
              (s = (s + Math.imul(h, $)) | 0),
              (c = (c + Math.imul(h, W)) | 0);
            let ve = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (ve >>> 26)) | 0),
              (ve &= 67108863),
              (n = Math.imul(w, L)),
              (s = Math.imul(w, q)),
              (s = (s + Math.imul(k, L)) | 0),
              (c = Math.imul(k, q)),
              (n = (n + Math.imul(g, G)) | 0),
              (s = (s + Math.imul(g, K)) | 0),
              (s = (s + Math.imul(v, G)) | 0),
              (c = (c + Math.imul(v, K)) | 0),
              (n = (n + Math.imul(p, $)) | 0),
              (s = (s + Math.imul(p, W)) | 0),
              (s = (s + Math.imul(b, $)) | 0),
              (c = (c + Math.imul(b, W)) | 0),
              (n = (n + Math.imul(d, X)) | 0),
              (s = (s + Math.imul(d, J)) | 0),
              (s = (s + Math.imul(h, X)) | 0),
              (c = (c + Math.imul(h, J)) | 0);
            let ye = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (ye >>> 26)) | 0),
              (ye &= 67108863),
              (n = Math.imul(S, L)),
              (s = Math.imul(S, q)),
              (s = (s + Math.imul(x, L)) | 0),
              (c = Math.imul(x, q)),
              (n = (n + Math.imul(w, G)) | 0),
              (s = (s + Math.imul(w, K)) | 0),
              (s = (s + Math.imul(k, G)) | 0),
              (c = (c + Math.imul(k, K)) | 0),
              (n = (n + Math.imul(g, $)) | 0),
              (s = (s + Math.imul(g, W)) | 0),
              (s = (s + Math.imul(v, $)) | 0),
              (c = (c + Math.imul(v, W)) | 0),
              (n = (n + Math.imul(p, X)) | 0),
              (s = (s + Math.imul(p, J)) | 0),
              (s = (s + Math.imul(b, X)) | 0),
              (c = (c + Math.imul(b, J)) | 0),
              (n = (n + Math.imul(d, Z)) | 0),
              (s = (s + Math.imul(d, ee)) | 0),
              (s = (s + Math.imul(h, Z)) | 0),
              (c = (c + Math.imul(h, ee)) | 0);
            let we = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (we >>> 26)) | 0),
              (we &= 67108863),
              (n = Math.imul(A, L)),
              (s = Math.imul(A, q)),
              (s = (s + Math.imul(O, L)) | 0),
              (c = Math.imul(O, q)),
              (n = (n + Math.imul(S, G)) | 0),
              (s = (s + Math.imul(S, K)) | 0),
              (s = (s + Math.imul(x, G)) | 0),
              (c = (c + Math.imul(x, K)) | 0),
              (n = (n + Math.imul(w, $)) | 0),
              (s = (s + Math.imul(w, W)) | 0),
              (s = (s + Math.imul(k, $)) | 0),
              (c = (c + Math.imul(k, W)) | 0),
              (n = (n + Math.imul(g, X)) | 0),
              (s = (s + Math.imul(g, J)) | 0),
              (s = (s + Math.imul(v, X)) | 0),
              (c = (c + Math.imul(v, J)) | 0),
              (n = (n + Math.imul(p, Z)) | 0),
              (s = (s + Math.imul(p, ee)) | 0),
              (s = (s + Math.imul(b, Z)) | 0),
              (c = (c + Math.imul(b, ee)) | 0),
              (n = (n + Math.imul(d, re)) | 0),
              (s = (s + Math.imul(d, ae)) | 0),
              (s = (s + Math.imul(h, re)) | 0),
              (c = (c + Math.imul(h, ae)) | 0);
            let ke = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (ke >>> 26)) | 0),
              (ke &= 67108863),
              (n = Math.imul(I, L)),
              (s = Math.imul(I, q)),
              (s = (s + Math.imul(B, L)) | 0),
              (c = Math.imul(B, q)),
              (n = (n + Math.imul(A, G)) | 0),
              (s = (s + Math.imul(A, K)) | 0),
              (s = (s + Math.imul(O, G)) | 0),
              (c = (c + Math.imul(O, K)) | 0),
              (n = (n + Math.imul(S, $)) | 0),
              (s = (s + Math.imul(S, W)) | 0),
              (s = (s + Math.imul(x, $)) | 0),
              (c = (c + Math.imul(x, W)) | 0),
              (n = (n + Math.imul(w, X)) | 0),
              (s = (s + Math.imul(w, J)) | 0),
              (s = (s + Math.imul(k, X)) | 0),
              (c = (c + Math.imul(k, J)) | 0),
              (n = (n + Math.imul(g, Z)) | 0),
              (s = (s + Math.imul(g, ee)) | 0),
              (s = (s + Math.imul(v, Z)) | 0),
              (c = (c + Math.imul(v, ee)) | 0),
              (n = (n + Math.imul(p, re)) | 0),
              (s = (s + Math.imul(p, ae)) | 0),
              (s = (s + Math.imul(b, re)) | 0),
              (c = (c + Math.imul(b, ae)) | 0),
              (n = (n + Math.imul(d, ie)) | 0),
              (s = (s + Math.imul(d, ne)) | 0),
              (s = (s + Math.imul(h, ie)) | 0),
              (c = (c + Math.imul(h, ne)) | 0);
            let Ee = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Ee >>> 26)) | 0),
              (Ee &= 67108863),
              (n = Math.imul(T, L)),
              (s = Math.imul(T, q)),
              (s = (s + Math.imul(z, L)) | 0),
              (c = Math.imul(z, q)),
              (n = (n + Math.imul(I, G)) | 0),
              (s = (s + Math.imul(I, K)) | 0),
              (s = (s + Math.imul(B, G)) | 0),
              (c = (c + Math.imul(B, K)) | 0),
              (n = (n + Math.imul(A, $)) | 0),
              (s = (s + Math.imul(A, W)) | 0),
              (s = (s + Math.imul(O, $)) | 0),
              (c = (c + Math.imul(O, W)) | 0),
              (n = (n + Math.imul(S, X)) | 0),
              (s = (s + Math.imul(S, J)) | 0),
              (s = (s + Math.imul(x, X)) | 0),
              (c = (c + Math.imul(x, J)) | 0),
              (n = (n + Math.imul(w, Z)) | 0),
              (s = (s + Math.imul(w, ee)) | 0),
              (s = (s + Math.imul(k, Z)) | 0),
              (c = (c + Math.imul(k, ee)) | 0),
              (n = (n + Math.imul(g, re)) | 0),
              (s = (s + Math.imul(g, ae)) | 0),
              (s = (s + Math.imul(v, re)) | 0),
              (c = (c + Math.imul(v, ae)) | 0),
              (n = (n + Math.imul(p, ie)) | 0),
              (s = (s + Math.imul(p, ne)) | 0),
              (s = (s + Math.imul(b, ie)) | 0),
              (c = (c + Math.imul(b, ne)) | 0),
              (n = (n + Math.imul(d, ce)) | 0),
              (s = (s + Math.imul(d, le)) | 0),
              (s = (s + Math.imul(h, ce)) | 0),
              (c = (c + Math.imul(h, le)) | 0);
            let Se = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Se >>> 26)) | 0),
              (Se &= 67108863),
              (n = Math.imul(M, L)),
              (s = Math.imul(M, q)),
              (s = (s + Math.imul(F, L)) | 0),
              (c = Math.imul(F, q)),
              (n = (n + Math.imul(T, G)) | 0),
              (s = (s + Math.imul(T, K)) | 0),
              (s = (s + Math.imul(z, G)) | 0),
              (c = (c + Math.imul(z, K)) | 0),
              (n = (n + Math.imul(I, $)) | 0),
              (s = (s + Math.imul(I, W)) | 0),
              (s = (s + Math.imul(B, $)) | 0),
              (c = (c + Math.imul(B, W)) | 0),
              (n = (n + Math.imul(A, X)) | 0),
              (s = (s + Math.imul(A, J)) | 0),
              (s = (s + Math.imul(O, X)) | 0),
              (c = (c + Math.imul(O, J)) | 0),
              (n = (n + Math.imul(S, Z)) | 0),
              (s = (s + Math.imul(S, ee)) | 0),
              (s = (s + Math.imul(x, Z)) | 0),
              (c = (c + Math.imul(x, ee)) | 0),
              (n = (n + Math.imul(w, re)) | 0),
              (s = (s + Math.imul(w, ae)) | 0),
              (s = (s + Math.imul(k, re)) | 0),
              (c = (c + Math.imul(k, ae)) | 0),
              (n = (n + Math.imul(g, ie)) | 0),
              (s = (s + Math.imul(g, ne)) | 0),
              (s = (s + Math.imul(v, ie)) | 0),
              (c = (c + Math.imul(v, ne)) | 0),
              (n = (n + Math.imul(p, ce)) | 0),
              (s = (s + Math.imul(p, le)) | 0),
              (s = (s + Math.imul(b, ce)) | 0),
              (c = (c + Math.imul(b, le)) | 0),
              (n = (n + Math.imul(d, de)) | 0),
              (s = (s + Math.imul(d, he)) | 0),
              (s = (s + Math.imul(h, de)) | 0),
              (c = (c + Math.imul(h, he)) | 0);
            let xe = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (xe >>> 26)) | 0),
              (xe &= 67108863),
              (n = Math.imul(j, L)),
              (s = Math.imul(j, q)),
              (s = (s + Math.imul(U, L)) | 0),
              (c = Math.imul(U, q)),
              (n = (n + Math.imul(M, G)) | 0),
              (s = (s + Math.imul(M, K)) | 0),
              (s = (s + Math.imul(F, G)) | 0),
              (c = (c + Math.imul(F, K)) | 0),
              (n = (n + Math.imul(T, $)) | 0),
              (s = (s + Math.imul(T, W)) | 0),
              (s = (s + Math.imul(z, $)) | 0),
              (c = (c + Math.imul(z, W)) | 0),
              (n = (n + Math.imul(I, X)) | 0),
              (s = (s + Math.imul(I, J)) | 0),
              (s = (s + Math.imul(B, X)) | 0),
              (c = (c + Math.imul(B, J)) | 0),
              (n = (n + Math.imul(A, Z)) | 0),
              (s = (s + Math.imul(A, ee)) | 0),
              (s = (s + Math.imul(O, Z)) | 0),
              (c = (c + Math.imul(O, ee)) | 0),
              (n = (n + Math.imul(S, re)) | 0),
              (s = (s + Math.imul(S, ae)) | 0),
              (s = (s + Math.imul(x, re)) | 0),
              (c = (c + Math.imul(x, ae)) | 0),
              (n = (n + Math.imul(w, ie)) | 0),
              (s = (s + Math.imul(w, ne)) | 0),
              (s = (s + Math.imul(k, ie)) | 0),
              (c = (c + Math.imul(k, ne)) | 0),
              (n = (n + Math.imul(g, ce)) | 0),
              (s = (s + Math.imul(g, le)) | 0),
              (s = (s + Math.imul(v, ce)) | 0),
              (c = (c + Math.imul(v, le)) | 0),
              (n = (n + Math.imul(p, de)) | 0),
              (s = (s + Math.imul(p, he)) | 0),
              (s = (s + Math.imul(b, de)) | 0),
              (c = (c + Math.imul(b, he)) | 0),
              (n = (n + Math.imul(d, pe)) | 0),
              (s = (s + Math.imul(d, be)) | 0),
              (s = (s + Math.imul(h, pe)) | 0),
              (c = (c + Math.imul(h, be)) | 0);
            let _e = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (_e >>> 26)) | 0),
              (_e &= 67108863),
              (n = Math.imul(j, G)),
              (s = Math.imul(j, K)),
              (s = (s + Math.imul(U, G)) | 0),
              (c = Math.imul(U, K)),
              (n = (n + Math.imul(M, $)) | 0),
              (s = (s + Math.imul(M, W)) | 0),
              (s = (s + Math.imul(F, $)) | 0),
              (c = (c + Math.imul(F, W)) | 0),
              (n = (n + Math.imul(T, X)) | 0),
              (s = (s + Math.imul(T, J)) | 0),
              (s = (s + Math.imul(z, X)) | 0),
              (c = (c + Math.imul(z, J)) | 0),
              (n = (n + Math.imul(I, Z)) | 0),
              (s = (s + Math.imul(I, ee)) | 0),
              (s = (s + Math.imul(B, Z)) | 0),
              (c = (c + Math.imul(B, ee)) | 0),
              (n = (n + Math.imul(A, re)) | 0),
              (s = (s + Math.imul(A, ae)) | 0),
              (s = (s + Math.imul(O, re)) | 0),
              (c = (c + Math.imul(O, ae)) | 0),
              (n = (n + Math.imul(S, ie)) | 0),
              (s = (s + Math.imul(S, ne)) | 0),
              (s = (s + Math.imul(x, ie)) | 0),
              (c = (c + Math.imul(x, ne)) | 0),
              (n = (n + Math.imul(w, ce)) | 0),
              (s = (s + Math.imul(w, le)) | 0),
              (s = (s + Math.imul(k, ce)) | 0),
              (c = (c + Math.imul(k, le)) | 0),
              (n = (n + Math.imul(g, de)) | 0),
              (s = (s + Math.imul(g, he)) | 0),
              (s = (s + Math.imul(v, de)) | 0),
              (c = (c + Math.imul(v, he)) | 0),
              (n = (n + Math.imul(p, pe)) | 0),
              (s = (s + Math.imul(p, be)) | 0),
              (s = (s + Math.imul(b, pe)) | 0),
              (c = (c + Math.imul(b, be)) | 0);
            let Ae = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Ae >>> 26)) | 0),
              (Ae &= 67108863),
              (n = Math.imul(j, $)),
              (s = Math.imul(j, W)),
              (s = (s + Math.imul(U, $)) | 0),
              (c = Math.imul(U, W)),
              (n = (n + Math.imul(M, X)) | 0),
              (s = (s + Math.imul(M, J)) | 0),
              (s = (s + Math.imul(F, X)) | 0),
              (c = (c + Math.imul(F, J)) | 0),
              (n = (n + Math.imul(T, Z)) | 0),
              (s = (s + Math.imul(T, ee)) | 0),
              (s = (s + Math.imul(z, Z)) | 0),
              (c = (c + Math.imul(z, ee)) | 0),
              (n = (n + Math.imul(I, re)) | 0),
              (s = (s + Math.imul(I, ae)) | 0),
              (s = (s + Math.imul(B, re)) | 0),
              (c = (c + Math.imul(B, ae)) | 0),
              (n = (n + Math.imul(A, ie)) | 0),
              (s = (s + Math.imul(A, ne)) | 0),
              (s = (s + Math.imul(O, ie)) | 0),
              (c = (c + Math.imul(O, ne)) | 0),
              (n = (n + Math.imul(S, ce)) | 0),
              (s = (s + Math.imul(S, le)) | 0),
              (s = (s + Math.imul(x, ce)) | 0),
              (c = (c + Math.imul(x, le)) | 0),
              (n = (n + Math.imul(w, de)) | 0),
              (s = (s + Math.imul(w, he)) | 0),
              (s = (s + Math.imul(k, de)) | 0),
              (c = (c + Math.imul(k, he)) | 0),
              (n = (n + Math.imul(g, pe)) | 0),
              (s = (s + Math.imul(g, be)) | 0),
              (s = (s + Math.imul(v, pe)) | 0),
              (c = (c + Math.imul(v, be)) | 0);
            let Oe = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Oe >>> 26)) | 0),
              (Oe &= 67108863),
              (n = Math.imul(j, X)),
              (s = Math.imul(j, J)),
              (s = (s + Math.imul(U, X)) | 0),
              (c = Math.imul(U, J)),
              (n = (n + Math.imul(M, Z)) | 0),
              (s = (s + Math.imul(M, ee)) | 0),
              (s = (s + Math.imul(F, Z)) | 0),
              (c = (c + Math.imul(F, ee)) | 0),
              (n = (n + Math.imul(T, re)) | 0),
              (s = (s + Math.imul(T, ae)) | 0),
              (s = (s + Math.imul(z, re)) | 0),
              (c = (c + Math.imul(z, ae)) | 0),
              (n = (n + Math.imul(I, ie)) | 0),
              (s = (s + Math.imul(I, ne)) | 0),
              (s = (s + Math.imul(B, ie)) | 0),
              (c = (c + Math.imul(B, ne)) | 0),
              (n = (n + Math.imul(A, ce)) | 0),
              (s = (s + Math.imul(A, le)) | 0),
              (s = (s + Math.imul(O, ce)) | 0),
              (c = (c + Math.imul(O, le)) | 0),
              (n = (n + Math.imul(S, de)) | 0),
              (s = (s + Math.imul(S, he)) | 0),
              (s = (s + Math.imul(x, de)) | 0),
              (c = (c + Math.imul(x, he)) | 0),
              (n = (n + Math.imul(w, pe)) | 0),
              (s = (s + Math.imul(w, be)) | 0),
              (s = (s + Math.imul(k, pe)) | 0),
              (c = (c + Math.imul(k, be)) | 0);
            let Pe = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Pe >>> 26)) | 0),
              (Pe &= 67108863),
              (n = Math.imul(j, Z)),
              (s = Math.imul(j, ee)),
              (s = (s + Math.imul(U, Z)) | 0),
              (c = Math.imul(U, ee)),
              (n = (n + Math.imul(M, re)) | 0),
              (s = (s + Math.imul(M, ae)) | 0),
              (s = (s + Math.imul(F, re)) | 0),
              (c = (c + Math.imul(F, ae)) | 0),
              (n = (n + Math.imul(T, ie)) | 0),
              (s = (s + Math.imul(T, ne)) | 0),
              (s = (s + Math.imul(z, ie)) | 0),
              (c = (c + Math.imul(z, ne)) | 0),
              (n = (n + Math.imul(I, ce)) | 0),
              (s = (s + Math.imul(I, le)) | 0),
              (s = (s + Math.imul(B, ce)) | 0),
              (c = (c + Math.imul(B, le)) | 0),
              (n = (n + Math.imul(A, de)) | 0),
              (s = (s + Math.imul(A, he)) | 0),
              (s = (s + Math.imul(O, de)) | 0),
              (c = (c + Math.imul(O, he)) | 0),
              (n = (n + Math.imul(S, pe)) | 0),
              (s = (s + Math.imul(S, be)) | 0),
              (s = (s + Math.imul(x, pe)) | 0),
              (c = (c + Math.imul(x, be)) | 0);
            let Ie = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Ie >>> 26)) | 0),
              (Ie &= 67108863),
              (n = Math.imul(j, re)),
              (s = Math.imul(j, ae)),
              (s = (s + Math.imul(U, re)) | 0),
              (c = Math.imul(U, ae)),
              (n = (n + Math.imul(M, ie)) | 0),
              (s = (s + Math.imul(M, ne)) | 0),
              (s = (s + Math.imul(F, ie)) | 0),
              (c = (c + Math.imul(F, ne)) | 0),
              (n = (n + Math.imul(T, ce)) | 0),
              (s = (s + Math.imul(T, le)) | 0),
              (s = (s + Math.imul(z, ce)) | 0),
              (c = (c + Math.imul(z, le)) | 0),
              (n = (n + Math.imul(I, de)) | 0),
              (s = (s + Math.imul(I, he)) | 0),
              (s = (s + Math.imul(B, de)) | 0),
              (c = (c + Math.imul(B, he)) | 0),
              (n = (n + Math.imul(A, pe)) | 0),
              (s = (s + Math.imul(A, be)) | 0),
              (s = (s + Math.imul(O, pe)) | 0),
              (c = (c + Math.imul(O, be)) | 0);
            let Be = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Be >>> 26)) | 0),
              (Be &= 67108863),
              (n = Math.imul(j, ie)),
              (s = Math.imul(j, ne)),
              (s = (s + Math.imul(U, ie)) | 0),
              (c = Math.imul(U, ne)),
              (n = (n + Math.imul(M, ce)) | 0),
              (s = (s + Math.imul(M, le)) | 0),
              (s = (s + Math.imul(F, ce)) | 0),
              (c = (c + Math.imul(F, le)) | 0),
              (n = (n + Math.imul(T, de)) | 0),
              (s = (s + Math.imul(T, he)) | 0),
              (s = (s + Math.imul(z, de)) | 0),
              (c = (c + Math.imul(z, he)) | 0),
              (n = (n + Math.imul(I, pe)) | 0),
              (s = (s + Math.imul(I, be)) | 0),
              (s = (s + Math.imul(B, pe)) | 0),
              (c = (c + Math.imul(B, be)) | 0);
            let Ne = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Ne >>> 26)) | 0),
              (Ne &= 67108863),
              (n = Math.imul(j, ce)),
              (s = Math.imul(j, le)),
              (s = (s + Math.imul(U, ce)) | 0),
              (c = Math.imul(U, le)),
              (n = (n + Math.imul(M, de)) | 0),
              (s = (s + Math.imul(M, he)) | 0),
              (s = (s + Math.imul(F, de)) | 0),
              (c = (c + Math.imul(F, he)) | 0),
              (n = (n + Math.imul(T, pe)) | 0),
              (s = (s + Math.imul(T, be)) | 0),
              (s = (s + Math.imul(z, pe)) | 0),
              (c = (c + Math.imul(z, be)) | 0);
            let Te = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (Te >>> 26)) | 0),
              (Te &= 67108863),
              (n = Math.imul(j, de)),
              (s = Math.imul(j, he)),
              (s = (s + Math.imul(U, de)) | 0),
              (c = Math.imul(U, he)),
              (n = (n + Math.imul(M, pe)) | 0),
              (s = (s + Math.imul(M, be)) | 0),
              (s = (s + Math.imul(F, pe)) | 0),
              (c = (c + Math.imul(F, be)) | 0);
            let ze = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            (l = (((c + (s >>> 13)) | 0) + (ze >>> 26)) | 0),
              (ze &= 67108863),
              (n = Math.imul(j, pe)),
              (s = Math.imul(j, be)),
              (s = (s + Math.imul(U, pe)) | 0),
              (c = Math.imul(U, be));
            let Re = (((l + n) | 0) + ((8191 & s) << 13)) | 0;
            return (
              (l = (((c + (s >>> 13)) | 0) + (Re >>> 26)) | 0),
              (Re &= 67108863),
              (i[0] = me),
              (i[1] = ge),
              (i[2] = ve),
              (i[3] = ye),
              (i[4] = we),
              (i[5] = ke),
              (i[6] = Ee),
              (i[7] = Se),
              (i[8] = xe),
              (i[9] = _e),
              (i[10] = Ae),
              (i[11] = Oe),
              (i[12] = Pe),
              (i[13] = Ie),
              (i[14] = Be),
              (i[15] = Ne),
              (i[16] = Te),
              (i[17] = ze),
              (i[18] = Re),
              0 !== l && ((i[19] = l), r.length++),
              r
            );
          }
          bigMulTo(e, t, r) {
            (r.negative = t.negative ^ e.negative), (r.length = e.length + t.length);
            let a = 0,
              o = 0,
              i = 0;
            for (; i < r.length - 1; i++) {
              let n = o;
              o = 0;
              let s = 67108863 & a;
              const c = Math.min(i, t.length - 1);
              for (let r = Math.max(0, i - e.length + 1); r <= c; r++) {
                const a = i - r,
                  c = (0 | e.words[a]) * (0 | t.words[r]);
                let l = 67108863 & c;
                (n = (n + ((c / 67108864) | 0)) | 0),
                  (l = (l + s) | 0),
                  (s = 67108863 & l),
                  (n = (n + (l >>> 26)) | 0),
                  (o += n >>> 26),
                  (n &= 67108863);
              }
              (r.words[i] = s), (a = n), (n = o);
            }
            return 0 !== a ? (r.words[i] = a) : r.length--, r.strip();
          }
          mulTo(e, t) {
            let r;
            const a = this.length + e.length;
            return (
              (r =
                10 === this.length && 10 === e.length
                  ? this.comb10MulTo(this, e, t)
                  : a < 63
                    ? this.smallMulTo(this, e, t)
                    : this.bigMulTo(this, e, t)),
              r
            );
          }
          mul(e) {
            const t = new n();
            return (t.words = new Array(this.length + e.length)), this.mulTo(e, t);
          }
          imul(e) {
            return this.clone().mulTo(e, this);
          }
          imuln(e) {
            const t = e < 0;
            t && (e = -e), this.assert('number' === typeof e), this.assert(e < 67108864);
            let r = 0,
              a = 0;
            for (; a < this.length; a++) {
              const t = (0 | this.words[a]) * e,
                o = (67108863 & t) + (67108863 & r);
              (r >>= 26), (r += (t / 67108864) | 0), (r += o >>> 26), (this.words[a] = 67108863 & o);
            }
            return 0 !== r && ((this.words[a] = r), this.length++), t ? this.ineg() : this;
          }
          muln(e) {
            return this.clone().imuln(e);
          }
          sqr() {
            return this.mul(this);
          }
          isqr() {
            return this.imul(this.clone());
          }
          pow(e) {
            const t = n.toBitArray(e);
            if (0 === t.length) return new n(1);
            let r = this,
              a = 0;
            for (; a < t.length && 0 === t[a]; a++, r = r.sqr());
            if (++a < t.length) for (let o = r.sqr(); a < t.length; a++, o = o.sqr()) 0 !== t[a] && (r = r.mul(o));
            return r;
          }
          iushln(e) {
            this.assert('number' === typeof e && e >= 0);
            const t = e % 26,
              r = (e - t) / 26,
              a = (67108863 >>> (26 - t)) << (26 - t);
            let o;
            if (0 !== t) {
              let e = 0;
              for (o = 0; o < this.length; o++) {
                const r = this.words[o] & a,
                  i = ((0 | this.words[o]) - r) << t;
                (this.words[o] = i | e), (e = r >>> (26 - t));
              }
              0 !== e && ((this.words[o] = e), this.length++);
            }
            if (0 !== r) {
              for (o = this.length - 1; o >= 0; o--) this.words[o + r] = this.words[o];
              for (o = 0; o < r; o++) this.words[o] = 0;
              this.length += r;
            }
            return this.strip();
          }
          ishln(e) {
            return this.assert(0 === this.negative), this.iushln(e);
          }
          iushrn(e, t, r) {
            let a;
            this.assert('number' === typeof e && e >= 0),
              (a = 'number' === typeof t && 0 !== t ? (t - (t % 26)) / 26 : 0);
            const o = e % 26,
              i = Math.min((e - o) / 26, this.length),
              n = 67108863 ^ ((67108863 >>> o) << o),
              s = r;
            (a -= i), (a = Math.max(0, a));
            let c = 0;
            if ('undefined' !== typeof s) {
              for (; c < i; c++) s.words[c] = this.words[c];
              s.length = i;
            }
            if (0 === i);
            else if (this.length > i)
              for (this.length -= i, c = 0; c < this.length; c++) this.words[c] = this.words[c + i];
            else (this.words[0] = 0), (this.length = 1);
            let l = 0;
            for (c = this.length - 1; c >= 0 && (0 !== l || c >= a); c--) {
              const e = 0 | this.words[c];
              (this.words[c] = (l << (26 - o)) | (e >>> o)), (l = e & n);
            }
            return (
              null != s && 0 !== l && (s.words[s.length++] = l),
              0 === this.length && ((this.words[0] = 0), (this.length = 1)),
              this.strip()
            );
          }
          ishrn(e, t, r) {
            return this.assert(0 === this.negative), this.iushrn(e, t, r);
          }
          shln(e) {
            return this.clone().ishln(e);
          }
          ushln(e) {
            return this.clone().iushln(e);
          }
          shrn(e) {
            return this.clone().ishrn(e);
          }
          ushrn(e) {
            return this.clone().iushrn(e);
          }
          testn(e) {
            this.assert('number' === typeof e && e >= 0);
            const t = e % 26,
              r = (e - t) / 26,
              a = 1 << t;
            if (this.length <= r) return !1;
            const o = this.words[r];
            return Boolean(o & a);
          }
          imaskn(e) {
            this.assert('number' === typeof e && e >= 0);
            const t = e % 26;
            let r = (e - t) / 26;
            if ((this.assert(0 === this.negative, 'imaskn works only with positive numbers'), this.length <= r))
              return this;
            if ((0 !== t && r++, (this.length = Math.min(r, this.length)), 0 !== t)) {
              const e = 67108863 ^ ((67108863 >>> t) << t);
              this.words[this.length - 1] &= e;
            }
            return this.strip();
          }
          maskn(e) {
            return this.clone().imaskn(e);
          }
          iaddn(e) {
            return (
              this.assert('number' === typeof e),
              this.assert(e < 67108864, 'num is too large'),
              e < 0
                ? this.isubn(-e)
                : 0 !== this.negative
                  ? 1 === this.length && (0 | this.words[0]) <= e
                    ? ((this.words[0] = e - (0 | this.words[0])), (this.negative = 0), this)
                    : ((this.negative = 0), this.isubn(e), (this.negative = 1), this)
                  : this._iaddn(e)
            );
          }
          _iaddn(e) {
            this.words[0] += e;
            let t = 0;
            for (; t < this.length && this.words[t] >= 67108864; t++)
              (this.words[t] -= 67108864), t === this.length - 1 ? (this.words[t + 1] = 1) : this.words[t + 1]++;
            return (this.length = Math.max(this.length, t + 1)), this;
          }
          isubn(e) {
            if ((this.assert('number' === typeof e), this.assert(e < 67108864), e < 0)) return this.iaddn(-e);
            if (0 !== this.negative) return (this.negative = 0), this.iaddn(e), (this.negative = 1), this;
            if (((this.words[0] -= e), 1 === this.length && this.words[0] < 0))
              (this.words[0] = -this.words[0]), (this.negative = 1);
            else
              for (let t = 0; t < this.length && this.words[t] < 0; t++)
                (this.words[t] += 67108864), (this.words[t + 1] -= 1);
            return this.strip();
          }
          addn(e) {
            return this.clone().iaddn(e);
          }
          subn(e) {
            return this.clone().isubn(e);
          }
          iabs() {
            return (this.negative = 0), this;
          }
          abs() {
            return this.clone().iabs();
          }
          _ishlnsubmul(e, t, r) {
            const a = e.length + r;
            let o, i;
            this.expand(a);
            let n = 0;
            for (o = 0; o < e.length; o++) {
              i = (0 | this.words[o + r]) + n;
              const a = (0 | e.words[o]) * t;
              (i -= 67108863 & a), (n = (i >> 26) - ((a / 67108864) | 0)), (this.words[o + r] = 67108863 & i);
            }
            for (; o < this.length - r; o++)
              (i = (0 | this.words[o + r]) + n), (n = i >> 26), (this.words[o + r] = 67108863 & i);
            if (0 === n) return this.strip();
            for (this.assert(-1 === n, 'carry must be -1'), n = 0, o = 0; o < this.length; o++)
              (i = -(0 | this.words[o]) + n), (n = i >> 26), (this.words[o] = 67108863 & i);
            return (this.negative = 1), this.strip();
          }
          wordDiv(e, t) {
            let r = this.length - e.length,
              a = this.clone(),
              o = e,
              i = 0 | o.words[o.length - 1];
            (r = 26 - this.countWordBits(i)),
              0 !== r && ((o = o.ushln(r)), a.iushln(r), (i = 0 | o.words[o.length - 1]));
            const s = a.length - o.length;
            let c;
            if ('mod' !== t) {
              (c = new n()), (c.length = s + 1), (c.words = new Array(c.length));
              for (let e = 0; e < c.length; e++) c.words[e] = 0;
            }
            const l = a.clone()._ishlnsubmul(o, 1, s);
            0 === l.negative && ((a = l), 'undefined' !== typeof c && (c.words[s] = 1));
            for (let n = s - 1; n >= 0; n--) {
              let e = 67108864 * (0 | a.words[o.length + n]) + (0 | a.words[o.length + n - 1]);
              for (e = Math.min((e / i) | 0, 67108863), a._ishlnsubmul(o, e, n); 0 !== a.negative; )
                e--, (a.negative = 0), a._ishlnsubmul(o, 1, n), a.isZero() || (a.negative ^= 1);
              'undefined' !== typeof c && (c.words[n] = e);
            }
            return (
              'undefined' !== typeof c && c.strip(),
              a.strip(),
              'div' !== t && 0 !== r && a.iushrn(r),
              { div: c ?? null, mod: a }
            );
          }
          divmod(e, t, r) {
            if ((this.assert(!e.isZero()), this.isZero())) return { div: new n(0), mod: new n(0) };
            let a, o, i;
            return 0 !== this.negative && 0 === e.negative
              ? ((i = this.neg().divmod(e, t)),
                'mod' !== t && (a = i.div.neg()),
                'div' !== t && ((o = i.mod.neg()), r && 0 !== o.negative && o.iadd(e)),
                { div: a, mod: o })
              : 0 === this.negative && 0 !== e.negative
                ? ((i = this.divmod(e.neg(), t)), 'mod' !== t && (a = i.div.neg()), { div: a, mod: i.mod })
                : 0 !== (this.negative & e.negative)
                  ? ((i = this.neg().divmod(e.neg(), t)),
                    'div' !== t && ((o = i.mod.neg()), r && 0 !== o.negative && o.isub(e)),
                    { div: i.div, mod: o })
                  : e.length > this.length || this.cmp(e) < 0
                    ? { div: new n(0), mod: this }
                    : 1 === e.length
                      ? 'div' === t
                        ? { div: this.divn(e.words[0]), mod: null }
                        : 'mod' === t
                          ? { div: null, mod: new n(this.modrn(e.words[0])) }
                          : { div: this.divn(e.words[0]), mod: new n(this.modrn(e.words[0])) }
                      : this.wordDiv(e, t);
          }
          div(e) {
            return this.divmod(e, 'div', !1).div;
          }
          mod(e) {
            return this.divmod(e, 'mod', !1).mod;
          }
          umod(e) {
            return this.divmod(e, 'mod', !0).mod;
          }
          divRound(e) {
            const t = this.divmod(e);
            if (t.mod.isZero()) return t.div;
            const r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod,
              a = e.ushrn(1),
              o = e.andln(1),
              i = r.cmp(a);
            return i < 0 || (1 === o && 0 === i) ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1);
          }
          modrn(e) {
            const t = e < 0;
            t && (e = -e), this.assert(e <= 67108863);
            const r = (1 << 26) % e;
            let a = 0;
            for (let o = this.length - 1; o >= 0; o--) a = (r * a + (0 | this.words[o])) % e;
            return t ? -a : a;
          }
          idivn(e) {
            const t = e < 0;
            t && (e = -e), this.assert(e <= 67108863);
            let r = 0;
            for (let a = this.length - 1; a >= 0; a--) {
              const t = (0 | this.words[a]) + 67108864 * r;
              (this.words[a] = (t / e) | 0), (r = t % e);
            }
            return this.strip(), t ? this.ineg() : this;
          }
          divn(e) {
            return this.clone().idivn(e);
          }
          egcd(e) {
            this.assert(0 === e.negative, 'p must not be negative'), this.assert(!e.isZero(), 'p must not be zero');
            let t = this;
            const r = e.clone();
            t = 0 !== t.negative ? t.umod(e) : t.clone();
            const a = new n(1),
              o = new n(0),
              i = new n(0),
              s = new n(1);
            let c = 0;
            for (; t.isEven() && r.isEven(); ) t.iushrn(1), r.iushrn(1), ++c;
            const l = r.clone(),
              u = t.clone();
            for (; !t.isZero(); ) {
              let e = 0,
                n = 1;
              for (; 0 === (t.words[0] & n) && e < 26; ++e, n <<= 1);
              if (e > 0)
                for (t.iushrn(e); e-- > 0; )
                  (a.isOdd() || o.isOdd()) && (a.iadd(l), o.isub(u)), a.iushrn(1), o.iushrn(1);
              let c = 0,
                d = 1;
              for (; 0 === (r.words[0] & d) && c < 26; ++c, d <<= 1);
              if (c > 0)
                for (r.iushrn(c); c-- > 0; )
                  (i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(u)), i.iushrn(1), s.iushrn(1);
              t.cmp(r) >= 0 ? (t.isub(r), a.isub(i), o.isub(s)) : (r.isub(t), i.isub(a), s.isub(o));
            }
            return { a: i, b: s, gcd: r.iushln(c) };
          }
          _invmp(e) {
            this.assert(0 === e.negative, 'p must not be negative'), this.assert(!e.isZero(), 'p must not be zero');
            let t = this;
            const r = e.clone();
            t = 0 !== t.negative ? t.umod(e) : t.clone();
            const a = new n(1),
              o = new n(0),
              i = r.clone();
            for (; t.cmpn(1) > 0 && r.cmpn(1) > 0; ) {
              let e = 0,
                n = 1;
              for (; 0 === (t.words[0] & n) && e < 26; ++e, n <<= 1);
              if (e > 0) for (t.iushrn(e); e-- > 0; ) a.isOdd() && a.iadd(i), a.iushrn(1);
              let s = 0,
                c = 1;
              for (; 0 === (r.words[0] & c) && s < 26; ++s, c <<= 1);
              if (s > 0) for (r.iushrn(s); s-- > 0; ) o.isOdd() && o.iadd(i), o.iushrn(1);
              t.cmp(r) >= 0 ? (t.isub(r), a.isub(o)) : (r.isub(t), o.isub(a));
            }
            let s;
            return (s = 0 === t.cmpn(1) ? a : o), s.cmpn(0) < 0 && s.iadd(e), s;
          }
          gcd(e) {
            if (this.isZero()) return e.abs();
            if (e.isZero()) return this.abs();
            let t = this.clone(),
              r = e.clone();
            (t.negative = 0), (r.negative = 0);
            let a = 0;
            for (; t.isEven() && r.isEven(); a++) t.iushrn(1), r.iushrn(1);
            for (;;) {
              for (; t.isEven(); ) t.iushrn(1);
              for (; r.isEven(); ) r.iushrn(1);
              const e = t.cmp(r);
              if (e < 0) {
                const e = t;
                (t = r), (r = e);
              } else if (0 === e || 0 === r.cmpn(1)) break;
              t.isub(r);
            }
            return r.iushln(a);
          }
          invm(e) {
            return this.egcd(e).a.umod(e);
          }
          isEven() {
            return 0 === (1 & this.words[0]);
          }
          isOdd() {
            return 1 === (1 & this.words[0]);
          }
          andln(e) {
            return this.words[0] & e;
          }
          bincn(e) {
            this.assert('number' === typeof e);
            const t = e % 26,
              r = (e - t) / 26,
              a = 1 << t;
            if (this.length <= r) return this.expand(r + 1), (this.words[r] |= a), this;
            let o = a,
              i = r;
            for (; 0 !== o && i < this.length; i++) {
              let e = 0 | this.words[i];
              (e += o), (o = e >>> 26), (e &= 67108863), (this.words[i] = e);
            }
            return 0 !== o && ((this.words[i] = o), this.length++), this;
          }
          isZero() {
            return 1 === this.length && 0 === this.words[0];
          }
          cmpn(e) {
            const t = e < 0;
            if (0 !== this.negative && !t) return -1;
            if (0 === this.negative && t) return 1;
            let r;
            if ((this.strip(), this.length > 1)) r = 1;
            else {
              t && (e = -e), this.assert(e <= 67108863, 'Number is too big');
              const a = 0 | this.words[0];
              r = a === e ? 0 : a < e ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -r : r;
          }
          cmp(e) {
            if (0 !== this.negative && 0 === e.negative) return -1;
            if (0 === this.negative && 0 !== e.negative) return 1;
            const t = this.ucmp(e);
            return 0 !== this.negative ? 0 | -t : t;
          }
          ucmp(e) {
            if (this.length > e.length) return 1;
            if (this.length < e.length) return -1;
            let t = 0;
            for (let r = this.length - 1; r >= 0; r--) {
              const a = 0 | this.words[r],
                o = 0 | e.words[r];
              if (a !== o) {
                a < o ? (t = -1) : a > o && (t = 1);
                break;
              }
            }
            return t;
          }
          gtn(e) {
            return 1 === this.cmpn(e);
          }
          gt(e) {
            return 1 === this.cmp(e);
          }
          gten(e) {
            return this.cmpn(e) >= 0;
          }
          gte(e) {
            return this.cmp(e) >= 0;
          }
          ltn(e) {
            return -1 === this.cmpn(e);
          }
          lt(e) {
            return -1 === this.cmp(e);
          }
          lten(e) {
            return this.cmpn(e) <= 0;
          }
          lte(e) {
            return this.cmp(e) <= 0;
          }
          eqn(e) {
            return 0 === this.cmpn(e);
          }
          eq(e) {
            return 0 === this.cmp(e);
          }
          toRed(e) {
            return (
              this.assert(null == this.red, 'Already a number in reduction context'),
              this.assert(0 === this.negative, 'red works only with positives'),
              e.convertTo(this).forceRed(e)
            );
          }
          fromRed() {
            return (
              this.assert(this.red, 'fromRed works only with numbers in reduction context'), this.red.convertFrom(this)
            );
          }
          forceRed(e) {
            return (this.red = e), this;
          }
          redAdd(e) {
            return this.assert(this.red, 'redAdd works only with red numbers'), this.red.add(this, e);
          }
          redIAdd(e) {
            return this.assert(this.red, 'redIAdd works only with red numbers'), this.red.iadd(this, e);
          }
          redSub(e) {
            return this.assert(this.red, 'redSub works only with red numbers'), this.red.sub(this, e);
          }
          redISub(e) {
            return this.assert(this.red, 'redISub works only with red numbers'), this.red.isub(this, e);
          }
          redShl(e) {
            return this.assert(this.red, 'redShl works only with red numbers'), this.red.shl(this, e);
          }
          redMul(e) {
            return (
              this.assert(this.red, 'redMul works only with red numbers'),
              this.red.verify2(this, e),
              this.red.mul(this, e)
            );
          }
          redIMul(e) {
            return (
              this.assert(this.red, 'redMul works only with red numbers'),
              this.red.verify2(this, e),
              this.red.imul(this, e)
            );
          }
          redSqr() {
            return (
              this.assert(this.red, 'redSqr works only with red numbers'), this.red.verify1(this), this.red.sqr(this)
            );
          }
          redISqr() {
            return (
              this.assert(this.red, 'redISqr works only with red numbers'), this.red.verify1(this), this.red.isqr(this)
            );
          }
          redSqrt() {
            return (
              this.assert(this.red, 'redSqrt works only with red numbers'), this.red.verify1(this), this.red.sqrt(this)
            );
          }
          redInvm() {
            return (
              this.assert(this.red, 'redInvm works only with red numbers'), this.red.verify1(this), this.red.invm(this)
            );
          }
          redNeg() {
            return (
              this.assert(this.red, 'redNeg works only with red numbers'), this.red.verify1(this), this.red.neg(this)
            );
          }
          redPow(e) {
            return (
              this.assert(null != this.red && null == e.red, 'redPow(normalNum)'),
              this.red.verify1(this),
              this.red.pow(this, e)
            );
          }
          static fromHex(e, t) {
            return 'big' === t ? new n(e, 16) : new n(e, 16, 'le');
          }
          toHex() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            return this.toString('hex', 2 * e);
          }
          static fromJSON(e) {
            return new n(e);
          }
          static fromNumber(e) {
            return new n(e);
          }
          static fromString(e, t) {
            return new n(e, t);
          }
          static fromSm(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'big',
              r = e;
            return 0 === e.length
              ? new n(0)
              : ('little' === t && ((r = [...r]), (r = r.reverse())),
                0 !== (128 & r[0]) ? ((r = [...r]), (r[0] = 127 & r[0]), new n(r).neg()) : new n(r));
          }
          toSm() {
            let e,
              t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'big';
            return (
              -1 === this.cmpn(0)
                ? ((e = this.neg().toArray()), 0 !== (128 & e[0]) ? (e = [128, ...e]) : (e[0] = 128 | e[0]))
                : ((e = this.toArray()), 0 !== (128 & e[0]) && (e = [0, ...e])),
              1 === e.length && 0 === e[0] && (e = []),
              'little' === t && (e = e.reverse()),
              e
            );
          }
          static fromBits(e) {
            if (
              ((e = 2147483648 & e ? e - 4294967296 : e),
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1] && 0 !== (8388608 & e))
            )
              throw new Error('negative bit set');
            const t = e >> 24,
              r = 8388607 & e;
            let a = [(r >> 24) & 255, (r >> 16) & 255, (r >> 8) & 255, 255 & r];
            if (t <= 3) a = a.slice(1, 1 + t);
            else for (let o = 0; o < t - 3; o++) a.push(0);
            return 0 !== (8388608 & e) ? new n(a).neg() : new n(a);
          }
          toBits() {
            let e;
            for (e = this.ltn(0) ? this.neg().toArray('be') : this.toArray('be'); e.length < 4; ) e.unshift(0);
            if (e.every((e) => 0 === e)) return 0;
            for (; 0 === e[0]; ) e.shift();
            let t = e.length,
              r = e.slice(0, 3).reduce((e, t) => 256 * e + t, 0);
            0 !== (8388608 & r) && (e.unshift(0), (t += 1), (r >>>= 8));
            let a = (t << 24) | r;
            return this.ltn(0) && (a |= 8388608), a >>> 0;
          }
          static fromScriptNum(e, t, r) {
            if ((void 0 === r && (r = Number.MAX_SAFE_INTEGER), e.length > r))
              throw new Error('script number overflow');
            if (t && e.length > 0 && 0 === (127 & e[e.length - 1]) && (e.length <= 1 || 0 === (128 & e[e.length - 2])))
              throw new Error('non-minimally encoded script number');
            return n.fromSm(e, 'little');
          }
          toScriptNum() {
            return this.toSm('little');
          }
        }
        class s {
          name;
          p;
          k;
          n;
          tmp;
          constructor(e, t) {
            (this.name = e),
              (this.p = new n(t, 16)),
              (this.n = this.p.bitLength()),
              (this.k = new n(1).iushln(this.n).isub(this.p)),
              (this.tmp = this._tmp());
          }
          _tmp() {
            const e = new n();
            return (e.words = new Array(Math.ceil(this.n / 13))), e;
          }
          ireduce(e) {
            let t,
              r = e;
            do {
              this.split(r, this.tmp), (r = this.imulK(r)), (r = r.iadd(this.tmp)), (t = r.bitLength());
            } while (t > this.n);
            const a = t < this.n ? -1 : r.ucmp(this.p);
            return 0 === a ? ((r.words[0] = 0), (r.length = 1)) : a > 0 ? r.isub(this.p) : (r.strip, r.strip()), r;
          }
          split(e, t) {
            e.iushrn(this.n, 0, t);
          }
          imulK(e) {
            return e.imul(this.k);
          }
        }
        class c extends s {
          constructor() {
            super('k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
          }
          split(e, t) {
            const r = 4194303,
              a = Math.min(e.length, 9);
            let o = 0;
            for (; o < a; o++) t.words[o] = e.words[o];
            if (((t.length = a), e.length <= 9)) return (e.words[0] = 0), void (e.length = 1);
            let i = e.words[9];
            for (t.words[t.length++] = i & r, o = 10; o < e.length; o++) {
              const t = 0 | e.words[o];
              (e.words[o - 10] = ((t & r) << 4) | (i >>> 22)), (i = t);
            }
            (i >>>= 22), (e.words[o - 10] = i), 0 === i && e.length > 10 ? (e.length -= 10) : (e.length -= 9);
          }
          imulK(e) {
            (e.words[e.length] = 0), (e.words[e.length + 1] = 0), (e.length += 2);
            let t = 0;
            for (let r = 0; r < e.length; r++) {
              const a = 0 | e.words[r];
              (t += 977 * a), (e.words[r] = 67108863 & t), (t = 64 * a + ((t / 67108864) | 0));
            }
            return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e;
          }
        }
        class l {
          prime;
          m;
          constructor(e) {
            if ('k256' === e) {
              const e = new c();
              (this.m = e.p), (this.prime = e);
            } else this.assert(e.gtn(1), 'modulus must be greater than 1'), (this.m = e), (this.prime = null);
          }
          assert(e) {
            if (!e)
              throw new Error(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'Assertion failed');
          }
          verify1(e) {
            this.assert(0 === e.negative, 'red works only with positives'),
              this.assert(e.red, 'red works only with red numbers');
          }
          verify2(e, t) {
            this.assert(0 === (e.negative | t.negative), 'red works only with positives'),
              this.assert(null != e.red && e.red === t.red, 'red works only with red numbers');
          }
          imod(e) {
            return null != this.prime
              ? this.prime.ireduce(e).forceRed(this)
              : (n.move(e, e.umod(this.m).forceRed(this)), e);
          }
          neg(e) {
            return e.isZero() ? e.clone() : this.m.sub(e).forceRed(this);
          }
          add(e, t) {
            this.verify2(e, t);
            const r = e.add(t);
            return r.cmp(this.m) >= 0 && r.isub(this.m), r.forceRed(this);
          }
          iadd(e, t) {
            this.verify2(e, t);
            const r = e.iadd(t);
            return r.cmp(this.m) >= 0 && r.isub(this.m), r;
          }
          sub(e, t) {
            this.verify2(e, t);
            const r = e.sub(t);
            return r.cmpn(0) < 0 && r.iadd(this.m), r.forceRed(this);
          }
          isub(e, t) {
            this.verify2(e, t);
            const r = e.isub(t);
            return r.cmpn(0) < 0 && r.iadd(this.m), r;
          }
          shl(e, t) {
            return this.verify1(e), this.imod(e.ushln(t));
          }
          imul(e, t) {
            return this.verify2(e, t), this.imod(e.imul(t));
          }
          mul(e, t) {
            return this.verify2(e, t), this.imod(e.mul(t));
          }
          isqr(e) {
            return this.imul(e, e.clone());
          }
          sqr(e) {
            return this.mul(e, e);
          }
          sqrt(e) {
            if (e.isZero()) return e.clone();
            const t = this.m.andln(3);
            if ((this.assert(t % 2 === 1), 3 === t)) {
              const t = this.m.add(new n(1)).iushrn(2);
              return this.pow(e, t);
            }
            const r = this.m.subn(1);
            let a = 0;
            for (; !r.isZero() && 0 === r.andln(1); ) a++, r.iushrn(1);
            this.assert(!r.isZero());
            const o = new n(1).toRed(this),
              i = o.redNeg(),
              s = this.m.subn(1).iushrn(1),
              c = this.m.bitLength(),
              l = new n(2 * c * c).toRed(this);
            for (; 0 !== this.pow(l, s).cmp(i); ) l.redIAdd(i);
            let u = this.pow(l, r),
              d = this.pow(e, r.addn(1).iushrn(1)),
              h = this.pow(e, r),
              f = a;
            for (; 0 !== h.cmp(o); ) {
              let e = h,
                t = 0;
              for (; 0 !== e.cmp(o); t++) e = e.redSqr();
              this.assert(t < f);
              const r = this.pow(u, new n(1).iushln(f - t - 1));
              (d = d.redMul(r)), (u = r.redSqr()), (h = h.redMul(u)), (f = t);
            }
            return d;
          }
          invm(e) {
            const t = e._invmp(this.m);
            return 0 !== t.negative ? ((t.negative = 0), this.imod(t).redNeg()) : this.imod(t);
          }
          pow(e, t) {
            if (t.isZero()) return new n(1).toRed(this);
            if (0 === t.cmpn(1)) return e.clone();
            const r = new Array(16);
            (r[0] = new n(1).toRed(this)), (r[1] = e);
            let a = 2;
            for (; a < r.length; a++) r[a] = this.mul(r[a - 1], e);
            let o = r[0],
              i = 0,
              s = 0,
              c = t.bitLength() % 26;
            for (0 === c && (c = 26), a = t.length - 1; a >= 0; a--) {
              const e = t.words[a];
              for (let t = c - 1; t >= 0; t--) {
                const n = (e >> t) & 1;
                o !== r[0] && (o = this.sqr(o)),
                  0 !== n || 0 !== i
                    ? ((i <<= 1),
                      (i |= n),
                      s++,
                      (4 === s || (0 === a && 0 === t)) && ((o = this.mul(o, r[i])), (s = 0), (i = 0)))
                    : (s = 0);
              }
              c = 26;
            }
            return o;
          }
          convertTo(e) {
            const t = e.umod(this.m);
            return t === e ? t.clone() : t;
          }
          convertFrom(e) {
            const t = e.clone();
            return (t.red = null), t;
          }
        }
        class u extends l {
          shift;
          r;
          r2;
          rinv;
          minv;
          constructor(e) {
            super(e),
              (this.shift = this.m.bitLength()),
              this.shift % 26 !== 0 && (this.shift += 26 - (this.shift % 26)),
              (this.r = new n(1).iushln(this.shift)),
              (this.r2 = this.imod(this.r.sqr())),
              (this.rinv = this.r._invmp(this.m)),
              (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
              (this.minv = this.minv.umod(this.r)),
              (this.minv = this.r.sub(this.minv));
          }
          convertTo(e) {
            return this.imod(e.ushln(this.shift));
          }
          convertFrom(e) {
            const t = this.imod(e.mul(this.rinv));
            return (t.red = null), t;
          }
          imul(e, t) {
            if (e.isZero() || t.isZero()) return (e.words[0] = 0), (e.length = 1), e;
            const r = e.imul(t),
              a = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              o = r.isub(a).iushrn(this.shift);
            let i = o;
            return o.cmp(this.m) >= 0 ? (i = o.isub(this.m)) : o.cmpn(0) < 0 && (i = o.iadd(this.m)), i.forceRed(this);
          }
          mul(e, t) {
            if (e.isZero() || t.isZero()) return new n(0).forceRed(this);
            const r = e.mul(t),
              a = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              o = r.isub(a).iushrn(this.shift);
            let i = o;
            return o.cmp(this.m) >= 0 ? (i = o.isub(this.m)) : o.cmpn(0) < 0 && (i = o.iadd(this.m)), i.forceRed(this);
          }
          invm(e) {
            return this.imod(e._invmp(this.m).mul(this.r2)).forceRed(this);
          }
        }
        class d {
          curve;
          type;
          precomputed;
          constructor(e) {
            (this.curve = new Le()), (this.type = e), (this.precomputed = null);
          }
        }
        class h extends d {
          x;
          y;
          z;
          zOne;
          constructor(e, t, r) {
            super('jacobian'),
              null === e && null === t && null === r
                ? ((this.x = this.curve.one), (this.y = this.curve.one), (this.z = new n(0)))
                : (n.isBN(e) || (e = new n(e, 16)),
                  (this.x = e),
                  n.isBN(t) || (t = new n(t, 16)),
                  (this.y = t),
                  n.isBN(r) || (r = new n(r, 16)),
                  (this.z = r)),
              null == this.x.red && (this.x = this.x.toRed(this.curve.red)),
              null == this.y.red && (this.y = this.y.toRed(this.curve.red)),
              null == this.z.red && (this.z = this.z.toRed(this.curve.red)),
              (this.zOne = this.z === this.curve.one);
          }
          toP() {
            if (this.isInfinity()) return new Ue(null, null);
            const e = this.z.redInvm(),
              t = e.redSqr(),
              r = this.x.redMul(t),
              a = this.y.redMul(t).redMul(e);
            return new Ue(r, a);
          }
          neg() {
            return new h(this.x, this.y.redNeg(), this.z);
          }
          add(e) {
            if (this.isInfinity()) return e;
            if (e.isInfinity()) return this;
            const t = e.z.redSqr(),
              r = this.z.redSqr(),
              a = this.x.redMul(t),
              o = e.x.redMul(r),
              i = this.y.redMul(t.redMul(e.z)),
              n = e.y.redMul(r.redMul(this.z)),
              s = a.redSub(o),
              c = i.redSub(n);
            if (0 === s.cmpn(0)) return 0 !== c.cmpn(0) ? new h(null, null, null) : this.dbl();
            const l = s.redSqr(),
              u = l.redMul(s),
              d = a.redMul(l),
              f = c.redSqr().redIAdd(u).redISub(d).redISub(d),
              p = c.redMul(d.redISub(f)).redISub(i.redMul(u)),
              b = this.z.redMul(e.z).redMul(s);
            return new h(f, p, b);
          }
          mixedAdd(e) {
            if (this.isInfinity()) return e.toJ();
            if (e.isInfinity()) return this;
            const t = this.z.redSqr(),
              r = this.x,
              a = e.x.redMul(t),
              o = this.y,
              i = e.y.redMul(t).redMul(this.z),
              n = r.redSub(a),
              s = o.redSub(i);
            if (0 === n.cmpn(0)) return 0 !== s.cmpn(0) ? new h(null, null, null) : this.dbl();
            const c = n.redSqr(),
              l = c.redMul(n),
              u = r.redMul(c),
              d = s.redSqr().redIAdd(l).redISub(u).redISub(u),
              f = s.redMul(u.redISub(d)).redISub(o.redMul(l)),
              p = this.z.redMul(n);
            return new h(d, f, p);
          }
          dblp(e) {
            if (0 === e) return this;
            if (this.isInfinity()) return this;
            if ('undefined' === typeof e) return this.dbl();
            let t = this;
            for (let r = 0; r < e; r++) t = t.dbl();
            return t;
          }
          dbl() {
            if (this.isInfinity()) return this;
            let e, t, r;
            if (this.zOne) {
              const a = this.x.redSqr(),
                o = this.y.redSqr(),
                i = o.redSqr();
              let n = this.x.redAdd(o).redSqr().redISub(a).redISub(i);
              n = n.redIAdd(n);
              const s = a.redAdd(a).redIAdd(a),
                c = s.redSqr().redISub(n).redISub(n);
              let l = i.redIAdd(i);
              (l = l.redIAdd(l)),
                (l = l.redIAdd(l)),
                (e = c),
                (t = s.redMul(n.redISub(c)).redISub(l)),
                (r = this.y.redAdd(this.y));
            } else {
              const a = this.x.redSqr(),
                o = this.y.redSqr(),
                i = o.redSqr();
              let n = this.x.redAdd(o).redSqr().redISub(a).redISub(i);
              n = n.redIAdd(n);
              const s = a.redAdd(a).redIAdd(a),
                c = s.redSqr();
              let l = i.redIAdd(i);
              (l = l.redIAdd(l)),
                (l = l.redIAdd(l)),
                (e = c.redISub(n).redISub(n)),
                (t = s.redMul(n.redISub(e)).redISub(l)),
                (r = this.y.redMul(this.z)),
                (r = r.redIAdd(r));
            }
            return new h(e, t, r);
          }
          eq(e) {
            if ('affine' === e.type) return this.eq(e.toJ());
            if (this === e) return !0;
            const t = this.z.redSqr(),
              r = e.z.redSqr();
            if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
            const a = t.redMul(this.z),
              o = r.redMul(e.z);
            return 0 === this.y.redMul(o).redISub(e.y.redMul(a)).cmpn(0);
          }
          eqXToP(e) {
            const t = this.z.redSqr(),
              r = e.toRed(this.curve.red).redMul(t);
            if (0 === this.x.cmp(r)) return !0;
            const a = e.clone(),
              o = this.curve.redN.redMul(t);
            for (;;) {
              if ((a.iadd(this.curve.n), a.cmp(this.curve.p) >= 0)) return !1;
              if ((r.redIAdd(o), 0 === this.x.cmp(r))) return !0;
            }
          }
          inspect() {
            return this.isInfinity()
              ? '<EC JPoint Infinity>'
              : '<EC JPoint x: ' +
                  this.x.toString(16, 2) +
                  ' y: ' +
                  this.y.toString(16, 2) +
                  ' z: ' +
                  this.z.toString(16, 2) +
                  '>';
          }
          isInfinity() {
            return 0 === this.z.cmpn(0);
          }
        }
        const f = function (e) {
          if (!e)
            throw new Error(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'Hash assertion failed');
        };
        class p {
          pending;
          pendingTotal;
          blockSize;
          outSize;
          endian;
          _delta8;
          _delta32;
          padLength;
          hmacStrength;
          constructor(e, t, r, a) {
            (this.pending = null),
              (this.pendingTotal = 0),
              (this.blockSize = e),
              (this.outSize = t),
              (this.hmacStrength = r),
              (this.padLength = a / 8),
              (this.endian = 'big'),
              (this._delta8 = this.blockSize / 8),
              (this._delta32 = this.blockSize / 32);
          }
          _update(e, t) {
            throw new Error('Not implemented');
          }
          _digest() {
            throw new Error('Not implemented');
          }
          _digestHex() {
            throw new Error('Not implemented');
          }
          update(e, t) {
            if (
              ((e = m(e, t)),
              null == this.pending ? (this.pending = e) : (this.pending = this.pending.concat(e)),
              (this.pendingTotal += e.length),
              this.pending.length >= this._delta8)
            ) {
              const t = (e = this.pending).length % this._delta8;
              (this.pending = e.slice(e.length - t, e.length)),
                0 === this.pending.length && (this.pending = null),
                (e = (function (e, t, r, a) {
                  const o = r - t;
                  f(o % 4 === 0);
                  const i = new Array(o / 4);
                  for (let n = 0, s = t; n < i.length; n++, s += 4) {
                    let t;
                    (t =
                      'big' === a
                        ? (e[s] << 24) | (e[s + 1] << 16) | (e[s + 2] << 8) | e[s + 3]
                        : (e[s + 3] << 24) | (e[s + 2] << 16) | (e[s + 1] << 8) | e[s]),
                      (i[n] = t >>> 0);
                  }
                  return i;
                })(e, 0, e.length - t, this.endian));
              for (let r = 0; r < e.length; r += this._delta32) this._update(e, r);
            }
            return this;
          }
          digest() {
            return this.update(this._pad()), f(null === this.pending), this._digest();
          }
          digestHex() {
            return this.update(this._pad()), f(null === this.pending), this._digestHex();
          }
          _pad() {
            let e = this.pendingTotal;
            const t = this._delta8,
              r = t - ((e + this.padLength) % t),
              a = new Array(r + this.padLength);
            let o, i;
            for (a[0] = 128, o = 1; o < r; o++) a[o] = 0;
            if (((e <<= 3), 'big' === this.endian)) {
              for (i = 8; i < this.padLength; i++) a[o++] = 0;
              (a[o++] = 0),
                (a[o++] = 0),
                (a[o++] = 0),
                (a[o++] = 0),
                (a[o++] = (e >>> 24) & 255),
                (a[o++] = (e >>> 16) & 255),
                (a[o++] = (e >>> 8) & 255),
                (a[o++] = 255 & e);
            } else
              for (
                a[o++] = 255 & e,
                  a[o++] = (e >>> 8) & 255,
                  a[o++] = (e >>> 16) & 255,
                  a[o++] = (e >>> 24) & 255,
                  a[o++] = 0,
                  a[o++] = 0,
                  a[o++] = 0,
                  a[o++] = 0,
                  i = 8;
                i < this.padLength;
                i++
              )
                a[o++] = 0;
            return a;
          }
        }
        function b(e, t) {
          return (
            55296 === (64512 & e.charCodeAt(t)) &&
            !(t < 0 || t + 1 >= e.length) &&
            56320 === (64512 & e.charCodeAt(t + 1))
          );
        }
        function m(e, t) {
          if (Array.isArray(e)) return e.slice();
          if (!e) return [];
          const r = [];
          if ('string' === typeof e)
            if ('hex' !== t) {
              let t = 0;
              for (let a = 0; a < e.length; a++) {
                let o = e.charCodeAt(a);
                o < 128
                  ? (r[t++] = o)
                  : o < 2048
                    ? ((r[t++] = (o >> 6) | 192), (r[t++] = (63 & o) | 128))
                    : b(e, a)
                      ? ((o = 65536 + ((1023 & o) << 10) + (1023 & e.charCodeAt(++a))),
                        (r[t++] = (o >> 18) | 240),
                        (r[t++] = ((o >> 12) & 63) | 128),
                        (r[t++] = ((o >> 6) & 63) | 128),
                        (r[t++] = (63 & o) | 128))
                      : ((r[t++] = (o >> 12) | 224), (r[t++] = ((o >> 6) & 63) | 128), (r[t++] = (63 & o) | 128));
              }
            } else {
              (e = e.replace(/[^a-z0-9]+/gi, '')).length % 2 !== 0 && (e = '0' + e);
              for (let t = 0; t < e.length; t += 2) r.push(parseInt(e[t] + e[t + 1], 16));
            }
          else for (let a = 0; a < e.length; a++) r[a] = 0 | e[a];
          return r;
        }
        function g(e) {
          return ((e >>> 24) | ((e >>> 8) & 65280) | ((e << 8) & 16711680) | ((255 & e) << 24)) >>> 0;
        }
        function v(e, t) {
          let r = '';
          for (let a = 0; a < e.length; a++) {
            let o = e[a];
            'little' === t && (o = g(o)), (r += y(o.toString(16)));
          }
          return r;
        }
        function y(e) {
          return 7 === e.length
            ? '0' + e
            : 6 === e.length
              ? '00' + e
              : 5 === e.length
                ? '000' + e
                : 4 === e.length
                  ? '0000' + e
                  : 3 === e.length
                    ? '00000' + e
                    : 2 === e.length
                      ? '000000' + e
                      : 1 === e.length
                        ? '0000000' + e
                        : e;
        }
        function w(e, t) {
          const r = new Array(4 * e.length);
          for (let a = 0, o = 0; a < e.length; a++, o += 4) {
            const i = e[a];
            'big' === t
              ? ((r[o] = i >>> 24), (r[o + 1] = (i >>> 16) & 255), (r[o + 2] = (i >>> 8) & 255), (r[o + 3] = 255 & i))
              : ((r[o + 3] = i >>> 24), (r[o + 2] = (i >>> 16) & 255), (r[o + 1] = (i >>> 8) & 255), (r[o] = 255 & i));
          }
          return r;
        }
        function k(e, t) {
          return (e >>> t) | (e << (32 - t));
        }
        function E(e, t) {
          return (e << t) | (e >>> (32 - t));
        }
        function S(e, t) {
          return (e + t) >>> 0;
        }
        function x(e, t, r) {
          return (e + t + r) >>> 0;
        }
        function _(e, t, r, a) {
          return (e + t + r + a) >>> 0;
        }
        function A(e, t, r, a, o) {
          return (e + t + r + a + o) >>> 0;
        }
        function O(e, t, r, a) {
          return 0 === e
            ? P(t, r, a)
            : 1 === e || 3 === e
              ? (function (e, t, r) {
                  return e ^ t ^ r;
                })(t, r, a)
              : 2 === e
                ? I(t, r, a)
                : void 0;
        }
        function P(e, t, r) {
          return (e & t) ^ (~e & r);
        }
        function I(e, t, r) {
          return (e & t) ^ (e & r) ^ (t & r);
        }
        function B(e) {
          return k(e, 2) ^ k(e, 13) ^ k(e, 22);
        }
        function N(e) {
          return k(e, 6) ^ k(e, 11) ^ k(e, 25);
        }
        function T(e) {
          return k(e, 7) ^ k(e, 18) ^ (e >>> 3);
        }
        const z = [
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
            3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
            4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
          ],
          R = [
            5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
            15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
            12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
          ],
          M = [
            11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13,
            12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6,
            5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,
          ],
          F = [
            8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13,
            11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5,
            15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,
          ];
        function C(e, t, r, a) {
          return e <= 15
            ? t ^ r ^ a
            : e <= 31
              ? (t & r) | (~t & a)
              : e <= 47
                ? (t | ~r) ^ a
                : e <= 63
                  ? (t & a) | (r & ~a)
                  : t ^ (r | ~a);
        }
        function j(e) {
          return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;
        }
        function U(e) {
          return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;
        }
        function D(e, t, r, a) {
          const o = e[t],
            i = (a + e[t + 1]) >>> 0,
            n = (i < a ? 1 : 0) + r + o;
          (e[t] = n >>> 0), (e[t + 1] = i);
        }
        function L(e, t, r, a) {
          return (((t + a) >>> 0 < t ? 1 : 0) + e + r) >>> 0;
        }
        function q(e, t, r, a) {
          return (t + a) >>> 0;
        }
        function H(e, t, r, a, o, i, n, s) {
          let c = 0,
            l = t;
          (l = (l + a) >>> 0),
            (c += l < t ? 1 : 0),
            (l = (l + i) >>> 0),
            (c += l < i ? 1 : 0),
            (l = (l + s) >>> 0),
            (c += l < s ? 1 : 0);
          return (e + r + o + n + c) >>> 0;
        }
        function G(e, t, r, a, o, i, n, s, c, l) {
          let u = 0,
            d = t;
          (d = (d + a) >>> 0),
            (u += d < t ? 1 : 0),
            (d = (d + i) >>> 0),
            (u += d < i ? 1 : 0),
            (d = (d + s) >>> 0),
            (u += d < s ? 1 : 0),
            (d = (d + l) >>> 0),
            (u += d < l ? 1 : 0);
          return (e + r + o + n + c + u) >>> 0;
        }
        function K(e, t, r, a, o, i, n, s, c, l) {
          return (t + a + i + s + l) >>> 0;
        }
        function V(e, t, r) {
          return ((t << (32 - r)) | (e >>> r)) >>> 0;
        }
        function $(e, t, r) {
          return ((e << (32 - r)) | (t >>> r)) >>> 0;
        }
        function W(e, t, r) {
          return e >>> r;
        }
        function Y(e, t, r) {
          return ((e << (32 - r)) | (t >>> r)) >>> 0;
        }
        class X extends p {
          h;
          constructor() {
            super(512, 160, 192, 64),
              (this.endian = 'little'),
              (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]),
              (this.endian = 'little');
          }
          _update(e, t) {
            let r,
              a = this.h[0],
              o = this.h[1],
              i = this.h[2],
              n = this.h[3],
              s = this.h[4],
              c = a,
              l = o,
              u = i,
              d = n,
              h = s;
            for (let f = 0; f < 80; f++)
              (r = S(E(_(a, C(f, o, i, n), e[z[f] + t], j(f)), M[f]), s)),
                (a = s),
                (s = n),
                (n = E(i, 10)),
                (i = o),
                (o = r),
                (r = S(E(_(c, C(79 - f, l, u, d), e[R[f] + t], U(f)), F[f]), h)),
                (c = h),
                (h = d),
                (d = E(u, 10)),
                (u = l),
                (l = r);
            (r = x(this.h[1], i, d)),
              (this.h[1] = x(this.h[2], n, h)),
              (this.h[2] = x(this.h[3], s, c)),
              (this.h[3] = x(this.h[4], a, l)),
              (this.h[4] = x(this.h[0], o, u)),
              (this.h[0] = r);
          }
          _digest() {
            return w(this.h, 'little');
          }
          _digestHex() {
            return v(this.h, 'little');
          }
        }
        class J extends p {
          h;
          W;
          k;
          constructor() {
            super(512, 256, 192, 64),
              (this.h = [
                1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225,
              ]),
              (this.k = [
                1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221,
                3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580,
                3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882,
                2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912,
                1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
                3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556,
                883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452,
                2361852424, 2428436474, 2756734187, 3204031479, 3329325298,
              ]),
              (this.W = new Array(64));
          }
          _update(e, t) {
            const r = this.W;
            let a;
            for (a = 0; a < 16; a++) r[a] = e[t + a];
            for (; a < r.length; a++)
              r[a] = _(k((o = r[a - 2]), 17) ^ k(o, 19) ^ (o >>> 10), r[a - 7], T(r[a - 15]), r[a - 16]);
            var o;
            let i = this.h[0],
              n = this.h[1],
              s = this.h[2],
              c = this.h[3],
              l = this.h[4],
              u = this.h[5],
              d = this.h[6],
              h = this.h[7];
            for (f(this.k.length === r.length), a = 0; a < r.length; a++) {
              const e = A(h, N(l), P(l, u, d), this.k[a], r[a]),
                t = S(B(i), I(i, n, s));
              (h = d), (d = u), (u = l), (l = S(c, e)), (c = s), (s = n), (n = i), (i = S(e, t));
            }
            (this.h[0] = S(this.h[0], i)),
              (this.h[1] = S(this.h[1], n)),
              (this.h[2] = S(this.h[2], s)),
              (this.h[3] = S(this.h[3], c)),
              (this.h[4] = S(this.h[4], l)),
              (this.h[5] = S(this.h[5], u)),
              (this.h[6] = S(this.h[6], d)),
              (this.h[7] = S(this.h[7], h));
          }
          _digest() {
            return w(this.h, 'big');
          }
          _digestHex() {
            return v(this.h, 'big');
          }
        }
        class Q extends p {
          h;
          W;
          k;
          constructor() {
            super(512, 160, 80, 64),
              (this.k = [1518500249, 1859775393, 2400959708, 3395469782]),
              (this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520]),
              (this.W = new Array(80));
          }
          _update(e, t) {
            const r = this.W;
            let a;
            for (a = 0; a < 16; a++) r[a] = e[t + a];
            for (; a < r.length; a++) r[a] = E(r[a - 3] ^ r[a - 8] ^ r[a - 14] ^ r[a - 16], 1);
            let o = this.h[0],
              i = this.h[1],
              n = this.h[2],
              s = this.h[3],
              c = this.h[4];
            for (a = 0; a < r.length; a++) {
              const e = ~~(a / 20),
                t = A(E(o, 5), O(e, i, n, s), c, r[a], this.k[e]);
              (c = s), (s = n), (n = E(i, 30)), (i = o), (o = t);
            }
            (this.h[0] = S(this.h[0], o)),
              (this.h[1] = S(this.h[1], i)),
              (this.h[2] = S(this.h[2], n)),
              (this.h[3] = S(this.h[3], s)),
              (this.h[4] = S(this.h[4], c));
          }
          _digest() {
            return w(this.h, 'big');
          }
          _digestHex() {
            return v(this.h, 'big');
          }
        }
        class Z extends p {
          h;
          W;
          k;
          constructor() {
            super(1024, 512, 192, 128),
              (this.h = [
                1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129,
                1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209,
              ]),
              (this.k = [
                1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548,
                961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560,
                3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994,
                1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868,
                3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983,
                1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882,
                3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891,
                1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964,
                773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390,
                1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460,
                2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344,
                3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616,
                1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403,
                1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928,
                2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249,
                3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711,
                3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356,
                3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100,
                1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468,
                1816402316, 1246189591,
              ]),
              (this.W = new Array(160));
          }
          _prepareBlock(e, t) {
            const r = this.W;
            let a;
            for (a = 0; a < 32; a++) r[a] = e[t + a];
            for (; a < r.length; a += 2) {
              const e = ue(r[a - 4], r[a - 3]),
                t = de(r[a - 4], r[a - 3]),
                o = r[a - 14],
                i = r[a - 13],
                n = ce(r[a - 30], r[a - 29]),
                s = le(r[a - 30], r[a - 29]),
                c = r[a - 32],
                l = r[a - 31];
              (r[a] = H(e, t, o, i, n, s, c, l)), (r[a + 1] = (t + i + s + l) >>> 0);
            }
          }
          _update(e, t) {
            this._prepareBlock(e, t);
            const r = this.W;
            let a = this.h[0],
              o = this.h[1],
              i = this.h[2],
              n = this.h[3],
              s = this.h[4],
              c = this.h[5],
              l = this.h[6],
              u = this.h[7],
              d = this.h[8],
              h = this.h[9],
              p = this.h[10],
              b = this.h[11],
              m = this.h[12],
              g = this.h[13],
              v = this.h[14],
              y = this.h[15];
            f(this.k.length === r.length);
            for (let f = 0; f < r.length; f += 2) {
              let e = v,
                t = y,
                w = ne(d, h),
                k = se(d, h);
              const E = ee(d, h, p, b, m, g),
                S = te(d, h, p, b, m, g),
                x = this.k[f],
                _ = this.k[f + 1],
                A = r[f],
                O = r[f + 1],
                P = G(e, t, w, k, E, S, x, _, A, O),
                I = K(0, t, 0, k, 0, S, 0, _, 0, O);
              (e = oe(a, o)), (t = ie(a, o)), (w = re(a, o, i, n, s, c)), (k = ae(a, o, i, n, s, c));
              const B = L(e, t, w, k),
                N = q(0, t, 0, k);
              (v = m),
                (y = g),
                (m = p),
                (g = b),
                (p = d),
                (b = h),
                (d = L(l, u, P, I)),
                (h = q(0, u, 0, I)),
                (l = s),
                (u = c),
                (s = i),
                (c = n),
                (i = a),
                (n = o),
                (a = L(P, I, B, N)),
                (o = q(0, I, 0, N));
            }
            D(this.h, 0, a, o),
              D(this.h, 2, i, n),
              D(this.h, 4, s, c),
              D(this.h, 6, l, u),
              D(this.h, 8, d, h),
              D(this.h, 10, p, b),
              D(this.h, 12, m, g),
              D(this.h, 14, v, y);
          }
          _digest() {
            return w(this.h, 'big');
          }
          _digestHex() {
            return v(this.h, 'big');
          }
        }
        function ee(e, t, r, a, o, i) {
          let n = (e & r) ^ (~e & o);
          return n < 0 && (n += 4294967296), n;
        }
        function te(e, t, r, a, o, i) {
          let n = (t & a) ^ (~t & i);
          return n < 0 && (n += 4294967296), n;
        }
        function re(e, t, r, a, o, i) {
          let n = (e & r) ^ (e & o) ^ (r & o);
          return n < 0 && (n += 4294967296), n;
        }
        function ae(e, t, r, a, o, i) {
          let n = (t & a) ^ (t & i) ^ (a & i);
          return n < 0 && (n += 4294967296), n;
        }
        function oe(e, t) {
          let r = V(e, t, 28) ^ V(t, e, 2) ^ V(t, e, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function ie(e, t) {
          let r = $(e, t, 28) ^ $(t, e, 2) ^ $(t, e, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function ne(e, t) {
          let r = V(e, t, 14) ^ V(e, t, 18) ^ V(t, e, 9);
          return r < 0 && (r += 4294967296), r;
        }
        function se(e, t) {
          let r = $(e, t, 14) ^ $(e, t, 18) ^ $(t, e, 9);
          return r < 0 && (r += 4294967296), r;
        }
        function ce(e, t) {
          let r = V(e, t, 1) ^ V(e, t, 8) ^ W(e, 0, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function le(e, t) {
          let r = $(e, t, 1) ^ $(e, t, 8) ^ Y(e, t, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function ue(e, t) {
          let r = V(e, t, 19) ^ V(t, e, 29) ^ W(e, 0, 6);
          return r < 0 && (r += 4294967296), r;
        }
        function de(e, t) {
          let r = $(e, t, 19) ^ $(t, e, 29) ^ Y(e, t, 6);
          return r < 0 && (r += 4294967296), r;
        }
        class he {
          inner;
          outer;
          blockSize = 64;
          outSize = 32;
          constructor(e) {
            let t;
            for (
              (e = m(e, 'hex')).length > this.blockSize && (e = new J().update(e).digest()),
                f(e.length <= this.blockSize),
                t = e.length;
              t < this.blockSize;
              t++
            )
              e.push(0);
            for (t = 0; t < e.length; t++) e[t] ^= 54;
            for (this.inner = new J().update(e), t = 0; t < e.length; t++) e[t] ^= 106;
            this.outer = new J().update(e);
          }
          update(e, t) {
            return this.inner.update(e, t), this;
          }
          digest() {
            return this.outer.update(this.inner.digest()), this.outer.digest();
          }
          digestHex() {
            return this.outer.update(this.inner.digest()), this.outer.digestHex();
          }
        }
        class fe {
          inner;
          outer;
          blockSize = 64;
          constructor(e) {
            let t;
            for (
              (e = m(e, 'hex')).length > this.blockSize && (e = new Q().update(e).digest()), t = e.length;
              t < this.blockSize;
              t++
            )
              e.push(0);
            for (t = 0; t < e.length; t++) e[t] ^= 54;
            for (this.inner = new Q().update(e), t = 0; t < e.length; t++) e[t] ^= 106;
            this.outer = new Q().update(e);
          }
          update(e, t) {
            return this.inner.update(e, t), this;
          }
          digest() {
            return this.outer.update(this.inner.digest()), this.outer.digest();
          }
          digestHex() {
            return this.outer.update(this.inner.digest()), this.outer.digestHex();
          }
        }
        class pe {
          inner;
          outer;
          blockSize = 128;
          outSize = 32;
          constructor(e) {
            let t;
            for (
              (e = m(e, 'hex')).length > this.blockSize && (e = new Z().update(e).digest()),
                f(e.length <= this.blockSize),
                t = e.length;
              t < this.blockSize;
              t++
            )
              e.push(0);
            for (t = 0; t < e.length; t++) e[t] ^= 54;
            for (this.inner = new Z().update(e), t = 0; t < e.length; t++) e[t] ^= 106;
            this.outer = new Z().update(e);
          }
          update(e, t) {
            return this.inner.update(e, t), this;
          }
          digest() {
            return this.outer.update(this.inner.digest()), this.outer.digest();
          }
          digestHex() {
            return this.outer.update(this.inner.digest()), this.outer.digestHex();
          }
        }
        const be = (e, t) => new X().update(e, t).digest(),
          me = (e, t) => new Q().update(e, t).digest(),
          ge = (e, t) => new J().update(e, t).digest(),
          ve = (e, t) => new Z().update(e, t).digest(),
          ye = (e, t) => {
            const r = new J().update(e, t).digest();
            return new J().update(r).digest();
          },
          we = (e, t) => {
            const r = new J().update(e, t).digest();
            return new X().update(r).digest();
          },
          ke = (e, t, r) => new he(e).update(t, r).digest(),
          Ee = (e, t, r) => new pe(e).update(t, r).digest();
        function Se(e, t, r, a) {
          if ('sha512' !== (arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 'sha512'))
            throw new Error('Only sha512 is supported in this PBKDF2 implementation');
          const o = new Array(a),
            i = [...t, 0, 0, 0, 0];
          let n = 0;
          const s = Math.ceil(a / 64);
          for (let c = 1; c <= s; c++) {
            (i[t.length] = (c >> 24) & 255),
              (i[t.length + 1] = (c >> 16) & 255),
              (i[t.length + 2] = (c >> 8) & 255),
              (i[t.length + 3] = 255 & c);
            const a = Ee(e, i);
            let s = a;
            for (let t = 1; t < r; t++) {
              s = Ee(e, s);
              for (let e = 0; e < 64; e++) a[e] ^= s[e];
            }
            for (let e = 0; e < a.length; e++) o[n + e] = a[e];
            n += 64;
          }
          return o.slice(0, a);
        }
        const xe = (e) => (e.length % 2 === 1 ? '0' + e : e),
          _e = (e) => {
            let t = '';
            for (let r = 0; r < e.length; r++) t += xe(e[r].toString(16));
            return t;
          },
          Ae = (e, t) => {
            if (Array.isArray(e)) return e.slice();
            if (!e) return [];
            const r = [];
            if ('string' !== typeof e) {
              for (let t = 0; t < e.length; t++) r[t] = 0 | e[t];
              return r;
            }
            if ('hex' === t) {
              (e = e.replace(/[^a-z0-9]+/gi, '')).length % 2 !== 0 && (e = '0' + e);
              for (let t = 0; t < e.length; t += 2) r.push(parseInt(e[t] + e[t + 1], 16));
            } else {
              if ('base64' === t) {
                const t = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                  r = [];
                let a = 0,
                  o = 0;
                for (const i of e.replace(/=+$/, ''))
                  (a = (a << 6) | t.indexOf(i)),
                    (o += 6),
                    o >= 8 && ((o -= 8), r.push((a >> o) & 255), (a &= (1 << o) - 1));
                return r;
              }
              for (let t = 0; t < e.length; t++) {
                const a = e.charCodeAt(t),
                  o = a >> 8,
                  i = 255 & a;
                o ? r.push(o, i) : r.push(i);
              }
            }
            return r;
          },
          Oe = (e) => {
            let t = '';
            for (let r = 0; r < e.length; r++) {
              const a = e[r];
              if (a <= 127) t += String.fromCharCode(a);
              else if (a >= 192 && a <= 223) {
                const o = ((31 & a) << 6) | (63 & e[++r]);
                t += String.fromCharCode(o);
              } else if (a >= 224 && a <= 239) {
                const o = ((15 & a) << 12) | ((63 & e[++r]) << 6) | (63 & e[++r]);
                t += String.fromCharCode(o);
              } else if (a >= 240 && a <= 247) {
                const o = ((7 & a) << 18) | ((63 & e[++r]) << 12) | ((63 & e[++r]) << 6) | (63 & e[++r]),
                  i = 55296 + ((o - 65536) >> 10),
                  n = 56320 + ((o - 65536) & 1023);
                t += String.fromCharCode(i, n);
              }
            }
            return t;
          },
          Pe = (e, t) => {
            switch (t) {
              case 'hex':
                return _e(e);
              case 'utf8':
                return Oe(e);
              default:
                return e;
            }
          };
        function Ie(e) {
          const t = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
          let r,
            a = '';
          for (r = 0; r < e.length; r += 3) {
            const o = e[r],
              i = r + 1 < e.length ? e[r + 1] : 0,
              n = r + 2 < e.length ? e[r + 2] : 0,
              s = ((3 & o) << 4) | (i >> 4),
              c = ((15 & i) << 2) | (n >> 6),
              l = 63 & n;
            (a += t.charAt(o >> 2) + t.charAt(s)),
              (a += r + 1 < e.length ? t.charAt(c) : '='),
              (a += r + 2 < e.length ? t.charAt(l) : '=');
          }
          return a;
        }
        const Be = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',
          Ne = (e) => {
            if (!e || 'string' !== typeof e) throw new Error(`Expected base58 string but got \u201c${e}\u201d`);
            if (e.match(/[IOl0]/gmu)) throw new Error(`Invalid base58 character \u201c${e.match(/[IOl0]/gmu)}\u201d`);
            const t = e.match(/^1+/gmu),
              r = t ? t[0].length : 0,
              a = ((e.length - r) * (Math.log(58) / Math.log(256)) + 1) >>> 0;
            var o;
            return [
              ...new Uint8Array([
                ...new Uint8Array(r),
                ...e
                  .match(/.{1}/gmu)
                  .map((e) => Be.indexOf(e))
                  .reduce(
                    (e, t) =>
                      (e = e.map((e) => {
                        const r = 58 * e + t;
                        return (t = r >> 8), r;
                      })),
                    new Uint8Array(a),
                  )
                  .reverse()
                  .filter(((o = !1), (e) => (o = o || e))),
              ]),
            ];
          },
          Te = (e) => {
            const t = Array(256).fill(-1);
            for (let a = 0; a < 58; ++a) t[Be.charCodeAt(a)] = a;
            const r = [];
            for (const a of e) {
              let e = a;
              for (let a = 0; a < r.length; ++a) {
                const o = (t[r[a]] << 8) + e;
                (r[a] = Be.charCodeAt(o % 58)), (e = (o / 58) | 0);
              }
              for (; e; ) r.push(Be.charCodeAt(e % 58)), (e = (e / 58) | 0);
            }
            for (const a of e) {
              if (a) break;
              r.push('1'.charCodeAt(0));
            }
            return r.reverse(), String.fromCharCode(...r);
          },
          ze = function (e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0],
              r = ye([...t, ...e]);
            return (r = [...t, ...e, ...r.slice(0, 4)]), Te(r);
          },
          Re = function (e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
            const a = Ne(e);
            let o = a.slice(0, r),
              i = a.slice(r, -4),
              n = [...o, ...i];
            return (
              (n = ye(n)),
              a.slice(-4).forEach((e, t) => {
                if (e !== n[t]) throw new Error('Invalid checksum');
              }),
              'hex' === t && ((o = _e(o)), (i = _e(i))),
              { prefix: o, data: i }
            );
          };
        class Me {
          bufs;
          constructor(e) {
            this.bufs = e || [];
          }
          getLength() {
            let e = 0;
            for (const t of this.bufs) e += t.length;
            return e;
          }
          toArray() {
            const e = this.getLength(),
              t = new Array(e);
            let r = 0;
            for (const a of this.bufs) for (let e = 0; e < a.length; e++) t[r++] = a[e];
            return t;
          }
          write(e) {
            return this.bufs.push(e), this;
          }
          writeReverse(e) {
            const t = new Array(e.length);
            for (let r = 0; r < t.length; r++) t[r] = e[e.length - 1 - r];
            return this.bufs.push(t), this;
          }
          writeUInt8(e) {
            const t = new Array(1);
            return (t[0] = e), this.write(t), this;
          }
          writeInt8(e) {
            const t = new Array(1);
            return (t[0] = 255 & e), this.write(t), this;
          }
          writeUInt16BE(e) {
            return this.bufs.push([(e >> 8) & 255, 255 & e]), this;
          }
          writeInt16BE(e) {
            return this.writeUInt16BE(65535 & e);
          }
          writeUInt16LE(e) {
            return this.bufs.push([255 & e, (e >> 8) & 255]), this;
          }
          writeInt16LE(e) {
            return this.writeUInt16LE(65535 & e);
          }
          writeUInt32BE(e) {
            return this.bufs.push([(e >> 24) & 255, (e >> 16) & 255, (e >> 8) & 255, 255 & e]), this;
          }
          writeInt32BE(e) {
            return this.writeUInt32BE(e >>> 0);
          }
          writeUInt32LE(e) {
            return this.bufs.push([255 & e, (e >> 8) & 255, (e >> 16) & 255, (e >> 24) & 255]), this;
          }
          writeInt32LE(e) {
            return this.writeUInt32LE(e >>> 0);
          }
          writeUInt64BEBn(e) {
            const t = e.toArray('be', 8);
            return this.write(t), this;
          }
          writeUInt64LEBn(e) {
            const t = e.toArray('be', 8);
            return this.writeReverse(t), this;
          }
          writeUInt64LE(e) {
            const t = new n(e).toArray('be', 8);
            return this.writeReverse(t), this;
          }
          writeVarIntNum(e) {
            const t = Me.varIntNum(e);
            return this.write(t), this;
          }
          writeVarIntBn(e) {
            const t = Me.varIntBn(e);
            return this.write(t), this;
          }
          static varIntNum(e) {
            let t;
            if (e < 253) t = [e];
            else if (e < 65536) t = [253, 255 & e, (e >> 8) & 255];
            else if (e < 4294967296) t = [254, 255 & e, (e >> 8) & 255, (e >> 16) & 255, (e >> 24) & 255];
            else {
              const r = 4294967295 & e,
                a = 4294967295 & Math.floor(e / 4294967296);
              t = [
                255,
                255 & r,
                (r >> 8) & 255,
                (r >> 16) & 255,
                (r >> 24) & 255,
                255 & a,
                (a >> 8) & 255,
                (a >> 16) & 255,
                (a >> 24) & 255,
              ];
            }
            return t;
          }
          static varIntBn(e) {
            let t;
            if (e.ltn(253)) {
              t = [e.toNumber()];
            } else if (e.ltn(65536)) {
              const r = e.toNumber();
              t = [253, 255 & r, (r >> 8) & 255];
            } else if (e.lt(new n(4294967296))) {
              const r = e.toNumber();
              t = [254, 255 & r, (r >> 8) & 255, (r >> 16) & 255, (r >> 24) & 255];
            } else {
              const r = new Me();
              r.writeUInt8(255), r.writeUInt64LEBn(e), (t = r.toArray());
            }
            return t;
          }
        }
        class Fe {
          bin;
          pos;
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            (this.bin = e), (this.pos = t);
          }
          eof() {
            return this.pos >= this.bin.length;
          }
          read() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.bin.length;
            const t = this.pos,
              r = this.pos + e;
            return (this.pos = r), this.bin.slice(t, r);
          }
          readReverse() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.bin.length;
            const t = new Array(e);
            for (let r = 0; r < e; r++) t[r] = this.bin[this.pos + e - 1 - r];
            return (this.pos += e), t;
          }
          readUInt8() {
            const e = this.bin[this.pos];
            return (this.pos += 1), e;
          }
          readInt8() {
            const e = this.bin[this.pos];
            return (this.pos += 1), 0 !== (128 & e) ? e - 256 : e;
          }
          readUInt16BE() {
            const e = (this.bin[this.pos] << 8) | this.bin[this.pos + 1];
            return (this.pos += 2), e;
          }
          readInt16BE() {
            const e = this.readUInt16BE();
            return 0 !== (32768 & e) ? e - 65536 : e;
          }
          readUInt16LE() {
            const e = this.bin[this.pos] | (this.bin[this.pos + 1] << 8);
            return (this.pos += 2), e;
          }
          readInt16LE() {
            const e = this.readUInt16LE();
            return 0 !== (32768 & e) ? e - 65536 : e;
          }
          readUInt32BE() {
            const e =
              16777216 * this.bin[this.pos] +
              ((this.bin[this.pos + 1] << 16) | (this.bin[this.pos + 2] << 8) | this.bin[this.pos + 3]);
            return (this.pos += 4), e;
          }
          readInt32BE() {
            const e = this.readUInt32BE();
            return 0 !== (2147483648 & e) ? e - 4294967296 : e;
          }
          readUInt32LE() {
            const e =
              (this.bin[this.pos] |
                (this.bin[this.pos + 1] << 8) |
                (this.bin[this.pos + 2] << 16) |
                (this.bin[this.pos + 3] << 24)) >>>
              0;
            return (this.pos += 4), e;
          }
          readInt32LE() {
            const e = this.readUInt32LE();
            return 0 !== (2147483648 & e) ? e - 4294967296 : e;
          }
          readUInt64BEBn() {
            const e = this.bin.slice(this.pos, this.pos + 8),
              t = new n(e);
            return (this.pos = this.pos + 8), t;
          }
          readUInt64LEBn() {
            const e = this.readReverse(8);
            return new n(e);
          }
          readVarIntNum() {
            const e = this.readUInt8();
            let t;
            switch (e) {
              case 253:
                return this.readUInt16LE();
              case 254:
                return this.readUInt32LE();
              case 255:
                if (((t = this.readUInt64LEBn()), t.lte(new n(2).pow(new n(53))))) return t.toNumber();
                throw new Error('number too large to retain precision - use readVarIntBn');
              default:
                return e;
            }
          }
          readVarInt() {
            switch (this.bin[this.pos]) {
              case 253:
                return this.read(3);
              case 254:
                return this.read(5);
              case 255:
                return this.read(9);
              default:
                return this.read(1);
            }
          }
          readVarIntBn() {
            const e = this.readUInt8();
            switch (e) {
              case 253:
                return new n(this.readUInt16LE());
              case 254:
                return new n(this.readUInt32LE());
              case 255:
                return this.readUInt64LEBn();
              default:
                return new n(e);
            }
          }
        }
        const Ce = (e) => {
          if (0 === e.length) return e;
          const t = e[e.length - 1];
          if (0 !== (127 & t)) return e;
          if (1 === e.length) return [];
          if (0 !== (128 & e[e.length - 2])) return e;
          for (let r = e.length - 1; r > 0; r--)
            if (0 !== e[r - 1]) return 0 !== (128 & e[r - 1]) ? (e[r++] = t) : (e[r - 1] |= t), e.slice(0, r);
          return [];
        };
        var je = r(6382).hp;
        class Ue extends d {
          static red = (() => new l('k256'))();
          static a = (() => new n(0).toRed(Ue.red))();
          static b = (() => new n(7).toRed(Ue.red))();
          static zero = (() => new n(0).toRed(Ue.red))();
          x;
          y;
          inf;
          static fromDER(e) {
            const t = 32;
            if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 === 64) {
              if (6 === e[0]) {
                if (e[e.length - 1] % 2 !== 0) throw new Error('Point string value is wrong length');
              } else if (7 === e[0] && e[e.length - 1] % 2 !== 1) throw new Error('Point string value is wrong length');
              return new Ue(e.slice(1, 33), e.slice(33, 65));
            }
            if ((2 === e[0] || 3 === e[0]) && e.length - 1 === t) return Ue.fromX(e.slice(1, 33), 3 === e[0]);
            throw new Error('Unknown point format');
          }
          static fromString(e) {
            const t = Ae(e, 'hex');
            return Ue.fromDER(t);
          }
          static redSqrtOptimized(e) {
            const t = Ue.red.m.addn(1).iushrn(2);
            return e.redPow(t);
          }
          static fromX(e, t) {
            if ('function' === typeof BigInt) {
              function r(e, t) {
                return ((e % t) + t) % t;
              }
              function a(e, t, a) {
                let o = BigInt(1);
                for (e = r(e, a); t > BigInt(0); )
                  (t & BigInt(1)) === BigInt(1) && (o = r(o * e, a)), (t >>= BigInt(1)), (e = r(e * e, a));
                return o;
              }
              function o(e, t) {
                const o = a(e, (t + BigInt(1)) >> BigInt(2), t);
                return r(o * o, t) === r(e, t) ? o : null;
              }
              const i = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'),
                s = (BigInt(0), BigInt(7));
              let c;
              if (e instanceof n) c = BigInt('0x' + e.toString(16));
              else if ('string' === typeof e) c = BigInt('0x' + e);
              else if (Array.isArray(e)) c = BigInt('0x' + je.from(e).toString('hex').padStart(64, '0'));
              else {
                if ('number' !== typeof e) throw new Error('Invalid x-coordinate type');
                c = BigInt(e);
              }
              c = r(c, i);
              let u = o(r(a(c, BigInt(3), i) + s, i), i);
              if (null === u) throw new Error('Invalid point');
              const d = u % BigInt(2) === BigInt(1);
              ((t && !d) || (!t && d)) && (u = i - u);
              const h = new n(c.toString(16), 16),
                f = new n(u.toString(16), 16);
              return new Ue(h, f);
            }
            {
              const p = new l('k256'),
                b = new n(0).toRed(p),
                m = new n(7).toRed(p),
                g = new n(0).toRed(p);
              n.isBN(e) || (e = new n(e, 16)), null == e.red && (e = e.toRed(p));
              const v = e.redSqr().redMul(e).redIAdd(e.redMul(b)).redIAdd(m);
              let y = v.redSqrt();
              if (0 !== y.redSqr().redSub(v).cmp(g)) throw new Error('invalid point');
              const w = y.fromRed().isOdd();
              return ((t && !w) || (!t && w)) && (y = y.redNeg()), new Ue(e, y);
            }
          }
          static fromJSON(e, t) {
            'string' === typeof e && (e = JSON.parse(e));
            const r = new Ue(e[0], e[1], t);
            if ('object' !== typeof e[2]) return r;
            const a = (e) => new Ue(e[0], e[1], t),
              o = e[2];
            return (
              (r.precomputed = {
                beta: null,
                doubles:
                  'object' === typeof o.doubles && null !== o.doubles
                    ? { step: o.doubles.step, points: [r].concat(o.doubles.points.map(a)) }
                    : void 0,
                naf:
                  'object' === typeof o.naf && null !== o.naf
                    ? { wnd: o.naf.wnd, points: [r].concat(o.naf.points.map(a)) }
                    : void 0,
              }),
              r
            );
          }
          constructor(e, t) {
            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
            super('affine'),
              (this.precomputed = null),
              null === e && null === t
                ? ((this.x = null), (this.y = null), (this.inf = !0))
                : (n.isBN(e) || (e = new n(e, 16)),
                  (this.x = e),
                  n.isBN(t) || (t = new n(t, 16)),
                  (this.y = t),
                  r && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)),
                  null === this.x.red && (this.x = this.x.toRed(this.curve.red)),
                  null === this.y.red && (this.y = this.y.toRed(this.curve.red)),
                  (this.inf = !1));
          }
          validate() {
            return this.curve.validate(this);
          }
          encode() {
            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
              t = arguments.length > 1 ? arguments[1] : void 0;
            const r = this.curve.p.byteLength(),
              a = this.getX().toArray('be', r);
            let o;
            return (
              (o = e ? [this.getY().isEven() ? 2 : 3].concat(a) : [4].concat(a, this.getY().toArray('be', r))),
              'hex' !== t ? o : _e(o)
            );
          }
          toString() {
            return this.encode(!0, 'hex');
          }
          toJSON() {
            return null == this.precomputed
              ? [this.x, this.y]
              : [
                  this.x,
                  this.y,
                  'object' === typeof this.precomputed && null !== this.precomputed
                    ? {
                        doubles:
                          null != this.precomputed.doubles
                            ? { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }
                            : void 0,
                        naf:
                          null != this.precomputed.naf
                            ? { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) }
                            : void 0,
                      }
                    : void 0,
                ];
          }
          inspect() {
            return this.isInfinity()
              ? '<EC Point Infinity>'
              : '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
          }
          isInfinity() {
            return this.inf;
          }
          add(e) {
            if (this.inf) return e;
            if (e.inf) return this;
            if (this.eq(e)) return this.dbl();
            if (this.neg().eq(e)) return new Ue(null, null);
            if (0 === this.x.cmp(e.x)) return new Ue(null, null);
            let t = this.y.redSub(e.y);
            0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
            const r = t.redSqr().redISub(this.x).redISub(e.x),
              a = t.redMul(this.x.redSub(r)).redISub(this.y);
            return new Ue(r, a);
          }
          dbl() {
            if (this.inf) return this;
            const e = this.y.redAdd(this.y);
            if (0 === e.cmpn(0)) return new Ue(null, null);
            const t = this.curve.a,
              r = this.x.redSqr(),
              a = e.redInvm(),
              o = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(a),
              i = o.redSqr().redISub(this.x.redAdd(this.x)),
              n = o.redMul(this.x.redSub(i)).redISub(this.y);
            return new Ue(i, n);
          }
          getX() {
            return this.x.fromRed();
          }
          getY() {
            return this.y.fromRed();
          }
          mul(e) {
            return (
              n.isBN(e) || (e = new n(e, 16)),
              this.isInfinity() ? this : this._hasDoubles(e) ? this._fixedNafMul(e) : this._endoWnafMulAdd([this], [e])
            );
          }
          mulAdd(e, t, r) {
            const a = [this, t],
              o = [e, r];
            return this._endoWnafMulAdd(a, o);
          }
          jmulAdd(e, t, r) {
            const a = [this, t],
              o = [e, r];
            return this._endoWnafMulAdd(a, o, !0);
          }
          eq(e) {
            return this === e || (this.inf === e.inf && (this.inf || (0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))));
          }
          neg(e) {
            if (this.inf) return this;
            const t = new Ue(this.x, this.y.redNeg());
            if (e && null != this.precomputed) {
              const e = this.precomputed,
                r = (e) => e.neg();
              t.precomputed = {
                naf: null != e.naf && { wnd: e.naf.wnd, points: e.naf.points.map(r) },
                doubles: null != e.doubles && { step: e.doubles.step, points: e.doubles.points.map((e) => e.neg()) },
                beta: void 0,
              };
            }
            return t;
          }
          dblp(e) {
            let t = this;
            for (let r = 0; r < e; r++) t = t.dbl();
            return t;
          }
          toJ() {
            if (this.inf) return new h(null, null, null);
            return new h(this.x, this.y, this.curve.one);
          }
          _getBeta() {
            if ('object' !== typeof this.curve.endo) return;
            const e = this.precomputed;
            if ('object' === typeof e && null !== e && 'object' === typeof e.beta && null !== e.beta) return e.beta;
            const t = new Ue(this.x.redMul(this.curve.endo.beta), this.y);
            if (null != e) {
              const r = this.curve,
                a = (e) => new Ue(e.x.redMul(r.endo.beta), e.y);
              (e.beta = t),
                (t.precomputed = {
                  beta: null,
                  naf: null != e.naf ? { wnd: e.naf.wnd, points: e.naf.points.map(a) } : void 0,
                  doubles: null != e.doubles ? { step: e.doubles.step, points: e.doubles.points.map(a) } : void 0,
                });
            }
            return t;
          }
          _fixedNafMul(e) {
            if ('object' !== typeof this.precomputed || null === this.precomputed)
              throw new Error('_fixedNafMul requires precomputed values for the point');
            const t = this._getDoubles(),
              r = this.curve.getNAF(e, 1, this.curve._bitLength);
            let a = (1 << (t.step + 1)) - (t.step % 2 === 0 ? 2 : 1);
            a /= 3;
            const o = [];
            for (let s = 0; s < r.length; s += t.step) {
              let e = 0;
              for (let a = s + t.step - 1; a >= s; a--) e = (e << 1) + r[a];
              o.push(e);
            }
            let i = new h(null, null, null),
              n = new h(null, null, null);
            for (let s = a; s > 0; s--) {
              for (let e = 0; e < o.length; e++) {
                const r = o[e];
                r === s ? (n = n.mixedAdd(t.points[e])) : r === -s && (n = n.mixedAdd(t.points[e].neg()));
              }
              i = i.add(n);
            }
            return i.toP();
          }
          _wnafMulAdd(e, t, r, a, o) {
            const i = this.curve._wnafT1,
              n = this.curve._wnafT2,
              s = this.curve._wnafT3;
            let c = 0;
            for (let d = 0; d < a; d++) {
              const r = t[d]._getNAFPoints(e);
              (i[d] = r.wnd), (n[d] = r.points);
            }
            for (let d = a - 1; d >= 1; d -= 2) {
              const e = d - 1,
                a = d;
              if (1 !== i[e] || 1 !== i[a]) {
                (s[e] = this.curve.getNAF(r[e], i[e], this.curve._bitLength)),
                  (s[a] = this.curve.getNAF(r[a], i[a], this.curve._bitLength)),
                  (c = Math.max(s[e].length, c)),
                  (c = Math.max(s[a].length, c));
                continue;
              }
              const o = [t[e], null, null, t[a]];
              0 === t[e].y.cmp(t[a].y)
                ? ((o[1] = t[e].add(t[a])), (o[2] = t[e].toJ().mixedAdd(t[a].neg())))
                : 0 === t[e].y.cmp(t[a].y.redNeg())
                  ? ((o[1] = t[e].toJ().mixedAdd(t[a])), (o[2] = t[e].add(t[a].neg())))
                  : ((o[1] = t[e].toJ().mixedAdd(t[a])), (o[2] = t[e].toJ().mixedAdd(t[a].neg())));
              const l = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                u = this.curve.getJSF(r[e], r[a]);
              (c = Math.max(u[0].length, c)), (s[e] = new Array(c)), (s[a] = new Array(c));
              for (let t = 0; t < c; t++) {
                const r = 0 | u[0][t],
                  i = 0 | u[1][t];
                (s[e][t] = l[3 * (r + 1) + (i + 1)]), (s[a][t] = 0), (n[e] = o);
              }
            }
            let l = new h(null, null, null);
            const u = this.curve._wnafT4;
            for (let d = c; d >= 0; d--) {
              let e = 0;
              for (; d >= 0; ) {
                let t = !0;
                for (let e = 0; e < a; e++) (u[e] = 0 | s[e][d]), 0 !== u[e] && (t = !1);
                if (!t) break;
                e++, d--;
              }
              if ((d >= 0 && e++, (l = l.dblp(e)), d < 0)) break;
              for (let t = 0; t < a; t++) {
                const e = u[t];
                let r;
                0 !== e &&
                  (e > 0 ? (r = n[t][(e - 1) >> 1]) : e < 0 && (r = n[t][(-e - 1) >> 1].neg()),
                  (l = 'affine' === r.type ? l.mixedAdd(r) : l.add(r)));
              }
            }
            for (let d = 0; d < a; d++) n[d] = null;
            return o ? l : l.toP();
          }
          _endoWnafMulAdd(e, t, r) {
            const a = this.curve._endoWnafT1,
              o = this.curve._endoWnafT2;
            let i;
            for (i = 0; i < e.length; i++) {
              const r = this.curve._endoSplit(t[i]);
              let n = e[i],
                s = n._getBeta();
              0 !== r.k1.negative && (r.k1.ineg(), (n = n.neg(!0))),
                0 !== r.k2.negative && (r.k2.ineg(), (s = s.neg(!0))),
                (a[2 * i] = n),
                (a[2 * i + 1] = s),
                (o[2 * i] = r.k1),
                (o[2 * i + 1] = r.k2);
            }
            const n = this._wnafMulAdd(1, a, o, 2 * i, r);
            for (let s = 0; s < 2 * i; s++) (a[s] = null), (o[s] = null);
            return n;
          }
          _hasDoubles(e) {
            if (null == this.precomputed) return !1;
            const t = this.precomputed.doubles;
            return 'object' === typeof t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step);
          }
          _getDoubles(e, t) {
            if (
              'object' === typeof this.precomputed &&
              null !== this.precomputed &&
              'object' === typeof this.precomputed.doubles &&
              null !== this.precomputed.doubles
            )
              return this.precomputed.doubles;
            const r = [this];
            let a = this;
            for (let o = 0; o < t; o += e) {
              for (let t = 0; t < e; t++) a = a.dbl();
              r.push(a);
            }
            return { step: e, points: r };
          }
          _getNAFPoints(e) {
            if (
              'object' === typeof this.precomputed &&
              null !== this.precomputed &&
              'object' === typeof this.precomputed.naf &&
              null !== this.precomputed.naf
            )
              return this.precomputed.naf;
            const t = [this],
              r = (1 << e) - 1,
              a = 1 === r ? null : this.dbl();
            for (let o = 1; o < r; o++) t[o] = t[o - 1].add(a);
            return { wnd: e, points: t };
          }
        }
        let De;
        class Le {
          p;
          red;
          redN;
          zero;
          one;
          two;
          g;
          n;
          a;
          b;
          tinv;
          zeroA;
          threeA;
          endo;
          _endoWnafT1;
          _endoWnafT2;
          _wnafT1;
          _wnafT2;
          _wnafT3;
          _wnafT4;
          _bitLength;
          static assert(e) {
            if (!e)
              throw new Error(
                arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'Elliptic curve assertion failed',
              );
          }
          getNAF(e, t, r) {
            const a = new Array(Math.max(e.bitLength(), r) + 1);
            a.fill(0);
            const o = 1 << (t + 1),
              i = e.clone();
            for (let n = 0; n < a.length; n++) {
              let e;
              const t = i.andln(o - 1);
              i.isOdd() ? ((e = t > (o >> 1) - 1 ? (o >> 1) - t : t), i.isubn(e)) : (e = 0), (a[n] = e), i.iushrn(1);
            }
            return a;
          }
          getJSF(e, t) {
            const r = [[], []];
            (e = e.clone()), (t = t.clone());
            let a = 0,
              o = 0;
            for (; e.cmpn(-a) > 0 || t.cmpn(-o) > 0; ) {
              let i,
                n,
                s = (e.andln(3) + a) & 3,
                c = (t.andln(3) + o) & 3;
              if ((3 === s && (s = -1), 3 === c && (c = -1), 0 === (1 & s))) i = 0;
              else {
                const t = (e.andln(7) + a) & 7;
                i = (3 !== t && 5 !== t) || 2 !== c ? s : -s;
              }
              if ((r[0].push(i), 0 === (1 & c))) n = 0;
              else {
                const e = (t.andln(7) + o) & 7;
                n = (3 !== e && 5 !== e) || 2 !== s ? c : -c;
              }
              r[1].push(n), 2 * a === i + 1 && (a = 1 - a), 2 * o === n + 1 && (o = 1 - o), e.iushrn(1), t.iushrn(1);
            }
            return r;
          }
          static cachedProperty(e, t, r) {
            const a = '_' + t;
            e.prototype[t] = function () {
              return void 0 !== this[a] ? this[a] : (this[a] = r.call(this));
            };
          }
          static parseBytes(e) {
            return 'string' === typeof e ? Ae(e, 'hex') : e;
          }
          static intFromLE(e) {
            return new n(e, 'hex', 'le');
          }
          constructor() {
            if ('undefined' !== typeof De) return De;
            De = this;
            const e = {
              prime: 'k256',
              p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
              a: '0',
              b: '7',
              n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
              h: '1',
              beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
              lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
              basis: [
                { a: '3086d221a7d46bcde86c90e49284eb15', b: '-e4437ed6010e88286f547fa90abfe4c3' },
                { a: '114ca50f7a8e2f3f657c1108d9d44cfd8', b: '3086d221a7d46bcde86c90e49284eb15' },
              ],
              gRed: !1,
              g: [
                '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
                '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
                {
                  doubles: {
                    step: 4,
                    points: [
                      [
                        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
                        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
                      ],
                      [
                        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
                        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
                      ],
                      [
                        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
                        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
                      ],
                      [
                        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
                        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
                      ],
                      [
                        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
                        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
                      ],
                      [
                        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
                        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
                      ],
                      [
                        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
                        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
                      ],
                      [
                        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
                        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
                      ],
                      [
                        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
                        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
                      ],
                      [
                        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
                        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
                      ],
                      [
                        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
                        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
                      ],
                      [
                        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
                        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
                      ],
                      [
                        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
                        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
                      ],
                      [
                        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
                        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
                      ],
                      [
                        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
                        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
                      ],
                      [
                        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
                        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
                      ],
                      [
                        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
                        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
                      ],
                      [
                        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
                        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
                      ],
                      [
                        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
                        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
                      ],
                      [
                        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
                        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
                      ],
                      [
                        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
                        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
                      ],
                      [
                        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
                        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
                      ],
                      [
                        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
                        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
                      ],
                      [
                        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
                        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
                      ],
                      [
                        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
                        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
                      ],
                      [
                        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
                        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
                      ],
                      [
                        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
                        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
                      ],
                      [
                        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
                        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
                      ],
                      [
                        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
                        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
                      ],
                      [
                        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
                        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
                      ],
                      [
                        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
                        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
                      ],
                      [
                        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
                        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
                      ],
                      [
                        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
                        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
                      ],
                      [
                        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
                        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
                      ],
                      [
                        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
                        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
                      ],
                      [
                        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
                        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
                      ],
                      [
                        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
                        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
                      ],
                      [
                        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
                        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
                      ],
                      [
                        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
                        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
                      ],
                      [
                        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
                        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
                      ],
                      [
                        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
                        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
                      ],
                      [
                        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
                        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
                      ],
                      [
                        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
                        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
                      ],
                      [
                        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
                        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
                      ],
                      [
                        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
                        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
                      ],
                      [
                        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
                        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
                      ],
                      [
                        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
                        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
                      ],
                      [
                        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
                        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
                      ],
                      [
                        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
                        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
                      ],
                      [
                        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
                        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
                      ],
                      [
                        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
                        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
                      ],
                      [
                        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
                        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
                      ],
                      [
                        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
                        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
                      ],
                      [
                        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
                        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
                      ],
                      [
                        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
                        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
                      ],
                      [
                        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
                        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
                      ],
                      [
                        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
                        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
                      ],
                      [
                        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
                        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
                      ],
                      [
                        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
                        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
                      ],
                      [
                        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
                        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
                      ],
                      [
                        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
                        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
                      ],
                      [
                        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
                        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
                      ],
                      [
                        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
                        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
                      ],
                      [
                        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
                        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
                      ],
                      [
                        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
                        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
                      ],
                    ],
                  },
                  naf: {
                    wnd: 7,
                    points: [
                      [
                        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
                        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
                      ],
                      [
                        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
                        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
                      ],
                      [
                        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
                        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
                      ],
                      [
                        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
                        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
                      ],
                      [
                        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
                        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
                      ],
                      [
                        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
                        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
                      ],
                      [
                        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
                        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
                      ],
                      [
                        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
                        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
                      ],
                      [
                        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
                        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
                      ],
                      [
                        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
                        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
                      ],
                      [
                        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
                        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
                      ],
                      [
                        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
                        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
                      ],
                      [
                        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
                        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
                      ],
                      [
                        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
                        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
                      ],
                      [
                        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
                        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
                      ],
                      [
                        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
                        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
                      ],
                      [
                        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
                        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
                      ],
                      [
                        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
                        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
                      ],
                      [
                        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
                        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
                      ],
                      [
                        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
                        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
                      ],
                      [
                        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
                        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
                      ],
                      [
                        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
                        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
                      ],
                      [
                        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
                        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
                      ],
                      [
                        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
                        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
                      ],
                      [
                        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
                        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
                      ],
                      [
                        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
                        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
                      ],
                      [
                        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
                        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
                      ],
                      [
                        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
                        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
                      ],
                      [
                        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
                        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
                      ],
                      [
                        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
                        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
                      ],
                      [
                        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
                        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
                      ],
                      [
                        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
                        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
                      ],
                      [
                        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
                        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
                      ],
                      [
                        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
                        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
                      ],
                      [
                        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
                        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
                      ],
                      [
                        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
                        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
                      ],
                      [
                        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
                        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
                      ],
                      [
                        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
                        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
                      ],
                      [
                        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
                        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
                      ],
                      [
                        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
                        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
                      ],
                      [
                        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
                        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
                      ],
                      [
                        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
                        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
                      ],
                      [
                        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
                        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
                      ],
                      [
                        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
                        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
                      ],
                      [
                        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
                        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
                      ],
                      [
                        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
                        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
                      ],
                      [
                        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
                        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
                      ],
                      [
                        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
                        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
                      ],
                      [
                        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
                        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
                      ],
                      [
                        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
                        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
                      ],
                      [
                        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
                        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
                      ],
                      [
                        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
                        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
                      ],
                      [
                        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
                        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
                      ],
                      [
                        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
                        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
                      ],
                      [
                        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
                        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
                      ],
                      [
                        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
                        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
                      ],
                      [
                        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
                        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
                      ],
                      [
                        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
                        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
                      ],
                      [
                        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
                        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
                      ],
                      [
                        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
                        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
                      ],
                      [
                        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
                        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
                      ],
                      [
                        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
                        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
                      ],
                      [
                        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
                        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
                      ],
                      [
                        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
                        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
                      ],
                      [
                        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
                        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
                      ],
                      [
                        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
                        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
                      ],
                      [
                        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
                        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
                      ],
                      [
                        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
                        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
                      ],
                      [
                        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
                        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
                      ],
                      [
                        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
                        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
                      ],
                      [
                        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
                        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
                      ],
                      [
                        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
                        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
                      ],
                      [
                        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
                        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
                      ],
                      [
                        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
                        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
                      ],
                      [
                        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
                        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
                      ],
                      [
                        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
                        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
                      ],
                      [
                        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
                        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
                      ],
                      [
                        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
                        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
                      ],
                      [
                        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
                        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
                      ],
                      [
                        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
                        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
                      ],
                      [
                        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
                        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
                      ],
                      [
                        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
                        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
                      ],
                      [
                        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
                        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
                      ],
                      [
                        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
                        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
                      ],
                      [
                        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
                        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
                      ],
                      [
                        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
                        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
                      ],
                      [
                        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
                        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
                      ],
                      [
                        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
                        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
                      ],
                      [
                        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
                        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
                      ],
                      [
                        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
                        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
                      ],
                      [
                        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
                        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
                      ],
                      [
                        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
                        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
                      ],
                      [
                        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
                        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
                      ],
                      [
                        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
                        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
                      ],
                      [
                        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
                        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
                      ],
                      [
                        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
                        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
                      ],
                      [
                        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
                        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
                      ],
                      [
                        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
                        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
                      ],
                      [
                        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
                        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
                      ],
                      [
                        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
                        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
                      ],
                      [
                        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
                        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
                      ],
                      [
                        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
                        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
                      ],
                      [
                        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
                        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
                      ],
                      [
                        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
                        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
                      ],
                      [
                        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
                        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
                      ],
                      [
                        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
                        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
                      ],
                      [
                        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
                        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
                      ],
                      [
                        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
                        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
                      ],
                      [
                        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
                        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
                      ],
                      [
                        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
                        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
                      ],
                      [
                        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
                        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
                      ],
                      [
                        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
                        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
                      ],
                      [
                        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
                        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
                      ],
                      [
                        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
                        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
                      ],
                      [
                        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
                        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
                      ],
                      [
                        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
                        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
                      ],
                      [
                        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
                        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
                      ],
                      [
                        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
                        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
                      ],
                      [
                        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
                        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
                      ],
                      [
                        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
                        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
                      ],
                      [
                        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
                        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
                      ],
                      [
                        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
                        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
                      ],
                      [
                        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
                        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
                      ],
                      [
                        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
                        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
                      ],
                      [
                        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
                        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
                      ],
                      [
                        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
                        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
                      ],
                      [
                        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
                        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
                      ],
                    ],
                  },
                },
              ],
            };
            (this.p = new n(e.p, 16)),
              (this.red = new l(e.prime)),
              (this.zero = new n(0).toRed(this.red)),
              (this.one = new n(1).toRed(this.red)),
              (this.two = new n(2).toRed(this.red)),
              (this.n = new n(e.n, 16)),
              (this.g = Ue.fromJSON(e.g, e.gRed)),
              (this._wnafT1 = new Array(4)),
              (this._wnafT2 = new Array(4)),
              (this._wnafT3 = new Array(4)),
              (this._wnafT4 = new Array(4)),
              (this._bitLength = this.n.bitLength()),
              (this.redN = this.n.toRed(this.red)),
              (this.a = new n(e.a, 16).toRed(this.red)),
              (this.b = new n(e.b, 16).toRed(this.red)),
              (this.tinv = this.two.redInvm()),
              (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
              (this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3)),
              (this.endo = this._getEndomorphism(e)),
              (this._endoWnafT1 = new Array(4)),
              (this._endoWnafT2 = new Array(4));
          }
          _getEndomorphism(e) {
            if (!this.zeroA || 1 !== this.p.modrn(3)) return;
            let t, r, a;
            if (void 0 !== e.beta) t = new n(e.beta, 16).toRed(this.red);
            else {
              const e = this._getEndoRoots(this.p);
              (t = e[0].cmp(e[1]) < 0 ? e[0] : e[1]), (t = t.toRed(this.red));
            }
            if (void 0 !== e.lambda) r = new n(e.lambda, 16);
            else {
              const e = this._getEndoRoots(this.n);
              0 === this.g.mul(e[0]).x.cmp(this.g.x.redMul(t))
                ? (r = e[0])
                : ((r = e[1]), Le.assert(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))));
            }
            return (
              (a =
                'object' === typeof e.basis && null !== e.basis
                  ? e.basis.map(function (e) {
                      return { a: new n(e.a, 16), b: new n(e.b, 16) };
                    })
                  : this._getEndoBasis(r)),
              { beta: t, lambda: r, basis: a }
            );
          }
          _getEndoRoots(e) {
            const t = e === this.p ? this.red : new u(e),
              r = new n(2).toRed(t).redInvm(),
              a = r.redNeg(),
              o = new n(3).toRed(t).redNeg().redSqrt().redMul(r);
            return [a.redAdd(o).fromRed(), a.redSub(o).fromRed()];
          }
          _getEndoBasis(e) {
            const t = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
            let r,
              a,
              o,
              i,
              s,
              c,
              l,
              u,
              d,
              h = e,
              f = this.n.clone(),
              p = new n(1),
              b = new n(0),
              m = new n(0),
              g = new n(1),
              v = 0;
            for (; 0 !== h.cmpn(0); ) {
              const e = f.div(h);
              (u = f.sub(e.mul(h))), (d = m.sub(e.mul(p)));
              const n = g.sub(e.mul(b));
              if ('object' !== typeof o && u.cmp(t) < 0) (r = l.neg()), (a = p), (o = u.neg()), (i = d);
              else if ('object' === typeof o && 2 === ++v) break;
              (l = u), (f = h), (h = u), (m = p), (p = d), (g = b), (b = n);
            }
            (s = u.neg()), (c = d);
            const y = o.sqr().add(i.sqr());
            return (
              s.sqr().add(c.sqr()).cmp(y) >= 0 && ((s = r), (c = a)),
              0 !== o.negative && ((o = o.neg()), (i = i.neg())),
              0 !== s.negative && ((s = s.neg()), (c = c.neg())),
              [
                { a: o, b: i },
                { a: s, b: c },
              ]
            );
          }
          _endoSplit(e) {
            const t = this.endo.basis,
              r = t[0],
              a = t[1],
              o = a.b.mul(e).divRound(this.n),
              i = r.b.neg().mul(e).divRound(this.n),
              n = o.mul(r.a),
              s = i.mul(a.a),
              c = o.mul(r.b),
              l = i.mul(a.b);
            return { k1: e.sub(n).sub(s), k2: c.add(l).neg() };
          }
          validate(e) {
            if (e.inf) return !0;
            const t = e.x,
              r = e.y,
              a = this.a.redMul(t),
              o = t.redSqr().redMul(t).redIAdd(a).redIAdd(this.b);
            return 0 === r.redSqr().redISub(o).cmpn(0);
          }
        }
        class qe {
          r;
          s;
          static fromDER(e, t) {
            const r = (e, t) => {
              const r = e[t.place++];
              if (0 === (128 & r)) return r;
              throw new Error('Invalid DER entity length');
            };
            e = Ae(e, t);
            const a = new (class {
              place;
              constructor() {
                this.place = 0;
              }
            })();
            if (48 !== e[a.place++]) throw new Error('Signature DER must start with 0x30');
            if (r(e, a) + a.place !== e.length) throw new Error('Signature DER invalid');
            if (2 !== e[a.place++]) throw new Error('Signature DER invalid');
            const o = r(e, a);
            let i = e.slice(a.place, o + a.place);
            if (((a.place += o), 2 !== e[a.place++])) throw new Error('Signature DER invalid');
            const s = r(e, a);
            if (e.length !== s + a.place) throw new Error('Invalid R-length in signature DER');
            let c = e.slice(a.place, s + a.place);
            if (0 === i[0]) {
              if (0 === (128 & i[1])) throw new Error('Invalid R-value in signature DER');
              i = i.slice(1);
            }
            if (0 === c[0]) {
              if (0 === (128 & c[1])) throw new Error('Invalid S-value in signature DER');
              c = c.slice(1);
            }
            return new qe(new n(i), new n(c));
          }
          static fromCompact(e, t) {
            if (65 !== (e = Ae(e, t)).length) throw new Error('Invalid Compact Signature');
            const r = e[0];
            if (r < 27 || r >= 35) throw new Error('Invalid Compact Byte');
            return new qe(new n(e.slice(1, 33)), new n(e.slice(33, 65)));
          }
          constructor(e, t) {
            (this.r = e), (this.s = t);
          }
          verify(e, t, r) {
            const a = new n(ge(e, r), 16);
            return Ve(a, this, t);
          }
          toString(e) {
            return this.toDER(e);
          }
          toDER(e) {
            const t = (e, t) => {
                if (!(t < 128)) throw new Error('len must be < 0x80');
                e.push(t);
              },
              r = (e) => {
                let t = 0;
                const r = e.length - 1;
                for (; 0 === e[t] && 0 === (128 & e[t + 1]) && t < r; ) t++;
                return 0 === t ? e : e.slice(t);
              };
            let a = this.r.toArray(),
              o = this.s.toArray();
            for (
              0 !== (128 & a[0]) && (a = [0].concat(a)), 0 !== (128 & o[0]) && (o = [0].concat(o)), a = r(a), o = r(o);
              0 === o[0] && 0 === (128 & o[1]);

            )
              o = o.slice(1);
            let i = [2];
            t(i, a.length), (i = i.concat(a)), i.push(2), t(i, o.length);
            const n = i.concat(o);
            let s = [48];
            return t(s, n.length), (s = s.concat(n)), 'hex' === e ? _e(s) : 'base64' === e ? Ie(s) : s;
          }
          toCompact(e, t, r) {
            if (e < 0 || e > 3) throw new Error('Invalid recovery param');
            if ('boolean' !== typeof t) throw new Error('Invalid compressed param');
            let a = 27 + e;
            t && (a += 4);
            let o = [a];
            return (
              (o = o.concat(this.r.toArray('be', 32))),
              (o = o.concat(this.s.toArray('be', 32))),
              'hex' === r ? _e(o) : 'base64' === r ? Ie(o) : o
            );
          }
          RecoverPublicKey(e, t) {
            const r = this.r,
              a = this.s,
              o = !!(1 & e),
              i = e >> 1,
              n = new Le(),
              s = n.n,
              c = n.g,
              l = i ? r.add(s) : r,
              u = Ue.fromX(l, o);
            if (!u.mul(s).isInfinity()) throw new Error('nR is not at infinity');
            const d = t.neg().umod(s),
              h = r.invm(s),
              f = h.mul(a).umod(s),
              p = h.mul(d).umod(s),
              b = c.mul(p).add(u.mul(f)),
              m = new $e(b);
            return m.validate(), m;
          }
          CalculateRecoveryFactor(e, t) {
            for (let a = 0; a < 4; a++) {
              let o;
              try {
                o = this.RecoverPublicKey(a, t);
              } catch (r) {
                continue;
              }
              if (e.eq(o)) return a;
            }
            throw new Error('Unable to find valid recovery factor');
          }
        }
        class He {
          K;
          V;
          constructor(e, t) {
            if (((e = Ae(e, 'hex')), (t = Ae(t, 'hex')), e.length < 32))
              throw new Error('Not enough entropy. Minimum is 256 bits');
            const r = e.concat(t);
            (this.K = new Array(32)), (this.V = new Array(32));
            for (let a = 0; a < 32; a++) (this.K[a] = 0), (this.V[a] = 1);
            this.update(r);
          }
          hmac() {
            return new he(this.K);
          }
          update(e) {
            let t = this.hmac().update(this.V).update([0]);
            void 0 !== e && (t = t.update(e)),
              (this.K = t.digest()),
              (this.V = this.hmac().update(this.V).digest()),
              void 0 !== e &&
                ((this.K = this.hmac().update(this.V).update([1]).update(e).digest()),
                (this.V = this.hmac().update(this.V).digest()));
          }
          generate(e) {
            let t = [];
            for (; t.length < e; ) (this.V = this.hmac().update(this.V).digest()), (t = t.concat(this.V));
            const r = t.slice(0, e);
            return this.update(), _e(r);
          }
        }
        function Ge(e, t) {
          let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Le();
          const a = 8 * e.byteLength() - r.n.bitLength();
          return a > 0 && e.iushrn(a), !t && e.cmp(r.n) >= 0 ? e.sub(r.n) : e;
        }
        const Ke = function (e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              a = arguments.length > 3 ? arguments[3] : void 0;
            if ('function' === typeof BigInt) {
              const o = BigInt(0),
                i = BigInt(1),
                s = BigInt(2),
                c = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'),
                l = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'),
                u = {
                  x: BigInt('0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798'),
                  y: BigInt('0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8'),
                },
                d = BigInt('0x' + e.toString(16)),
                h = BigInt('0x' + t.toString(16));
              if (h <= o || h >= c) throw new Error('Invalid private key');
              function f(e, t) {
                const r = e.toString(16).padStart(2 * t, '0'),
                  a = new Uint8Array(t);
                for (let o = 0; o < t; o++) a[o] = parseInt(r.substr(2 * o, 2), 16);
                return a;
              }
              const p = 32,
                b = f(h, p),
                m = f(d, p),
                g = new He(Array.from(b), Array.from(m)),
                v = c - i;
              let y = 0;
              function w(e, t) {
                let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                const a = e.toString(2).length - t.toString(2).length;
                return a > 0 && (e >>= BigInt(a)), !r && e >= t ? e - t : e;
              }
              function k() {
                if ('function' === typeof a) {
                  const e = a(y).toString(16);
                  return BigInt('0x' + e);
                }
                if (n.isBN(a)) {
                  const e = a.toString(16);
                  return BigInt('0x' + e);
                }
                {
                  const e = g.generate(p);
                  return BigInt('0x' + e);
                }
              }
              function E(e, t) {
                return ((e % t) + t) % t;
              }
              function S(e, t) {
                let r = i,
                  a = o,
                  n = E(e, t),
                  s = t;
                for (; n > i; ) {
                  const e = s / n,
                    t = a - r * e,
                    o = s - n * e;
                  (a = r), (r = t), (s = n), (n = o);
                }
                return E(r, t);
              }
              function x(e, t) {
                if (null === e) return t;
                if (null === t) return e;
                if (e.x === t.x && e.y === E(-t.y, l)) return null;
                let r;
                if (e.x === t.x && e.y === t.y) {
                  if (e.y === o) return null;
                  const t = E(BigInt(3) * e.x * e.x, l);
                  r = E(t * S(s * e.y, l), l);
                } else {
                  const a = E(t.y - e.y, l);
                  r = E(a * S(t.x - e.x, l), l);
                }
                const a = E(r * r - e.x - t.x, l);
                return { x: a, y: E(r * (e.x - a) - e.y, l) };
              }
              function _(e, t) {
                let r = t,
                  a = null;
                for (; e > o; ) e % s === i && (a = x(a, r)), (r = x(r, r)), (e >>= i);
                return a;
              }
              for (;;) {
                let A = k();
                if (((y += 1), (A = w(A, c, !0)), A <= i || A >= v)) {
                  if (a instanceof n)
                    throw new Error('Invalid fixed custom K value (must be more than 1 and less than N-1)');
                  continue;
                }
                const O = _(A, u);
                if (null === O) {
                  if (a instanceof n)
                    throw new Error(
                      'Invalid fixed custom K value (must not create a point at infinity when multiplied by the generator point)',
                    );
                  continue;
                }
                const P = E(O.x, c);
                if (P === o) {
                  if (a instanceof n)
                    throw new Error(
                      'Invalid fixed custom K value (when multiplied by G, the resulting x coordinate mod N must not be zero)',
                    );
                  continue;
                }
                const I = S(A, c),
                  B = E(P * h, c);
                let N = E(I * (d + B), c);
                if (N === o) {
                  if (a instanceof n)
                    throw new Error(
                      'Invalid fixed custom K value (when used with the key, it cannot create a zero value for S)',
                    );
                  continue;
                }
                r && N > c / s && (N = c - N);
                const T = new n(P.toString(16), 16),
                  z = new n(N.toString(16), 16);
                return new qe(T, z);
              }
            } else {
              const R = new Le();
              e = Ge(e);
              const M = R.n.byteLength(),
                F = t.toArray('be', M),
                C = e.toArray('be', M),
                j = new He(F, C),
                U = R.n.subn(1);
              for (let D = 0; ; D++) {
                let L = 'function' === typeof a ? a(D) : n.isBN(a) ? a : new n(j.generate(M), 16);
                if (((L = Ge(L, !0)), L.cmpn(1) <= 0 || L.cmp(U) >= 0)) {
                  if (n.isBN(a))
                    throw new Error('Invalid fixed custom K value (must be more than 1 and less than N-1)');
                  continue;
                }
                const q = R.g.mul(L);
                if (q.isInfinity()) {
                  if (n.isBN(a))
                    throw new Error(
                      'Invalid fixed custom K value (must not create a point at infinity when multiplied by the generator point)',
                    );
                  continue;
                }
                const H = q.getX().umod(R.n);
                if (0 === H.cmpn(0)) {
                  if (n.isBN(a))
                    throw new Error(
                      'Invalid fixed custom K value (when multiplied by G, the resulting x coordinate mod N must not be zero)',
                    );
                  continue;
                }
                let G = L.invm(R.n).mul(H.mul(t).iadd(e));
                if (((G = G.umod(R.n)), 0 !== G.cmpn(0)))
                  return r && G.cmp(R.n.ushrn(1)) > 0 && (G = R.n.sub(G)), new qe(H, G);
                if (n.isBN(a))
                  throw new Error(
                    'Invalid fixed custom K value (when used with the key, it cannot create a zero value for S)',
                  );
              }
            }
          },
          Ve = (e, t, r) => {
            if ('function' === typeof BigInt) {
              const a = BigInt(0),
                o = BigInt(1),
                i = BigInt(2),
                n = BigInt(3),
                s = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'),
                c = BigInt('0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'),
                l = {
                  x: BigInt('0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798'),
                  y: BigInt('0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8'),
                },
                u = (e, t) => ((e % t) + t) % t,
                d = (e, t) => {
                  let [r, i] = [e, t],
                    [n, s] = [BigInt(1), BigInt(0)];
                  for (; i !== a; ) {
                    const e = r / i;
                    ([r, i] = [i, r - e * i]), ([n, s] = [s, n - e * s]);
                  }
                  return r > o ? a : u(n, t);
                },
                h = (e, t, r) => u(e * t, r),
                f = (e, t, r) => u(e - t, r),
                p = BigInt(4),
                b = BigInt(8),
                m = (e) => {
                  const { X: t, Y: r, Z: c } = e;
                  if (r === a) return { X: a, Y: o, Z: a };
                  const l = h(r, r, s),
                    u = h(p, h(t, l, s), s),
                    d = h(n, h(t, t, s), s),
                    m = f(h(d, d, s), h(i, u, s), s);
                  return { X: m, Y: f(h(d, f(u, m, s), s), h(b, h(l, l, s), s), s), Z: h(i, h(r, c, s), s) };
                },
                g = (e, t) => {
                  if (e.Z === a) return t;
                  if (t.Z === a) return e;
                  const r = h(e.Z, e.Z, s),
                    n = h(t.Z, t.Z, s),
                    c = h(e.X, n, s),
                    l = h(t.X, r, s),
                    u = h(e.Y, h(n, t.Z, s), s),
                    d = h(t.Y, h(r, e.Z, s), s),
                    p = f(l, c, s),
                    b = f(d, u, s);
                  if (p === a) return b === a ? m(e) : { X: a, Y: o, Z: a };
                  const g = h(p, p, s),
                    v = h(p, g, s),
                    y = h(c, g, s),
                    w = f(f(h(b, b, s), v, s), h(i, y, s), s);
                  return { X: w, Y: f(h(b, f(y, w, s), s), h(u, v, s), s), Z: h(p, h(e.Z, t.Z, s), s) };
                },
                v = (e, t) => {
                  const r = { X: t.x, Y: t.y, Z: o };
                  let i = { X: a, Y: o, Z: a };
                  const n = e.toString(2);
                  for (let a = 0; a < n.length; a++) (i = m(i)), '1' === n[a] && (i = g(i, r));
                  return i;
                },
                y = (e, t, r) => {
                  const { r: o, s: i } = r,
                    n = e;
                  if (o <= a || o >= c || i <= a || i >= c) return !1;
                  const f = d(i, c);
                  if (f === a) return !1;
                  const p = h(n, f, c),
                    b = h(o, f, c),
                    m = v(p, l),
                    y = v(b, t),
                    w = g(m, y);
                  if (w.Z === a) return !1;
                  const k = d(w.Z, s);
                  if (k === a) return !1;
                  const E = h(k, k, s),
                    S = h(w.X, E, s);
                  return u(S, c) === o;
                };
              return y(
                BigInt('0x' + e.toString(16)),
                { x: BigInt('0x' + r.x.toString(16)), y: BigInt('0x' + r.y.toString(16)) },
                { r: BigInt('0x' + t.r.toString(16)), s: BigInt('0x' + t.s.toString(16)) },
              );
            }
            {
              const a = new Le();
              e = Ge(e);
              const o = t.r,
                i = t.s;
              if (o.cmpn(1) < 0 || o.cmp(a.n) >= 0) return !1;
              if (i.cmpn(1) < 0 || i.cmp(a.n) >= 0) return !1;
              const n = i.invm(a.n),
                s = n.mul(e).umod(a.n),
                c = n.mul(o).umod(a.n),
                l = a.g.jmulAdd(s, r, c);
              return !l.isInfinity() && l.eqXToP(o);
            }
          };
        class $e extends Ue {
          static fromPrivateKey(e) {
            const t = new Le().g.mul(e);
            return new $e(t.x, t.y);
          }
          static fromString(e) {
            const t = Ue.fromString(e);
            return new $e(t.x, t.y);
          }
          static fromDER(e) {
            const t = Ue.fromDER(e);
            return new $e(t.x, t.y);
          }
          constructor(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
              r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
            e instanceof Ue ? super(e.getX(), e.getY()) : super(e, t, r);
          }
          deriveSharedSecret(e) {
            if (!this.validate()) throw new Error('Public key not valid for ECDH secret derivation');
            return this.mul(e);
          }
          verify(e, t, r) {
            const a = new n(ge(e, r), 16);
            return Ve(a, t, this);
          }
          toDER(e) {
            return 'hex' === e ? this.encode(!0, e) : this.encode(!0);
          }
          toHash(e) {
            const t = we(this.encode(!0));
            return 'hex' === e ? _e(t) : t;
          }
          toAddress() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0];
            if ('string' === typeof e)
              if ('testnet' === e || 'test' === e) e = [111];
              else {
                if ('mainnet' !== e && 'main' !== e) throw new Error(`Invalid prefix ${e}`);
                e = [0];
              }
            return ze(this.toHash(), e);
          }
          deriveChild(e, t) {
            const r = this.deriveSharedSecret(e),
              a = Ae(t, 'utf8'),
              o = ke(r.encode(!0), a),
              i = new Le().g.mul(new n(o)),
              s = this.add(i);
            return new $e(s.x, s.y);
          }
          static fromMsgHashAndCompactSignature(e, t, r) {
            const a = Ae(t, r);
            if (65 !== a.length) throw new Error('Invalid Compact Signature');
            const o = a[0];
            if (o < 27 || o >= 35) throw new Error('Invalid Compact Byte');
            let i = a[0] - 27,
              s = !1;
            i > 3 && ((s = !0), (i -= 4));
            return new qe(new n(a.slice(1, 33)), new n(a.slice(33, 65))).RecoverPublicKey(i, e);
          }
        }
        var We = r(3407);
        class Ye {
          x;
          y;
          constructor(e, t) {
            const r = new Le().p;
            (this.x = e.umod(r)), (this.y = t.umod(r));
          }
          toString() {
            return Te(this.x.toArray()) + '.' + Te(this.y.toArray());
          }
          static fromString(e) {
            const [t, r] = e.split('.');
            return new Ye(new n(Ne(t)), new n(Ne(r)));
          }
        }
        class Xe {
          points;
          threshold;
          constructor(e, t) {
            (this.points = e), (this.threshold = t || e.length);
          }
          static fromPrivateKey(e, t) {
            const r = new Le().p,
              a = [new Ye(new n(0), new n(e.toArray()))];
            for (let o = 1; o < t; o++) {
              const e = new n((0, We.A)(32)).umod(r),
                t = new n((0, We.A)(32)).umod(r);
              a.push(new Ye(e, t));
            }
            return new Xe(a);
          }
          valueAt(e) {
            const t = new Le().p;
            let r = new n(0);
            for (let a = 0; a < this.threshold; a++) {
              let o = this.points[a].y;
              for (let r = 0; r < this.threshold; r++)
                if (a !== r) {
                  const i = this.points[r].x,
                    n = this.points[a].x,
                    s = e.sub(i).umod(t),
                    c = n.sub(i).umod(t).invm(t),
                    l = s.mul(c).umod(t);
                  o = o.mul(l).umod(t);
                }
              r = r.add(o).umod(t);
            }
            return r;
          }
        }
        class Je {
          points;
          threshold;
          integrity;
          constructor(e, t, r) {
            (this.points = e), (this.threshold = t), (this.integrity = r);
          }
          static fromBackupFormat(e) {
            let t = 0,
              r = '';
            const a = e.map((e, a) => {
              const o = e.split('.');
              if (4 !== o.length)
                throw Error('Invalid share format in share ' + a + '. Expected format: "x.y.t.i" - received ' + e);
              const [i, n, s, c] = o;
              if (!s) throw Error('Threshold not found in share ' + a);
              if (!c) throw Error('Integrity not found in share ' + a);
              const l = parseInt(s);
              if (0 !== a && t !== l) throw Error('Threshold mismatch in share ' + a);
              if (0 !== a && r !== c) throw Error('Integrity mismatch in share ' + a);
              return (t = l), (r = c), Ye.fromString([i, n].join('.'));
            });
            return new Je(a, t, r);
          }
          toBackupFormat() {
            return this.points.map((e) => e.toString() + '.' + this.threshold + '.' + this.integrity);
          }
        }
        class Qe extends n {
          static fromRandom() {
            return new Qe((0, We.A)(32));
          }
          static fromString(e, t) {
            return new Qe(n.fromString(e, t).toArray());
          }
          static fromWif(e) {
            const t = Re(e, null, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1);
            if (33 !== t.data.length) throw new Error('Invalid WIF length');
            if (1 !== t.data[32]) throw new Error('Invalid WIF padding');
            return new Qe(t.data.slice(0, 32));
          }
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'be',
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'apply';
            if ((e instanceof n ? (super(), e.copy(this)) : super(e, t, r), 'nocheck' !== a)) {
              const e = this.checkInField();
              if (!e.inField) {
                if ('error' === a) throw new Error('Input is out of field');
                n.move(this, e.modN);
              }
            }
          }
          checkInField() {
            const e = new Le(),
              t = this.mod(e.n);
            return { inField: 0 === this.cmp(t), modN: t };
          }
          isValid() {
            return this.checkInField().inField;
          }
          sign(e, t) {
            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              a = arguments.length > 3 ? arguments[3] : void 0;
            const o = new n(ge(e, t), 16);
            return Ke(o, this, r, a);
          }
          verify(e, t, r) {
            const a = new n(ge(e, r), 16);
            return Ve(a, t, this.toPublicKey());
          }
          toPublicKey() {
            const e = new Le().g.mul(this);
            return new $e(e.x, e.y);
          }
          toWif() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [128];
            if (!this.isValid()) throw new Error('Value is out of field');
            return ze([...this.toArray('be', 32), 1], e);
          }
          toAddress() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0];
            return this.toPublicKey().toAddress(e);
          }
          deriveSharedSecret(e) {
            if (!e.validate()) throw new Error('Public key not valid for ECDH secret derivation');
            return e.mul(this);
          }
          deriveChild(e, t) {
            const r = this.deriveSharedSecret(e),
              a = Ae(t, 'utf8'),
              o = ke(r.encode(!0), a),
              i = new Le();
            return new Qe(this.add(new n(o)).mod(i.n).toArray());
          }
          toKeyShares(e, t) {
            if ('number' !== typeof e || 'number' !== typeof t)
              throw new Error('threshold and totalShares must be numbers');
            if (e < 2) throw new Error('threshold must be at least 2');
            if (t < 2) throw new Error('totalShares must be at least 2');
            if (e > t) throw new Error('threshold should be less than or equal to totalShares');
            const r = Xe.fromPrivateKey(this, e),
              a = [];
            for (let i = 0; i < t; i++) {
              const e = new n(Qe.fromRandom().toArray()),
                t = r.valueAt(e);
              a.push(new Ye(e, t));
            }
            const o = this.toPublicKey().toHash('hex').slice(0, 8);
            return new Je(a, e, o);
          }
          toBackupShares(e, t) {
            return this.toKeyShares(e, t).toBackupFormat();
          }
          static fromBackupShares(e) {
            return Qe.fromKeyShares(Je.fromBackupFormat(e));
          }
          static fromKeyShares(e) {
            const { points: t, threshold: r, integrity: a } = e;
            if (r < 2) throw new Error('threshold must be at least 2');
            if (t.length < r) throw new Error(`At least ${r} shares are required to reconstruct the private key`);
            for (let n = 0; n < r; n++)
              for (let e = n + 1; e < r; e++)
                if (t[n].x.eq(t[e].x)) throw new Error('Duplicate share detected, each must be unique.');
            const o = new Xe(t, r),
              i = new Qe(o.valueAt(new n(0)).toArray());
            if (i.toPublicKey().toHash('hex').slice(0, 8) !== a) throw new Error('Integrity hash mismatch');
            return i;
          }
        }
        const Ze = function (e) {
          let t;
          const r = [];
          for (t = 0; t < e; t++) r.push(0);
          return r;
        };
        [225].concat(Ze(15));
        class et extends qe {
          static SIGHASH_ALL = 1;
          static SIGHASH_NONE = 2;
          static SIGHASH_SINGLE = 3;
          static SIGHASH_FORKID = 64;
          static SIGHASH_ANYONECANPAY = 128;
          scope;
          static format(e) {
            const t = { sourceTXID: e.sourceTXID, sourceOutputIndex: e.sourceOutputIndex, sequence: e.inputSequence },
              r = [...e.otherInputs];
            r.splice(e.inputIndex, 0, t);
            function a(t) {
              const r = new Me();
              if ('undefined' === typeof t) {
                let t;
                for (const a of e.outputs)
                  r.writeUInt64LE(a.satoshis), (t = a.lockingScript.toBinary()), r.writeVarIntNum(t.length), r.write(t);
              } else {
                const a = e.outputs[t];
                r.writeUInt64LE(a.satoshis);
                const o = a.lockingScript.toBinary();
                r.writeVarIntNum(o.length), r.write(o);
              }
              const a = r.toArray();
              return ye(a);
            }
            let o = new Array(32).fill(0),
              i = new Array(32).fill(0),
              n = new Array(32).fill(0);
            0 === (e.scope & et.SIGHASH_ANYONECANPAY) &&
              (o = (() => {
                const e = new Me();
                for (const a of r)
                  'undefined' === typeof a.sourceTXID
                    ? e.write(a.sourceTransaction.hash())
                    : e.writeReverse(Ae(a.sourceTXID, 'hex')),
                    e.writeUInt32LE(a.sourceOutputIndex);
                const t = e.toArray();
                return ye(t);
              })()),
              0 === (e.scope & et.SIGHASH_ANYONECANPAY) &&
                (31 & e.scope) !== et.SIGHASH_SINGLE &&
                (31 & e.scope) !== et.SIGHASH_NONE &&
                (i = (() => {
                  const e = new Me();
                  for (const a of r) e.writeUInt32LE(a.sequence);
                  const t = e.toArray();
                  return ye(t);
                })()),
              (31 & e.scope) !== et.SIGHASH_SINGLE && (31 & e.scope) !== et.SIGHASH_NONE
                ? (n = a())
                : (31 & e.scope) === et.SIGHASH_SINGLE && e.inputIndex < e.outputs.length && (n = a(e.inputIndex));
            const s = new Me();
            s.writeInt32LE(e.transactionVersion),
              s.write(o),
              s.write(i),
              s.writeReverse(Ae(e.sourceTXID, 'hex')),
              s.writeUInt32LE(e.sourceOutputIndex);
            const c = e.subscript.toBinary();
            s.writeVarIntNum(c.length), s.write(c), s.writeUInt64LE(e.sourceSatoshis);
            const l = t.sequence;
            s.writeUInt32LE(l), s.write(n), s.writeUInt32LE(e.lockTime), s.writeUInt32LE(e.scope >>> 0);
            return s.toArray();
          }
          static fromChecksigFormat(e) {
            if (0 === e.length) {
              const e = new n(1),
                t = new n(1);
              return new et(e, t, 1);
            }
            const t = e[e.length - 1],
              r = e.slice(0, e.length - 1),
              a = qe.fromDER(r);
            return new et(a.r, a.s, t);
          }
          constructor(e, t, r) {
            super(e, t), (this.scope = r);
          }
          hasLowS() {
            return (
              !this.s.ltn(1) &&
              !this.s.gt(new n('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))
            );
          }
          toChecksigFormat() {
            return [...this.toDER(), this.scope];
          }
        }
        const tt = {
          OP_FALSE: 0,
          OP_0: 0,
          OP_PUSHDATA1: 76,
          OP_PUSHDATA2: 77,
          OP_PUSHDATA4: 78,
          OP_1NEGATE: 79,
          OP_RESERVED: 80,
          OP_TRUE: 81,
          OP_1: 81,
          OP_2: 82,
          OP_3: 83,
          OP_4: 84,
          OP_5: 85,
          OP_6: 86,
          OP_7: 87,
          OP_8: 88,
          OP_9: 89,
          OP_10: 90,
          OP_11: 91,
          OP_12: 92,
          OP_13: 93,
          OP_14: 94,
          OP_15: 95,
          OP_16: 96,
          OP_NOP: 97,
          OP_VER: 98,
          OP_IF: 99,
          OP_NOTIF: 100,
          OP_VERIF: 101,
          OP_VERNOTIF: 102,
          OP_ELSE: 103,
          OP_ENDIF: 104,
          OP_VERIFY: 105,
          OP_RETURN: 106,
          OP_TOALTSTACK: 107,
          OP_FROMALTSTACK: 108,
          OP_2DROP: 109,
          OP_2DUP: 110,
          OP_3DUP: 111,
          OP_2OVER: 112,
          OP_2ROT: 113,
          OP_2SWAP: 114,
          OP_IFDUP: 115,
          OP_DEPTH: 116,
          OP_DROP: 117,
          OP_DUP: 118,
          OP_NIP: 119,
          OP_OVER: 120,
          OP_PICK: 121,
          OP_ROLL: 122,
          OP_ROT: 123,
          OP_SWAP: 124,
          OP_TUCK: 125,
          OP_CAT: 126,
          OP_SUBSTR: 127,
          OP_SPLIT: 127,
          OP_LEFT: 128,
          OP_NUM2BIN: 128,
          OP_RIGHT: 129,
          OP_BIN2NUM: 129,
          OP_SIZE: 130,
          OP_INVERT: 131,
          OP_AND: 132,
          OP_OR: 133,
          OP_XOR: 134,
          OP_EQUAL: 135,
          OP_EQUALVERIFY: 136,
          OP_RESERVED1: 137,
          OP_RESERVED2: 138,
          OP_1ADD: 139,
          OP_1SUB: 140,
          OP_2MUL: 141,
          OP_2DIV: 142,
          OP_NEGATE: 143,
          OP_ABS: 144,
          OP_NOT: 145,
          OP_0NOTEQUAL: 146,
          OP_ADD: 147,
          OP_SUB: 148,
          OP_MUL: 149,
          OP_DIV: 150,
          OP_MOD: 151,
          OP_LSHIFT: 152,
          OP_RSHIFT: 153,
          OP_BOOLAND: 154,
          OP_BOOLOR: 155,
          OP_NUMEQUAL: 156,
          OP_NUMEQUALVERIFY: 157,
          OP_NUMNOTEQUAL: 158,
          OP_LESSTHAN: 159,
          OP_GREATERTHAN: 160,
          OP_LESSTHANOREQUAL: 161,
          OP_GREATERTHANOREQUAL: 162,
          OP_MIN: 163,
          OP_MAX: 164,
          OP_WITHIN: 165,
          OP_RIPEMD160: 166,
          OP_SHA1: 167,
          OP_SHA256: 168,
          OP_HASH160: 169,
          OP_HASH256: 170,
          OP_CODESEPARATOR: 171,
          OP_CHECKSIG: 172,
          OP_CHECKSIGVERIFY: 173,
          OP_CHECKMULTISIG: 174,
          OP_CHECKMULTISIGVERIFY: 175,
          OP_NOP1: 176,
          OP_NOP2: 177,
          OP_NOP3: 178,
          OP_NOP4: 179,
          OP_NOP5: 180,
          OP_NOP6: 181,
          OP_NOP7: 182,
          OP_NOP8: 183,
          OP_NOP9: 184,
          OP_NOP10: 185,
          OP_NOP11: 186,
          OP_NOP12: 187,
          OP_NOP13: 188,
          OP_NOP14: 189,
          OP_NOP15: 190,
          OP_NOP16: 191,
          OP_NOP17: 192,
          OP_NOP18: 193,
          OP_NOP19: 194,
          OP_NOP20: 195,
          OP_NOP21: 196,
          OP_NOP22: 197,
          OP_NOP23: 198,
          OP_NOP24: 199,
          OP_NOP25: 200,
          OP_NOP26: 201,
          OP_NOP27: 202,
          OP_NOP28: 203,
          OP_NOP29: 204,
          OP_NOP30: 205,
          OP_NOP31: 206,
          OP_NOP32: 207,
          OP_NOP33: 208,
          OP_NOP34: 209,
          OP_NOP35: 210,
          OP_NOP36: 211,
          OP_NOP37: 212,
          OP_NOP38: 213,
          OP_NOP39: 214,
          OP_NOP40: 215,
          OP_NOP41: 216,
          OP_NOP42: 217,
          OP_NOP43: 218,
          OP_NOP44: 219,
          OP_NOP45: 220,
          OP_NOP46: 221,
          OP_NOP47: 222,
          OP_NOP48: 223,
          OP_NOP49: 224,
          OP_NOP50: 225,
          OP_NOP51: 226,
          OP_NOP52: 227,
          OP_NOP53: 228,
          OP_NOP54: 229,
          OP_NOP55: 230,
          OP_NOP56: 231,
          OP_NOP57: 232,
          OP_NOP58: 233,
          OP_NOP59: 234,
          OP_NOP60: 235,
          OP_NOP61: 236,
          OP_NOP62: 237,
          OP_NOP63: 238,
          OP_NOP64: 239,
          OP_NOP65: 240,
          OP_NOP66: 241,
          OP_NOP67: 242,
          OP_NOP68: 243,
          OP_NOP69: 244,
          OP_NOP70: 245,
          OP_NOP71: 246,
          OP_NOP72: 247,
          OP_NOP73: 248,
          OP_NOP77: 252,
          OP_SMALLDATA: 249,
          OP_SMALLINTEGER: 250,
          OP_PUBKEYS: 251,
          OP_PUBKEYHASH: 253,
          OP_PUBKEY: 254,
          OP_INVALIDOPCODE: 255,
        };
        for (const Ot in tt) tt[tt[Ot]] = Ot;
        const rt = tt;
        class at {
          chunks;
          static fromASM(e) {
            const t = [],
              r = e.split(' ');
            let a = 0;
            for (; a < r.length; ) {
              const e = r[a];
              let o, i;
              if ((e.startsWith('OP_') && 'undefined' !== typeof rt[e] && ((o = e), (i = rt[e])), '0' === e))
                (i = 0), t.push({ op: i }), (a += 1);
              else if ('-1' === e) (i = rt.OP_1NEGATE), t.push({ op: i }), (a += 1);
              else if (void 0 === o) {
                let e = r[a];
                e.length % 2 !== 0 && (e = '0' + e);
                const o = Ae(e, 'hex');
                if (Pe(o, 'hex') !== e) throw new Error('invalid hex string in script');
                const n = o.length;
                n >= 0 && n < rt.OP_PUSHDATA1
                  ? (i = n)
                  : n < Math.pow(2, 8)
                    ? (i = rt.OP_PUSHDATA1)
                    : n < Math.pow(2, 16)
                      ? (i = rt.OP_PUSHDATA2)
                      : n < Math.pow(2, 32) && (i = rt.OP_PUSHDATA4),
                  t.push({ data: o, op: i }),
                  (a += 1);
              } else
                i === rt.OP_PUSHDATA1 || i === rt.OP_PUSHDATA2 || i === rt.OP_PUSHDATA4
                  ? (t.push({ data: Ae(r[a + 2], 'hex'), op: i }), (a += 3))
                  : (t.push({ op: i }), (a += 1));
            }
            return new at(t);
          }
          static fromHex(e) {
            if (0 === e.length) return at.fromBinary([]);
            if (e.length % 2 !== 0)
              throw new Error(
                'There is an uneven number of characters in the string which suggests it is not hex encoded.',
              );
            if (!/^[0-9a-fA-F]+$/.test(e)) throw new Error('Some elements in this string are not hex encoded.');
            return at.fromBinary(Ae(e, 'hex'));
          }
          static fromBinary(e) {
            e = [...e];
            const t = [],
              r = new Fe(e);
            for (; !r.eof(); ) {
              const e = r.readUInt8();
              let o = 0,
                i = [];
              if (e > 0 && e < rt.OP_PUSHDATA1) (o = e), t.push({ data: r.read(o), op: e });
              else if (e === rt.OP_PUSHDATA1) {
                try {
                  (o = r.readUInt8()), (i = r.read(o));
                } catch (a) {
                  r.read();
                }
                t.push({ data: i, op: e });
              } else if (e === rt.OP_PUSHDATA2) {
                try {
                  (o = r.readUInt16LE()), (i = r.read(o));
                } catch (a) {
                  r.read();
                }
                t.push({ data: i, op: e });
              } else if (e === rt.OP_PUSHDATA4) {
                try {
                  (o = r.readUInt32LE()), (i = r.read(o));
                } catch (a) {
                  r.read();
                }
                t.push({ data: i, op: e });
              } else t.push({ op: e });
            }
            return new at(t);
          }
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
            this.chunks = e;
          }
          toASM() {
            let e = '';
            for (let t = 0; t < this.chunks.length; t++) {
              const r = this.chunks[t];
              e += this._chunkToString(r);
            }
            return e.slice(1);
          }
          toHex() {
            return Pe(this.toBinary(), 'hex');
          }
          toBinary() {
            const e = new Me();
            for (let t = 0; t < this.chunks.length; t++) {
              const r = this.chunks[t],
                a = r.op;
              e.writeUInt8(a),
                r.data &&
                  (a < rt.OP_PUSHDATA1
                    ? e.write(r.data)
                    : a === rt.OP_PUSHDATA1
                      ? (e.writeUInt8(r.data.length), e.write(r.data))
                      : a === rt.OP_PUSHDATA2
                        ? (e.writeUInt16LE(r.data.length), e.write(r.data))
                        : a === rt.OP_PUSHDATA4 && (e.writeUInt32LE(r.data.length), e.write(r.data)));
            }
            return e.toArray();
          }
          writeScript(e) {
            return (this.chunks = this.chunks.concat(e.chunks)), this;
          }
          writeOpCode(e) {
            return this.chunks.push({ op: e }), this;
          }
          setChunkOpCode(e, t) {
            return (this.chunks[e] = { op: t }), this;
          }
          writeBn(e) {
            if (e.cmpn(0) === rt.OP_0) this.chunks.push({ op: rt.OP_0 });
            else if (0 === e.cmpn(-1)) this.chunks.push({ op: rt.OP_1NEGATE });
            else if (e.cmpn(1) >= 0 && e.cmpn(16) <= 0) this.chunks.push({ op: e.toNumber() + rt.OP_1 - 1 });
            else {
              const t = e.toSm('little');
              this.writeBin(t);
            }
            return this;
          }
          writeBin(e) {
            let t;
            if (e.length > 0 && e.length < rt.OP_PUSHDATA1) t = e.length;
            else if (0 === e.length) t = rt.OP_0;
            else if (e.length < Math.pow(2, 8)) t = rt.OP_PUSHDATA1;
            else if (e.length < Math.pow(2, 16)) t = rt.OP_PUSHDATA2;
            else {
              if (!(e.length < Math.pow(2, 32))) throw new Error("You can't push that much data");
              t = rt.OP_PUSHDATA4;
            }
            return this.chunks.push({ data: e, op: t }), this;
          }
          writeNumber(e) {
            return this.writeBn(new n(e)), this;
          }
          removeCodeseparators() {
            const e = [];
            for (let t = 0; t < this.chunks.length; t++)
              this.chunks[t].op !== rt.OP_CODESEPARATOR && e.push(this.chunks[t]);
            return (this.chunks = e), this;
          }
          findAndDelete(e) {
            const t = e.toHex();
            for (let r = 0; r < this.chunks.length; r++) {
              t === new at([this.chunks[r]]).toHex() && this.chunks.splice(r, 1);
            }
            return this;
          }
          isPushOnly() {
            for (let e = 0; e < this.chunks.length; e++) {
              if (this.chunks[e].op > rt.OP_16) return !1;
            }
            return !0;
          }
          isLockingScript() {
            throw new Error('Not implemented');
          }
          isUnlockingScript() {
            throw new Error('Not implemented');
          }
          _chunkToString(e) {
            const t = e.op;
            let r = '';
            if ('undefined' === typeof e.data) {
              r = `${r} ${rt[t]}`;
            } else r = `${r} ${_e(e.data)}`;
            return r;
          }
        }
        class ot extends at {
          isLockingScript() {
            return !0;
          }
          isUnlockingScript() {
            return !1;
          }
        }
        class it extends at {
          isLockingScript() {
            return !1;
          }
          isUnlockingScript() {
            return !0;
          }
        }
        const nt = 1073741824,
          st = Math.pow(2, 31) - 1,
          ct = !0;
        class lt {
          sourceTXID;
          sourceOutputIndex;
          sourceSatoshis;
          lockingScript;
          transactionVersion;
          otherInputs;
          outputs;
          inputIndex;
          unlockingScript;
          inputSequence;
          lockTime;
          context;
          programCounter;
          lastCodeSeparator;
          stack;
          altStack;
          ifStack;
          constructor(e) {
            (this.sourceTXID = e.sourceTXID),
              (this.sourceOutputIndex = e.sourceOutputIndex),
              (this.sourceSatoshis = e.sourceSatoshis),
              (this.lockingScript = e.lockingScript),
              (this.transactionVersion = e.transactionVersion),
              (this.otherInputs = e.otherInputs),
              (this.outputs = e.outputs),
              (this.inputIndex = e.inputIndex),
              (this.unlockingScript = e.unlockingScript),
              (this.inputSequence = e.inputSequence),
              (this.lockTime = e.lockTime),
              this.reset();
          }
          reset() {
            (this.context = 'UnlockingScript'),
              (this.programCounter = 0),
              (this.lastCodeSeparator = null),
              (this.stack = []),
              (this.altStack = []),
              (this.ifStack = []);
          }
          step() {
            let e;
            'UnlockingScript' === this.context &&
              this.programCounter >= this.unlockingScript.chunks.length &&
              ((this.context = 'LockingScript'), (this.programCounter = 0)),
              (e =
                'UnlockingScript' === this.context
                  ? this.unlockingScript.chunks[this.programCounter]
                  : this.lockingScript.chunks[this.programCounter]);
            const t = (e) => {
                if (0 === e.length) return !0;
                ((e) => {
                  if (e.length < 9) return !1;
                  if (e.length > 73) return !1;
                  if (48 !== e[0]) return !1;
                  if (e[1] !== e.length - 3) return !1;
                  const t = e[3];
                  if (5 + t >= e.length) return !1;
                  const r = e[5 + t];
                  if (t + r + 7 !== e.length) return !1;
                  const a = e.slice(4);
                  if (2 !== e[2]) return !1;
                  if (0 === t) return !1;
                  if (0 !== (128 & a[0])) return !1;
                  if (t > 1 && 0 === a[0] && 0 === (128 & a[1])) return !1;
                  const o = e.slice(6 + t);
                  return (
                    2 === e[6 + t - 2] && 0 !== r && 0 === (128 & o[0]) && !(r > 1 && 0 === o[0] && 0 === (128 & o[1]))
                  );
                })(e) || this.scriptEvaluationError('The signature format is invalid.');
                const t = et.fromChecksigFormat(e);
                return (
                  t.hasLowS() || this.scriptEvaluationError('The signature must have a low S value.'),
                  0 !== (t.scope & et.SIGHASH_FORKID) ||
                    (this.scriptEvaluationError('The signature must use SIGHASH_FORKID.'), !1)
                );
              },
              r = (e) => (
                e.length < 33 &&
                  this.scriptEvaluationError('The public key is too short, it must be at least 33 bytes.'),
                4 === e[0]
                  ? 65 !== e.length && this.scriptEvaluationError('The non-compressed public key must be 65 bytes.')
                  : 2 === e[0] || 3 === e[0]
                    ? 33 !== e.length && this.scriptEvaluationError('The compressed public key must be 33 bytes.')
                    : this.scriptEvaluationError('The public key is in an unknown format.'),
                !0
              ),
              a = (e, t, r) => {
                const a = et.format({
                    sourceTXID: this.sourceTXID,
                    sourceOutputIndex: this.sourceOutputIndex,
                    sourceSatoshis: this.sourceSatoshis,
                    transactionVersion: this.transactionVersion,
                    otherInputs: this.otherInputs,
                    outputs: this.outputs,
                    inputIndex: this.inputIndex,
                    subscript: r,
                    inputSequence: this.inputSequence,
                    lockTime: this.lockTime,
                    scope: e.scope,
                  }),
                  o = new n(ye(a));
                return Ve(o, e, t);
              },
              o = !this.ifStack.includes(!1);
            let i, s, c, l, u, d, h, f, p, b, m, g, v, y, w, k, E, S, x, _, A, O, P, I, B, N, T, z, R, M, F, C, j;
            const U = e.op;
            var D;
            if (
              ('undefined' === typeof U &&
                this.scriptEvaluationError(`An opcode is missing in this chunk of the ${this.context}!`),
              Array.isArray(e.data) &&
                e.data.length > nt &&
                this.scriptEvaluationError("It's not currently possible to push data larger than 1073741824 bytes."),
              o &&
                ((D = U) === rt.OP_2MUL ||
                  D === rt.OP_2DIV ||
                  D === rt.OP_VERIF ||
                  D === rt.OP_VERNOTIF ||
                  D === rt.OP_VER) &&
                this.scriptEvaluationError('This opcode is currently disabled.'),
              o && U >= 0 && U <= rt.OP_PUSHDATA4)
            )
              ((e) => {
                const t = e.data,
                  r = e.op;
                return (
                  !Array.isArray(t) ||
                  (0 === t.length
                    ? r === rt.OP_0
                    : 1 === t.length && t[0] >= 1 && t[0] <= 16
                      ? r === rt.OP_1 + (t[0] - 1)
                      : 1 === t.length && 129 === t[0]
                        ? r === rt.OP_1NEGATE
                        : t.length <= 75
                          ? r === t.length
                          : t.length <= 255
                            ? r === rt.OP_PUSHDATA1
                            : !(t.length <= 65535) || r === rt.OP_PUSHDATA2)
                );
              })(e) || this.scriptEvaluationError('This data is not minimally-encoded.'),
                Array.isArray(e.data) ? this.stack.push(e.data) : this.stack.push([]);
            else if (o || (rt.OP_IF <= U && U <= rt.OP_ENDIF))
              switch (U) {
                case rt.OP_1NEGATE:
                case rt.OP_1:
                case rt.OP_2:
                case rt.OP_3:
                case rt.OP_4:
                case rt.OP_5:
                case rt.OP_6:
                case rt.OP_7:
                case rt.OP_8:
                case rt.OP_9:
                case rt.OP_10:
                case rt.OP_11:
                case rt.OP_12:
                case rt.OP_13:
                case rt.OP_14:
                case rt.OP_15:
                case rt.OP_16:
                  (d = U - (rt.OP_1 - 1)), (i = new n(d).toScriptNum()), this.stack.push(i);
                  break;
                case rt.OP_NOP:
                case rt.OP_NOP2:
                case rt.OP_NOP3:
                case rt.OP_NOP1:
                case rt.OP_NOP4:
                case rt.OP_NOP5:
                case rt.OP_NOP6:
                case rt.OP_NOP7:
                case rt.OP_NOP8:
                case rt.OP_NOP9:
                case rt.OP_NOP10:
                case rt.OP_NOP11:
                case rt.OP_NOP12:
                case rt.OP_NOP13:
                case rt.OP_NOP14:
                case rt.OP_NOP15:
                case rt.OP_NOP16:
                case rt.OP_NOP17:
                case rt.OP_NOP18:
                case rt.OP_NOP19:
                case rt.OP_NOP20:
                case rt.OP_NOP21:
                case rt.OP_NOP22:
                case rt.OP_NOP23:
                case rt.OP_NOP24:
                case rt.OP_NOP25:
                case rt.OP_NOP26:
                case rt.OP_NOP27:
                case rt.OP_NOP28:
                case rt.OP_NOP29:
                case rt.OP_NOP30:
                case rt.OP_NOP31:
                case rt.OP_NOP32:
                case rt.OP_NOP33:
                case rt.OP_NOP34:
                case rt.OP_NOP35:
                case rt.OP_NOP36:
                case rt.OP_NOP37:
                case rt.OP_NOP38:
                case rt.OP_NOP39:
                case rt.OP_NOP40:
                case rt.OP_NOP41:
                case rt.OP_NOP42:
                case rt.OP_NOP43:
                case rt.OP_NOP44:
                case rt.OP_NOP45:
                case rt.OP_NOP46:
                case rt.OP_NOP47:
                case rt.OP_NOP48:
                case rt.OP_NOP49:
                case rt.OP_NOP50:
                case rt.OP_NOP51:
                case rt.OP_NOP52:
                case rt.OP_NOP53:
                case rt.OP_NOP54:
                case rt.OP_NOP55:
                case rt.OP_NOP56:
                case rt.OP_NOP57:
                case rt.OP_NOP58:
                case rt.OP_NOP59:
                case rt.OP_NOP60:
                case rt.OP_NOP61:
                case rt.OP_NOP62:
                case rt.OP_NOP63:
                case rt.OP_NOP64:
                case rt.OP_NOP65:
                case rt.OP_NOP66:
                case rt.OP_NOP67:
                case rt.OP_NOP68:
                case rt.OP_NOP69:
                case rt.OP_NOP70:
                case rt.OP_NOP71:
                case rt.OP_NOP72:
                case rt.OP_NOP73:
                case rt.OP_NOP77:
                  break;
                case rt.OP_IF:
                case rt.OP_NOTIF:
                  (F = !1),
                    o &&
                      (this.stack.length < 1 &&
                        this.scriptEvaluationError(
                          'OP_IF and OP_NOTIF require at least one item on the stack when they are used!',
                        ),
                      (i = this.stacktop(-1)),
                      (F = this.castToBool(i)),
                      U === rt.OP_NOTIF && (F = !F),
                      this.stack.pop()),
                    this.ifStack.push(F);
                  break;
                case rt.OP_ELSE:
                  0 === this.ifStack.length && this.scriptEvaluationError('OP_ELSE requires a preceeding OP_IF.'),
                    (this.ifStack[this.ifStack.length - 1] = !this.ifStack[this.ifStack.length - 1]);
                  break;
                case rt.OP_ENDIF:
                  0 === this.ifStack.length && this.scriptEvaluationError('OP_ENDIF requires a preceeding OP_IF.'),
                    this.ifStack.pop();
                  break;
                case rt.OP_VERIFY:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_VERIFY requires at least one item to be on the stack.'),
                    (i = this.stacktop(-1)),
                    (F = this.castToBool(i)),
                    F
                      ? this.stack.pop()
                      : this.scriptEvaluationError('OP_VERIFY requires the top stack value to be truthy.');
                  break;
                case rt.OP_RETURN:
                  'UnlockingScript' === this.context
                    ? (this.programCounter = this.unlockingScript.chunks.length)
                    : (this.programCounter = this.lockingScript.chunks.length),
                    (this.ifStack = []);
                  break;
                case rt.OP_TOALTSTACK:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_TOALTSTACK requires at oeast one item to be on the stack.'),
                    this.altStack.push(this.stack.pop());
                  break;
                case rt.OP_FROMALTSTACK:
                  this.altStack.length < 1 &&
                    this.scriptEvaluationError('OP_FROMALTSTACK requires at least one item to be on the stack.'),
                    this.stack.push(this.altStack.pop());
                  break;
                case rt.OP_2DROP:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_2DROP requires at least two items to be on the stack.'),
                    this.stack.pop(),
                    this.stack.pop();
                  break;
                case rt.OP_2DUP:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_2DUP requires at least two items to be on the stack.'),
                    (s = this.stacktop(-2)),
                    (c = this.stacktop(-1)),
                    this.stack.push([...s]),
                    this.stack.push([...c]);
                  break;
                case rt.OP_3DUP:
                  this.stack.length < 3 &&
                    this.scriptEvaluationError('OP_3DUP requires at least three items to be on the stack.'),
                    (s = this.stacktop(-3)),
                    (c = this.stacktop(-2)),
                    (l = this.stacktop(-1)),
                    this.stack.push([...s]),
                    this.stack.push([...c]),
                    this.stack.push([...l]);
                  break;
                case rt.OP_2OVER:
                  this.stack.length < 4 &&
                    this.scriptEvaluationError('OP_2OVER requires at least four items to be on the stack.'),
                    (s = this.stacktop(-4)),
                    (c = this.stacktop(-3)),
                    this.stack.push([...s]),
                    this.stack.push([...c]);
                  break;
                case rt.OP_2ROT:
                  this.stack.length < 6 &&
                    this.scriptEvaluationError('OP_2ROT requires at least six items to be on the stack.'),
                    (u = this.stack.splice(this.stack.length - 6, 2)),
                    this.stack.push(u[0]),
                    this.stack.push(u[1]);
                  break;
                case rt.OP_2SWAP:
                  this.stack.length < 4 &&
                    this.scriptEvaluationError('OP_2SWAP requires at least four items to be on the stack.'),
                    (u = this.stack.splice(this.stack.length - 4, 2)),
                    this.stack.push(u[0]),
                    this.stack.push(u[1]);
                  break;
                case rt.OP_IFDUP:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_IFDUP requires at least one item to be on the stack.'),
                    (i = this.stacktop(-1)),
                    (F = this.castToBool(i)),
                    F && this.stack.push([...i]);
                  break;
                case rt.OP_DEPTH:
                  (i = new n(this.stack.length).toScriptNum()), this.stack.push(i);
                  break;
                case rt.OP_DROP:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_DROP requires at least one item to be on the stack.'),
                    this.stack.pop();
                  break;
                case rt.OP_DUP:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_DUP requires at least one item to be on the stack.'),
                    this.stack.push([...this.stacktop(-1)]);
                  break;
                case rt.OP_NIP:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_NIP requires at least two items to be on the stack.'),
                    this.stack.splice(this.stack.length - 2, 1);
                  break;
                case rt.OP_OVER:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_OVER requires at least two items to be on the stack.'),
                    this.stack.push([...this.stacktop(-2)]);
                  break;
                case rt.OP_PICK:
                case rt.OP_ROLL:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError(`${rt[U]} requires at least two items to be on the stack.`),
                    (i = this.stacktop(-1)),
                    (y = n.fromScriptNum(i, ct)),
                    (d = y.toNumber()),
                    this.stack.pop(),
                    (d < 0 || d >= this.stack.length) &&
                      this.scriptEvaluationError(
                        `${rt[U]} requires the top stack element to be 0 or a positive number less than the current size of the stack.`,
                      ),
                    (i = this.stacktop(-d - 1)),
                    U === rt.OP_ROLL && this.stack.splice(this.stack.length - d - 1, 1),
                    this.stack.push([...i]);
                  break;
                case rt.OP_ROT:
                  this.stack.length < 3 &&
                    this.scriptEvaluationError('OP_ROT requires at least three items to be on the stack.'),
                    (m = this.stacktop(-3)),
                    (g = this.stacktop(-2)),
                    (v = this.stacktop(-1)),
                    (this.stack[this.stack.length - 3] = g),
                    (this.stack[this.stack.length - 2] = v),
                    (this.stack[this.stack.length - 1] = m);
                  break;
                case rt.OP_SWAP:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_SWAP requires at least two items to be on the stack.'),
                    (m = this.stacktop(-2)),
                    (g = this.stacktop(-1)),
                    (this.stack[this.stack.length - 2] = g),
                    (this.stack[this.stack.length - 1] = m);
                  break;
                case rt.OP_TUCK:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_TUCK requires at least two items to be on the stack.'),
                    this.stack.splice(this.stack.length - 2, 0, [...this.stacktop(-1)]);
                  break;
                case rt.OP_SIZE:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_SIZE requires at least one item to be on the stack.'),
                    (y = new n(this.stacktop(-1).length)),
                    this.stack.push(y.toScriptNum());
                  break;
                case rt.OP_AND:
                case rt.OP_OR:
                case rt.OP_XOR:
                  switch (
                    (this.stack.length < 2 &&
                      this.scriptEvaluationError(`${rt[U]} requires at least one item to be on the stack.`),
                    (s = this.stacktop(-2)),
                    (c = this.stacktop(-1)),
                    s.length !== c.length &&
                      this.scriptEvaluationError(`${rt[U]} requires the top two stack items to be the same size.`),
                    U)
                  ) {
                    case rt.OP_AND:
                      for (let e = 0; e < s.length; e++) s[e] &= c[e];
                      break;
                    case rt.OP_OR:
                      for (let e = 0; e < s.length; e++) s[e] |= c[e];
                      break;
                    case rt.OP_XOR:
                      for (let e = 0; e < s.length; e++) s[e] ^= c[e];
                  }
                  this.stack.pop();
                  break;
                case rt.OP_INVERT:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_INVERT requires at least one item to be on the stack.'),
                    (i = this.stacktop(-1));
                  for (let e = 0; e < i.length; e++) i[e] = ~i[e];
                  break;
                case rt.OP_LSHIFT:
                case rt.OP_RSHIFT:
                  if (
                    (this.stack.length < 2 &&
                      this.scriptEvaluationError(`${rt[U]} requires at least two items to be on the stack.`),
                    (s = this.stacktop(-2)),
                    0 === s.length)
                  )
                    this.stack.pop();
                  else {
                    let e;
                    (w = new n(s)),
                      (k = n.fromScriptNum(this.stacktop(-1), ct)),
                      (d = k.toNumber()),
                      d < 0 &&
                        this.scriptEvaluationError(`${rt[U]} requires the top item on the stack not to be negative.`),
                      this.stack.pop(),
                      this.stack.pop(),
                      U === rt.OP_LSHIFT && (e = w.ushln(d)),
                      U === rt.OP_RSHIFT && (e = w.ushrn(d));
                    const t = ((e, t) => {
                      const r = e;
                      for (; r.length < t; ) r.unshift(0);
                      return r;
                    })(e.toArray().slice(-1 * s.length), s.length);
                    this.stack.push(t);
                  }
                  break;
                case rt.OP_EQUAL:
                case rt.OP_EQUALVERIFY:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError(`${rt[U]} requires at least two items to be on the stack.`),
                    (s = this.stacktop(-2)),
                    (c = this.stacktop(-1)),
                    (C = _e(s) === _e(c)),
                    this.stack.pop(),
                    this.stack.pop(),
                    this.stack.push(C ? [1] : []),
                    U === rt.OP_EQUALVERIFY &&
                      (C
                        ? this.stack.pop()
                        : this.scriptEvaluationError('OP_EQUALVERIFY requires the top two stack items to be equal.'));
                  break;
                case rt.OP_1ADD:
                case rt.OP_1SUB:
                case rt.OP_NEGATE:
                case rt.OP_ABS:
                case rt.OP_NOT:
                case rt.OP_0NOTEQUAL:
                  switch (
                    (this.stack.length < 1 &&
                      this.scriptEvaluationError(`${rt[U]} requires at least one items to be on the stack.`),
                    (i = this.stacktop(-1)),
                    (y = n.fromScriptNum(i, ct)),
                    U)
                  ) {
                    case rt.OP_1ADD:
                      y = y.addn(1);
                      break;
                    case rt.OP_1SUB:
                      y = y.subn(1);
                      break;
                    case rt.OP_NEGATE:
                      y = y.neg();
                      break;
                    case rt.OP_ABS:
                      y.cmpn(0) < 0 && (y = y.neg());
                      break;
                    case rt.OP_NOT:
                      y = new n(0 === y.cmpn(0) ? 1 : 0);
                      break;
                    case rt.OP_0NOTEQUAL:
                      y = new n(0 !== y.cmpn(0) ? 1 : 0);
                  }
                  this.stack.pop(), this.stack.push(y.toScriptNum());
                  break;
                case rt.OP_ADD:
                case rt.OP_SUB:
                case rt.OP_MUL:
                case rt.OP_MOD:
                case rt.OP_DIV:
                case rt.OP_BOOLAND:
                case rt.OP_BOOLOR:
                case rt.OP_NUMEQUAL:
                case rt.OP_NUMEQUALVERIFY:
                case rt.OP_NUMNOTEQUAL:
                case rt.OP_LESSTHAN:
                case rt.OP_GREATERTHAN:
                case rt.OP_LESSTHANOREQUAL:
                case rt.OP_GREATERTHANOREQUAL:
                case rt.OP_MIN:
                case rt.OP_MAX:
                  switch (
                    (this.stack.length < 2 &&
                      this.scriptEvaluationError(`${rt[U]} requires at least two items to be on the stack.`),
                    (w = n.fromScriptNum(this.stacktop(-2), ct)),
                    (k = n.fromScriptNum(this.stacktop(-1), ct)),
                    (y = new n(0)),
                    U)
                  ) {
                    case rt.OP_ADD:
                      y = w.add(k);
                      break;
                    case rt.OP_SUB:
                      y = w.sub(k);
                      break;
                    case rt.OP_MUL:
                      y = w.mul(k);
                      break;
                    case rt.OP_DIV:
                      0 === k.cmpn(0) && this.scriptEvaluationError('OP_DIV cannot divide by zero!'), (y = w.div(k));
                      break;
                    case rt.OP_MOD:
                      0 === k.cmpn(0) && this.scriptEvaluationError('OP_MOD cannot divide by zero!'), (y = w.mod(k));
                      break;
                    case rt.OP_BOOLAND:
                      y = new n(0 !== w.cmpn(0) && 0 !== k.cmpn(0) ? 1 : 0);
                      break;
                    case rt.OP_BOOLOR:
                      y = new n(0 !== w.cmpn(0) || 0 !== k.cmpn(0) ? 1 : 0);
                      break;
                    case rt.OP_NUMEQUAL:
                    case rt.OP_NUMEQUALVERIFY:
                      y = new n(0 === w.cmp(k) ? 1 : 0);
                      break;
                    case rt.OP_NUMNOTEQUAL:
                      y = new n(0 !== w.cmp(k) ? 1 : 0);
                      break;
                    case rt.OP_LESSTHAN:
                      y = new n(w.cmp(k) < 0 ? 1 : 0);
                      break;
                    case rt.OP_GREATERTHAN:
                      y = new n(w.cmp(k) > 0 ? 1 : 0);
                      break;
                    case rt.OP_LESSTHANOREQUAL:
                      y = new n(w.cmp(k) <= 0 ? 1 : 0);
                      break;
                    case rt.OP_GREATERTHANOREQUAL:
                      y = new n(w.cmp(k) >= 0 ? 1 : 0);
                      break;
                    case rt.OP_MIN:
                      y = w.cmp(k) < 0 ? w : k;
                      break;
                    case rt.OP_MAX:
                      y = w.cmp(k) > 0 ? w : k;
                  }
                  this.stack.pop(),
                    this.stack.pop(),
                    this.stack.push(y.toScriptNum()),
                    U === rt.OP_NUMEQUALVERIFY &&
                      (this.castToBool(this.stacktop(-1))
                        ? this.stack.pop()
                        : this.scriptEvaluationError('OP_NUMEQUALVERIFY requires the top stack item to be truthy.'));
                  break;
                case rt.OP_WITHIN:
                  this.stack.length < 3 &&
                    this.scriptEvaluationError('OP_WITHIN requires at least three items to be on the stack.'),
                    (w = n.fromScriptNum(this.stacktop(-3), ct)),
                    (k = n.fromScriptNum(this.stacktop(-2), ct)),
                    (E = n.fromScriptNum(this.stacktop(-1), ct)),
                    (F = k.cmp(w) <= 0 && w.cmp(E) < 0),
                    this.stack.pop(),
                    this.stack.pop(),
                    this.stack.pop(),
                    this.stack.push(F ? [1] : []);
                  break;
                case rt.OP_RIPEMD160:
                case rt.OP_SHA1:
                case rt.OP_SHA256:
                case rt.OP_HASH160:
                case rt.OP_HASH256:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError(`${rt[U]} requires at least one item to be on the stack.`),
                    (i = this.stacktop(-1)),
                    U === rt.OP_RIPEMD160
                      ? (A = be(i))
                      : U === rt.OP_SHA1
                        ? (A = me(i))
                        : U === rt.OP_SHA256
                          ? (A = ge(i))
                          : U === rt.OP_HASH160
                            ? (A = we(i))
                            : U === rt.OP_HASH256 && (A = ye(i)),
                    this.stack.pop(),
                    this.stack.push(A);
                  break;
                case rt.OP_CODESEPARATOR:
                  this.lastCodeSeparator = this.programCounter;
                  break;
                case rt.OP_CHECKSIG:
                case rt.OP_CHECKSIGVERIFY:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError(`${rt[U]} requires at least two items to be on the stack.`),
                    (S = this.stacktop(-2)),
                    (x = this.stacktop(-1)),
                    (t(S) && r(x)) ||
                      this.scriptEvaluationError(
                        `${rt[U]} requires correct encoding for the public key and signature.`,
                      ),
                    (_ =
                      'UnlockingScript' === this.context
                        ? new at(this.unlockingScript.chunks.slice(this.lastCodeSeparator))
                        : new at(this.lockingScript.chunks.slice(this.lastCodeSeparator))),
                    _.findAndDelete(new at().writeBin(S));
                  try {
                    (O = et.fromChecksigFormat(S)), (P = $e.fromDER(x)), (j = a(O, P, _));
                  } catch (L) {
                    j = !1;
                  }
                  !j &&
                    S.length > 0 &&
                    this.scriptEvaluationError(
                      `${rt[U]} failed to verify the signature, and requires an empty signature when verification fails.`,
                    ),
                    this.stack.pop(),
                    this.stack.pop(),
                    this.stack.push(j ? [1] : []),
                    U === rt.OP_CHECKSIGVERIFY &&
                      (j
                        ? this.stack.pop()
                        : this.scriptEvaluationError('OP_CHECKSIGVERIFY requires that a valid signature is provided.'));
                  break;
                case rt.OP_CHECKMULTISIG:
                case rt.OP_CHECKMULTISIGVERIFY:
                  (I = 1),
                    this.stack.length < I &&
                      this.scriptEvaluationError(`${rt[U]} requires at least 1 item to be on the stack.`),
                    (N = n.fromScriptNum(this.stacktop(-I), ct).toNumber()),
                    (N < 0 || N > st) &&
                      this.scriptEvaluationError(`${rt[U]} requires a key count between 0 and ${st}.`),
                    (T = ++I),
                    (I += N),
                    (z = N + 2),
                    this.stack.length < I &&
                      this.scriptEvaluationError(
                        `${rt[U]} requires the number of stack items not to be less than the number of keys used.`,
                      ),
                    (R = n.fromScriptNum(this.stacktop(-I), ct).toNumber()),
                    (R < 0 || R > N) &&
                      this.scriptEvaluationError(
                        `${rt[U]} requires the number of signatures to be no greater than the number of keys.`,
                      ),
                    (M = ++I),
                    (I += R),
                    this.stack.length < I &&
                      this.scriptEvaluationError(
                        `${rt[U]} requires the number of stack items not to be less than the number of signatures provided.`,
                      ),
                    (_ =
                      'UnlockingScript' === this.context
                        ? new at(this.unlockingScript.chunks.slice(this.lastCodeSeparator))
                        : new at(this.lockingScript.chunks.slice(this.lastCodeSeparator)));
                  for (let e = 0; e < R; e++) (S = this.stacktop(-M - e)), _.findAndDelete(new at().writeBin(S));
                  for (j = !0; j && R > 0; ) {
                    (S = this.stacktop(-M)),
                      (x = this.stacktop(-T)),
                      (t(S) && r(x)) ||
                        this.scriptEvaluationError(
                          `${rt[U]} requires correct encoding for the public key and signature.`,
                        );
                    try {
                      (O = et.fromChecksigFormat(S)), (P = $e.fromString(_e(x))), (B = a(O, P, _));
                    } catch (L) {
                      B = !1;
                    }
                    B && (M++, R--), T++, N--, R > N && (j = !1);
                  }
                  for (; I-- > 1; )
                    !j &&
                      !z &&
                      this.stacktop(-1).length > 0 &&
                      this.scriptEvaluationError(
                        `${rt[U]} failed to verify a signature, and requires an empty signature when verification fails.`,
                      ),
                      z > 0 && z--,
                      this.stack.pop();
                  this.stack.length < 1 &&
                    this.scriptEvaluationError(`${rt[U]} requires an extra item to be on the stack.`),
                    this.stacktop(-1).length > 0 &&
                      this.scriptEvaluationError(`${rt[U]} requires the extra stack item to be empty.`),
                    this.stack.pop(),
                    this.stack.push(j ? [1] : []),
                    U === rt.OP_CHECKMULTISIGVERIFY &&
                      (j
                        ? this.stack.pop()
                        : this.scriptEvaluationError(
                            'OP_CHECKMULTISIGVERIFY requires that a sufficient number of valid signatures are provided.',
                          ));
                  break;
                case rt.OP_CAT:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_CAT requires at least two items to be on the stack.'),
                    (s = this.stacktop(-2)),
                    (c = this.stacktop(-1)),
                    s.length + c.length > nt &&
                      this.scriptEvaluationError(
                        "It's not currently possible to push data larger than 1073741824 bytes.",
                      ),
                    (this.stack[this.stack.length - 2] = [...s, ...c]),
                    this.stack.pop();
                  break;
                case rt.OP_SPLIT:
                  this.stack.length < 2 &&
                    this.scriptEvaluationError('OP_SPLIT requires at least two items to be on the stack.'),
                    (s = this.stacktop(-2)),
                    (d = n.fromScriptNum(this.stacktop(-1), ct).toNumber()),
                    (d < 0 || d > s.length) &&
                      this.scriptEvaluationError(
                        'OP_SPLIT requires the first stack item to be a non-negative number less than or equal to the size of the second-from-top stack item.',
                      ),
                    (c = [...s]),
                    (this.stack[this.stack.length - 2] = c.slice(0, d)),
                    (this.stack[this.stack.length - 1] = c.slice(d));
                  break;
                case rt.OP_NUM2BIN:
                  if (
                    (this.stack.length < 2 &&
                      this.scriptEvaluationError('OP_NUM2BIN requires at least two items to be on the stack.'),
                    (h = n.fromScriptNum(this.stacktop(-1), ct).toNumber()),
                    h > nt &&
                      this.scriptEvaluationError(
                        "It's not currently possible to push data larger than 1073741824 bytes.",
                      ),
                    this.stack.pop(),
                    (f = this.stacktop(-1)),
                    (f = Ce(f)),
                    f.length > h &&
                      this.scriptEvaluationError(
                        'OP_NUM2BIN requires that the size expressed in the top stack item is large enough to hold the value expressed in the second-from-top stack item.',
                      ),
                    f.length === h)
                  ) {
                    this.stack[this.stack.length - 1] = f;
                    break;
                  }
                  for (
                    b = 0,
                      f.length > 0 && ((b = 128 & f[f.length - 1]), (f[f.length - 1] &= 127)),
                      p = new Array(h),
                      p.fill(0),
                      d = 0;
                    d < h;
                    d++
                  )
                    p[d] = f[d];
                  for (d = f.length - 1; d++ < h - 2; ) p[d] = 0;
                  (p[d] = b), (this.stack[this.stack.length - 1] = p);
                  break;
                case rt.OP_BIN2NUM:
                  this.stack.length < 1 &&
                    this.scriptEvaluationError('OP_BIN2NUM requires at least one item to be on the stack.'),
                    (s = this.stacktop(-1)),
                    (c = Ce(s)),
                    (this.stack[this.stack.length - 1] = c),
                    (function (e) {
                      let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_SAFE_INTEGER;
                      return (
                        !(e.length > t) &&
                        !(
                          e.length > 0 &&
                          0 === (127 & e[e.length - 1]) &&
                          (e.length <= 1 || 0 === (128 & e[e.length - 2]))
                        )
                      );
                    })(c) || this.scriptEvaluationError('OP_BIN2NUM requires that the resulting number is valid.');
                  break;
                default:
                  this.scriptEvaluationError('Invalid opcode!');
              }
            this.programCounter++;
          }
          validate() {
            for (
              this.unlockingScript.isPushOnly() ||
              this.scriptEvaluationError('Unlocking scripts can only contain push operations, and no other opcodes.');
              this.step(),
                !('LockingScript' === this.context && this.programCounter >= this.lockingScript.chunks.length);

            );
            return (
              this.ifStack.length > 0 &&
                this.scriptEvaluationError('Every OP_IF must be terminated prior to the end of the script.'),
              1 !== this.stack.length &&
                this.scriptEvaluationError(
                  'The clean stack rule requires exactly one item to be on the stack after script execution.',
                ),
              this.castToBool(this.stacktop(-1)) ||
                this.scriptEvaluationError('The top stack element must be truthy after script evaluation.'),
              !0
            );
          }
          stacktop(e) {
            return this.stack[this.stack.length + e];
          }
          castToBool(e) {
            for (let t = 0; t < e.length; t++) if (0 !== e[t]) return t !== e.length - 1 || 128 !== e[t];
            return !1;
          }
          scriptEvaluationError(e) {
            throw new Error(
              `Script evaluation error: ${e}\n\nSource TXID: ${this.sourceTXID}\nSource output index: ${this.sourceOutputIndex}\nContext: ${this.context}\nProgram counter: ${this.programCounter}\nStack size: ${this.stack.length}\nAlt stack size: ${this.altStack.length}`,
            );
          }
        }
        var ut = r(7638);
        class dt {
          blockHeight;
          path;
          static fromHex(e) {
            return dt.fromBinary(Ae(e, 'hex'));
          }
          static fromReader(e) {
            const t = e.readVarIntNum(),
              r = e.readUInt8(),
              a = Array(r)
                .fill(0)
                .map(() => []);
            let o, i, n;
            for (let s = 0; s < r; s++) {
              for (n = e.readVarIntNum(); n; ) {
                (i = e.readVarIntNum()), (o = e.readUInt8());
                const t = { offset: i };
                1 & o ? (t.duplicate = !0) : (2 & o && (t.txid = !0), (t.hash = _e(e.read(32).reverse()))),
                  a[s].push(t),
                  n--;
              }
              a[s].sort((e, t) => e.offset - t.offset);
            }
            return new dt(t, a);
          }
          static fromBinary(e) {
            const t = new Fe(e);
            return dt.fromReader(t);
          }
          constructor(e, t) {
            (this.blockHeight = e), (this.path = t);
            const r = Array(this.path.length)
              .fill(0)
              .map(() => new Set());
            let a;
            this.path.map((e, t) => {
              if (0 === e.length && 0 === t) throw new Error(`Empty level at height: ${t}`);
              const a = new Set();
              e.map((e) => {
                if (a.has(e.offset)) throw new Error(`Duplicate offset: ${e.offset}, at height: ${t}`);
                if ((a.add(e.offset), 0 === t)) {
                  if (!e.duplicate) for (let t = 1; t < this.path.length; t++) r[t].add((e.offset >> t) ^ 1);
                } else if (!r[t].has(e.offset))
                  throw new Error(
                    `Invalid offset: ${e.offset}, at height: ${t}, with legal offsets: ${Array.from(r[t]).join(', ')}`,
                  );
              });
            }),
              this.path[0].map((e, t) => {
                if ((0 === t && (a = this.computeRoot(e.hash)), a !== this.computeRoot(e.hash)))
                  throw new Error('Mismatched roots');
              });
          }
          toBinary() {
            const e = new Me();
            e.writeVarIntNum(this.blockHeight);
            const t = this.path.length;
            e.writeUInt8(t);
            for (let r = 0; r < t; r++) {
              const t = Object.keys(this.path[r]).length;
              e.writeVarIntNum(t);
              for (const a of this.path[r]) {
                e.writeVarIntNum(a.offset);
                let t = 0;
                a?.duplicate && (t |= 1),
                  a?.txid && (t |= 2),
                  e.writeUInt8(t),
                  0 === (1 & t) && e.write(Ae(a.hash, 'hex').reverse());
              }
            }
            return e.toArray();
          }
          toHex() {
            return _e(this.toBinary());
          }
          computeRoot(e) {
            'string' !== typeof e && (e = this.path[0].find((e) => Boolean(e?.hash)).hash);
            const t = this.path[0].find((t) => t.hash === e).offset;
            if ('number' !== typeof t) throw new Error(`This proof does not contain the txid: ${e}`);
            const r = (e) => _e(ye(Ae(e, 'hex').reverse()).reverse());
            let a = e;
            for (let o = 0; o < this.path.length; o++) {
              this.path[o];
              const e = (t >> o) ^ 1,
                i = this.findOrComputeLeaf(o, e);
              if ('object' !== typeof i) throw new Error(`Missing hash for index ${t} at height ${o}`);
              a = i.duplicate ? r(a + a) : r(e % 2 !== 0 ? i.hash + a : a + i.hash);
            }
            return a;
          }
          findOrComputeLeaf(e, t) {
            const r = (e) => _e(ye(Ae(e, 'hex').reverse()).reverse());
            let a = this.path[e].find((e) => e.offset === t);
            if (a) return a;
            if (0 === e) return;
            const o = e - 1,
              i = t << 1,
              n = this.findOrComputeLeaf(o, i);
            if (!n || !n.hash) return;
            const s = this.findOrComputeLeaf(o, i + 1);
            if (!s) return;
            let c;
            return (c = s.duplicate ? r(n.hash + n.hash) : r(s.hash + n.hash)), (a = { offset: t, hash: c }), a;
          }
          async verify(e, t) {
            const r = this.computeRoot(e);
            return await t.isValidRootForHeight(r, this.blockHeight);
          }
          combine(e) {
            if (this.blockHeight !== e.blockHeight)
              throw new Error('You cannot combine paths which do not have the same block height.');
            if (this.computeRoot() !== e.computeRoot())
              throw new Error('You cannot combine paths which do not have the same root.');
            const t = [];
            for (let r = 0; r < this.path.length; r++) {
              t.push([]);
              for (let e = 0; e < this.path[r].length; e++) t[r].push(this.path[r][e]);
              for (let a = 0; a < e.path[r].length; a++)
                if (t[r].find((t) => t.offset === e.path[r][a].offset)) {
                  if (e.path[r][a]?.txid) {
                    t[r].find((t) => t.offset === e.path[r][a].offset).txid = !0;
                  }
                } else t[r].push(e.path[r][a]);
            }
            (this.path = t), this.trim();
          }
          trim() {
            const e = (e, t) => {
                (0 !== t.length && t.slice(-1)[0] === e) || t.push(e);
              },
              t = (e, t) => {
                for (let r = e.length; r >= 0; r--) {
                  const a = this.path[t].findIndex((t) => t.offset === e[r]);
                  a >= 0 && this.path[t].splice(a, 1);
                }
              },
              r = (t) => {
                const r = [];
                for (const a of t) e(a >> 1, r);
                return r;
              };
            let a = [],
              o = [];
            for (let i = 0; i < this.path.length; i++) this.path[i].sort((e, t) => e.offset - t.offset);
            for (let i = 0; i < this.path[0].length; i++) {
              const t = this.path[0][i];
              if (t.txid) e(t.offset >> 1, a);
              else {
                const r = t.offset % 2 === 1,
                  a = this.path[0][i + (r ? -1 : 1)];
                a.txid || e(a.offset, o);
              }
            }
            t(o, 0);
            for (let i = 1; i < this.path.length; i++) (o = a), (a = r(a)), t(o, i);
          }
        }
        class ht {
          https;
          constructor(e) {
            this.https = e;
          }
          async request(e, t) {
            return await new Promise((r, a) => {
              const o = this.https.request(e, t, (e) => {
                let t = '';
                e.on('data', (e) => {
                  t += e;
                }),
                  e.on('end', () => {
                    const a = e.statusCode >= 200 && e.statusCode <= 299,
                      o = e.headers['content-type'],
                      i = t && o.startsWith('application/json') ? JSON.parse(t) : t;
                    r({ status: e.statusCode, statusText: e.statusMessage, ok: a, data: i });
                  });
              });
              o.on('error', (e) => {
                a(e);
              }),
                t.data && o.write(JSON.stringify(t.data)),
                o.end();
            });
          }
        }
        class ft {
          fetch;
          constructor(e) {
            this.fetch = e;
          }
          async request(e, t) {
            const r = { method: t.method, headers: t.headers, body: JSON.stringify(t.data) },
              a = await this.fetch(e, r),
              o = a.headers.get('Content-Type').startsWith('application/json') ? await a.json() : await a.text();
            return { ok: a.ok, status: a.status, statusText: a.statusText, data: o };
          }
        }
        function pt() {
          const e = {
            async request() {
              throw new Error('No method available to perform HTTP request');
            },
          };
          if ('undefined' !== typeof window && 'function' === typeof window.fetch) return new ft(window.fetch);
          if ('undefined' === typeof require) return e;
          try {
            const e = require('https');
            return new ht(e);
          } catch (t) {
            return e;
          }
        }
        function bt() {
          return `ts-sdk-${_e((0, We.A)(16))}`;
        }
        class mt {
          URL;
          apiKey;
          deploymentId;
          callbackUrl;
          callbackToken;
          headers;
          httpClient;
          constructor(e, t) {
            if (((this.URL = e), 'string' === typeof t))
              (this.apiKey = t),
                (this.httpClient = pt()),
                (this.deploymentId = bt()),
                (this.callbackToken = void 0),
                (this.callbackUrl = void 0);
            else {
              const {
                apiKey: e,
                deploymentId: r,
                httpClient: a,
                callbackToken: o,
                callbackUrl: i,
                headers: n,
              } = t ?? {};
              (this.apiKey = e),
                (this.httpClient = a ?? pt()),
                (this.deploymentId = r ?? bt()),
                (this.callbackToken = o),
                (this.callbackUrl = i),
                (this.headers = n);
            }
          }
          async broadcast(e) {
            let t;
            try {
              t = e.toHexEF();
            } catch (a) {
              if ('All inputs must have source transactions when serializing to EF format' !== a.message) throw a;
              t = e.toHex();
            }
            const r = { method: 'POST', headers: this.requestHeaders(), data: { rawTx: t } };
            try {
              const e = await this.httpClient.request(`${this.URL}/v1/tx`, r);
              if (e.ok) {
                const { txid: t, extraInfo: r, txStatus: a, competingTxs: o } = e.data;
                let i = { status: 'success', txid: t, message: `${a} ${r}` };
                return o && (i.competingTxs = o), i;
              }
              {
                const t = typeof e.status,
                  r = {
                    status: 'error',
                    code: 'number' === t || 'string' === t ? e.status.toString() : 'ERR_UNKNOWN',
                    description: 'Unknown error',
                  };
                let a = e.data;
                if ('string' === typeof a)
                  try {
                    a = JSON.parse(e.data);
                  } catch {}
                return (
                  'object' === typeof a &&
                    ((r.more = a),
                    'string' === typeof a.txid && (r.txid = a.txid),
                    'string' === typeof a.detail && (r.description = a.detail)),
                  r
                );
              }
            } catch (a) {
              return {
                status: 'error',
                code: '500',
                description: 'string' === typeof a.message ? a.message : 'Internal Server Error',
              };
            }
          }
          requestHeaders() {
            const e = { 'Content-Type': 'application/json', 'XDeployment-ID': this.deploymentId };
            if (
              (this.apiKey && (e.Authorization = `Bearer ${this.apiKey}`),
              this.callbackUrl && (e['X-CallbackUrl'] = this.callbackUrl),
              this.callbackToken && (e['X-CallbackToken'] = this.callbackToken),
              this.headers)
            )
              for (const t in this.headers) e[t] = this.headers[t];
            return e;
          }
        }
        class gt {
          network;
          apiKey;
          URL;
          httpClient;
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'main',
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            const { apiKey: r, httpClient: a } = t;
            (this.network = e),
              (this.URL = `https://api.whatsonchain.com/v1/bsv/${e}`),
              (this.httpClient = a ?? pt()),
              (this.apiKey = r);
          }
          async isValidRootForHeight(e, t) {
            const r = { method: 'GET', headers: this.getHeaders() },
              a = await this.httpClient.request(`${this.URL}/block/${t}/header`, r);
            if (a.ok) {
              const { merkleroot: t } = a.data;
              return t === e;
            }
            if (404 === a.status) return !1;
            throw new Error(
              `Failed to verify merkleroot for height ${t} because of an error: ${JSON.stringify(a.data)} `,
            );
          }
          getHeaders() {
            const e = { Accept: 'application/json' };
            return this.apiKey && (e.Authorization = this.apiKey), e;
          }
        }
        const vt = 4022206465;
        class yt {
          version;
          inputs;
          outputs;
          lockTime;
          metadata;
          merklePath;
          cachedHash;
          static fromBEEF(e, t) {
            const r = new Fe(e),
              { transactions: a, BUMPs: o } = yt.parseBEEFData(r),
              i = Object.keys(a),
              n = i[i.length - 1],
              s = t || n;
            if (!a[s]) throw new Error(`Transaction with TXID ${s} not found in BEEF data.`);
            const c = (e) => {
              if ('number' === typeof e.pathIndex) {
                const t = o[e.pathIndex];
                if ('object' !== typeof t) throw new Error('Invalid merkle path index found in BEEF!');
                e.tx.merklePath = t;
              } else
                for (let t = 0; t < e.tx.inputs.length; t++) {
                  const r = e.tx.inputs[t],
                    o = a[r.sourceTXID];
                  if ('object' !== typeof o) throw new Error(`Reference to unknown TXID in BEEF: ${r.sourceTXID}`);
                  (r.sourceTransaction = o.tx), c(o);
                }
            };
            return c(a[s]), a[s].tx;
          }
          static fromAtomicBEEF(e) {
            const t = new Fe(e),
              r = t.readUInt32LE();
            if (16843009 !== r)
              throw new Error(`Invalid Atomic BEEF prefix. Expected 0x01010101, received ${r.toString(16)}.`);
            const a = t.read(32),
              o = _e(a),
              i = new Fe(t.read()),
              { transactions: n, BUMPs: s } = yt.parseBEEFData(i);
            if (!n[o]) throw new Error(`Subject transaction with TXID ${o} not found in Atomic BEEF data.`);
            const c = new Set(),
              l = (e) => {
                if (c.has(e)) return;
                c.add(e);
                const t = n[e].tx;
                for (const r of t.inputs) {
                  const e = r.sourceTXID;
                  if (!n[e]) throw new Error(`Input transaction with TXID ${e} is missing in Atomic BEEF data.`);
                  l(e);
                }
              };
            l(o);
            for (const d in n)
              if (!c.has(d)) throw new Error(`Unrelated transaction with TXID ${d} found in Atomic BEEF data.`);
            const u = (e) => {
              if ('number' === typeof e.pathIndex) {
                const t = s[e.pathIndex];
                if ('object' !== typeof t) throw new Error('Invalid merkle path index found in BEEF!');
                e.tx.merklePath = t;
              } else
                for (let t = 0; t < e.tx.inputs.length; t++) {
                  const r = e.tx.inputs[t],
                    a = n[r.sourceTXID];
                  if ('object' !== typeof a) throw new Error(`Reference to unknown TXID in BEEF: ${r.sourceTXID}`);
                  (r.sourceTransaction = a.tx), u(a);
                }
            };
            return u(n[o]), n[o].tx;
          }
          static parseBEEFData(e) {
            const t = e.readUInt32LE();
            if (t !== vt) throw new Error(`Invalid BEEF version. Expected ${vt}, received ${t}.`);
            const r = e.readVarIntNum(),
              a = [];
            for (let n = 0; n < r; n++) a.push(dt.fromReader(e));
            const o = e.readVarIntNum(),
              i = {};
            for (let n = 0; n < o; n++) {
              const t = yt.fromReader(e),
                r = { tx: t },
                a = t.id('hex');
              Boolean(e.readUInt8()) && (r.pathIndex = e.readVarIntNum()), (i[a] = r);
            }
            return { transactions: i, BUMPs: a };
          }
          static fromEF(e) {
            const t = new Fe(e),
              r = t.readUInt32LE();
            if ('0000000000ef' !== _e(t.read(6))) throw new Error('Invalid EF marker');
            const a = t.readVarIntNum(),
              o = [];
            for (let c = 0; c < a; c++) {
              const e = _e(t.readReverse(32)),
                r = t.readUInt32LE(),
                a = t.readVarIntNum(),
                i = t.read(a),
                n = it.fromBinary(i),
                s = t.readUInt32LE(),
                c = t.readUInt64LEBn().toNumber(),
                l = t.readVarIntNum(),
                u = t.read(l),
                d = ot.fromBinary(u),
                h = new yt(null, [], [], null);
              (h.outputs = Array(r + 1).fill(null)),
                (h.outputs[r] = { satoshis: c, lockingScript: d }),
                o.push({ sourceTransaction: h, sourceTXID: e, sourceOutputIndex: r, unlockingScript: n, sequence: s });
            }
            const i = t.readVarIntNum(),
              n = [];
            for (let c = 0; c < i; c++) {
              const e = t.readUInt64LEBn().toNumber(),
                r = t.readVarIntNum(),
                a = t.read(r),
                o = ot.fromBinary(a);
              n.push({ satoshis: e, lockingScript: o });
            }
            const s = t.readUInt32LE();
            return new yt(r, o, n, s);
          }
          static parseScriptOffsets(e) {
            const t = new Fe(e),
              r = [],
              a = [];
            t.pos += 4;
            const o = t.readVarIntNum();
            for (let n = 0; n < o; n++) {
              t.pos += 36;
              const e = t.readVarIntNum();
              r.push({ vin: n, offset: t.pos, length: e }), (t.pos += e + 4);
            }
            const i = t.readVarIntNum();
            for (let n = 0; n < i; n++) {
              t.pos += 8;
              const e = t.readVarIntNum();
              a.push({ vout: n, offset: t.pos, length: e }), (t.pos += e);
            }
            return { inputs: r, outputs: a };
          }
          static fromReader(e) {
            const t = e.readUInt32LE(),
              r = e.readVarIntNum(),
              a = [];
            for (let s = 0; s < r; s++) {
              const t = _e(e.readReverse(32)),
                r = e.readUInt32LE(),
                o = e.readVarIntNum(),
                i = e.read(o),
                n = it.fromBinary(i),
                s = e.readUInt32LE();
              a.push({ sourceTXID: t, sourceOutputIndex: r, unlockingScript: n, sequence: s });
            }
            const o = e.readVarIntNum(),
              i = [];
            for (let s = 0; s < o; s++) {
              const t = e.readUInt64LEBn().toNumber(),
                r = e.readVarIntNum(),
                a = e.read(r),
                o = ot.fromBinary(a);
              i.push({ satoshis: t, lockingScript: o });
            }
            const n = e.readUInt32LE();
            return new yt(t, a, i, n);
          }
          static fromBinary(e) {
            const t = new Fe(e);
            return yt.fromReader(t);
          }
          static fromHex(e) {
            return yt.fromBinary(Ae(e, 'hex'));
          }
          static fromHexEF(e) {
            return yt.fromEF(Ae(e, 'hex'));
          }
          static fromHexBEEF(e, t) {
            return yt.fromBEEF(Ae(e, 'hex'), t);
          }
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
              o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
              i = arguments.length > 5 ? arguments[5] : void 0;
            (this.version = e),
              (this.inputs = t),
              (this.outputs = r),
              (this.lockTime = a),
              (this.metadata = o),
              (this.merklePath = i);
          }
          addInput(e) {
            if ('undefined' === typeof e.sourceTXID && 'undefined' === typeof e.sourceTransaction)
              throw new Error(
                'A reference to an an input transaction is required. If the input transaction itself cannot be referenced, its TXID must still be provided.',
              );
            'undefined' === typeof e.sequence && (e.sequence = 4294967295),
              (this.cachedHash = void 0),
              this.inputs.push(e);
          }
          addOutput(e) {
            (this.cachedHash = void 0), this.outputs.push(e);
          }
          updateMetadata(e) {
            this.metadata = { ...this.metadata, ...e };
          }
          async fee(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'equal';
            if (((this.cachedHash = void 0), 'undefined' === typeof e && (e = new ut.A(10)), 'number' === typeof e)) {
              const t = e;
              e = { computeFee: async () => t };
            }
            const r = await e.computeFee(this);
            let a = 0;
            for (const i of this.inputs) {
              if ('object' !== typeof i.sourceTransaction)
                throw new Error('Source transactions are required for all inputs during fee computation');
              a += i.sourceTransaction.outputs[i.sourceOutputIndex].satoshis;
            }
            a -= r;
            let o = 0;
            for (const i of this.outputs) i.change ? o++ : (a -= i.satoshis);
            if (a <= o)
              for (let i = 0; i < this.outputs.length; i++) this.outputs[i].change && (this.outputs.splice(i, 1), i--);
            else {
              if ('random' === t) throw new Error('Not yet implemented');
              if ('equal' === t) {
                const e = Math.floor(a / o);
                for (const t of this.outputs) t.change && (t.satoshis = e);
              }
            }
          }
          getFee() {
            let e = 0;
            for (const r of this.inputs) {
              if ('object' !== typeof r.sourceTransaction)
                throw new Error('Source transactions or sourceSatoshis are required for all inputs to calculate fee');
              e += r.sourceTransaction.outputs[r.sourceOutputIndex].satoshis;
            }
            let t = 0;
            for (const r of this.outputs) t += r.satoshis || 0;
            return e - t;
          }
          async sign() {
            this.cachedHash = void 0;
            for (const t of this.outputs)
              if ('undefined' === typeof t.satoshis)
                throw t.change
                  ? new Error(
                      'There are still change outputs with uncomputed amounts. Use the fee() method to compute the change amounts and transaction fees prior to signing.',
                    )
                  : new Error(
                      'One or more transaction outputs is missing an amount. Ensure all output amounts are provided before signing.',
                    );
            const e = await Promise.all(
              this.inputs.map(async (e, t) =>
                'object' === typeof this.inputs[t].unlockingScriptTemplate
                  ? await this.inputs[t].unlockingScriptTemplate.sign(this, t)
                  : await Promise.resolve(void 0),
              ),
            );
            for (let t = 0, r = this.inputs.length; t < r; t++)
              'object' === typeof this.inputs[t].unlockingScriptTemplate && (this.inputs[t].unlockingScript = e[t]);
          }
          async broadcast() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new mt('https://arc.taal.com');
            return await e.broadcast(this);
          }
          toBinary() {
            const e = new Me();
            e.writeUInt32LE(this.version), e.writeVarIntNum(this.inputs.length);
            for (const t of this.inputs) {
              'undefined' === typeof t.sourceTXID
                ? e.write(t.sourceTransaction.hash())
                : e.writeReverse(Ae(t.sourceTXID, 'hex')),
                e.writeUInt32LE(t.sourceOutputIndex);
              const r = t.unlockingScript.toBinary();
              e.writeVarIntNum(r.length), e.write(r), e.writeUInt32LE(t.sequence);
            }
            e.writeVarIntNum(this.outputs.length);
            for (const t of this.outputs) {
              e.writeUInt64LE(t.satoshis);
              const r = t.lockingScript.toBinary();
              e.writeVarIntNum(r.length), e.write(r);
            }
            return e.writeUInt32LE(this.lockTime), e.toArray();
          }
          toEF() {
            const e = new Me();
            e.writeUInt32LE(this.version), e.write([0, 0, 0, 0, 0, 239]), e.writeVarIntNum(this.inputs.length);
            for (const t of this.inputs) {
              if ('undefined' === typeof t.sourceTransaction)
                throw new Error('All inputs must have source transactions when serializing to EF format');
              'undefined' === typeof t.sourceTXID
                ? e.write(t.sourceTransaction.hash())
                : e.write(Ae(t.sourceTXID, 'hex').reverse()),
                e.writeUInt32LE(t.sourceOutputIndex);
              const r = t.unlockingScript.toBinary();
              e.writeVarIntNum(r.length),
                e.write(r),
                e.writeUInt32LE(t.sequence),
                e.writeUInt64LE(t.sourceTransaction.outputs[t.sourceOutputIndex].satoshis);
              const a = t.sourceTransaction.outputs[t.sourceOutputIndex].lockingScript.toBinary();
              e.writeVarIntNum(a.length), e.write(a);
            }
            e.writeVarIntNum(this.outputs.length);
            for (const t of this.outputs) {
              e.writeUInt64LE(t.satoshis);
              const r = t.lockingScript.toBinary();
              e.writeVarIntNum(r.length), e.write(r);
            }
            return e.writeUInt32LE(this.lockTime), e.toArray();
          }
          toHexEF() {
            return _e(this.toEF());
          }
          toHex() {
            return _e(this.toBinary());
          }
          toHexBEEF() {
            return _e(this.toBEEF());
          }
          toHexAtomicBEEF() {
            return _e(this.toAtomicBEEF());
          }
          hash(e) {
            let t;
            return (
              this.cachedHash ? (t = this.cachedHash) : ((t = ye(this.toBinary())), (this.cachedHash = t)),
              'hex' === e ? _e(t) : t
            );
          }
          id(e) {
            const t = [...this.hash()];
            return t.reverse(), 'hex' === e ? _e(t) : t;
          }
          async verify() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new gt(),
              t = arguments.length > 1 ? arguments[1] : void 0;
            const r = new Set(),
              a = [this];
            for (; a.length > 0; ) {
              const o = a.shift(),
                i = o.id('hex');
              if (r.has(i)) continue;
              if ('object' === typeof o.merklePath) {
                if ('scripts only' === e) {
                  r.add(i);
                  continue;
                }
                if (await o.merklePath.verify(i, e)) {
                  r.add(i);
                  continue;
                }
              }
              if ('undefined' !== typeof t) {
                const e = yt.fromEF(o.toEF());
                if ((delete e.outputs[0].satoshis, (e.outputs[0].change = !0), await e.fee(t), o.getFee() < e.getFee()))
                  throw new Error(
                    `Verification failed because the transaction ${i} has an insufficient fee and has not been mined.`,
                  );
              }
              let n = 0;
              for (let e = 0; e < o.inputs.length; e++) {
                const t = o.inputs[e];
                if ('object' !== typeof t.sourceTransaction)
                  throw new Error(
                    `Verification failed because the input at index ${e} of transaction ${i} is missing an associated source transaction. This source transaction is required for transaction verification because there is no merkle proof for the transaction spending a UTXO it contains.`,
                  );
                if ('object' !== typeof t.unlockingScript)
                  throw new Error(
                    `Verification failed because the input at index ${e} of transaction ${i} is missing an associated unlocking script. This script is required for transaction verification because there is no merkle proof for the transaction spending the UTXO.`,
                  );
                const s = t.sourceTransaction.outputs[t.sourceOutputIndex];
                n += s.satoshis;
                const c = t.sourceTransaction.id('hex');
                r.has(c) || a.push(t.sourceTransaction);
                const l = o.inputs.filter((t, r) => r !== e);
                'undefined' === typeof t.sourceTXID && (t.sourceTXID = c);
                if (
                  !new lt({
                    sourceTXID: t.sourceTXID,
                    sourceOutputIndex: t.sourceOutputIndex,
                    lockingScript: s.lockingScript,
                    sourceSatoshis: s.satoshis,
                    transactionVersion: o.version,
                    otherInputs: l,
                    unlockingScript: t.unlockingScript,
                    inputSequence: t.sequence,
                    inputIndex: e,
                    outputs: o.outputs,
                    lockTime: o.lockTime,
                  }).validate()
                )
                  return !1;
              }
              let s = 0;
              for (const e of o.outputs) {
                if ('number' !== typeof e.satoshis)
                  throw new Error('Every output must have a defined amount during transaction verification.');
                s += e.satoshis;
              }
              if (s > n) return !1;
              r.add(i);
            }
            return !0;
          }
          toBEEF() {
            const e = new Me();
            e.writeUInt32LE(4022206465);
            const t = [],
              r = [],
              a = (e) => {
                const o = { tx: e },
                  i = 'object' === typeof e.merklePath;
                if (i) {
                  let r = !1;
                  for (let a = 0; a < t.length; a++) {
                    if (t[a] === e.merklePath) {
                      (o.pathIndex = a), (r = !0);
                      break;
                    }
                    if (t[a].blockHeight === e.merklePath.blockHeight) {
                      if (t[a].computeRoot() === e.merklePath.computeRoot()) {
                        t[a].combine(e.merklePath), (o.pathIndex = a), (r = !0);
                        break;
                      }
                    }
                  }
                  r || ((o.pathIndex = t.length), t.push(e.merklePath));
                }
                if ((r.some((t) => t.tx.id('hex') === e.id('hex')) || r.unshift(o), !i))
                  for (let t = 0; t < e.inputs.length; t++) {
                    const r = e.inputs[t];
                    if ('object' !== typeof r.sourceTransaction)
                      throw new Error('A required source transaction is missing!');
                    a(r.sourceTransaction);
                  }
              };
            a(this), e.writeVarIntNum(t.length);
            for (const o of t) e.write(o.toBinary());
            e.writeVarIntNum(r.length);
            for (const o of r)
              e.write(o.tx.toBinary()),
                'number' === typeof o.pathIndex ? (e.writeUInt8(1), e.writeVarIntNum(o.pathIndex)) : e.writeUInt8(0);
            return e.toArray();
          }
          toAtomicBEEF() {
            const e = new Me();
            e.writeUInt32LE(16843009), e.write(this.id());
            const t = this.toBEEF();
            return e.write(t), e.toArray();
          }
        }
        function wt(e) {
          return 'success' === e.status;
        }
        const kt = 'Bitcoin Signed Message:\n',
          Et = (e) => {
            const t = new Me();
            t.writeVarIntNum(24), t.write(Ae(kt, 'utf8')), t.writeVarIntNum(e.length), t.write(e);
            const r = t.toArray();
            return ye(r);
          },
          St = function (e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'base64';
            const a = Et(e),
              o = Ke(new n(a), t, !0);
            if ('raw' === r) return o;
            const i = new n(a),
              s = o.CalculateRecoveryFactor(t.toPublicKey(), i);
            return o.toCompact(s, !0, 'base64');
          },
          xt = (e, t, r) => {
            const a = Et(e);
            return Ve(new n(a), t, r);
          };
        class _t {
          versionBytesNum;
          depth;
          parentFingerPrint;
          childIndex;
          chainCode;
          privKey;
          pubKey;
          constants = { pubKey: 76067358, privKey: 76066276 };
          constructor(e, t, r, a, o, i, n) {
            (this.versionBytesNum = e),
              (this.depth = t),
              (this.parentFingerPrint = r),
              (this.childIndex = a),
              (this.chainCode = o),
              (this.privKey = i),
              (this.pubKey = n);
          }
          fromRandom() {
            return (
              (this.versionBytesNum = this.constants.privKey),
              (this.depth = 0),
              (this.parentFingerPrint = [0, 0, 0, 0]),
              (this.childIndex = 0),
              (this.chainCode = (0, We.A)(32)),
              (this.privKey = Qe.fromRandom()),
              (this.pubKey = this.privKey.toPublicKey()),
              this
            );
          }
          static fromRandom() {
            return new this().fromRandom();
          }
          static fromString(e) {
            return new this().fromString(e);
          }
          fromString(e) {
            const t = Re(e);
            return this.fromBinary([...t.prefix, ...t.data]);
          }
          static fromSeed(e) {
            return new this().fromSeed(e);
          }
          fromSeed(e) {
            if (e.length < 16) throw new Error('Need more than 128 bits of entropy');
            if (e.length > 64) throw new Error('More than 512 bits of entropy is nonstandard');
            const t = Ee(Ae('Bitcoin seed', 'utf8'), e);
            return (
              (this.depth = 0),
              (this.parentFingerPrint = [0, 0, 0, 0]),
              (this.childIndex = 0),
              (this.chainCode = t.slice(32, 64)),
              (this.versionBytesNum = this.constants.privKey),
              (this.privKey = new Qe(t.slice(0, 32))),
              (this.pubKey = this.privKey.toPublicKey()),
              this
            );
          }
          static fromBinary(e) {
            return new this().fromBinary(e);
          }
          fromBinary(e) {
            if (78 !== e.length) throw new Error('incorrect bip32 data length');
            const t = new Fe(e);
            (this.versionBytesNum = t.readUInt32BE()),
              (this.depth = t.readUInt8()),
              (this.parentFingerPrint = t.read(4)),
              (this.childIndex = t.readUInt32BE()),
              (this.chainCode = t.read(32));
            const r = t.read(33),
              a = this.versionBytesNum === this.constants.privKey,
              o = this.versionBytesNum === this.constants.pubKey;
            if (a && 0 === r[0]) (this.privKey = new Qe(r.slice(1, 33))), (this.pubKey = this.privKey.toPublicKey());
            else {
              if (!o || (2 !== r[0] && 3 !== r[0])) throw new Error('Invalid key');
              this.pubKey = $e.fromString(_e(r));
            }
            return this;
          }
          toString() {
            const e = this.toBinary();
            return ze(e, []);
          }
          derive(e) {
            if ('m' === e) return this;
            const t = e.split('/');
            let r = this;
            for (const a in t) {
              const e = t[a];
              if ('0' === a) {
                if ('m' !== e) throw new Error('invalid path');
                continue;
              }
              if (parseInt(e.replace("'", ''), 10).toString() !== e.replace("'", '')) throw new Error('invalid path');
              const o = e.length > 1 && "'" === e[e.length - 1];
              let i = 2147483647 & parseInt(o ? e.slice(0, e.length - 1) : e, 10);
              o && (i += 2147483648), (r = r.deriveChild(i));
            }
            return r;
          }
          deriveChild(e) {
            if ('number' !== typeof e) throw new Error('i must be a number');
            const t = [];
            t.push((e >> 24) & 255), t.push((e >> 16) & 255), t.push((e >> 8) & 255), t.push(255 & e);
            const r = [...t],
              a = 0 !== (2147483648 & e),
              o = this.versionBytesNum === this.constants.privKey;
            if (a && (!this.privKey || !o)) throw new Error('Cannot do private key derivation without private key');
            let i = null;
            if (this.privKey) {
              let e = null;
              e = a ? [0, ...this.privKey.toArray('be', 32), ...r] : [...this.pubKey.encode(!0), ...r];
              const t = Ee(this.chainCode, e),
                o = new n(t.slice(0, 32)),
                s = t.slice(32, 64),
                c = o.add(this.privKey).mod(new Le().n);
              (i = new _t()),
                (i.chainCode = s),
                (i.privKey = new Qe(c.toArray())),
                (i.pubKey = i.privKey.toPublicKey());
            } else {
              const e = [...this.pubKey.encode(!0), ...r],
                t = Ee(this.chainCode, e),
                a = new n(t.slice(0, 32)),
                o = t.slice(32, 64),
                s = new Le().g.mul(a),
                c = this.pubKey,
                l = s.add(c),
                u = new $e(l.x, l.y);
              (i = new _t()), (i.chainCode = o), (i.pubKey = u);
            }
            i.childIndex = e;
            const s = we(this.pubKey.encode(!0));
            return (
              (i.parentFingerPrint = s.slice(0, 4)),
              (i.versionBytesNum = this.versionBytesNum),
              (i.depth = this.depth + 1),
              i
            );
          }
          toPublic() {
            const e = new _t(
              this.versionBytesNum,
              this.depth,
              this.parentFingerPrint,
              this.childIndex,
              this.chainCode,
              this.privKey,
              this.pubKey,
            );
            return (e.versionBytesNum = this.constants.pubKey), (e.privKey = void 0), e;
          }
          toBinary() {
            const e = this.versionBytesNum === this.constants.privKey,
              t = this.versionBytesNum === this.constants.pubKey;
            if (e)
              return new Me()
                .writeUInt32BE(this.versionBytesNum)
                .writeUInt8(this.depth)
                .write(this.parentFingerPrint)
                .writeUInt32BE(this.childIndex)
                .write(this.chainCode)
                .writeUInt8(0)
                .write(this.privKey.toArray('be', 32))
                .toArray();
            if (t)
              return new Me()
                .writeUInt32BE(this.versionBytesNum)
                .writeUInt8(this.depth)
                .write(this.parentFingerPrint)
                .writeUInt32BE(this.childIndex)
                .write(this.chainCode)
                .write(this.pubKey.encode(!0))
                .toArray();
            throw new Error('bip32: invalid versionBytesNum byte');
          }
          isPrivate() {
            return this.versionBytesNum === this.constants.privKey;
          }
        }
        function At(e) {
          let t, r, a;
          this._tables[0][0][0] || this._precompute();
          const o = this._tables[0][4],
            i = this._tables[1],
            n = e.length;
          let s = 1;
          if (4 !== n && 6 !== n && 8 !== n) throw new Error('invalid aes key size');
          this._key = [(r = e.slice(0)), (a = [])];
          for (var c = n; c < 4 * n + 28; c++)
            (t = r[c - 1]),
              (c % n === 0 || (8 === n && c % n === 4)) &&
                ((t = (o[t >>> 24] << 24) ^ (o[(t >> 16) & 255] << 16) ^ (o[(t >> 8) & 255] << 8) ^ o[255 & t]),
                c % n === 0 && ((t = (t << 8) ^ (t >>> 24) ^ (s << 24)), (s = (s << 1) ^ (283 * (s >> 7))))),
              (r[c] = r[c - n] ^ t);
          for (let l = 0; c; l++, c--)
            (t = r[3 & l ? c : c - 4]),
              (a[l] =
                c <= 4 || l < 4
                  ? t
                  : i[0][o[t >>> 24]] ^ i[1][o[(t >> 16) & 255]] ^ i[2][o[(t >> 8) & 255]] ^ i[3][o[255 & t]]);
        }
        At.prototype = {
          encrypt: function (e) {
            return this._crypt(e, 0);
          },
          decrypt: function (e) {
            return this._crypt(e, 1);
          },
          _tables: [
            [
              new Uint32Array(256),
              new Uint32Array(256),
              new Uint32Array(256),
              new Uint32Array(256),
              new Uint32Array(256),
            ],
            [
              new Uint32Array(256),
              new Uint32Array(256),
              new Uint32Array(256),
              new Uint32Array(256),
              new Uint32Array(256),
            ],
          ],
          _precompute: function () {
            const e = this._tables[0],
              t = this._tables[1],
              r = e[4],
              a = t[4];
            let o, i, n;
            const s = new Uint8Array(256),
              c = new Uint8Array(256);
            let l, u, d, h, f, p;
            for (o = 0; o < 256; o++) c[(s[o] = (o << 1) ^ (283 * (o >> 7))) ^ o] = o;
            for (i = n = 0; !r[i]; i ^= l || 1, n = c[n] || 1)
              for (
                h = n ^ (n << 1) ^ (n << 2) ^ (n << 3) ^ (n << 4),
                  h = (h >> 8) ^ (255 & h) ^ 99,
                  r[i] = h,
                  a[h] = i,
                  d = s[(u = s[(l = s[i])])],
                  p = (16843009 * d) ^ (65537 * u) ^ (257 * l) ^ (16843008 * i),
                  f = (257 * s[h]) ^ (16843008 * h),
                  o = 0;
                o < 4;
                o++
              )
                (e[o][i] = f = (f << 24) ^ (f >>> 8)), (t[o][h] = p = (p << 24) ^ (p >>> 8));
          },
          _crypt: function (e, t) {
            if (4 !== e.length) throw new Error('invalid aes block size');
            const r = this._key[t];
            let a,
              o,
              i,
              n = e[0] ^ r[0],
              s = e[t ? 3 : 1] ^ r[1],
              c = e[2] ^ r[2],
              l = e[t ? 1 : 3] ^ r[3];
            const u = r.length / 4 - 2;
            let d,
              h = 4;
            const f = new Uint32Array(4),
              p = this._tables[t],
              b = p[0],
              m = p[1],
              g = p[2],
              v = p[3],
              y = p[4];
            for (d = 0; d < u; d++)
              (a = b[n >>> 24] ^ m[(s >> 16) & 255] ^ g[(c >> 8) & 255] ^ v[255 & l] ^ r[h]),
                (o = b[s >>> 24] ^ m[(c >> 16) & 255] ^ g[(l >> 8) & 255] ^ v[255 & n] ^ r[h + 1]),
                (i = b[c >>> 24] ^ m[(l >> 16) & 255] ^ g[(n >> 8) & 255] ^ v[255 & s] ^ r[h + 2]),
                (l = b[l >>> 24] ^ m[(n >> 16) & 255] ^ g[(s >> 8) & 255] ^ v[255 & c] ^ r[h + 3]),
                (h += 4),
                (n = a),
                (s = o),
                (c = i);
            for (d = 0; d < 4; d++)
              (f[t ? 3 & -d : d] =
                (y[n >>> 24] << 24) ^ (y[(s >> 16) & 255] << 16) ^ (y[(c >> 8) & 255] << 8) ^ y[255 & l] ^ r[h++]),
                (a = n),
                (n = s),
                (s = c),
                (c = l),
                (l = a);
            return f;
          },
        };
      },
      3407: (e, t, r) => {
        'use strict';
        r.d(t, { A: () => i });
        class a {
          _rand;
          constructor() {
            const e = () => {
              throw new Error('No secure random number generator is available in this environment.');
            };
            if ('object' === typeof self)
              self.crypto && self.crypto.getRandomValues
                ? (this._rand = (e) => {
                    const t = new Uint8Array(e);
                    return self.crypto.getRandomValues(t), [...t];
                  })
                : (this._rand = e);
            else
              try {
                const e = require('crypto');
                'function' === typeof e.randomBytes && (this._rand = (t) => [...e.randomBytes(t)]);
              } catch (t) {
                this._rand = e;
              }
          }
          generate(e) {
            return this._rand(e);
          }
        }
        let o = null;
        const i = (e) => (null == o && (o = new a()), o.generate(e));
      },
      7638: (e, t, r) => {
        'use strict';
        r.d(t, { A: () => a });
        class a {
          value;
          constructor(e) {
            this.value = e;
          }
          async computeFee(e) {
            const t = (e) => (e > 2 ** 32 ? 9 : e > 65536 ? 5 : e > 253 ? 3 : 1);
            let r = 4;
            r += t(e.inputs.length);
            for (let a = 0; a < e.inputs.length; a++) {
              const o = e.inputs[a];
              let i;
              if (((r += 40), 'object' === typeof o.unlockingScript)) i = o.unlockingScript.toBinary().length;
              else {
                if ('object' !== typeof o.unlockingScriptTemplate)
                  throw new Error(
                    'All inputs must have an unlocking script or an unlocking script template for sat/kb fee computation.',
                  );
                i = await o.unlockingScriptTemplate.estimateLength(e, a);
              }
              (r += t(i)), (r += i);
            }
            r += t(e.outputs.length);
            for (const a of e.outputs) {
              r += 8;
              const e = a.lockingScript.toBinary().length;
              (r += t(e)), (r += e);
            }
            r += 4;
            return Math.ceil((r / 1e3) * this.value);
          }
        }
      },
      6213: (e, t, r) => {
        'use strict';
        r.d(t, { A: () => Et });
        var a = {};
        function o(e, t) {
          return function () {
            return e.apply(t, arguments);
          };
        }
        r.r(a),
          r.d(a, {
            hasBrowserEnv: () => de,
            hasStandardBrowserEnv: () => fe,
            hasStandardBrowserWebWorkerEnv: () => pe,
            navigator: () => he,
            origin: () => be,
          });
        var i = r(2285);
        const { toString: n } = Object.prototype,
          { getPrototypeOf: s } = Object,
          c =
            ((l = Object.create(null)),
            (e) => {
              const t = n.call(e);
              return l[t] || (l[t] = t.slice(8, -1).toLowerCase());
            });
        var l;
        const u = (e) => ((e = e.toLowerCase()), (t) => c(t) === e),
          d = (e) => (t) => typeof t === e,
          { isArray: h } = Array,
          f = d('undefined');
        const p = u('ArrayBuffer');
        const b = d('string'),
          m = d('function'),
          g = d('number'),
          v = (e) => null !== e && 'object' === typeof e,
          y = (e) => {
            if ('object' !== c(e)) return !1;
            const t = s(e);
            return (
              (null === t || t === Object.prototype || null === Object.getPrototypeOf(t)) &&
              !(Symbol.toStringTag in e) &&
              !(Symbol.iterator in e)
            );
          },
          w = u('Date'),
          k = u('File'),
          E = u('Blob'),
          S = u('FileList'),
          x = u('URLSearchParams'),
          [_, A, O, P] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(u);
        function I(e, t) {
          let r,
            a,
            { allOwnKeys: o = !1 } = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          if (null !== e && 'undefined' !== typeof e)
            if (('object' !== typeof e && (e = [e]), h(e)))
              for (r = 0, a = e.length; r < a; r++) t.call(null, e[r], r, e);
            else {
              const a = o ? Object.getOwnPropertyNames(e) : Object.keys(e),
                i = a.length;
              let n;
              for (r = 0; r < i; r++) (n = a[r]), t.call(null, e[n], n, e);
            }
        }
        function B(e, t) {
          t = t.toLowerCase();
          const r = Object.keys(e);
          let a,
            o = r.length;
          for (; o-- > 0; ) if (((a = r[o]), t === a.toLowerCase())) return a;
          return null;
        }
        const N =
            'undefined' !== typeof globalThis
              ? globalThis
              : 'undefined' !== typeof self
                ? self
                : 'undefined' !== typeof window
                  ? window
                  : global,
          T = (e) => !f(e) && e !== N;
        const z = ((R = 'undefined' !== typeof Uint8Array && s(Uint8Array)), (e) => R && e instanceof R);
        var R;
        const M = u('HTMLFormElement'),
          F = ((e) => {
            let { hasOwnProperty: t } = e;
            return (e, r) => t.call(e, r);
          })(Object.prototype),
          C = u('RegExp'),
          j = (e, t) => {
            const r = Object.getOwnPropertyDescriptors(e),
              a = {};
            I(r, (r, o) => {
              let i;
              !1 !== (i = t(r, o, e)) && (a[o] = i || r);
            }),
              Object.defineProperties(e, a);
          },
          U = 'abcdefghijklmnopqrstuvwxyz',
          D = '0123456789',
          L = { DIGIT: D, ALPHA: U, ALPHA_DIGIT: U + U.toUpperCase() + D };
        const q = u('AsyncFunction'),
          H = ((e, t) => {
            return e
              ? setImmediate
              : t
                ? ((r = `axios@${Math.random()}`),
                  (a = []),
                  N.addEventListener(
                    'message',
                    (e) => {
                      let { source: t, data: o } = e;
                      t === N && o === r && a.length && a.shift()();
                    },
                    !1,
                  ),
                  (e) => {
                    a.push(e), N.postMessage(r, '*');
                  })
                : (e) => setTimeout(e);
            var r, a;
          })('function' === typeof setImmediate, m(N.postMessage)),
          G =
            'undefined' !== typeof queueMicrotask
              ? queueMicrotask.bind(N)
              : ('undefined' !== typeof i && i.nextTick) || H,
          K = {
            isArray: h,
            isArrayBuffer: p,
            isBuffer: function (e) {
              return (
                null !== e &&
                !f(e) &&
                null !== e.constructor &&
                !f(e.constructor) &&
                m(e.constructor.isBuffer) &&
                e.constructor.isBuffer(e)
              );
            },
            isFormData: (e) => {
              let t;
              return (
                e &&
                (('function' === typeof FormData && e instanceof FormData) ||
                  (m(e.append) &&
                    ('formdata' === (t = c(e)) ||
                      ('object' === t && m(e.toString) && '[object FormData]' === e.toString()))))
              );
            },
            isArrayBufferView: function (e) {
              let t;
              return (
                (t =
                  'undefined' !== typeof ArrayBuffer && ArrayBuffer.isView
                    ? ArrayBuffer.isView(e)
                    : e && e.buffer && p(e.buffer)),
                t
              );
            },
            isString: b,
            isNumber: g,
            isBoolean: (e) => !0 === e || !1 === e,
            isObject: v,
            isPlainObject: y,
            isReadableStream: _,
            isRequest: A,
            isResponse: O,
            isHeaders: P,
            isUndefined: f,
            isDate: w,
            isFile: k,
            isBlob: E,
            isRegExp: C,
            isFunction: m,
            isStream: (e) => v(e) && m(e.pipe),
            isURLSearchParams: x,
            isTypedArray: z,
            isFileList: S,
            forEach: I,
            merge: function e() {
              const { caseless: t } = (T(this) && this) || {},
                r = {},
                a = (a, o) => {
                  const i = (t && B(r, o)) || o;
                  y(r[i]) && y(a)
                    ? (r[i] = e(r[i], a))
                    : y(a)
                      ? (r[i] = e({}, a))
                      : h(a)
                        ? (r[i] = a.slice())
                        : (r[i] = a);
                };
              for (let o = 0, i = arguments.length; o < i; o++) arguments[o] && I(arguments[o], a);
              return r;
            },
            extend: function (e, t, r) {
              let { allOwnKeys: a } = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
              return (
                I(
                  t,
                  (t, a) => {
                    r && m(t) ? (e[a] = o(t, r)) : (e[a] = t);
                  },
                  { allOwnKeys: a },
                ),
                e
              );
            },
            trim: (e) => (e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '')),
            stripBOM: (e) => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
            inherits: (e, t, r, a) => {
              (e.prototype = Object.create(t.prototype, a)),
                (e.prototype.constructor = e),
                Object.defineProperty(e, 'super', { value: t.prototype }),
                r && Object.assign(e.prototype, r);
            },
            toFlatObject: (e, t, r, a) => {
              let o, i, n;
              const c = {};
              if (((t = t || {}), null == e)) return t;
              do {
                for (o = Object.getOwnPropertyNames(e), i = o.length; i-- > 0; )
                  (n = o[i]), (a && !a(n, e, t)) || c[n] || ((t[n] = e[n]), (c[n] = !0));
                e = !1 !== r && s(e);
              } while (e && (!r || r(e, t)) && e !== Object.prototype);
              return t;
            },
            kindOf: c,
            kindOfTest: u,
            endsWith: (e, t, r) => {
              (e = String(e)), (void 0 === r || r > e.length) && (r = e.length), (r -= t.length);
              const a = e.indexOf(t, r);
              return -1 !== a && a === r;
            },
            toArray: (e) => {
              if (!e) return null;
              if (h(e)) return e;
              let t = e.length;
              if (!g(t)) return null;
              const r = new Array(t);
              for (; t-- > 0; ) r[t] = e[t];
              return r;
            },
            forEachEntry: (e, t) => {
              const r = (e && e[Symbol.iterator]).call(e);
              let a;
              for (; (a = r.next()) && !a.done; ) {
                const r = a.value;
                t.call(e, r[0], r[1]);
              }
            },
            matchAll: (e, t) => {
              let r;
              const a = [];
              for (; null !== (r = e.exec(t)); ) a.push(r);
              return a;
            },
            isHTMLForm: M,
            hasOwnProperty: F,
            hasOwnProp: F,
            reduceDescriptors: j,
            freezeMethods: (e) => {
              j(e, (t, r) => {
                if (m(e) && -1 !== ['arguments', 'caller', 'callee'].indexOf(r)) return !1;
                const a = e[r];
                m(a) &&
                  ((t.enumerable = !1),
                  'writable' in t
                    ? (t.writable = !1)
                    : t.set ||
                      (t.set = () => {
                        throw Error("Can not rewrite read-only method '" + r + "'");
                      }));
              });
            },
            toObjectSet: (e, t) => {
              const r = {},
                a = (e) => {
                  e.forEach((e) => {
                    r[e] = !0;
                  });
                };
              return h(e) ? a(e) : a(String(e).split(t)), r;
            },
            toCamelCase: (e) =>
              e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (e, t, r) {
                return t.toUpperCase() + r;
              }),
            noop: () => {},
            toFiniteNumber: (e, t) => (null != e && Number.isFinite((e = +e)) ? e : t),
            findKey: B,
            global: N,
            isContextDefined: T,
            ALPHABET: L,
            generateString: function () {
              let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 16,
                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : L.ALPHA_DIGIT,
                r = '';
              const { length: a } = t;
              for (; e--; ) r += t[(Math.random() * a) | 0];
              return r;
            },
            isSpecCompliantForm: function (e) {
              return !!(e && m(e.append) && 'FormData' === e[Symbol.toStringTag] && e[Symbol.iterator]);
            },
            toJSONObject: (e) => {
              const t = new Array(10),
                r = (e, a) => {
                  if (v(e)) {
                    if (t.indexOf(e) >= 0) return;
                    if (!('toJSON' in e)) {
                      t[a] = e;
                      const o = h(e) ? [] : {};
                      return (
                        I(e, (e, t) => {
                          const i = r(e, a + 1);
                          !f(i) && (o[t] = i);
                        }),
                        (t[a] = void 0),
                        o
                      );
                    }
                  }
                  return e;
                };
              return r(e, 0);
            },
            isAsyncFn: q,
            isThenable: (e) => e && (v(e) || m(e)) && m(e.then) && m(e.catch),
            setImmediate: H,
            asap: G,
          };
        function V(e, t, r, a, o) {
          Error.call(this),
            Error.captureStackTrace
              ? Error.captureStackTrace(this, this.constructor)
              : (this.stack = new Error().stack),
            (this.message = e),
            (this.name = 'AxiosError'),
            t && (this.code = t),
            r && (this.config = r),
            a && (this.request = a),
            o && ((this.response = o), (this.status = o.status ? o.status : null));
        }
        K.inherits(V, Error, {
          toJSON: function () {
            return {
              message: this.message,
              name: this.name,
              description: this.description,
              number: this.number,
              fileName: this.fileName,
              lineNumber: this.lineNumber,
              columnNumber: this.columnNumber,
              stack: this.stack,
              config: K.toJSONObject(this.config),
              code: this.code,
              status: this.status,
            };
          },
        });
        const $ = V.prototype,
          W = {};
        [
          'ERR_BAD_OPTION_VALUE',
          'ERR_BAD_OPTION',
          'ECONNABORTED',
          'ETIMEDOUT',
          'ERR_NETWORK',
          'ERR_FR_TOO_MANY_REDIRECTS',
          'ERR_DEPRECATED',
          'ERR_BAD_RESPONSE',
          'ERR_BAD_REQUEST',
          'ERR_CANCELED',
          'ERR_NOT_SUPPORT',
          'ERR_INVALID_URL',
        ].forEach((e) => {
          W[e] = { value: e };
        }),
          Object.defineProperties(V, W),
          Object.defineProperty($, 'isAxiosError', { value: !0 }),
          (V.from = (e, t, r, a, o, i) => {
            const n = Object.create($);
            return (
              K.toFlatObject(
                e,
                n,
                function (e) {
                  return e !== Error.prototype;
                },
                (e) => 'isAxiosError' !== e,
              ),
              V.call(n, e.message, t, r, a, o),
              (n.cause = e),
              (n.name = e.name),
              i && Object.assign(n, i),
              n
            );
          });
        const Y = V;
        var X = r(6382).hp;
        function J(e) {
          return K.isPlainObject(e) || K.isArray(e);
        }
        function Q(e) {
          return K.endsWith(e, '[]') ? e.slice(0, -2) : e;
        }
        function Z(e, t, r) {
          return e
            ? e
                .concat(t)
                .map(function (e, t) {
                  return (e = Q(e)), !r && t ? '[' + e + ']' : e;
                })
                .join(r ? '.' : '')
            : t;
        }
        const ee = K.toFlatObject(K, {}, null, function (e) {
          return /^is[A-Z]/.test(e);
        });
        const te = function (e, t, r) {
          if (!K.isObject(e)) throw new TypeError('target must be an object');
          t = t || new FormData();
          const a = (r = K.toFlatObject(r, { metaTokens: !0, dots: !1, indexes: !1 }, !1, function (e, t) {
              return !K.isUndefined(t[e]);
            })).metaTokens,
            o = r.visitor || l,
            i = r.dots,
            n = r.indexes,
            s = (r.Blob || ('undefined' !== typeof Blob && Blob)) && K.isSpecCompliantForm(t);
          if (!K.isFunction(o)) throw new TypeError('visitor must be a function');
          function c(e) {
            if (null === e) return '';
            if (K.isDate(e)) return e.toISOString();
            if (!s && K.isBlob(e)) throw new Y('Blob is not supported. Use a Buffer instead.');
            return K.isArrayBuffer(e) || K.isTypedArray(e)
              ? s && 'function' === typeof Blob
                ? new Blob([e])
                : X.from(e)
              : e;
          }
          function l(e, r, o) {
            let s = e;
            if (e && !o && 'object' === typeof e)
              if (K.endsWith(r, '{}')) (r = a ? r : r.slice(0, -2)), (e = JSON.stringify(e));
              else if (
                (K.isArray(e) &&
                  (function (e) {
                    return K.isArray(e) && !e.some(J);
                  })(e)) ||
                ((K.isFileList(e) || K.endsWith(r, '[]')) && (s = K.toArray(e)))
              )
                return (
                  (r = Q(r)),
                  s.forEach(function (e, a) {
                    !K.isUndefined(e) &&
                      null !== e &&
                      t.append(!0 === n ? Z([r], a, i) : null === n ? r : r + '[]', c(e));
                  }),
                  !1
                );
            return !!J(e) || (t.append(Z(o, r, i), c(e)), !1);
          }
          const u = [],
            d = Object.assign(ee, { defaultVisitor: l, convertValue: c, isVisitable: J });
          if (!K.isObject(e)) throw new TypeError('data must be an object');
          return (
            (function e(r, a) {
              if (!K.isUndefined(r)) {
                if (-1 !== u.indexOf(r)) throw Error('Circular reference detected in ' + a.join('.'));
                u.push(r),
                  K.forEach(r, function (r, i) {
                    !0 === (!(K.isUndefined(r) || null === r) && o.call(t, r, K.isString(i) ? i.trim() : i, a, d)) &&
                      e(r, a ? a.concat(i) : [i]);
                  }),
                  u.pop();
              }
            })(e),
            t
          );
        };
        function re(e) {
          const t = { '!': '%21', "'": '%27', '(': '%28', ')': '%29', '~': '%7E', '%20': '+', '%00': '\0' };
          return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (e) {
            return t[e];
          });
        }
        function ae(e, t) {
          (this._pairs = []), e && te(e, this, t);
        }
        const oe = ae.prototype;
        (oe.append = function (e, t) {
          this._pairs.push([e, t]);
        }),
          (oe.toString = function (e) {
            const t = e
              ? function (t) {
                  return e.call(this, t, re);
                }
              : re;
            return this._pairs
              .map(function (e) {
                return t(e[0]) + '=' + t(e[1]);
              }, '')
              .join('&');
          });
        const ie = ae;
        function ne(e) {
          return encodeURIComponent(e)
            .replace(/%3A/gi, ':')
            .replace(/%24/g, '$')
            .replace(/%2C/gi, ',')
            .replace(/%20/g, '+')
            .replace(/%5B/gi, '[')
            .replace(/%5D/gi, ']');
        }
        function se(e, t, r) {
          if (!t) return e;
          const a = (r && r.encode) || ne,
            o = r && r.serialize;
          let i;
          if (((i = o ? o(t, r) : K.isURLSearchParams(t) ? t.toString() : new ie(t, r).toString(a)), i)) {
            const t = e.indexOf('#');
            -1 !== t && (e = e.slice(0, t)), (e += (-1 === e.indexOf('?') ? '?' : '&') + i);
          }
          return e;
        }
        const ce = class {
            constructor() {
              this.handlers = [];
            }
            use(e, t, r) {
              return (
                this.handlers.push({
                  fulfilled: e,
                  rejected: t,
                  synchronous: !!r && r.synchronous,
                  runWhen: r ? r.runWhen : null,
                }),
                this.handlers.length - 1
              );
            }
            eject(e) {
              this.handlers[e] && (this.handlers[e] = null);
            }
            clear() {
              this.handlers && (this.handlers = []);
            }
            forEach(e) {
              K.forEach(this.handlers, function (t) {
                null !== t && e(t);
              });
            }
          },
          le = { silentJSONParsing: !0, forcedJSONParsing: !0, clarifyTimeoutError: !1 },
          ue = {
            isBrowser: !0,
            classes: {
              URLSearchParams: 'undefined' !== typeof URLSearchParams ? URLSearchParams : ie,
              FormData: 'undefined' !== typeof FormData ? FormData : null,
              Blob: 'undefined' !== typeof Blob ? Blob : null,
            },
            protocols: ['http', 'https', 'file', 'blob', 'url', 'data'],
          },
          de = 'undefined' !== typeof window && 'undefined' !== typeof document,
          he = ('object' === typeof navigator && navigator) || void 0,
          fe = de && (!he || ['ReactNative', 'NativeScript', 'NS'].indexOf(he.product) < 0),
          pe =
            'undefined' !== typeof WorkerGlobalScope &&
            self instanceof WorkerGlobalScope &&
            'function' === typeof self.importScripts,
          be = (de && window.location.href) || 'http://localhost',
          me = { ...a, ...ue };
        const ge = function (e) {
          function t(e, r, a, o) {
            let i = e[o++];
            if ('__proto__' === i) return !0;
            const n = Number.isFinite(+i),
              s = o >= e.length;
            if (((i = !i && K.isArray(a) ? a.length : i), s))
              return K.hasOwnProp(a, i) ? (a[i] = [a[i], r]) : (a[i] = r), !n;
            (a[i] && K.isObject(a[i])) || (a[i] = []);
            return (
              t(e, r, a[i], o) &&
                K.isArray(a[i]) &&
                (a[i] = (function (e) {
                  const t = {},
                    r = Object.keys(e);
                  let a;
                  const o = r.length;
                  let i;
                  for (a = 0; a < o; a++) (i = r[a]), (t[i] = e[i]);
                  return t;
                })(a[i])),
              !n
            );
          }
          if (K.isFormData(e) && K.isFunction(e.entries)) {
            const r = {};
            return (
              K.forEachEntry(e, (e, a) => {
                t(
                  (function (e) {
                    return K.matchAll(/\w+|\[(\w*)]/g, e).map((e) => ('[]' === e[0] ? '' : e[1] || e[0]));
                  })(e),
                  a,
                  r,
                  0,
                );
              }),
              r
            );
          }
          return null;
        };
        const ve = {
          transitional: le,
          adapter: ['xhr', 'http', 'fetch'],
          transformRequest: [
            function (e, t) {
              const r = t.getContentType() || '',
                a = r.indexOf('application/json') > -1,
                o = K.isObject(e);
              o && K.isHTMLForm(e) && (e = new FormData(e));
              if (K.isFormData(e)) return a ? JSON.stringify(ge(e)) : e;
              if (
                K.isArrayBuffer(e) ||
                K.isBuffer(e) ||
                K.isStream(e) ||
                K.isFile(e) ||
                K.isBlob(e) ||
                K.isReadableStream(e)
              )
                return e;
              if (K.isArrayBufferView(e)) return e.buffer;
              if (K.isURLSearchParams(e))
                return t.setContentType('application/x-www-form-urlencoded;charset=utf-8', !1), e.toString();
              let i;
              if (o) {
                if (r.indexOf('application/x-www-form-urlencoded') > -1)
                  return (function (e, t) {
                    return te(
                      e,
                      new me.classes.URLSearchParams(),
                      Object.assign(
                        {
                          visitor: function (e, t, r, a) {
                            return me.isNode && K.isBuffer(e)
                              ? (this.append(t, e.toString('base64')), !1)
                              : a.defaultVisitor.apply(this, arguments);
                          },
                        },
                        t,
                      ),
                    );
                  })(e, this.formSerializer).toString();
                if ((i = K.isFileList(e)) || r.indexOf('multipart/form-data') > -1) {
                  const t = this.env && this.env.FormData;
                  return te(i ? { 'files[]': e } : e, t && new t(), this.formSerializer);
                }
              }
              return o || a
                ? (t.setContentType('application/json', !1),
                  (function (e, t, r) {
                    if (K.isString(e))
                      try {
                        return (t || JSON.parse)(e), K.trim(e);
                      } catch (a) {
                        if ('SyntaxError' !== a.name) throw a;
                      }
                    return (r || JSON.stringify)(e);
                  })(e))
                : e;
            },
          ],
          transformResponse: [
            function (e) {
              const t = this.transitional || ve.transitional,
                r = t && t.forcedJSONParsing,
                a = 'json' === this.responseType;
              if (K.isResponse(e) || K.isReadableStream(e)) return e;
              if (e && K.isString(e) && ((r && !this.responseType) || a)) {
                const r = !(t && t.silentJSONParsing) && a;
                try {
                  return JSON.parse(e);
                } catch (o) {
                  if (r) {
                    if ('SyntaxError' === o.name) throw Y.from(o, Y.ERR_BAD_RESPONSE, this, null, this.response);
                    throw o;
                  }
                }
              }
              return e;
            },
          ],
          timeout: 0,
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',
          maxContentLength: -1,
          maxBodyLength: -1,
          env: { FormData: me.classes.FormData, Blob: me.classes.Blob },
          validateStatus: function (e) {
            return e >= 200 && e < 300;
          },
          headers: { common: { Accept: 'application/json, text/plain, */*', 'Content-Type': void 0 } },
        };
        K.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (e) => {
          ve.headers[e] = {};
        });
        const ye = ve,
          we = K.toObjectSet([
            'age',
            'authorization',
            'content-length',
            'content-type',
            'etag',
            'expires',
            'from',
            'host',
            'if-modified-since',
            'if-unmodified-since',
            'last-modified',
            'location',
            'max-forwards',
            'proxy-authorization',
            'referer',
            'retry-after',
            'user-agent',
          ]),
          ke = Symbol('internals');
        function Ee(e) {
          return e && String(e).trim().toLowerCase();
        }
        function Se(e) {
          return !1 === e || null == e ? e : K.isArray(e) ? e.map(Se) : String(e);
        }
        function xe(e, t, r, a, o) {
          return K.isFunction(a)
            ? a.call(this, t, r)
            : (o && (t = r),
              K.isString(t) ? (K.isString(a) ? -1 !== t.indexOf(a) : K.isRegExp(a) ? a.test(t) : void 0) : void 0);
        }
        class _e {
          constructor(e) {
            e && this.set(e);
          }
          set(e, t, r) {
            const a = this;
            function o(e, t, r) {
              const o = Ee(t);
              if (!o) throw new Error('header name must be a non-empty string');
              const i = K.findKey(a, o);
              (!i || void 0 === a[i] || !0 === r || (void 0 === r && !1 !== a[i])) && (a[i || t] = Se(e));
            }
            const i = (e, t) => K.forEach(e, (e, r) => o(e, r, t));
            if (K.isPlainObject(e) || e instanceof this.constructor) i(e, t);
            else if (K.isString(e) && (e = e.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim()))
              i(
                ((e) => {
                  const t = {};
                  let r, a, o;
                  return (
                    e &&
                      e.split('\n').forEach(function (e) {
                        (o = e.indexOf(':')),
                          (r = e.substring(0, o).trim().toLowerCase()),
                          (a = e.substring(o + 1).trim()),
                          !r ||
                            (t[r] && we[r]) ||
                            ('set-cookie' === r
                              ? t[r]
                                ? t[r].push(a)
                                : (t[r] = [a])
                              : (t[r] = t[r] ? t[r] + ', ' + a : a));
                      }),
                    t
                  );
                })(e),
                t,
              );
            else if (K.isHeaders(e)) for (const [n, s] of e.entries()) o(s, n, r);
            else null != e && o(t, e, r);
            return this;
          }
          get(e, t) {
            if ((e = Ee(e))) {
              const r = K.findKey(this, e);
              if (r) {
                const e = this[r];
                if (!t) return e;
                if (!0 === t)
                  return (function (e) {
                    const t = Object.create(null),
                      r = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                    let a;
                    for (; (a = r.exec(e)); ) t[a[1]] = a[2];
                    return t;
                  })(e);
                if (K.isFunction(t)) return t.call(this, e, r);
                if (K.isRegExp(t)) return t.exec(e);
                throw new TypeError('parser must be boolean|regexp|function');
              }
            }
          }
          has(e, t) {
            if ((e = Ee(e))) {
              const r = K.findKey(this, e);
              return !(!r || void 0 === this[r] || (t && !xe(0, this[r], r, t)));
            }
            return !1;
          }
          delete(e, t) {
            const r = this;
            let a = !1;
            function o(e) {
              if ((e = Ee(e))) {
                const o = K.findKey(r, e);
                !o || (t && !xe(0, r[o], o, t)) || (delete r[o], (a = !0));
              }
            }
            return K.isArray(e) ? e.forEach(o) : o(e), a;
          }
          clear(e) {
            const t = Object.keys(this);
            let r = t.length,
              a = !1;
            for (; r--; ) {
              const o = t[r];
              (e && !xe(0, this[o], o, e, !0)) || (delete this[o], (a = !0));
            }
            return a;
          }
          normalize(e) {
            const t = this,
              r = {};
            return (
              K.forEach(this, (a, o) => {
                const i = K.findKey(r, o);
                if (i) return (t[i] = Se(a)), void delete t[o];
                const n = e
                  ? (function (e) {
                      return e
                        .trim()
                        .toLowerCase()
                        .replace(/([a-z\d])(\w*)/g, (e, t, r) => t.toUpperCase() + r);
                    })(o)
                  : String(o).trim();
                n !== o && delete t[o], (t[n] = Se(a)), (r[n] = !0);
              }),
              this
            );
          }
          concat() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
            return this.constructor.concat(this, ...t);
          }
          toJSON(e) {
            const t = Object.create(null);
            return (
              K.forEach(this, (r, a) => {
                null != r && !1 !== r && (t[a] = e && K.isArray(r) ? r.join(', ') : r);
              }),
              t
            );
          }
          [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
          }
          toString() {
            return Object.entries(this.toJSON())
              .map((e) => {
                let [t, r] = e;
                return t + ': ' + r;
              })
              .join('\n');
          }
          get [Symbol.toStringTag]() {
            return 'AxiosHeaders';
          }
          static from(e) {
            return e instanceof this ? e : new this(e);
          }
          static concat(e) {
            const t = new this(e);
            for (var r = arguments.length, a = new Array(r > 1 ? r - 1 : 0), o = 1; o < r; o++) a[o - 1] = arguments[o];
            return a.forEach((e) => t.set(e)), t;
          }
          static accessor(e) {
            const t = (this[ke] = this[ke] = { accessors: {} }).accessors,
              r = this.prototype;
            function a(e) {
              const a = Ee(e);
              t[a] ||
                (!(function (e, t) {
                  const r = K.toCamelCase(' ' + t);
                  ['get', 'set', 'has'].forEach((a) => {
                    Object.defineProperty(e, a + r, {
                      value: function (e, r, o) {
                        return this[a].call(this, t, e, r, o);
                      },
                      configurable: !0,
                    });
                  });
                })(r, e),
                (t[a] = !0));
            }
            return K.isArray(e) ? e.forEach(a) : a(e), this;
          }
        }
        _e.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']),
          K.reduceDescriptors(_e.prototype, (e, t) => {
            let { value: r } = e,
              a = t[0].toUpperCase() + t.slice(1);
            return {
              get: () => r,
              set(e) {
                this[a] = e;
              },
            };
          }),
          K.freezeMethods(_e);
        const Ae = _e;
        function Oe(e, t) {
          const r = this || ye,
            a = t || r,
            o = Ae.from(a.headers);
          let i = a.data;
          return (
            K.forEach(e, function (e) {
              i = e.call(r, i, o.normalize(), t ? t.status : void 0);
            }),
            o.normalize(),
            i
          );
        }
        function Pe(e) {
          return !(!e || !e.__CANCEL__);
        }
        function Ie(e, t, r) {
          Y.call(this, null == e ? 'canceled' : e, Y.ERR_CANCELED, t, r), (this.name = 'CanceledError');
        }
        K.inherits(Ie, Y, { __CANCEL__: !0 });
        const Be = Ie;
        function Ne(e, t, r) {
          const a = r.config.validateStatus;
          r.status && a && !a(r.status)
            ? t(
                new Y(
                  'Request failed with status code ' + r.status,
                  [Y.ERR_BAD_REQUEST, Y.ERR_BAD_RESPONSE][Math.floor(r.status / 100) - 4],
                  r.config,
                  r.request,
                  r,
                ),
              )
            : e(r);
        }
        const Te = function (e, t) {
          e = e || 10;
          const r = new Array(e),
            a = new Array(e);
          let o,
            i = 0,
            n = 0;
          return (
            (t = void 0 !== t ? t : 1e3),
            function (s) {
              const c = Date.now(),
                l = a[n];
              o || (o = c), (r[i] = s), (a[i] = c);
              let u = n,
                d = 0;
              for (; u !== i; ) (d += r[u++]), (u %= e);
              if (((i = (i + 1) % e), i === n && (n = (n + 1) % e), c - o < t)) return;
              const h = l && c - l;
              return h ? Math.round((1e3 * d) / h) : void 0;
            }
          );
        };
        const ze = function (e, t) {
            let r,
              a,
              o = 0,
              i = 1e3 / t;
            const n = function (t) {
              let i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Date.now();
              (o = i), (r = null), a && (clearTimeout(a), (a = null)), e.apply(null, t);
            };
            return [
              function () {
                const e = Date.now(),
                  t = e - o;
                for (var s = arguments.length, c = new Array(s), l = 0; l < s; l++) c[l] = arguments[l];
                t >= i
                  ? n(c, e)
                  : ((r = c),
                    a ||
                      (a = setTimeout(() => {
                        (a = null), n(r);
                      }, i - t)));
              },
              () => r && n(r),
            ];
          },
          Re = function (e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3,
              a = 0;
            const o = Te(50, 250);
            return ze((r) => {
              const i = r.loaded,
                n = r.lengthComputable ? r.total : void 0,
                s = i - a,
                c = o(s);
              a = i;
              e({
                loaded: i,
                total: n,
                progress: n ? i / n : void 0,
                bytes: s,
                rate: c || void 0,
                estimated: c && n && i <= n ? (n - i) / c : void 0,
                event: r,
                lengthComputable: null != n,
                [t ? 'download' : 'upload']: !0,
              });
            }, r);
          },
          Me = (e, t) => {
            const r = null != e;
            return [(a) => t[0]({ lengthComputable: r, total: e, loaded: a }), t[1]];
          },
          Fe = (e) =>
            function () {
              for (var t = arguments.length, r = new Array(t), a = 0; a < t; a++) r[a] = arguments[a];
              return K.asap(() => e(...r));
            },
          Ce = me.hasStandardBrowserEnv
            ? (function () {
                const e = me.navigator && /(msie|trident)/i.test(me.navigator.userAgent),
                  t = document.createElement('a');
                let r;
                function a(r) {
                  let a = r;
                  return (
                    e && (t.setAttribute('href', a), (a = t.href)),
                    t.setAttribute('href', a),
                    {
                      href: t.href,
                      protocol: t.protocol ? t.protocol.replace(/:$/, '') : '',
                      host: t.host,
                      search: t.search ? t.search.replace(/^\?/, '') : '',
                      hash: t.hash ? t.hash.replace(/^#/, '') : '',
                      hostname: t.hostname,
                      port: t.port,
                      pathname: '/' === t.pathname.charAt(0) ? t.pathname : '/' + t.pathname,
                    }
                  );
                }
                return (
                  (r = a(window.location.href)),
                  function (e) {
                    const t = K.isString(e) ? a(e) : e;
                    return t.protocol === r.protocol && t.host === r.host;
                  }
                );
              })()
            : function () {
                return !0;
              },
          je = me.hasStandardBrowserEnv
            ? {
                write(e, t, r, a, o, i) {
                  const n = [e + '=' + encodeURIComponent(t)];
                  K.isNumber(r) && n.push('expires=' + new Date(r).toGMTString()),
                    K.isString(a) && n.push('path=' + a),
                    K.isString(o) && n.push('domain=' + o),
                    !0 === i && n.push('secure'),
                    (document.cookie = n.join('; '));
                },
                read(e) {
                  const t = document.cookie.match(new RegExp('(^|;\\s*)(' + e + ')=([^;]*)'));
                  return t ? decodeURIComponent(t[3]) : null;
                },
                remove(e) {
                  this.write(e, '', Date.now() - 864e5);
                },
              }
            : { write() {}, read: () => null, remove() {} };
        function Ue(e, t) {
          return e && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)
            ? (function (e, t) {
                return t ? e.replace(/\/?\/$/, '') + '/' + t.replace(/^\/+/, '') : e;
              })(e, t)
            : t;
        }
        const De = (e) => (e instanceof Ae ? { ...e } : e);
        function Le(e, t) {
          t = t || {};
          const r = {};
          function a(e, t, r) {
            return K.isPlainObject(e) && K.isPlainObject(t)
              ? K.merge.call({ caseless: r }, e, t)
              : K.isPlainObject(t)
                ? K.merge({}, t)
                : K.isArray(t)
                  ? t.slice()
                  : t;
          }
          function o(e, t, r) {
            return K.isUndefined(t) ? (K.isUndefined(e) ? void 0 : a(void 0, e, r)) : a(e, t, r);
          }
          function i(e, t) {
            if (!K.isUndefined(t)) return a(void 0, t);
          }
          function n(e, t) {
            return K.isUndefined(t) ? (K.isUndefined(e) ? void 0 : a(void 0, e)) : a(void 0, t);
          }
          function s(r, o, i) {
            return i in t ? a(r, o) : i in e ? a(void 0, r) : void 0;
          }
          const c = {
            url: i,
            method: i,
            data: i,
            baseURL: n,
            transformRequest: n,
            transformResponse: n,
            paramsSerializer: n,
            timeout: n,
            timeoutMessage: n,
            withCredentials: n,
            withXSRFToken: n,
            adapter: n,
            responseType: n,
            xsrfCookieName: n,
            xsrfHeaderName: n,
            onUploadProgress: n,
            onDownloadProgress: n,
            decompress: n,
            maxContentLength: n,
            maxBodyLength: n,
            beforeRedirect: n,
            transport: n,
            httpAgent: n,
            httpsAgent: n,
            cancelToken: n,
            socketPath: n,
            responseEncoding: n,
            validateStatus: s,
            headers: (e, t) => o(De(e), De(t), !0),
          };
          return (
            K.forEach(Object.keys(Object.assign({}, e, t)), function (a) {
              const i = c[a] || o,
                n = i(e[a], t[a], a);
              (K.isUndefined(n) && i !== s) || (r[a] = n);
            }),
            r
          );
        }
        const qe = (e) => {
            const t = Le({}, e);
            let r,
              { data: a, withXSRFToken: o, xsrfHeaderName: i, xsrfCookieName: n, headers: s, auth: c } = t;
            if (
              ((t.headers = s = Ae.from(s)),
              (t.url = se(Ue(t.baseURL, t.url), e.params, e.paramsSerializer)),
              c &&
                s.set(
                  'Authorization',
                  'Basic ' +
                    btoa((c.username || '') + ':' + (c.password ? unescape(encodeURIComponent(c.password)) : '')),
                ),
              K.isFormData(a))
            )
              if (me.hasStandardBrowserEnv || me.hasStandardBrowserWebWorkerEnv) s.setContentType(void 0);
              else if (!1 !== (r = s.getContentType())) {
                const [e, ...t] = r
                  ? r
                      .split(';')
                      .map((e) => e.trim())
                      .filter(Boolean)
                  : [];
                s.setContentType([e || 'multipart/form-data', ...t].join('; '));
              }
            if (me.hasStandardBrowserEnv && (o && K.isFunction(o) && (o = o(t)), o || (!1 !== o && Ce(t.url)))) {
              const e = i && n && je.read(n);
              e && s.set(i, e);
            }
            return t;
          },
          He =
            'undefined' !== typeof XMLHttpRequest &&
            function (e) {
              return new Promise(function (t, r) {
                const a = qe(e);
                let o = a.data;
                const i = Ae.from(a.headers).normalize();
                let n,
                  s,
                  c,
                  l,
                  u,
                  { responseType: d, onUploadProgress: h, onDownloadProgress: f } = a;
                function p() {
                  l && l(),
                    u && u(),
                    a.cancelToken && a.cancelToken.unsubscribe(n),
                    a.signal && a.signal.removeEventListener('abort', n);
                }
                let b = new XMLHttpRequest();
                function m() {
                  if (!b) return;
                  const a = Ae.from('getAllResponseHeaders' in b && b.getAllResponseHeaders());
                  Ne(
                    function (e) {
                      t(e), p();
                    },
                    function (e) {
                      r(e), p();
                    },
                    {
                      data: d && 'text' !== d && 'json' !== d ? b.response : b.responseText,
                      status: b.status,
                      statusText: b.statusText,
                      headers: a,
                      config: e,
                      request: b,
                    },
                  ),
                    (b = null);
                }
                b.open(a.method.toUpperCase(), a.url, !0),
                  (b.timeout = a.timeout),
                  'onloadend' in b
                    ? (b.onloadend = m)
                    : (b.onreadystatechange = function () {
                        b &&
                          4 === b.readyState &&
                          (0 !== b.status || (b.responseURL && 0 === b.responseURL.indexOf('file:'))) &&
                          setTimeout(m);
                      }),
                  (b.onabort = function () {
                    b && (r(new Y('Request aborted', Y.ECONNABORTED, e, b)), (b = null));
                  }),
                  (b.onerror = function () {
                    r(new Y('Network Error', Y.ERR_NETWORK, e, b)), (b = null);
                  }),
                  (b.ontimeout = function () {
                    let t = a.timeout ? 'timeout of ' + a.timeout + 'ms exceeded' : 'timeout exceeded';
                    const o = a.transitional || le;
                    a.timeoutErrorMessage && (t = a.timeoutErrorMessage),
                      r(new Y(t, o.clarifyTimeoutError ? Y.ETIMEDOUT : Y.ECONNABORTED, e, b)),
                      (b = null);
                  }),
                  void 0 === o && i.setContentType(null),
                  'setRequestHeader' in b &&
                    K.forEach(i.toJSON(), function (e, t) {
                      b.setRequestHeader(t, e);
                    }),
                  K.isUndefined(a.withCredentials) || (b.withCredentials = !!a.withCredentials),
                  d && 'json' !== d && (b.responseType = a.responseType),
                  f && (([c, u] = Re(f, !0)), b.addEventListener('progress', c)),
                  h &&
                    b.upload &&
                    (([s, l] = Re(h)),
                    b.upload.addEventListener('progress', s),
                    b.upload.addEventListener('loadend', l)),
                  (a.cancelToken || a.signal) &&
                    ((n = (t) => {
                      b && (r(!t || t.type ? new Be(null, e, b) : t), b.abort(), (b = null));
                    }),
                    a.cancelToken && a.cancelToken.subscribe(n),
                    a.signal && (a.signal.aborted ? n() : a.signal.addEventListener('abort', n)));
                const g = (function (e) {
                  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
                  return (t && t[1]) || '';
                })(a.url);
                g && -1 === me.protocols.indexOf(g)
                  ? r(new Y('Unsupported protocol ' + g + ':', Y.ERR_BAD_REQUEST, e))
                  : b.send(o || null);
              });
            },
          Ge = (e, t) => {
            const { length: r } = (e = e ? e.filter(Boolean) : []);
            if (t || r) {
              let r,
                a = new AbortController();
              const o = function (e) {
                if (!r) {
                  (r = !0), n();
                  const t = e instanceof Error ? e : this.reason;
                  a.abort(t instanceof Y ? t : new Be(t instanceof Error ? t.message : t));
                }
              };
              let i =
                t &&
                setTimeout(() => {
                  (i = null), o(new Y(`timeout ${t} of ms exceeded`, Y.ETIMEDOUT));
                }, t);
              const n = () => {
                e &&
                  (i && clearTimeout(i),
                  (i = null),
                  e.forEach((e) => {
                    e.unsubscribe ? e.unsubscribe(o) : e.removeEventListener('abort', o);
                  }),
                  (e = null));
              };
              e.forEach((e) => e.addEventListener('abort', o));
              const { signal: s } = a;
              return (s.unsubscribe = () => K.asap(n)), s;
            }
          },
          Ke = function* (e, t) {
            let r = e.byteLength;
            if (!t || r < t) return void (yield e);
            let a,
              o = 0;
            for (; o < r; ) (a = o + t), yield e.slice(o, a), (o = a);
          },
          Ve = async function* (e) {
            if (e[Symbol.asyncIterator]) return void (yield* e);
            const t = e.getReader();
            try {
              for (;;) {
                const { done: e, value: r } = await t.read();
                if (e) break;
                yield r;
              }
            } finally {
              await t.cancel();
            }
          },
          $e = (e, t, r, a) => {
            const o = (async function* (e, t) {
              for await (const r of Ve(e)) yield* Ke(r, t);
            })(e, t);
            let i,
              n = 0,
              s = (e) => {
                i || ((i = !0), a && a(e));
              };
            return new ReadableStream(
              {
                async pull(e) {
                  try {
                    const { done: t, value: a } = await o.next();
                    if (t) return s(), void e.close();
                    let i = a.byteLength;
                    if (r) {
                      let e = (n += i);
                      r(e);
                    }
                    e.enqueue(new Uint8Array(a));
                  } catch (t) {
                    throw (s(t), t);
                  }
                },
                cancel: (e) => (s(e), o.return()),
              },
              { highWaterMark: 2 },
            );
          },
          We = 'function' === typeof fetch && 'function' === typeof Request && 'function' === typeof Response,
          Ye = We && 'function' === typeof ReadableStream,
          Xe =
            We &&
            ('function' === typeof TextEncoder
              ? ((Je = new TextEncoder()), (e) => Je.encode(e))
              : async (e) => new Uint8Array(await new Response(e).arrayBuffer()));
        var Je;
        const Qe = function (e) {
            try {
              for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
                r[a - 1] = arguments[a];
              return !!e(...r);
            } catch (o) {
              return !1;
            }
          },
          Ze =
            Ye &&
            Qe(() => {
              let e = !1;
              const t = new Request(me.origin, {
                body: new ReadableStream(),
                method: 'POST',
                get duplex() {
                  return (e = !0), 'half';
                },
              }).headers.has('Content-Type');
              return e && !t;
            }),
          et = Ye && Qe(() => K.isReadableStream(new Response('').body)),
          tt = { stream: et && ((e) => e.body) };
        var rt;
        We &&
          ((rt = new Response()),
          ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach((e) => {
            !tt[e] &&
              (tt[e] = K.isFunction(rt[e])
                ? (t) => t[e]()
                : (t, r) => {
                    throw new Y(`Response type '${e}' is not supported`, Y.ERR_NOT_SUPPORT, r);
                  });
          }));
        const at = async (e, t) => {
            const r = K.toFiniteNumber(e.getContentLength());
            return null == r
              ? (async (e) => {
                  if (null == e) return 0;
                  if (K.isBlob(e)) return e.size;
                  if (K.isSpecCompliantForm(e)) {
                    const t = new Request(me.origin, { method: 'POST', body: e });
                    return (await t.arrayBuffer()).byteLength;
                  }
                  return K.isArrayBufferView(e) || K.isArrayBuffer(e)
                    ? e.byteLength
                    : (K.isURLSearchParams(e) && (e += ''), K.isString(e) ? (await Xe(e)).byteLength : void 0);
                })(t)
              : r;
          },
          ot = {
            http: null,
            xhr: He,
            fetch:
              We &&
              (async (e) => {
                let {
                  url: t,
                  method: r,
                  data: a,
                  signal: o,
                  cancelToken: i,
                  timeout: n,
                  onDownloadProgress: s,
                  onUploadProgress: c,
                  responseType: l,
                  headers: u,
                  withCredentials: d = 'same-origin',
                  fetchOptions: h,
                } = qe(e);
                l = l ? (l + '').toLowerCase() : 'text';
                let f,
                  p = Ge([o, i && i.toAbortSignal()], n);
                const b =
                  p &&
                  p.unsubscribe &&
                  (() => {
                    p.unsubscribe();
                  });
                let m;
                try {
                  if (c && Ze && 'get' !== r && 'head' !== r && 0 !== (m = await at(u, a))) {
                    let e,
                      r = new Request(t, { method: 'POST', body: a, duplex: 'half' });
                    if ((K.isFormData(a) && (e = r.headers.get('content-type')) && u.setContentType(e), r.body)) {
                      const [e, t] = Me(m, Re(Fe(c)));
                      a = $e(r.body, 65536, e, t);
                    }
                  }
                  K.isString(d) || (d = d ? 'include' : 'omit');
                  const o = 'credentials' in Request.prototype;
                  f = new Request(t, {
                    ...h,
                    signal: p,
                    method: r.toUpperCase(),
                    headers: u.normalize().toJSON(),
                    body: a,
                    duplex: 'half',
                    credentials: o ? d : void 0,
                  });
                  let i = await fetch(f);
                  const n = et && ('stream' === l || 'response' === l);
                  if (et && (s || (n && b))) {
                    const e = {};
                    ['status', 'statusText', 'headers'].forEach((t) => {
                      e[t] = i[t];
                    });
                    const t = K.toFiniteNumber(i.headers.get('content-length')),
                      [r, a] = (s && Me(t, Re(Fe(s), !0))) || [];
                    i = new Response(
                      $e(i.body, 65536, r, () => {
                        a && a(), b && b();
                      }),
                      e,
                    );
                  }
                  l = l || 'text';
                  let g = await tt[K.findKey(tt, l) || 'text'](i, e);
                  return (
                    !n && b && b(),
                    await new Promise((t, r) => {
                      Ne(t, r, {
                        data: g,
                        headers: Ae.from(i.headers),
                        status: i.status,
                        statusText: i.statusText,
                        config: e,
                        request: f,
                      });
                    })
                  );
                } catch (g) {
                  if ((b && b(), g && 'TypeError' === g.name && /fetch/i.test(g.message)))
                    throw Object.assign(new Y('Network Error', Y.ERR_NETWORK, e, f), { cause: g.cause || g });
                  throw Y.from(g, g && g.code, e, f);
                }
              }),
          };
        K.forEach(ot, (e, t) => {
          if (e) {
            try {
              Object.defineProperty(e, 'name', { value: t });
            } catch (r) {}
            Object.defineProperty(e, 'adapterName', { value: t });
          }
        });
        const it = (e) => `- ${e}`,
          nt = (e) => K.isFunction(e) || null === e || !1 === e,
          st = (e) => {
            e = K.isArray(e) ? e : [e];
            const { length: t } = e;
            let r, a;
            const o = {};
            for (let i = 0; i < t; i++) {
              let t;
              if (((r = e[i]), (a = r), !nt(r) && ((a = ot[(t = String(r)).toLowerCase()]), void 0 === a)))
                throw new Y(`Unknown adapter '${t}'`);
              if (a) break;
              o[t || '#' + i] = a;
            }
            if (!a) {
              const e = Object.entries(o).map((e) => {
                let [t, r] = e;
                return (
                  `adapter ${t} ` + (!1 === r ? 'is not supported by the environment' : 'is not available in the build')
                );
              });
              let r = t
                ? e.length > 1
                  ? 'since :\n' + e.map(it).join('\n')
                  : ' ' + it(e[0])
                : 'as no adapter specified';
              throw new Y('There is no suitable adapter to dispatch the request ' + r, 'ERR_NOT_SUPPORT');
            }
            return a;
          };
        function ct(e) {
          if ((e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)) throw new Be(null, e);
        }
        function lt(e) {
          ct(e),
            (e.headers = Ae.from(e.headers)),
            (e.data = Oe.call(e, e.transformRequest)),
            -1 !== ['post', 'put', 'patch'].indexOf(e.method) &&
              e.headers.setContentType('application/x-www-form-urlencoded', !1);
          return st(e.adapter || ye.adapter)(e).then(
            function (t) {
              return ct(e), (t.data = Oe.call(e, e.transformResponse, t)), (t.headers = Ae.from(t.headers)), t;
            },
            function (t) {
              return (
                Pe(t) ||
                  (ct(e),
                  t &&
                    t.response &&
                    ((t.response.data = Oe.call(e, e.transformResponse, t.response)),
                    (t.response.headers = Ae.from(t.response.headers)))),
                Promise.reject(t)
              );
            },
          );
        }
        const ut = '1.7.7',
          dt = {};
        ['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((e, t) => {
          dt[e] = function (r) {
            return typeof r === e || 'a' + (t < 1 ? 'n ' : ' ') + e;
          };
        });
        const ht = {};
        dt.transitional = function (e, t, r) {
          function a(e, t) {
            return "[Axios v1.7.7] Transitional option '" + e + "'" + t + (r ? '. ' + r : '');
          }
          return (r, o, i) => {
            if (!1 === e) throw new Y(a(o, ' has been removed' + (t ? ' in ' + t : '')), Y.ERR_DEPRECATED);
            return (
              t &&
                !ht[o] &&
                ((ht[o] = !0),
                console.warn(a(o, ' has been deprecated since v' + t + ' and will be removed in the near future'))),
              !e || e(r, o, i)
            );
          };
        };
        const ft = {
            assertOptions: function (e, t, r) {
              if ('object' !== typeof e) throw new Y('options must be an object', Y.ERR_BAD_OPTION_VALUE);
              const a = Object.keys(e);
              let o = a.length;
              for (; o-- > 0; ) {
                const i = a[o],
                  n = t[i];
                if (n) {
                  const t = e[i],
                    r = void 0 === t || n(t, i, e);
                  if (!0 !== r) throw new Y('option ' + i + ' must be ' + r, Y.ERR_BAD_OPTION_VALUE);
                } else if (!0 !== r) throw new Y('Unknown option ' + i, Y.ERR_BAD_OPTION);
              }
            },
            validators: dt,
          },
          pt = ft.validators;
        class bt {
          constructor(e) {
            (this.defaults = e), (this.interceptors = { request: new ce(), response: new ce() });
          }
          async request(e, t) {
            try {
              return await this._request(e, t);
            } catch (r) {
              if (r instanceof Error) {
                let e;
                Error.captureStackTrace ? Error.captureStackTrace((e = {})) : (e = new Error());
                const t = e.stack ? e.stack.replace(/^.+\n/, '') : '';
                try {
                  r.stack
                    ? t && !String(r.stack).endsWith(t.replace(/^.+\n.+\n/, '')) && (r.stack += '\n' + t)
                    : (r.stack = t);
                } catch (a) {}
              }
              throw r;
            }
          }
          _request(e, t) {
            'string' === typeof e ? ((t = t || {}).url = e) : (t = e || {}), (t = Le(this.defaults, t));
            const { transitional: r, paramsSerializer: a, headers: o } = t;
            void 0 !== r &&
              ft.assertOptions(
                r,
                {
                  silentJSONParsing: pt.transitional(pt.boolean),
                  forcedJSONParsing: pt.transitional(pt.boolean),
                  clarifyTimeoutError: pt.transitional(pt.boolean),
                },
                !1,
              ),
              null != a &&
                (K.isFunction(a)
                  ? (t.paramsSerializer = { serialize: a })
                  : ft.assertOptions(a, { encode: pt.function, serialize: pt.function }, !0)),
              (t.method = (t.method || this.defaults.method || 'get').toLowerCase());
            let i = o && K.merge(o.common, o[t.method]);
            o &&
              K.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], (e) => {
                delete o[e];
              }),
              (t.headers = Ae.concat(i, o));
            const n = [];
            let s = !0;
            this.interceptors.request.forEach(function (e) {
              ('function' === typeof e.runWhen && !1 === e.runWhen(t)) ||
                ((s = s && e.synchronous), n.unshift(e.fulfilled, e.rejected));
            });
            const c = [];
            let l;
            this.interceptors.response.forEach(function (e) {
              c.push(e.fulfilled, e.rejected);
            });
            let u,
              d = 0;
            if (!s) {
              const e = [lt.bind(this), void 0];
              for (e.unshift.apply(e, n), e.push.apply(e, c), u = e.length, l = Promise.resolve(t); d < u; )
                l = l.then(e[d++], e[d++]);
              return l;
            }
            u = n.length;
            let h = t;
            for (d = 0; d < u; ) {
              const e = n[d++],
                t = n[d++];
              try {
                h = e(h);
              } catch (f) {
                t.call(this, f);
                break;
              }
            }
            try {
              l = lt.call(this, h);
            } catch (f) {
              return Promise.reject(f);
            }
            for (d = 0, u = c.length; d < u; ) l = l.then(c[d++], c[d++]);
            return l;
          }
          getUri(e) {
            return se(Ue((e = Le(this.defaults, e)).baseURL, e.url), e.params, e.paramsSerializer);
          }
        }
        K.forEach(['delete', 'get', 'head', 'options'], function (e) {
          bt.prototype[e] = function (t, r) {
            return this.request(Le(r || {}, { method: e, url: t, data: (r || {}).data }));
          };
        }),
          K.forEach(['post', 'put', 'patch'], function (e) {
            function t(t) {
              return function (r, a, o) {
                return this.request(
                  Le(o || {}, {
                    method: e,
                    headers: t ? { 'Content-Type': 'multipart/form-data' } : {},
                    url: r,
                    data: a,
                  }),
                );
              };
            }
            (bt.prototype[e] = t()), (bt.prototype[e + 'Form'] = t(!0));
          });
        const mt = bt;
        class gt {
          constructor(e) {
            if ('function' !== typeof e) throw new TypeError('executor must be a function.');
            let t;
            this.promise = new Promise(function (e) {
              t = e;
            });
            const r = this;
            this.promise.then((e) => {
              if (!r._listeners) return;
              let t = r._listeners.length;
              for (; t-- > 0; ) r._listeners[t](e);
              r._listeners = null;
            }),
              (this.promise.then = (e) => {
                let t;
                const a = new Promise((e) => {
                  r.subscribe(e), (t = e);
                }).then(e);
                return (
                  (a.cancel = function () {
                    r.unsubscribe(t);
                  }),
                  a
                );
              }),
              e(function (e, a, o) {
                r.reason || ((r.reason = new Be(e, a, o)), t(r.reason));
              });
          }
          throwIfRequested() {
            if (this.reason) throw this.reason;
          }
          subscribe(e) {
            this.reason ? e(this.reason) : this._listeners ? this._listeners.push(e) : (this._listeners = [e]);
          }
          unsubscribe(e) {
            if (!this._listeners) return;
            const t = this._listeners.indexOf(e);
            -1 !== t && this._listeners.splice(t, 1);
          }
          toAbortSignal() {
            const e = new AbortController(),
              t = (t) => {
                e.abort(t);
              };
            return this.subscribe(t), (e.signal.unsubscribe = () => this.unsubscribe(t)), e.signal;
          }
          static source() {
            let e;
            return {
              token: new gt(function (t) {
                e = t;
              }),
              cancel: e,
            };
          }
        }
        const vt = gt;
        const yt = {
          Continue: 100,
          SwitchingProtocols: 101,
          Processing: 102,
          EarlyHints: 103,
          Ok: 200,
          Created: 201,
          Accepted: 202,
          NonAuthoritativeInformation: 203,
          NoContent: 204,
          ResetContent: 205,
          PartialContent: 206,
          MultiStatus: 207,
          AlreadyReported: 208,
          ImUsed: 226,
          MultipleChoices: 300,
          MovedPermanently: 301,
          Found: 302,
          SeeOther: 303,
          NotModified: 304,
          UseProxy: 305,
          Unused: 306,
          TemporaryRedirect: 307,
          PermanentRedirect: 308,
          BadRequest: 400,
          Unauthorized: 401,
          PaymentRequired: 402,
          Forbidden: 403,
          NotFound: 404,
          MethodNotAllowed: 405,
          NotAcceptable: 406,
          ProxyAuthenticationRequired: 407,
          RequestTimeout: 408,
          Conflict: 409,
          Gone: 410,
          LengthRequired: 411,
          PreconditionFailed: 412,
          PayloadTooLarge: 413,
          UriTooLong: 414,
          UnsupportedMediaType: 415,
          RangeNotSatisfiable: 416,
          ExpectationFailed: 417,
          ImATeapot: 418,
          MisdirectedRequest: 421,
          UnprocessableEntity: 422,
          Locked: 423,
          FailedDependency: 424,
          TooEarly: 425,
          UpgradeRequired: 426,
          PreconditionRequired: 428,
          TooManyRequests: 429,
          RequestHeaderFieldsTooLarge: 431,
          UnavailableForLegalReasons: 451,
          InternalServerError: 500,
          NotImplemented: 501,
          BadGateway: 502,
          ServiceUnavailable: 503,
          GatewayTimeout: 504,
          HttpVersionNotSupported: 505,
          VariantAlsoNegotiates: 506,
          InsufficientStorage: 507,
          LoopDetected: 508,
          NotExtended: 510,
          NetworkAuthenticationRequired: 511,
        };
        Object.entries(yt).forEach((e) => {
          let [t, r] = e;
          yt[r] = t;
        });
        const wt = yt;
        const kt = (function e(t) {
          const r = new mt(t),
            a = o(mt.prototype.request, r);
          return (
            K.extend(a, mt.prototype, r, { allOwnKeys: !0 }),
            K.extend(a, r, null, { allOwnKeys: !0 }),
            (a.create = function (r) {
              return e(Le(t, r));
            }),
            a
          );
        })(ye);
        (kt.Axios = mt),
          (kt.CanceledError = Be),
          (kt.CancelToken = vt),
          (kt.isCancel = Pe),
          (kt.VERSION = ut),
          (kt.toFormData = te),
          (kt.AxiosError = Y),
          (kt.Cancel = kt.CanceledError),
          (kt.all = function (e) {
            return Promise.all(e);
          }),
          (kt.spread = function (e) {
            return function (t) {
              return e.apply(null, t);
            };
          }),
          (kt.isAxiosError = function (e) {
            return K.isObject(e) && !0 === e.isAxiosError;
          }),
          (kt.mergeConfig = Le),
          (kt.AxiosHeaders = Ae),
          (kt.formToJSON = (e) => ge(K.isHTMLForm(e) ? new FormData(e) : e)),
          (kt.getAdapter = st),
          (kt.HttpStatusCode = wt),
          (kt.default = kt);
        const Et = kt;
      },
      4292: (e, t, r) => {
        'use strict';
        r.d(t, {
          r9: () => ce,
          w9: () => de,
          l2: () => he,
          kd: () => C,
          _w: () => pe,
          nH: () => ee,
          KG: () => fe,
          kV: () => te,
          ay: () => Ne,
          Uk: () => ke,
          ih: () => me,
          BN: () => ge,
          Wg: () => H,
          m7: () => U,
        });
        var a = r(3286);
        const o = (e, t) => t.some((t) => e instanceof t);
        let i, n;
        const s = new WeakMap(),
          c = new WeakMap(),
          l = new WeakMap();
        let u = {
          get(e, t, r) {
            if (e instanceof IDBTransaction) {
              if ('done' === t) return s.get(e);
              if ('store' === t) return r.objectStoreNames[1] ? void 0 : r.objectStore(r.objectStoreNames[0]);
            }
            return p(e[t]);
          },
          set: (e, t, r) => ((e[t] = r), !0),
          has: (e, t) => (e instanceof IDBTransaction && ('done' === t || 'store' === t)) || t in e,
        };
        function d(e) {
          u = e(u);
        }
        function h(e) {
          return (
            n ||
            (n = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey])
          ).includes(e)
            ? function () {
                for (var t = arguments.length, r = new Array(t), a = 0; a < t; a++) r[a] = arguments[a];
                return e.apply(b(this), r), p(this.request);
              }
            : function () {
                for (var t = arguments.length, r = new Array(t), a = 0; a < t; a++) r[a] = arguments[a];
                return p(e.apply(b(this), r));
              };
        }
        function f(e) {
          return 'function' === typeof e
            ? h(e)
            : (e instanceof IDBTransaction &&
                (function (e) {
                  if (s.has(e)) return;
                  const t = new Promise((t, r) => {
                    const a = () => {
                        e.removeEventListener('complete', o),
                          e.removeEventListener('error', i),
                          e.removeEventListener('abort', i);
                      },
                      o = () => {
                        t(), a();
                      },
                      i = () => {
                        r(e.error || new DOMException('AbortError', 'AbortError')), a();
                      };
                    e.addEventListener('complete', o), e.addEventListener('error', i), e.addEventListener('abort', i);
                  });
                  s.set(e, t);
                })(e),
              o(e, i || (i = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]))
                ? new Proxy(e, u)
                : e);
        }
        function p(e) {
          if (e instanceof IDBRequest)
            return (function (e) {
              const t = new Promise((t, r) => {
                const a = () => {
                    e.removeEventListener('success', o), e.removeEventListener('error', i);
                  },
                  o = () => {
                    t(p(e.result)), a();
                  },
                  i = () => {
                    r(e.error), a();
                  };
                e.addEventListener('success', o), e.addEventListener('error', i);
              });
              return l.set(t, e), t;
            })(e);
          if (c.has(e)) return c.get(e);
          const t = f(e);
          return t !== e && (c.set(e, t), l.set(t, e)), t;
        }
        const b = (e) => l.get(e);
        function m(e, t) {
          let {
            blocked: r,
            upgrade: a,
            blocking: o,
            terminated: i,
          } = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          const n = indexedDB.open(e, t),
            s = p(n);
          return (
            a &&
              n.addEventListener('upgradeneeded', (e) => {
                a(p(n.result), e.oldVersion, e.newVersion, p(n.transaction), e);
              }),
            r && n.addEventListener('blocked', (e) => r(e.oldVersion, e.newVersion, e)),
            s
              .then((e) => {
                i && e.addEventListener('close', () => i()),
                  o && e.addEventListener('versionchange', (e) => o(e.oldVersion, e.newVersion, e));
              })
              .catch(() => {}),
            s
          );
        }
        const g = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'],
          v = ['put', 'add', 'delete', 'clear'],
          y = new Map();
        function w(e, t) {
          if (!(e instanceof IDBDatabase) || t in e || 'string' !== typeof t) return;
          if (y.get(t)) return y.get(t);
          const r = t.replace(/FromIndex$/, ''),
            a = t !== r,
            o = v.includes(r);
          if (!(r in (a ? IDBIndex : IDBObjectStore).prototype) || (!o && !g.includes(r))) return;
          const i = async function (e) {
            const t = this.transaction(e, o ? 'readwrite' : 'readonly');
            let i = t.store;
            for (var n = arguments.length, s = new Array(n > 1 ? n - 1 : 0), c = 1; c < n; c++) s[c - 1] = arguments[c];
            return a && (i = i.index(s.shift())), (await Promise.all([i[r](...s), o && t.done]))[0];
          };
          return y.set(t, i), i;
        }
        d((e) => ({ ...e, get: (t, r, a) => w(t, r) || e.get(t, r, a), has: (t, r) => !!w(t, r) || e.has(t, r) }));
        const k = ['continue', 'continuePrimaryKey', 'advance'],
          E = {},
          S = new WeakMap(),
          x = new WeakMap(),
          _ = {
            get(e, t) {
              if (!k.includes(t)) return e[t];
              let r = E[t];
              return (
                r ||
                  (r = E[t] =
                    function () {
                      S.set(this, x.get(this)[t](...arguments));
                    }),
                r
              );
            },
          };
        async function* A() {
          let e = this;
          if ((e instanceof IDBCursor || (e = await e.openCursor(...arguments)), !e)) return;
          const t = new Proxy(e, _);
          for (x.set(t, e), l.set(t, b(e)); e; ) yield t, (e = await (S.get(t) || e.continue())), S.delete(t);
        }
        function O(e, t) {
          return (
            (t === Symbol.asyncIterator && o(e, [IDBIndex, IDBObjectStore, IDBCursor])) ||
            ('iterate' === t && o(e, [IDBIndex, IDBObjectStore]))
          );
        }
        d((e) => ({ ...e, get: (t, r, a) => (O(t, r) ? A : e.get(t, r, a)), has: (t, r) => O(t, r) || e.has(t, r) }));
        var P,
          I,
          B = r(6382).hp;
        function N(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'mainnet';
          var o, i, n, s, c;
          return (null == (o = e.chunks[0 + t]) ? void 0 : o.op) != a.OP.OP_DUP ||
            (null == (i = e.chunks[1 + t]) ? void 0 : i.op) != a.OP.OP_HASH160 ||
            20 != (null == (n = e.chunks[2 + t]) || null == (n = n.data) ? void 0 : n.length) ||
            (null == (s = e.chunks[3 + t]) ? void 0 : s.op) != a.OP.OP_EQUALVERIFY ||
            (null == (c = e.chunks[4 + t]) ? void 0 : c.op) != a.OP.OP_CHECKSIG
            ? ''
            : a.Aq.toBase58Check(e.chunks[2 + t].data, 'mainnet' == r ? [0] : [111]);
        }
        ((I = P || (P = {}))[(I.REJECTED = -1)] = 'REJECTED'),
          (I[(I.MEMPOOL = 0)] = 'MEMPOOL'),
          (I[(I.BROADCASTED = 1)] = 'BROADCASTED'),
          (I[(I.CONFIRMED = 2)] = 'CONFIRMED');
        function T(e, t) {
          e.writeUInt32LE(t.height),
            e.write(a.Aq.toArray(t.hash, 'hex')),
            e.writeUInt32LE(t.version),
            e.write(a.Aq.toArray(t.prevHash, 'hex').reverse()),
            e.write(a.Aq.toArray(t.merkleroot, 'hex').reverse()),
            e.writeUInt32LE(t.time),
            e.write(a.Aq.toArray(t.bits, 'hex')),
            e.writeUInt32LE(t.nonce);
        }
        function z(e) {
          return {
            height: e.readUInt32LE(),
            hash: a.Aq.toHex(e.read(32)),
            version: e.readUInt32LE(),
            prevHash: a.Aq.toHex(e.read(32).reverse()),
            merkleroot: a.Aq.toHex(e.read(32).reverse()),
            time: e.readUInt32LE(),
            bits: a.Aq.toHex(e.read(4)),
            nonce: e.readUInt32LE(),
          };
        }
        class R {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Date.now(),
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0n;
            (this.height = void 0), (this.idx = void 0), (this.height = e), (this.idx = t);
          }
        }
        class M {
          constructor(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
            (this.data = void 0),
              (this.events = void 0),
              (this.deps = void 0),
              (this.data = e),
              (this.events = t),
              (this.deps = r);
          }
        }
        var F, C, j, U, D;
        !(function (e) {
          (e[(e.Preview = 0)] = 'Preview'),
            (e[(e.Dependency = 1)] = 'Dependency'),
            (e[(e.Persist = 2)] = 'Persist'),
            (e[(e.Deep = 3)] = 'Deep');
        })(F || (F = {})),
          (function (e) {
            (e[(e.Trust = 1)] = 'Trust'),
              (e[(e.Verify = 2)] = 'Verify'),
              (e[(e.TrustAndVerify = 3)] = 'TrustAndVerify');
          })(C || (C = {}));
        class L {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Set(),
              t = arguments.length > 1 ? arguments[1] : void 0,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'mainnet';
            (this.owners = void 0),
              (this.indexMode = void 0),
              (this.network = void 0),
              (this.tag = ''),
              (this.name = ''),
              (this.owners = e),
              (this.indexMode = t),
              (this.network = r);
          }
          async parse(e, t) {
            (arguments.length > 2 && void 0 !== arguments[2]) || F.Persist;
          }
          async preSave(e) {}
          async sync(e, t) {
            return 0;
          }
          async resolve(e, t) {}
        }
        !(function (e) {
          (e[(e.FAILED = -1)] = 'FAILED'),
            (e[(e.QUEUED = 0)] = 'QUEUED'),
            (e[(e.DOWNLOADED = 1)] = 'DOWNLOADED'),
            (e[(e.INGESTED = 2)] = 'INGESTED'),
            (e[(e.CONFIRMED = 3)] = 'CONFIRMED'),
            (e[(e.IMMUTABLE = 4)] = 'IMMUTABLE');
        })(j || (j = {}));
        class q {
          constructor(e, t) {
            if (((this.txid = void 0), (this.vout = void 0), void 0 !== t))
              if (((this.vout = t), 'string' == typeof e)) this.txid = e;
              else {
                if (!Array.isArray(e)) throw new Error('Invalid Outpoint');
                this.txid = a.Aq.toHex(e);
              }
            else if (Array.isArray(e)) {
              const t = new a.Aq.Reader(e);
              (this.txid = a.Aq.toHex(t.read(32).reverse())), (this.vout = t.readInt32LE());
            } else if ('string' == typeof e) {
              const [t, r] = e.split('_');
              (this.txid = t), (this.vout = parseInt(r));
            } else {
              if ('object' != typeof e) throw new Error('Invalid Outpoint');
              (this.txid = e.txid), (this.vout = e.vout);
            }
          }
          toString() {
            return `${this.txid}_${this.vout}`;
          }
          toBinary() {
            const e = new a.Aq.Writer();
            return e.write(a.Aq.toArray(this.txid, 'hex').reverse()), e.writeUInt32LE(this.vout), e.toArray();
          }
          toBEBinary() {
            const e = new a.Aq.Writer();
            return e.write(a.Aq.toArray(this.txid, 'hex')), e.writeUInt32BE(this.vout), e.toArray();
          }
          toJSON() {
            return this.toString();
          }
        }
        !(function (e) {
          (e.ASC = 'asc'), (e.DESC = 'desc');
        })(U || (U = {}));
        class H {
          constructor(e, t, r, a, o) {
            (this.tag = void 0),
              (this.id = void 0),
              (this.value = void 0),
              (this.owner = void 0),
              (this.includeSpent = void 0),
              (this.tag = e),
              (this.id = t),
              (this.value = r),
              (this.owner = a),
              (this.includeSpent = o);
          }
          toQueryKey() {
            return H.buildQueryKey(this.tag, this.id, this.value);
          }
          static buildQueryKey(e, t, r) {
            let a = e;
            return t && ((a += `:${t}`), r && (a += `:${r}`)), a;
          }
        }
        !(function (e) {
          (e[(e.Unindexed = -1)] = 'Unindexed'),
            (e[(e.Trusted = 0)] = 'Trusted'),
            (e[(e.Dependency = 1)] = 'Dependency'),
            (e[(e.Validated = 2)] = 'Validated');
        })(D || (D = {}));
        class G {
          constructor(e, t, r, a) {
            let o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : new R();
            (this.outpoint = void 0),
              (this.satoshis = void 0),
              (this.script = void 0),
              (this.status = void 0),
              (this.block = void 0),
              (this.spend = ''),
              (this.data = {}),
              (this.owner = void 0),
              (this.events = []),
              (this.logs = []),
              (this.tags = []),
              (this.deps = []),
              (this.hasEvents = 0),
              (this.outpoint = e),
              (this.satoshis = t),
              (this.script = r),
              (this.status = a),
              (this.block = o);
          }
        }
        class K {
          constructor() {
            this.events = {};
          }
          on(e, t) {
            return (
              'object' != typeof this.events[e] && (this.events[e] = []),
              this.events[e].push(t),
              () => this.removeListener(e, t)
            );
          }
          removeListener(e, t) {
            if ('object' != typeof this.events[e]) return;
            const r = this.events[e].indexOf(t);
            r > -1 && this.events[e].splice(r, 1);
          }
          removeAllListeners() {
            Object.keys(this.events).forEach((e) => this.events[e].splice(0, this.events[e].length));
          }
          emit(e) {
            for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++) r[a - 1] = arguments[a];
            'object' == typeof this.events[e] && [...this.events[e]].forEach((e) => e.apply(this, r));
          }
          once(e, t) {
            var r = this;
            const a = this.on(e, function () {
              for (var e = arguments.length, o = new Array(e), i = 0; i < e; i++) o[i] = arguments[i];
              a(), t.apply(r, o);
            });
            return a;
          }
        }
        class V {
          constructor(e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new K(),
              a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
              o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
            (this.services = void 0),
              (this.stores = void 0),
              (this.events = void 0),
              (this.subscribe = void 0),
              (this.interval = void 0),
              (this.services = e),
              (this.stores = t),
              (this.events = r),
              (this.subscribe = o),
              a && this.sync();
          }
          async destroy() {
            var e, t, r;
            this.interval && clearInterval(this.interval),
              await (null == (e = this.stores.txos) ? void 0 : e.destroy()),
              await (null == (t = this.stores.blocks) ? void 0 : t.destroy()),
              await (null == (r = this.stores.txns) ? void 0 : r.destroy()),
              this.events.emit('destroyed', 'The SPVStore instance has been destroyed!'),
              this.events.removeAllListeners();
          }
          async broadcast(e) {
            let t,
              r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '',
              o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            return (
              (t = e.merklePath
                ? { status: 'success', txid: e.id('hex'), message: '' }
                : await this.stores.txns.broadcast(e)),
              (0, a.f2)(t) && (await this.stores.txos.ingest(e, r, o ? F.Deep : F.Persist, !0)),
              t
            );
          }
          async sync() {
            var e,
              t,
              r = this;
            await this.stores.blocks.sync(!0),
              this.events.emit('blocksSynced'),
              await (null == (e = this.services.account)
                ? void 0
                : e.register([...((null == (t = this.stores.txos) ? void 0 : t.owners) || [])]));
            const a = await this.stores.txos.storage.getState('lastSync');
            if ((console.log('Syncing wallet', a), !a)) {
              var o;
              const e = {};
              let t = 0;
              for (const r of this.stores.txos.indexers) {
                this.events.emit('importing', { tag: r.tag, name: r.name });
                const a = await r.sync(this.stores.txos, e);
                t = Math.max(t, a);
              }
              await (null == (o = this.stores.txos) ? void 0 : o.queue(Object.values(e))),
                await this.stores.txos.storage.setState('lastSync', t.toString()),
                this.events.emit('txosSynced');
            }
            var i;
            this.subscribe &&
              (null == (i = this.services.account) ||
                i.subscribe(async function (e, t) {
                  switch (e) {
                    case 'tx':
                      const e = JSON.parse(t);
                      r.stores.txos.queue([
                        {
                          txid: e.txid,
                          height: Number(e.height),
                          idx: Number(e.idx || 0),
                          outputs: e.outs,
                          source: 'sync',
                          parseMode: F.Persist,
                        },
                      ]);
                      break;
                    case 'block':
                      r.stores.blocks.sync(!0);
                  }
                })),
              this.stores.blocks.sync(!1),
              this.stores.txns.processQueue(),
              this.stores.txos.processQueue(),
              await this.stores.txos.syncTxLogs(),
              this.interval && clearInterval(this.interval),
              (this.interval = setInterval(() => this.stores.txos.syncTxLogs(), 6e4)),
              this.stores.txos.resolveBlock(),
              this.events.on('syncedBlockHeight', async function () {
                r.stores.txos.resolveBlock();
              });
          }
          async search(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : U.DESC,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 100,
              a = arguments.length > 3 ? arguments[3] : void 0;
            return this.stores.txos.search(e, t, r, a);
          }
          async getTxo(e) {
            return this.stores.txos.storage.get(e);
          }
          async getTxos(e) {
            return this.stores.txos.storage.getMany(e);
          }
          async getTx(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            return this.stores.txns.loadTx(e, t);
          }
          async getRecentTxs() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
            return this.stores.txos.storage.getRecentTxLogs(e);
          }
          async parseTx(e) {
            return this.stores.txos.ingest(e, '', F.Preview, !0);
          }
          async getSyncedBlock() {
            return this.stores.blocks.storage.getSynced();
          }
          async getBlock(e) {
            return this.stores.blocks.storage.getByHeight(e);
          }
          async getChaintip() {
            return this.services.blocks.getChaintip();
          }
          async getBackupTx(e) {
            var t;
            const r = await this.stores.txns.storage.get(e);
            if (!r) return;
            const o = new a.Aq.Writer();
            return (
              o.writeInt8(Number(r.status)),
              o.writeUInt32LE(r.block.height),
              o.writeUInt64LE(Number(r.block.idx)),
              o.writeVarIntNum(r.rawtx.length),
              o.write(r.rawtx),
              o.writeVarIntNum((null == (t = r.proof) ? void 0 : t.length) || 0),
              r.proof && o.write(r.proof),
              o.toArray()
            );
          }
          async getBlocksBackup() {
            return await this.stores.blocks.storage.getBackup();
          }
          async restoreBlocks(e) {
            const t = new a.Aq.Reader(e);
            let r = [];
            for (; t.pos < e.length; ) r.push(z(t));
            await this.stores.blocks.storage.putMany(r);
          }
          async restoreBackupTx(e, t) {
            const r = new a.Aq.Reader(t),
              o = r.readInt8(),
              i = r.readUInt32LE(),
              n = r.readUInt64LEBn();
            let s = r.readVarIntNum();
            const c = { txid: e, status: o, block: { height: i, idx: BigInt(n.toNumber()) }, rawtx: r.read(s) };
            (s = r.readVarIntNum()), s && (c.proof = r.read(s)), await this.stores.txns.storage.put(c);
          }
          async getBackupLogs() {
            return this.stores.txos.storage.getBackupLogs();
          }
          async restoreBackupLogs(e) {
            await this.stores.txos.queue(e);
            let t = 0;
            for (const r of e) r.height > t && r.height < 5e7 && (t = r.height);
            for (const r of this.stores.txos.owners) await this.stores.txos.storage.setState(`sync-${r}`, t.toString());
            await this.stores.txos.storage.setState('lastSync', t.toString());
          }
        }
        const $ = { mainnet: 'https://ordinals.gorillapool.io', testnet: 'https://testnet.ordinals.gorillapool.io' };
        class W {
          constructor(e, t) {
            (this.network = void 0),
              (this.accountId = void 0),
              (this.eventSource = void 0),
              (this.network = e),
              (this.accountId = t);
          }
          async register(e) {
            if (
              !(
                await fetch(`${$[this.network]}/v5/acct/${this.accountId}`, {
                  method: 'PUT',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify(e),
                })
              ).ok
            )
              throw new Error('Failed to register account');
          }
          async broadcast(e) {
            console.log('Broadcasting', e.id('hex'), e.toHex());
            const t = `${$[this.network]}/v5/tx`,
              r = await fetch(t, {
                method: 'POST',
                headers: { 'Content-Type': 'application/octet-stream' },
                body: B.from(e.toBinary()),
              }),
              a = await r.json();
            return 200 !== r.status
              ? { status: 'error', code: r.status.toString(), description: a.error }
              : { status: 'success', txid: a.txid, message: 'Transaction broadcast successfully' };
          }
          async status(e) {
            const t = await fetch(`${$[this.network]}/v1/tx/${e}/proof`);
            switch (t.status) {
              case 200:
                return { status: P.CONFIRMED, proof: [...B.from(await t.arrayBuffer())] };
              case 404:
                return { status: P.MEMPOOL };
              default:
                return;
            }
          }
          async fetchTxn(e) {
            const t = await fetch(`${$[this.network]}/v5/tx/${e}`);
            if ((console.log('Fetching', e), 200 !== t.status))
              throw new Error(`${t.status} - Failed to fetch tx ${e}`);
            const r = await t.arrayBuffer(),
              o = new a.Aq.Reader([...B.from(r)]);
            let i = o.readVarIntNum();
            const n = { rawtx: o.read(i) };
            return (i = o.readVarIntNum()), i && (n.proof = o.read(i)), n;
          }
          async fetchProof(e) {
            const t = await fetch(`${$[this.network]}/v5/tx/${e}/proof`);
            if ((console.log('Fetching', e), 200 !== t.status)) return;
            const r = await t.arrayBuffer();
            return [...B.from(r)];
          }
          async getBlocks(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e3;
            return (await fetch(`${$[this.network]}/v5/blocks/list/${e}?limit=${t}`)).json();
          }
          async getChaintip() {
            const e = await fetch(`${$[this.network]}/v5/blocks/tip`);
            if (!e.ok) throw new Error('Failed to fetch chaintip');
            return e.json();
          }
          async utxos() {
            let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            const t = await fetch(
              `${$[this.network]}/v5/acct/${this.accountId}/utxos?txo=true&limit=0&tags=*${e ? '&refresh=true' : ''}`,
            );
            return (await t.json()) || [];
          }
          async getTxo(e) {
            const t = await fetch(`${$[this.network]}/v5/txo/${e.toString()}?txo=true&tags=*`);
            return t.ok ? t.json() : void 0;
          }
          async getTxos(e) {
            const t = await fetch(`${$[this.network]}/v5/txos/outpoints?txo=true&tags=*`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(e),
            });
            return t.ok ? (await t.json()).map((e) => e) : [];
          }
          async getBsv20Details(e) {
            const t = await fetch(`${$[this.network]}/api/bsv20/tick/${e}`);
            return t.ok ? t.json() : void 0;
          }
          async getBsv2021Txo(e) {
            const t = await fetch(`${$[this.network]}/api/bsv20/outpoint/${e.toString()}`);
            return t.ok ? t.json() : void 0;
          }
          async getOriginAncestors(e) {
            if (!e.length) return [];
            const t = await fetch(`${$[this.network]}/v5/origins/ancestors`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(e),
            });
            return t.ok ? await t.json() : [];
          }
          async getInscriptionFile(e) {
            var t;
            const [r, a] = e.split('_'),
              o = await fetch(`${$[this.network]}/v5/tx/${r}/parse`);
            if (o.ok)
              return null == (t = (await o.json()).txos[parseInt(a)]) || null == (t = t.data) || null == (t = t.insc)
                ? void 0
                : t.file;
          }
          subscribed() {
            return !!this.eventSource;
          }
          subscribe(e) {
            this.eventSource && this.eventSource.close();
            const t = `acct:${this.accountId}`;
            (this.eventSource = new EventSource(
              `${$[this.network]}/v5/sse?${[t, 'block'].map((e) => `topic=${e}`).join('&')}`,
            )),
              this.eventSource.addEventListener(t, (r) => {
                console.log(t, r.data), e('tx', r.data);
              }),
              this.eventSource.addEventListener('block', (t) => {
                console.log('block', t.data), e('block', t.data);
              }),
              (this.eventSource.onmessage = (e) => {
                console.log('message', e.data);
              });
          }
          unsubscribe() {
            this.eventSource && (this.eventSource.close(), (this.eventSource = void 0));
          }
          async syncTxLogs() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
              r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            const a = await fetch(`${$[this.network]}/v5/acct/${this.accountId}/${e}?limit=${t}&rev=${r}`);
            if (!a.ok) throw new Error('Failed to fetch tx logs');
            return (await a.json()).map((e) => (e.score > 5e16 && (e.score = 0), e));
          }
        }
        const Y =
            '2097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0000',
          X =
            '610079040065cd1d9f690079547a75537a537a537a5179537a75527a527a7575615579014161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169557961007961007982775179517954947f75517958947f77517a75517a756161007901007e81517a7561517a7561040065cd1d9f6955796100796100798277517951790128947f755179012c947f77517a75517a756161007901007e81517a7561517a756105ffffffff009f69557961007961007982775179517954947f75517958947f77517a75517a756161007901007e81517a7561517a75615279a2695679a95179876957795779ac7777777777777777';
        const J = B.from(Y, 'hex'),
          Q = B.from(a.Aq.toArray(X, 'hex'));
        class Z {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            (this.until = void 0), (this.until = e);
          }
        }
        class ee extends L {
          constructor() {
            super(...arguments), (this.tag = 'lock'), (this.name = 'Locks');
          }
          async parse(e, t) {
            var r, o;
            const i = e.txos[t],
              n = B.from(i.script),
              s = n.indexOf(J);
            if (-1 === s) return;
            const c = n.indexOf(Q, s + J.length);
            if (-1 === c) return;
            const l = a.eF.fromBinary(Array.from(n.subarray(s + J.length, c)));
            if (
              20 != (null == (r = l.chunks[0]) || null == (r = r.data) ? void 0 : r.length) ||
              null == (o = l.chunks[1]) ||
              !o.data
            )
              return;
            const u = parseInt(B.from(l.chunks[1].data).reverse().toString('hex'), 16);
            i.owner = a.Aq.toBase58Check(l.chunks[0].data, 'mainnet' == this.network ? [0] : [111]);
            const d = [];
            return (
              i.owner &&
                this.owners.has(i.owner) &&
                (d.push({ id: 'until', value: u.toString().padStart(7, '0') }),
                d.push({ id: 'address', value: i.owner })),
              new M(new Z(u), d)
            );
          }
          async preSave(e) {
            const t = e.spends.reduce(
                (e, t) => (t.data[this.tag] ? e + (t.owner && this.owners.has(t.owner) ? t.satoshis : 0n) : e),
                0n,
              ),
              r = e.txos.reduce(
                (e, t) => (t.data[this.tag] ? e + (t.owner && this.owners.has(t.owner) ? t.satoshis : 0n) : e),
                0n,
              ),
              a = Number(r - t);
            a && (e.summary[this.tag] = { amount: a });
          }
        }
        class te extends L {
          constructor() {
            super(...arguments), (this.tag = '1sat'), (this.name = '1Sat');
          }
          async sync(e, t) {
            var r;
            const a = new W(this.network, (null == (r = e.services.account) ? void 0 : r.accountId) || ''),
              o = await a.utxos(!0);
            let i = 0;
            console.log('Syncing', o.length, 'utxos for ', [...e.owners]);
            let n = [];
            for (const m of o) {
              var s;
              const r = new q(m.outpoint),
                a = new G(r, BigInt(m.satoshis), [], 0);
              if (((a.owner = null == (s = m.owners) ? void 0 : s.find((t) => e.owners.has(t))), a.owner)) {
                var c, l, u, d, h;
                if (
                  (a.satoshis > 1n &&
                    (null == (c = m.data) || !c.lock) &&
                    (a.data.fund = new M(a.owner, [{ id: 'address', value: a.owner }])),
                  null != (l = m.data) &&
                    l.origin &&
                    (null == (u = m.data) ||
                      null == (u = u.insc) ||
                      null == (u = u.file) ||
                      !u.type.startsWith('application/bsv-20')))
                ) {
                  var f, p;
                  const e = {
                    outpoint: m.data.origin.outpoint,
                    nonce: 0,
                    map: m.data.origin.map,
                    insc: {
                      file: {
                        type: (null == (f = m.data.origin) ? void 0 : f.type) || '',
                        size: 0,
                        hash: '',
                        content: [],
                      },
                    },
                  };
                  n.push(m.outpoint);
                  const t = new M(e, []);
                  e.outpoint && t.events.push({ id: 'outpoint', value: e.outpoint }),
                    null != (p = e.insc) &&
                      null != (p = p.file) &&
                      p.type &&
                      t.events.push({ id: 'type', value: e.insc.file.type }),
                    (a.data.origin = t);
                }
                0 == (null == (d = m.data) || null == (d = d.ordlock) ? void 0 : d.status) &&
                  (a.data.list = new M(m.data.ordlock, [])),
                  null != (h = m.data) &&
                    h.lock &&
                    (a.data.lock = new M(new Z(m.data.lock.until), [
                      { id: 'until', value: m.data.lock.until.toString().padStart(7, '0') },
                      { id: 'address', value: a.owner },
                    ])),
                  Object.keys(a.data).length > 0 && (await e.storage.put(a));
              } else console.log('No owner for', m.owners);
              let o = t[r.txid];
              o
                ? o.outputs.push(r.vout)
                : ((o = {
                    txid: r.txid,
                    height: m.height || 0,
                    source: '1sat',
                    idx: m.idx || 0,
                    parseMode: F.Persist,
                    outputs: [r.vout],
                  }),
                  (t[r.txid] = o)),
                m.height < 5e7 && (i = Math.max(i, 1e9 * m.height + m.idx));
            }
            if (n.length > 0) {
              const e = await a.getOriginAncestors(n);
              for (const r of e) {
                const [e, a] = r.outpoint.split('_');
                let o = t[e];
                o
                  ? o.outputs.push(parseInt(a))
                  : ((o = {
                      txid: e,
                      height: r.height,
                      idx: Number(r.idx),
                      parseMode: F.Dependency,
                      outputs: [parseInt(a)],
                      source: 'ancestor',
                    }),
                    (t[e] = o));
              }
            }
            const b = (await a.syncTxLogs()) || [];
            for (const m of b) {
              let e = t[m.txid];
              e
                ? (e.outputs = [...new Set([...(e.outputs || []), ...(m.outs || [])])])
                : ((e = {
                    txid: m.txid,
                    height: m.height,
                    idx: Number(m.idx),
                    parseMode: F.Persist,
                    outputs: m.outs,
                    source: 'history',
                  }),
                  (t[m.txid] = e));
            }
            return i;
          }
        }
        function re(e) {
          var t,
            r,
            a,
            o = 2;
          for ('undefined' != typeof Symbol && ((r = Symbol.asyncIterator), (a = Symbol.iterator)); o--; ) {
            if (r && null != (t = e[r])) return t.call(e);
            if (a && null != (t = e[a])) return new ae(t.call(e));
            (r = '@@asyncIterator'), (a = '@@iterator');
          }
          throw new TypeError('Object is not async iterable');
        }
        function ae(e) {
          function t(e) {
            if (Object(e) !== e) return Promise.reject(new TypeError(e + ' is not an object.'));
            var t = e.done;
            return Promise.resolve(e.value).then(function (e) {
              return { value: e, done: t };
            });
          }
          return (
            (ae = function (e) {
              (this.s = e), (this.n = e.next);
            }),
            (ae.prototype = {
              s: null,
              n: null,
              next: function () {
                return t(this.n.apply(this.s, arguments));
              },
              return: function (e) {
                var r = this.s.return;
                return void 0 === r ? Promise.resolve({ value: e, done: !0 }) : t(r.apply(this.s, arguments));
              },
              throw: function (e) {
                var r = this.s.return;
                return void 0 === r ? Promise.reject(e) : t(r.apply(this.s, arguments));
              },
            }),
            new ae(e)
          );
        }
        function oe() {
          return (
            (oe = Object.assign
              ? Object.assign.bind()
              : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var a in r) ({}).hasOwnProperty.call(r, a) && (e[a] = r[a]);
                  }
                  return e;
                }),
            oe.apply(null, arguments)
          );
        }
        const ie = a.HD.fromString(
          'xpub661MyMwAqRbcF221R74MPqdipLsgUevAAX4hZP2rywyEeShpbe3v2r9ciAvSGT6FB22TEmFLdUyeEDJL4ekG8s9H5WXbzDQPr6eW1zEYYy9',
        );
        var ne;
        !(function (e) {
          (e[(e.Invalid = -1)] = 'Invalid'), (e[(e.Pending = 0)] = 'Pending'), (e[(e.Valid = 1)] = 'Valid');
        })(ne || (ne = {}));
        class se {
          constructor() {
            (this.status = 0),
              (this.tick = ''),
              (this.op = ''),
              (this.amt = 0n),
              (this.dec = 0),
              (this.reason = void 0),
              (this.fundAddress = '');
          }
          static fromJSON(e) {
            const t = new se();
            return Object.assign(t, oe({}, e, { amt: BigInt(e.amt) })), t;
          }
        }
        class ce extends L {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Set(),
              t = arguments.length > 1 ? arguments[1] : void 0,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'mainnet';
            if (t !== C.Trust) throw new Error('Bsv20 requires Trust mode');
            super(e, t, r),
              (this.owners = void 0),
              (this.indexMode = void 0),
              (this.network = void 0),
              (this.tag = 'bsv20'),
              (this.name = 'Bsv20s'),
              (this.provider = void 0),
              (this.owners = e),
              (this.indexMode = t),
              (this.network = r),
              (this.provider = new W(r));
          }
          async parse(e, t) {
            var r, o;
            const i = e.txos[t];
            if (null == (r = i.data.insc) || !r.data) return;
            if ('application/bsv-20' !== (null == (o = i.data.insc) ? void 0 : o.data.file.type)) return;
            let n;
            try {
              var s;
              n = se.fromJSON(JSON.parse(a.Aq.toUTF8(null == (s = i.data.insc) ? void 0 : s.data.file.content)));
              const e = new M(n),
                t = BigInt(n.amt);
              if (t <= 0n || t > 2 ** 64 - 1) return;
              switch (n.op) {
                case 'deploy':
                  if (n.dec) return;
                  break;
                case 'mint':
                case 'transfer':
                case 'burn':
                  break;
                default:
                  return;
              }
              if (!n.tick) return;
              return (
                (n.fundAddress = le(n.tick)),
                i.owner && this.owners.has(i.owner) && e.events.push({ id: 'tick', value: n.tick }),
                e
              );
            } catch (e) {
              return;
            }
          }
          async preSave(e) {
            if (this.indexMode == C.Trust) return;
            const t = new Map();
            let r,
              a = 0;
            for (const s of e.spends) {
              const e = s.data.bsv20;
              if (e && 0 == e.data.status && this.indexMode !== C.Verify) {
                const o = await this.provider.getBsv2021Txo(s.outpoint);
                o &&
                  (t.set(e.data.tick, o),
                  (e.data.status = o.status),
                  (e.data.dec = o.dec),
                  r || (r = e.data),
                  r.tick == o.tick && s.owner && this.owners.has(s.owner) && (a -= Number(o.amt)));
              }
            }
            for (const s of e.txos) {
              var o, i, n;
              const e = s.data.bsv20;
              e &&
                (r || (r = e.data),
                (null == e || null == (o = e.data) ? void 0 : o.tick) == (null == (i = r) ? void 0 : i.tick) &&
                  s.owner &&
                  this.owners.has(s.owner) &&
                  (a += Number(e.data.amt)),
                null != e &&
                  null != (n = e.data) &&
                  n.tick &&
                  t.has(e.data.tick) &&
                  (e.data.dec = t.get(e.data.tick).dec));
            }
            r && (e.summary[this.tag] = { id: r.tick, amount: a / Math.pow(10, r.dec || 0) });
          }
        }
        function le(e) {
          const t = a.Vw.sha256(e),
            r = new a.Aq.Reader(t);
          let o = 'm/21/' + (r.readUInt32BE() >> 1);
          return (r.pos = 24), (o += '/' + (r.readUInt32BE() >> 1)), ie.derive(o).pubKey.toAddress();
        }
        class ue {
          constructor(e) {
            (this.status = ne.Pending),
              (this.id = void 0),
              (this.op = ''),
              (this.amt = 0n),
              (this.dec = 0),
              (this.sym = void 0),
              (this.icon = void 0),
              (this.supply = void 0),
              (this.contract = void 0),
              (this.reason = void 0),
              (this.fundAddress = ''),
              (this.id = e.id || ''),
              Object.assign(this, e);
          }
          static fromJSON(e) {
            return new ue(oe({}, e, { amt: BigInt(e.amt), dec: parseInt(e.dec || '0') }));
          }
        }
        class de extends L {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Set(),
              t = arguments.length > 1 ? arguments[1] : void 0,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'mainnet';
            super(e, t, r),
              (this.owners = void 0),
              (this.indexMode = void 0),
              (this.network = void 0),
              (this.tag = 'bsv21'),
              (this.name = 'Bsv21s'),
              (this.provider = void 0),
              (this.owners = e),
              (this.indexMode = t),
              (this.network = r),
              (this.provider = new W(r));
          }
          async parse(e, t) {
            var r, o;
            const i = e.txos[t];
            if (null == (r = i.data.insc) || !r.data) return;
            if ('application/bsv-20' !== (null == (o = i.data.insc) ? void 0 : o.data.file.type)) return;
            let n;
            try {
              var s;
              n = ue.fromJSON(JSON.parse(a.Aq.toUTF8(null == (s = i.data.insc) ? void 0 : s.data.file.content)));
            } catch (e) {
              return;
            }
            const c = new M(n);
            if (!(n.amt <= 0n || n.amt > 2 ** 64 - 1)) {
              switch (n.op) {
                case 'deploy+mint':
                  if (n.dec > 18) return;
                  (n.id = i.outpoint.toString()), (n.supply = n.amt), (n.status = ne.Valid);
                  break;
                case 'transfer':
                case 'burn':
                  break;
                default:
                  return;
              }
              if (n.id)
                return (
                  (n.fundAddress = le(i.outpoint.toBEBinary())),
                  i.owner &&
                    this.owners.has(i.owner) &&
                    (c.events.push({ id: 'address', value: i.owner }),
                    c.events.push({ id: 'id', value: n.id }),
                    n.contract && c.events.push({ id: 'contract', value: n.contract })),
                  c
                );
            }
          }
          async preSave(e) {
            if (this.indexMode == C.Trust) return;
            const t = {},
              r = {};
            let a,
              o = 0,
              i = !1;
            for (const h of e.spends) {
              const c = h.data.bsv21;
              if (c)
                if (
                  (a || (a = c.data),
                  c.data.id == a.id && h.owner && this.owners.has(h.owner) && (o -= Number(c.data.amt)),
                  c.data.status == ne.Pending)
                ) {
                  for (const t of e.txos) {
                    var n, s;
                    const e = null == (n = t.data) ? void 0 : n.bsv21;
                    (null == e || null == (s = e.data) ? void 0 : s.id) == c.data.id &&
                      ((e.data.status = ne.Pending),
                      (e.data.sym = c.data.sym),
                      (e.data.icon = c.data.icon),
                      (e.data.dec = c.data.dec));
                  }
                  i = !0;
                } else
                  c.data.status == ne.Valid &&
                    (r[c.data.id] || (r[c.data.id] = []),
                    r[c.data.id].push(h),
                    (t[c.data.id] = (t[c.data.id] || 0n) + c.data.amt));
            }
            const c = {},
              l = {};
            for (const h of e.txos) {
              var u, d;
              const e = null == (u = h.data) ? void 0 : u.bsv21;
              if (!e || !['transfer', 'burn'].includes(e.data.op)) continue;
              let i;
              for (const t of r[e.data.id] || []) (i = t.data.bsv21.data), e.deps.push(t.outpoint);
              (t[e.data.id] || 0n) < e.data.amt && (l[e.data.id] = 'Insufficient inputs'),
                a || (a = e.data),
                e.data.id == (null == (d = a) ? void 0 : d.id) &&
                  h.owner &&
                  this.owners.has(h.owner) &&
                  (o += Number(e.data.amt)),
                i &&
                  ((e.data.sym = i.sym),
                  (e.data.icon = i.icon),
                  (e.data.contract = i.contract),
                  (e.data.supply = i.supply),
                  (e.data.dec = i.dec)),
                c[e.data.id] || (c[e.data.id] = []),
                c[e.data.id].push(h),
                (t[e.data.id] = (t[e.data.id] || 0n) - BigInt(e.data.amt));
            }
            if (!i)
              for (const [h, f] of Object.entries(c)) {
                const e = l[h];
                for (const t of f)
                  (t.data.bsv21.data.status = e ? ne.Invalid : ne.Valid), (t.data.bsv21.data.reason = e);
              }
            a && (e.summary[this.tag] = { id: a.sym, amount: o / Math.pow(10, a.dec || 0), icon: a.icon });
          }
        }
        class he extends L {
          constructor() {
            super(...arguments), (this.tag = 'fund'), (this.name = 'Funds');
          }
          async parse(e, t) {
            const r = e.txos[t],
              a = N(e.tx.outputs[t].lockingScript, 0, this.network);
            if (r.satoshis < 2n) return;
            const o = [];
            return a && this.owners.has(a)
              ? ((r.owner = a), o.push({ id: 'address', value: a }), new M(r.owner, o))
              : void 0;
          }
          async preSave(e) {
            let t = e.spends.reduce(
                (e, t) => (t.data[this.tag] ? e + (t.owner && this.owners.has(t.owner) ? t.satoshis : 0n) : e),
                0n,
              ),
              r = e.txos.reduce(
                (e, t) => (t.data[this.tag] ? e + (t.owner && this.owners.has(t.owner) ? t.satoshis : 0n) : e),
                0n,
              );
            const a = Number(r - t);
            a && (e.summary[this.tag] = { amount: a });
          }
        }
        class fe extends L {
          constructor() {
            super(...arguments), (this.tag = 'map'), (this.name = 'MAP');
          }
          async parse(e, t) {
            const r = e.tx.outputs[t].lockingScript;
            let o = 0,
              i = 0;
            for (let l = o + 1; l < r.chunks.length; l++) {
              var n, s;
              const e = r.chunks[l];
              if (o && e.op !== a.OP.OP_RETURN) {
                if (!o || 1 !== (null == (n = e.data) ? void 0 : n.length) || 124 !== e.data[0]) continue;
              } else o = l;
              if (
                '1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5' ===
                a.Aq.toUTF8((null == (s = r.chunks[++l]) ? void 0 : s.data) || [])
              ) {
                i = ++l;
                break;
              }
            }
            if (!i) return;
            const c = fe.parseMap(r, i);
            return c ? new M(c) : void 0;
          }
          static parseMap(e, t) {
            var r;
            if ('SET' !== a.Aq.toUTF8((null == (r = e.chunks[t]) ? void 0 : r.data) || [])) return;
            const o = {};
            for (let s = t + 1; s < e.chunks.length; s += 2) {
              var i, n;
              const t = e.chunks[s];
              if (t.op === a.OP.OP_RETURN || (1 == (null == (i = t.data) ? void 0 : i.length) && 124 !== t.data[0]))
                break;
              const r = a.Aq.toUTF8(t.data || []),
                c = a.Aq.toUTF8((null == (n = e.chunks[s + 1]) ? void 0 : n.data) || []);
              o[r] = 'subTypeData' == r ? JSON.parse(c) : c;
            }
            return o;
          }
        }
        class pe extends L {
          constructor() {
            super(...arguments), (this.tag = 'insc'), (this.name = 'Inscriptions');
          }
          async parse(e, t) {
            var r, o;
            const i = e.txos[t];
            if (1n != i.satoshis) return;
            const n = e.tx.outputs[t].lockingScript;
            let s;
            for (let p = 0; p < n.chunks.length; p++) {
              var c;
              const e = n.chunks[p];
              p >= 2 &&
                3 === (null == (c = e.data) ? void 0 : c.length) &&
                'ord' == a.Aq.toUTF8(e.data) &&
                n.chunks[p - 1].op == a.OP.OP_IF &&
                n.chunks[p - 2].op == a.OP.OP_FALSE &&
                (s = p + 1);
            }
            if (void 0 === s) return;
            i.owner || (i.owner = N(n, 0, this.network));
            const l = { file: { hash: '', size: 0, type: '' }, fields: {} };
            for (let p = s; p < n.chunks.length; p += 2) {
              var u, d;
              const t = n.chunks[p];
              if (t.op == a.OP.OP_ENDIF) {
                var h;
                i.owner || (i.owner = N(n, p + 1, this.network)),
                  i.owner ||
                    (null == (h = n.chunks[p + 1]) ? void 0 : h.op) != a.OP.OP_CODESEPARATOR ||
                    (i.owner = N(n, p + 2));
                break;
              }
              if (t.op > a.OP.OP_16) return;
              const s = n.chunks[p + 1];
              if (s.op > a.OP.OP_PUSHDATA4) return;
              if (null != (u = t.data) && u.length) {
                const e = fe.parseMap(a.eF.fromBinary(s.data || []), 0);
                e && (i.data.map = new M(e));
                continue;
              }
              let c = 0;
              switch (
                (t.op > a.OP.OP_PUSHDATA4 && t.op <= a.OP.OP_16
                  ? (c = t.op - 80)
                  : null != (d = t.data) && d.length && (c = t.data[0]),
                c)
              ) {
                case 0:
                  if (
                    ((l.file.size = (null == (r = s.data) ? void 0 : r.length) || 0), null == (o = s.data) || !o.length)
                  )
                    break;
                  (l.file.hash = a.Aq.toBase64(a.Vw.sha256(s.data))), (l.file.content = s.data);
                  break;
                case 1:
                  l.file.type = B.from(s.data || []).toString();
                  break;
                case 3:
                  if (!s.data || 36 != s.data.length) break;
                  try {
                    const t = new q(s.data);
                    if (!e.spends.find((e) => e.outpoint.toString() == t.toString())) continue;
                    l.parent = t.toString();
                  } catch (I) {
                    console.log('Error parsing parent outpoint');
                  }
                  break;
                default:
                  l.fields || (l.fields = {}), (l.fields[c.toString()] = s.data && B.from(s.data).toString('base64'));
              }
            }
            const f = [];
            return i.owner && this.owners.has(i.owner) && f.push({ id: 'address', value: i.owner }), new M(l, f);
          }
        }
        const be = 783968;
        class me extends L {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Set(),
              t = arguments.length > 1 ? arguments[1] : void 0,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'mainnet';
            super(e, t, r),
              (this.owners = void 0),
              (this.indexMode = void 0),
              (this.network = void 0),
              (this.tag = 'origin'),
              (this.name = 'Origins'),
              (this.oneSat = void 0),
              (this.owners = e),
              (this.indexMode = t),
              (this.network = r),
              (this.oneSat = new W(r));
          }
          async parse(e, t) {
            (arguments.length > 2 && void 0 !== arguments[2]) || F.Persist;
            var r, a, o, i, n;
            const s = e.txos[t];
            if (
              1n != s.satoshis ||
              e.block.height < be ||
              'application/bsv-20' ==
                (null == (r = s.data.insc) || null == (r = r.data) || null == (r = r.file) ? void 0 : r.type)
            )
              return;
            s.owner || (s.owner = N(e.tx.outputs[t].lockingScript, 0, this.network));
            let c = 0n;
            for (let v = 0; v < t; v++) c += e.txos[v].satoshis;
            let l = 0n,
              u = {
                outpoint: '',
                insc: null == (a = s.data.insc) ? void 0 : a.data,
                nonce: 0,
                sigma: null == (o = s.data.sigma) ? void 0 : o.data,
              };
            const d = [];
            for (const v of e.spends.values()) {
              if ((d.push(v.outpoint), l == c && 1n == v.satoshis && v.block.height >= be)) {
                var h, f;
                null != (h = v.data.origin) &&
                  h.data &&
                  ((u = oe({}, v.data.origin.data)), null != (f = u) && f.nonce && u.nonce++);
                break;
              }
              if (((l += v.satoshis), l > c)) {
                u.outpoint = s.outpoint.toString();
                break;
              }
            }
            const p = [];
            var b, m;
            (u.map = oe({}, u.map || {}, (null == (i = s.data.map) ? void 0 : i.data) || {})),
              s.owner &&
                this.owners.has(s.owner) &&
                (p.push({ id: 'outpoint', value: (null == (b = u.outpoint) ? void 0 : b.toString()) || '' }),
                null != (m = u.insc) &&
                  null != (m = m.file) &&
                  m.type &&
                  p.push({ id: 'type', value: u.insc.file.type }));
            const g = null == (n = u.insc) ? void 0 : n.file;
            return g && g.size && g.size > 4096 && (g.content = []), new M(u, p, d);
          }
          async preSave(e) {
            let t,
              r = 0,
              a = !1,
              o = '';
            for (const l of e.spends)
              if (l.data[this.tag]) {
                let e = l.data[this.tag].data;
                var i, n;
                l.owner &&
                  this.owners.has(l.owner) &&
                  ((a = !0),
                  r--,
                  !t &&
                    null != e &&
                    null != (i = e.insc) &&
                    null != (i = i.file) &&
                    i.type.startsWith('image/') &&
                    ((t = null == e ? void 0 : e.outpoint), (o = (null == (n = e.map) ? void 0 : n.name) || '')));
              }
            for (const l of e.txos)
              if (l.data[this.tag] && l.owner && this.owners.has(l.owner)) {
                var s, c;
                (a = !0), r++;
                let e = null == (s = l.data.origin) ? void 0 : s.data;
                !t &&
                  null != e &&
                  null != (c = e.insc) &&
                  null != (c = c.file) &&
                  c.type.startsWith('image/') &&
                  (t = null == e ? void 0 : e.outpoint);
              }
            a && (e.summary[this.tag] = { id: o, amount: r, icon: t });
          }
          async resolve(e, t) {
            if (this.indexMode === C.Verify) return;
            const r = await e.search(new H(this.tag, 'outpoint', ':', void 0, !0), U.ASC, 1e3),
              a = {},
              o = new Set();
            for (const s of r.txos) {
              const t = s.data.origin;
              t.events = null == t ? void 0 : t.events.filter((e) => 'outpoint' != e.id);
              const r = null == t ? void 0 : t.data;
              if (null == r || !r.outpoint) {
                var i;
                const c = await this.oneSat.getTxo(s.outpoint);
                var n;
                if (null != c && null != (i = c.data) && null != (i = i.origin) && i.outpoint)
                  if (
                    ((r.outpoint = null == c || null == (n = c.data) || null == (n = n.origin) ? void 0 : n.outpoint),
                    this.indexMode == C.Trust)
                  ) {
                    const a = await this.oneSat.getInscriptionFile(r.outpoint);
                    (r.insc = { file: a }),
                      (r.map = c.data.origin.map),
                      (r.nonce = (c.data.origin.nonce || 0) + 1),
                      t.events.push({ id: 'outpoint', value: r.outpoint }),
                      await e.storage.put(s);
                  } else if (this.indexMode == C.TrustAndVerify) {
                    let e = a[s.outpoint.txid];
                    o.add(r.outpoint),
                      e
                        ? e.outputs.push(s.outpoint.vout)
                        : ((e = {
                            txid: s.outpoint.txid,
                            height: s.block.height,
                            idx: Number(s.block.idx),
                            parseMode: F.Persist,
                            outputs: [s.outpoint.vout],
                            source: 'origin',
                            reprocess: !0,
                          }),
                          (a[s.outpoint.txid] = e));
                  }
              }
            }
            if (this.indexMode == C.TrustAndVerify) {
              const t = await this.oneSat.getOriginAncestors([...o]);
              for (const e of t) {
                const [t, r] = e.outpoint.split('_');
                let o = a[t];
                o
                  ? o.outputs.push(parseInt(r))
                  : ((o = {
                      txid: t,
                      height: e.height,
                      idx: Number(e.idx),
                      parseMode: F.Persist,
                      outputs: [parseInt(r)],
                      source: 'ancestor',
                      reprocess: !0,
                    }),
                    (a[t] = o));
              }
              const r = Object.values(a);
              r.length > 0 && (await e.queue(r));
            }
          }
        }
        class ge extends L {
          constructor() {
            super(...arguments), (this.tag = 'sigma'), (this.name = 'Sigma');
          }
          async parse(e, t) {
            var r;
            if (null == (r = e.txos[t].data) || !r.insc) return;
            const o = e.tx.outputs[t].lockingScript;
            let i = 0,
              n = [];
            for (let f = i + 1; f < o.chunks.length; f++) {
              var s, c, l, u, d, h;
              const r = o.chunks[f];
              if (!i && r.op === a.OP.OP_RETURN) {
                i = f;
                continue;
              }
              if (!i || 1 !== (null == (s = r.data) ? void 0 : s.length) || 124 !== r.data[0]) continue;
              if ('SIGMA' !== a.Aq.toUTF8((null == (c = o.chunks[++f]) ? void 0 : c.data) || [])) continue;
              const p = f - 1,
                b = {
                  algorithm: null != (l = o.chunks[++f]) && l.data ? a.Aq.toUTF8(o.chunks[f].data) : '',
                  address: null != (u = o.chunks[++f]) && u.data ? a.Aq.toUTF8(o.chunks[f].data) : '',
                  signature: (null == (d = o.chunks[++f]) ? void 0 : d.data) || [],
                  vin: null != (h = o.chunks[++f]) && h.data ? parseInt(a.Aq.toUTF8(o.chunks[f].data)) : -1,
                  valid: !1,
                };
              -1 == b.vin && (b.vin = t);
              const m = new a.Aq.Writer();
              m.write(a.Aq.toArray(e.spends[b.vin].outpoint.txid, 'hex')),
                m.writeUInt32LE(e.spends[b.vin].outpoint.vout);
              const g = a.Vw.sha256(m.toArray()),
                v = new a.eF();
              v.chunks = o.chunks.slice(0, p);
              const y = a.Vw.sha256(v.toBinary()),
                w = a.Vw.sha256(g.concat(y)),
                k = a.to.fromCompact(b.signature);
              let E;
              for (let e = 0; e < 4; e++)
                try {
                  (E = k.RecoverPublicKey(e, new a.gH(a.J_.magicHash(w)))),
                    a.J_.verify(w, k, E) && E.toAddress() === b.address && (b.valid = !0);
                } catch (I) {}
              n.push(b);
            }
            return n.length ? new M(n) : void 0;
          }
        }
        const ve = B.from(
            '2097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0000',
            'hex',
          ),
          ye = B.from(
            '615179547a75537a537a537a0079537a75527a527a7575615579008763567901c161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169587951797e58797eaa577961007982775179517958947f7551790128947f77517a75517a75618777777777777777777767557951876351795779a9876957795779ac777777777777777767006868',
            'hex',
          );
        class we {
          constructor() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
              t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0n;
            (this.payout = void 0), (this.price = void 0), (this.payout = e), (this.price = t);
          }
        }
        class ke extends L {
          constructor() {
            super(...arguments), (this.tag = 'list'), (this.name = 'Listings');
          }
          async parse(e, t) {
            var r;
            const o = e.txos[t],
              i = B.from(o.script),
              n = i.indexOf(ve);
            if (-1 === n) return;
            const s = i.indexOf(ye, n + ve.length);
            if (-1 === s) return;
            const c = a.eF.fromBinary(Array.from(i.subarray(n + ve.length, s))),
              l = new we();
            if (!c.chunks[1].data || !c.chunks[1].data) return;
            (l.payout = c.chunks[1].data),
              (l.price = BigInt(a.gH.fromScriptNum(c.chunks[1].data.slice(0, 8)).toString())),
              (o.owner =
                (null == (r = c.chunks[0]) ? void 0 : r.data) &&
                a.Aq.toBase58Check(Array.from(c.chunks[0].data), 'mainnet' == this.network ? [0] : [111]));
            const u = [];
            return (
              o.owner &&
                this.owners.has(o.owner) &&
                u.push({ id: 'price', value: l.price.toString(16).padStart(16, '0') }),
              new M(l, u)
            );
          }
          async preSave(e) {
            for (const [r, a] of e.spends.entries()) {
              var t;
              if (a.data[this.tag])
                return void (e.summary[this.tag] = B.from(
                  (null == (t = e.tx.inputs[r].unlockingScript) ? void 0 : t.toBinary()) || [],
                ).includes(ye)
                  ? { amount: 1 }
                  : { amount: 0 });
            }
            for (const r of e.txos) if (r.data[this.tag]) return void (e.summary[this.tag] = { amount: -1 });
          }
        }
        class Ee {
          constructor(e) {
            (this.db = void 0), (this.db = e);
          }
          static async init(e) {
            const t = await m(`blocks-${e}`, 1, {
              upgrade(e) {
                e.createObjectStore('blocks', { keyPath: 'height' }).createIndex('hash', 'hash');
              },
            });
            return new Ee(t);
          }
          async destroy() {
            this.db.close();
          }
          async put(e) {
            await this.db.put('blocks', e);
          }
          async putMany(e) {
            if (!e.length) return;
            const t = this.db.transaction('blocks', 'readwrite');
            for (const r of e) t.store.put(r);
            await t.done;
          }
          async getByHash(e) {
            return this.db.getFromIndex('blocks', 'hash', e).catch(() => {});
          }
          async getByHeight(e) {
            return this.db.get('blocks', e).catch(() => {});
          }
          async getSynced() {
            const e = (await this.db).transaction('blocks', 'readonly'),
              t = await e.store.openCursor(null, 'prev'),
              r = null == t ? void 0 : t.value;
            return await e.done, r;
          }
          async getAll() {
            return this.db.getAll('blocks');
          }
          async getBackup() {
            let e = new a.Aq.Writer();
            const t = this.db.transaction('blocks', 'readonly');
            let r = [],
              o = 0,
              i = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f';
            var n,
              s = !1,
              c = !1;
            try {
              for (var l, u = re(t.store.iterate()); (s = !(l = await u.next()).done); s = !1) {
                const t = l.value;
                {
                  const n = t.value;
                  (n.prevHash = i),
                    (i = n.hash),
                    T(e, t.value),
                    1e4 == ++o && (r.push(e.toArray()), (e = new a.Aq.Writer()), (o = 0));
                }
              }
            } catch (e) {
              (c = !0), (n = e);
            } finally {
              try {
                s && null != u.return && (await u.return());
              } finally {
                if (c) throw n;
              }
            }
            return await t.done, o && r.push(e.toArray()), r;
          }
        }
        var Se;
        !(function (e) {
          (e[(e.REJECTED = -1)] = 'REJECTED'),
            (e[(e.PENDING = 0)] = 'PENDING'),
            (e[(e.BROADCASTED = 1)] = 'BROADCASTED'),
            (e[(e.CONFIRMED = 2)] = 'CONFIRMED'),
            (e[(e.IMMUTABLE = 3)] = 'IMMUTABLE');
        })(Se || (Se = {}));
        class xe {
          constructor(e, t, r, a) {
            (this.storage = void 0),
              (this.services = void 0),
              (this.stores = void 0),
              (this.events = void 0),
              (this.syncRunning = void 0),
              (this.stopSync = !1),
              (this.storage = e),
              (this.services = t),
              (this.stores = r),
              (this.events = a);
          }
          async destroy() {
            (this.stopSync = !0), this.syncRunning && (await this.syncRunning), await this.storage.destroy();
          }
          async broadcast(e) {
            const t = await this.services.broadcast.broadcast(e);
            var r, o;
            return (
              (0, a.f2)(t)
                ? null == (r = this.events) || r.emit('broadcastSuccess', e)
                : null == (o = this.events) || o.emit('broadcastFailure', e),
              t
            );
          }
          async loadTx(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              r = await this.storage.get(e),
              o = !1;
            var i, n;
            if (
              (!r &&
                t &&
                (null == (i = this.events) || i.emit('fetchingTx', { txid: e }),
                (r = await (null == (n = this.services.txns) ? void 0 : n.fetchTxn(e))),
                (o = !!r)),
              !r)
            )
              return;
            const s = a.ZX.fromBinary(r.rawtx);
            return r.proof && (s.merklePath = a.EN.fromBinary(r.proof)), o && (await this.saveTx(s)), s;
          }
          async saveTx(e) {
            const t = { txid: e.id('hex'), rawtx: e.toBinary(), block: new R(), status: Se.BROADCASTED };
            var r;
            e.merklePath &&
              ((t.proof = e.merklePath.toBinary()),
              (t.block.height = e.merklePath.blockHeight),
              (t.block.idx = BigInt(
                (null == (r = e.merklePath.path[0].find((e) => e.hash == t.txid)) ? void 0 : r.offset) || 0,
              )),
              (t.status = Se.CONFIRMED)),
              await this.storage.put(t);
          }
          async processQueue() {
            this.syncRunning ||
              (this.syncRunning = Promise.all([this.processMempool(), this.processConfirmed()]).then(() => {}));
          }
          async processMempool() {
            try {
              const r = await this.storage.getByStatus(Se.BROADCASTED, Date.now() - 6e5, 25);
              if (r.length) {
                for (const o of r) {
                  var e;
                  const r = await (null == (e = this.services.txns) ? void 0 : e.fetchProof(o.txid));
                  if (!r) {
                    o.block.height = Date.now();
                    continue;
                  }
                  const i = a.EN.fromBinary(r);
                  var t;
                  (await i.verify(o.txid, this.stores.blocks))
                    ? ((o.block.height = i.blockHeight),
                      (o.block.idx = BigInt(
                        (null == (t = i.path[0].find((e) => e.hash == o.txid)) ? void 0 : t.offset) || 0,
                      )),
                      (o.proof = i.toBinary()),
                      (o.status = Se.CONFIRMED))
                    : (o.block.height = Date.now());
                }
                await this.storage.putMany(r);
              } else await new Promise((e) => setTimeout(e, 1e3));
            } catch (e) {
              console.error('Failed to ingest txs', e), await new Promise((e) => setTimeout(e, 1e3));
            }
            if (!this.stopSync) return this.processMempool();
          }
          async processConfirmed() {
            try {
              const r = await this.stores.blocks.getChaintip(),
                o = await this.storage.getByStatus(Se.CONFIRMED, r.height - 5, 25);
              if (o.length) {
                for (const i of o) {
                  var e;
                  let o = a.EN.fromBinary(i.proof),
                    n = !1;
                  try {
                    n = await o.verify(i.txid, this.stores.blocks);
                  } catch (e) {
                    console.error('Failed to verify merkle path:', i.txid);
                  }
                  if (n) {
                    i.status = Se.IMMUTABLE;
                    continue;
                  }
                  const s = await (null == (e = this.services.txns) ? void 0 : e.fetchProof(i.txid));
                  if (s) {
                    o = a.EN.fromBinary(s);
                    try {
                      n = await o.verify(i.txid, this.stores.blocks);
                    } catch (e) {
                      console.error('Failed to verify merkle path:', i.txid);
                    }
                    if (n) {
                      var t;
                      (i.block.height = o.blockHeight),
                        (i.block.idx = BigInt(
                          (null == (t = o.path[0].find((e) => e.hash == i.txid)) ? void 0 : t.offset) || 0,
                        )),
                        (i.proof = s),
                        i.block.height <= r.height - 5 && (i.status = Se.IMMUTABLE);
                      continue;
                    }
                  }
                  i.status = Se.REJECTED;
                }
                await this.storage.putMany(o);
              } else await new Promise((e) => setTimeout(e, 1e3));
            } catch (e) {
              console.error('Failed to ingest txs', e), await new Promise((e) => setTimeout(e, 1e3));
            }
            if (!this.stopSync) return this.processConfirmed();
          }
        }
        class _e {
          constructor(e) {
            (this.db = void 0), (this.db = e);
          }
          static async init(e) {
            const t = await m(`txns-${e}`, 1, {
              upgrade(e) {
                e.createObjectStore('txns', { keyPath: 'txid' }).createIndex('status', ['status', 'block.height']);
              },
            });
            return new _e(t);
          }
          async destroy() {
            this.db.close();
          }
          async get(e) {
            return this.db.get('txns', e).catch(() => {});
          }
          async getMany(e) {
            const t = this.db.transaction('txns'),
              r = await Promise.all(e.map((e) => t.store.get(e).catch(() => {})));
            return await t.done, r;
          }
          async put(e) {
            await this.db.put('txns', e);
          }
          async putMany(e) {
            if (!e.length) return;
            const t = this.db.transaction('txns', 'readwrite');
            await Promise.all(e.map((e) => t.store.put(e))), await t.done;
          }
          async exists(e) {
            const t = this.db.transaction('txns'),
              r = await Promise.all([...e.map((e) => t.store.getKey(e).catch(() => null))]);
            return await t.done, r.map((e) => !!e);
          }
          async getByStatus(e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 25;
            const a = this.db.transaction('txns'),
              o = a.store.index('status'),
              i = IDBKeyRange.bound([e, 0], [e, t]),
              n = [];
            var s,
              c = !1,
              l = !1;
            try {
              for (
                var u, d = re(o.iterate(i));
                (c = !(u = await d.next()).done) && (n.push(u.value.value), !(n.length >= r));
                c = !1
              );
            } catch (e) {
              (l = !0), (s = e);
            } finally {
              try {
                c && null != d.return && (await d.return());
              } finally {
                if (l) throw s;
              }
            }
            return await a.done, n;
          }
        }
        function Ae(e) {
          e.outpoint = new q(e.outpoint.txid, e.outpoint.vout);
          for (const t of Object.values(e.data)) t.deps = t.deps.map((e) => new q(e));
          return e;
        }
        function Oe(e) {
          const t = [],
            r = [],
            a = [],
            o = `${e.block.height.toString(10).padStart(7, '0')}.${e.block.idx.toString(10).padStart(9, '0')}`,
            i = new Set();
          for (const [n, s] of Object.entries(e.data)) {
            for (const e of s.deps) i.add(e.toString());
            if (e.status != D.Dependency) {
              for (const e of s.events) a.push(`${n}:${e.id}:${e.value}:${o}`);
              if (!e.spend) {
                s.events.length && t.push(`${n}:${o}`);
                for (const e of s.events) r.push(`${n}:${e.id}:${e.value}:${o}`);
              }
            }
          }
          (e.tags = t), (e.events = r), (e.logs = a), (e.deps = Array.from(i)), (e.hasEvents = r.length);
        }
        class Pe {
          constructor(e) {
            (this.db = void 0), (this.db = e);
          }
          static async init(e, t) {
            const r = await m(`txos-${e}-${t}`, 1, {
              upgrade(e) {
                const t = e.createObjectStore('txos', { keyPath: ['outpoint.txid', 'outpoint.vout'] });
                t.createIndex('spend', ['spend', 'hasEvents']),
                  t.createIndex('events', 'events', { multiEntry: !0 }),
                  t.createIndex('tags', 'tags', { multiEntry: !0 }),
                  t.createIndex('logs', 'logs', { multiEntry: !0 }),
                  t.createIndex('deps', 'deps', { multiEntry: !0 }),
                  e
                    .createObjectStore('ingestQueue', { keyPath: 'txid' })
                    .createIndex('status', ['status', 'height', 'idx']),
                  e.createObjectStore('state', { keyPath: 'key' }),
                  e.createObjectStore('txLog', { keyPath: 'txid' }).createIndex('height', ['height', 'idx']);
              },
            });
            return new Pe(r);
          }
          async destroy() {
            this.db.close();
          }
          async get(e) {
            const t = await this.db.get('txos', [e.txid, e.vout]);
            return t && Ae(t);
          }
          async getMany(e) {
            const t = this.db.transaction('txos'),
              r = await Promise.all(e.map((e) => t.store.get([e.txid, e.vout])));
            return await t.done, r.map((e) => e && Ae(e));
          }
          async getBySpend(e) {
            return (
              await this.db.getAllFromIndex('txos', 'spend', IDBKeyRange.bound([e], [e, Number.MAX_SAFE_INTEGER]))
            ).map((e) => Ae(e));
          }
          async put(e) {
            Oe(e), await this.db.put('txos', e);
          }
          async putMany(e) {
            if (!e.length) return;
            const t = this.db.transaction('txos', 'readwrite');
            await Promise.all(
              e.map((e) => {
                if (e) return Oe(e), t.store.put(e);
              }),
            ),
              await t.done;
          }
          async search(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : U.DESC,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
              a = arguments.length > 3 ? arguments[3] : void 0;
            const o = e.toQueryKey();
            let i = o,
              n = o + '\uffff';
            a && t == U.ASC ? (i = a) : a && t == U.DESC && (n = a);
            const s = IDBKeyRange.bound(i, n, !0, !0),
              c = e.includeSpent ? 'logs' : e.id ? 'events' : 'tags',
              l = { txos: [] },
              u = this.db.transaction('txos'),
              d = u.store.index(c);
            var h,
              f = !1,
              p = !1;
            try {
              for (
                var b, m = re(d.iterate(s, t == U.DESC ? 'prev' : 'next'));
                (f = !(b = await m.next()).done);
                f = !1
              ) {
                const t = b.value;
                {
                  const a = Ae(t.value);
                  if (((l.nextPage = t.key), e.owner && a.owner != e.owner)) continue;
                  if ((l.txos.push(a), r > 0 && l.txos.length >= r)) return await u.done, l;
                }
              }
            } catch (e) {
              (p = !0), (h = e);
            } finally {
              try {
                f && null != m.return && (await m.return());
              } finally {
                if (p) throw h;
              }
            }
            return await u.done, delete l.nextPage, l;
          }
          async getState(e) {
            const t = await this.db.get('state', e);
            return null == t ? void 0 : t.value;
          }
          async setState(e, t) {
            await this.db.put('state', { key: e, value: t });
          }
          async getQueueLength() {
            return await this.db.countFromIndex(
              'ingestQueue',
              'status',
              IDBKeyRange.bound([j.QUEUED], [j.DOWNLOADED, Number.MAX_SAFE_INTEGER]),
            );
          }
          async getIngests(e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
            const o = IDBKeyRange.bound([e, r], [e, a || Number.MAX_SAFE_INTEGER]);
            return await this.db.getAllFromIndex('ingestQueue', 'status', o, t);
          }
          async putIngest(e, t) {
            const r = !!t;
            t || (t = this.db.transaction('ingestQueue', 'readwrite'));
            const a = await t.store.get(e.txid).catch(() => {});
            if (a && Number(a.status) >= Number(e.status)) {
              if (!e.reprocess) return void console.log('Skipping ingest', e.txid, 'already ingested');
              (e.outputs = [...new Set([...(a.outputs || []), ...(e.outputs || [])])]), await t.store.put(e);
            } else await t.store.put(e);
            await t.store.put(e), r || (await t.done);
          }
          async putIngests(e) {
            var t = this;
            if (!e.length) return;
            const r = this.db.transaction('ingestQueue', 'readwrite');
            await Promise.all(
              e.map(async function (e) {
                await t.putIngest(e, r);
              }),
            ),
              await r.done;
          }
          async delIngest(e) {
            await this.db.delete('ingestQueue', e);
          }
          async delIngests(e) {
            const t = this.db.transaction('ingestQueue', 'readwrite');
            await Promise.all(e.map((e) => t.store.delete(e))), await t.done;
          }
          async getTxLog(e) {
            return this.db.get('txLog', e);
          }
          async getTxLogs(e) {
            if (!e.length) return [];
            const t = this.db.transaction('txLog'),
              r = await Promise.all(e.map((e) => t.store.get(e).catch(() => {})));
            return await t.done, r.filter((e) => void 0 !== e);
          }
          async putTxLog(e) {
            await this.db.put('txLog', e);
          }
          async getRecentTxLogs() {
            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
            const t = this.db.transaction('txLog'),
              r = t.store.index('height'),
              a = [];
            var o,
              i = !1,
              n = !1;
            try {
              for (
                var s, c = re(r.iterate(null, 'prev'));
                (i = !(s = await c.next()).done) && (a.push(s.value.value), !(a.length >= e));
                i = !1
              );
            } catch (e) {
              (n = !0), (o = e);
            } finally {
              try {
                i && null != c.return && (await c.return());
              } finally {
                if (n) throw o;
              }
            }
            return await t.done, a;
          }
          async getBackupLogs() {
            const e = new Map(),
              t = this.db.transaction('txos'),
              r = [];
            var a,
              o = !1,
              i = !1;
            try {
              for (
                var n,
                  s = re(t.store.index('spend').iterate(IDBKeyRange.bound(['', 1], ['', Number.MAX_SAFE_INTEGER])));
                (o = !(n = await s.next()).done);
                o = !1
              ) {
                const t = n.value.value;
                let a = e.get(t.outpoint.txid);
                a
                  ? a.outputs.add(t.outpoint.vout)
                  : e.set(t.outpoint.txid, {
                      txid: t.outpoint.txid,
                      height: t.block.height,
                      idx: Number(t.block.idx),
                      outputs: new Set([t.outpoint.vout]),
                    }),
                  r.push(this.loadDeps(t.outpoint, e));
              }
            } catch (e) {
              (i = !0), (a = e);
            } finally {
              try {
                o && null != s.return && (await s.return());
              } finally {
                if (i) throw a;
              }
            }
            return (
              await Promise.all(r),
              await t.done,
              Array.from(e.values())
                .sort((e, t) => e.height - t.height || e.idx - t.idx)
                .map((e) => ({
                  txid: e.txid,
                  height: e.height,
                  idx: e.idx,
                  outputs: Array.from(e.outputs),
                  parseMode: e.isDep ? F.Dependency : F.Persist,
                }))
            );
          }
          async loadDeps(e, t) {
            const r = t.get(e.txid);
            if (r && !r.outputs.has(e.vout)) return void r.outputs.add(e.vout);
            const a = await this.get(e);
            if (!a) throw new Error(`Missing dep: ${e.txid}:${e.vout}`);
            r ||
              t.set(e.txid, {
                txid: e.txid,
                height: a.block.height,
                idx: Number(a.block.idx),
                isDep: !0,
                outputs: new Set([e.vout]),
              });
            for (const o of Object.values(a.data)) for (const e of o.deps) await this.loadDeps(e, t);
          }
        }
        class Ie {
          constructor(e, t, r) {
            (this.storage = void 0),
              (this.services = void 0),
              (this.emitter = void 0),
              (this.syncRunning = void 0),
              (this.stopSync = !1),
              (this.storage = e),
              (this.services = t),
              (this.emitter = r);
          }
          async destroy() {
            (this.stopSync = !0), await this.syncRunning, await this.storage.destroy();
          }
          async sync() {
            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            this.syncRunning ||
              ((this.syncRunning = this.doSync(e)), e && (await this.syncRunning, (this.syncRunning = void 0)));
          }
          async doSync() {
            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
              t = 1,
              r = await this.storage.getSynced();
            for (r && (t = r.height > 5 ? r.height - 5 : 1); !this.stopSync; )
              try {
                var a;
                const e = await this.services.blocks.getBlocks(t, 1e4);
                if (
                  (console.log(`Syncing 10000 blocks from ${t}: ${e.length} received`),
                  await this.storage.putMany(e),
                  0 == e.length)
                )
                  break;
                var o;
                if (
                  ((null == (a = r) ? void 0 : a.hash) != e[e.length - 1].hash &&
                    (null == (o = this.emitter) || o.emit('syncedBlockHeight', e[e.length - 1].height)),
                  (r = e[e.length - 1]),
                  e.length < 1e4)
                )
                  break;
                t = r.height + 1;
              } catch (t) {
                if (e) throw t;
                console.error(t), await new Promise((e) => setTimeout(e, 1e3));
              }
            if (!e && !this.stopSync) return await new Promise((e) => setTimeout(e, 6e4)), this.doSync(e);
          }
          async isValidRootForHeight(e, t) {
            const r = await this.storage.getByHeight(t);
            return (null == r ? void 0 : r.merkleroot) == e;
          }
          async getChaintip() {
            return this.storage.getSynced();
          }
        }
        class Be {
          constructor(e, t, r, a, o, i) {
            (this.storage = void 0),
              (this.services = void 0),
              (this.stores = void 0),
              (this.indexers = void 0),
              (this.owners = void 0),
              (this.events = void 0),
              (this.syncRunning = void 0),
              (this.stopSync = !1),
              (this.storage = e),
              (this.services = t),
              (this.stores = r),
              (this.indexers = a),
              (this.owners = o),
              (this.events = i);
          }
          async destroy() {
            (this.stopSync = !0), this.syncRunning && (await this.syncRunning), await this.storage.destroy();
          }
          async search(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : U.DESC,
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 100,
              a = arguments.length > 3 ? arguments[3] : void 0;
            return this.storage.search(e, t, r, a);
          }
          async ingest(e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '',
              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : F.Persist,
              a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
              o = arguments.length > 4 ? arguments[4] : void 0;
            const i = await this.buildIndexContext(e);
            for (const c of e.inputs.values()) {
              if (!c.sourceTXID) {
                if (!c.sourceTransaction) throw new Error('Input missing source transaction');
                c.sourceTXID = c.sourceTransaction.id('hex');
              }
              let e;
              if (c.sourceTransaction && r == F.Deep)
                e = (await this.ingest(c.sourceTransaction, 'beef', r, !1)).txos[c.sourceOutputIndex];
              else if (
                ((e = await this.storage.get(new q(c.sourceTXID, c.sourceOutputIndex))), !e || 0 == e.script.length)
              )
                if (a) {
                  const t = await this.stores.txns.loadTx(c.sourceTXID, !0);
                  if (!t) throw new Error(`Failed to load source tx: ${c.sourceTXID}`);
                  e = (await this.ingest(t, 'ancestor', F.Dependency, !1, [c.sourceOutputIndex])).txos[
                    c.sourceOutputIndex
                  ];
                } else e = new G(new q(c.sourceTXID, c.sourceOutputIndex), 0n, [], D.Dependency);
              (e.spend = i.txid), i.spends.push(e);
            }
            const n = await this.storage.getMany(e.outputs.map((e, t) => new q(i.txid, t)));
            for (const [c, l] of e.outputs.entries()) {
              let t = n[c];
              t ||
                (t = new G(
                  new q(i.txid, c),
                  0n,
                  [],
                  r == F.Dependency || (o && !o.includes(c)) ? D.Dependency : D.Validated,
                )),
                (t.satoshis = BigInt(l.satoshis)),
                (t.script = l.lockingScript.toBinary()),
                i.txos.push(t);
              for (const a of this.indexers)
                try {
                  const e = a.parse && (await a.parse(i, c, r));
                  e && (t.data[a.tag] = e);
                } catch (e) {
                  console.error('indexer error: continuing', a.tag, e);
                }
            }
            for (const c of this.indexers) c.preSave && (await c.preSave(i));
            if (r == F.Preview) return i;
            await this.storage.putMany(i.spends),
              i.txos.forEach((e) => {
                e.block = i.block;
              }),
              await this.storage.putMany(i.txos),
              Object.keys(i.summary).length &&
                this.storage.putTxLog({
                  txid: i.txid,
                  height: i.block.height,
                  idx: Number(i.block.idx),
                  summary: i.summary,
                  source: t,
                });
            const s = Object.entries(i.queue);
            return (
              s.length &&
                (await this.queue(
                  s.map((e) => {
                    let [t, r] = e;
                    return {
                      txid: t,
                      height: r.height,
                      idx: Number(r.idx),
                      source: 'ancestor',
                      parseMode: F.Dependency,
                    };
                  }),
                )),
              i
            );
          }
          async updateQueueStats() {
            var e;
            const t = await this.storage.getQueueLength();
            null == (e = this.events) || e.emit('queueStats', { length: t });
          }
          async queue(e) {
            e.forEach((e) => (e.status = e.status || j.QUEUED)), await this.storage.putIngests(e);
          }
          async processQueue() {
            this.syncRunning ||
              (await this.updateQueueStats(),
              (this.syncRunning = Promise.all([
                this.processDownloads(),
                this.processIngests(),
                this.processConfirms(),
                this.processImmutable(),
              ]).then(() => {})));
          }
          async processDownloads() {
            try {
              const e = await this.storage.getIngests(j.QUEUED, 25);
              if (e.length) {
                const t = [],
                  r = [];
                for (const a of e)
                  try {
                    await this.stores.txns.loadTx(a.txid, !0),
                      a.downloadOnly ? t.push(a.txid) : ((a.status = j.DOWNLOADED), r.push(a));
                  } catch (I) {
                    console.error('Failed to download tx', a.txid, I);
                  }
                t.length && (await this.storage.delIngests(t)),
                  r.length && (await this.storage.putIngests(r)),
                  await this.updateQueueStats();
              } else await new Promise((e) => setTimeout(e, 1e3));
            } catch (I) {
              console.error('Failed to ingest txs', I), await new Promise((e) => setTimeout(e, 15e3));
            }
            if (!this.stopSync) return this.processDownloads();
          }
          async processIngests() {
            try {
              const i = await this.storage.getIngests(j.DOWNLOADED, 25);
              if (i.length) {
                console.log('Ingesting', i.length, 'txs');
                var e,
                  t = !1,
                  r = !1;
                try {
                  for (var a, o = re(i); (t = !(a = await o.next()).done); t = !1) {
                    const e = a.value;
                    try {
                      const t = await this.stores.txns.loadTx(e.txid);
                      if (!t) {
                        console.error('Failed to get tx', e.txid);
                        continue;
                      }
                      await this.ingest(t, e.source, e.parseMode, !0, e.outputs),
                        (e.status = j.INGESTED),
                        await this.storage.putIngest(e),
                        await this.updateQueueStats();
                    } catch (t) {
                      console.error('Failed to ingest tx', e.txid, t);
                    }
                  }
                } catch (t) {
                  (r = !0), (e = t);
                } finally {
                  try {
                    t && null != o.return && (await o.return());
                  } finally {
                    if (r) throw e;
                  }
                }
              } else await new Promise((e) => setTimeout(e, 1e3));
            } catch (e) {
              console.error('Failed to ingest txs', e), await new Promise((e) => setTimeout(e, 1e3));
            }
            if (!this.stopSync) return this.processIngests();
          }
          async processConfirms() {
            try {
              const i = await this.storage.getIngests(j.INGESTED, 25, 0, Date.now() - 15e3);
              if (i.length) {
                var e,
                  t = !1,
                  r = !1;
                try {
                  for (var a, o = re(i); (t = !(a = await o.next()).done); t = !1) {
                    const e = a.value;
                    {
                      const t = await this.stores.txns.loadTx(e.txid, !0);
                      if (!t) {
                        console.error('Failed to get tx', e.txid);
                        continue;
                      }
                      if (t.merklePath) {
                        const r = await this.ingest(t, e.source, e.parseMode, !0, e.outputs);
                        (e.status = j.CONFIRMED), (e.height = r.block.height), (e.idx = Number(r.block.idx));
                      } else e.height = Date.now();
                      await this.storage.putIngest(e);
                    }
                  }
                } catch (t) {
                  (r = !0), (e = t);
                } finally {
                  try {
                    t && null != o.return && (await o.return());
                  } finally {
                    if (r) throw e;
                  }
                }
              } else await new Promise((e) => setTimeout(e, 1e3));
            } catch (e) {
              console.error('Failed to ingest txs', e), await new Promise((e) => setTimeout(e, 1e3));
            }
            if (!this.stopSync) return this.processConfirms();
          }
          async processImmutable() {
            try {
              const i = await this.stores.blocks.storage.getSynced();
              if (!i) return await new Promise((e) => setTimeout(e, 1e4)), void this.processImmutable();
              const n = await this.storage.getIngests(j.CONFIRMED, 25, 0, (null == i ? void 0 : i.height) - 6);
              if (n.length) {
                var e,
                  t = !1,
                  r = !1;
                try {
                  for (var a, o = re(n); (t = !(a = await o.next()).done); t = !1) {
                    const e = a.value;
                    {
                      const t = await this.stores.txns.loadTx(e.txid, !0);
                      if (!t || !t.merklePath) {
                        console.error('Failed to get tx', e.txid);
                        continue;
                      }
                      if (!t.merklePath.verify(e.txid, this.stores.blocks)) continue;
                      (e.status = j.IMMUTABLE), await this.storage.putIngest(e);
                    }
                  }
                } catch (t) {
                  (r = !0), (e = t);
                } finally {
                  try {
                    t && null != o.return && (await o.return());
                  } finally {
                    if (r) throw e;
                  }
                }
              } else await new Promise((e) => setTimeout(e, 1e3));
            } catch (e) {
              console.error('Failed to ingest txs', e), await new Promise((e) => setTimeout(e, 1e3));
            }
            if (!this.stopSync) return this.processImmutable();
          }
          async syncTxLogs() {
            var e;
            if (!this.services.account) return;
            let t = await this.storage.getState('lastSync');
            if (!t) return void console.log('No initial sync. Skipping sync for', this.services.account.accountId);
            let r = Number(t || 0);
            console.log('Syncing logs from', r, 'for', this.services.account.accountId);
            const a = (await (null == (e = this.services.account) ? void 0 : e.syncTxLogs(r))) || [],
              o = await this.storage.getTxLogs(a.map((e) => e.txid)),
              i = [];
            for (const [s, c] of a.entries()) o[s] || (i.push(c), c.score && (r = Math.max(r, c.score)));
            var n;
            console.log('Queueing new logs:', i),
              await this.queue(
                i.map((e) => ({
                  txid: e.txid,
                  height: Number(e.height),
                  idx: Number(e.idx || 0),
                  outputs: e.outs,
                  source: 'sync',
                  parseMode: F.Persist,
                })),
              ),
              i.length && (null == (n = this.events) || n.emit('newTxs', i.length)),
              await this.storage.setState('lastSync', r.toString());
          }
          async buildIndexContext(e) {
            const t = { tx: e, txid: e.id('hex'), block: new R(), txos: [], spends: [], queue: {}, summary: {} };
            return (
              e.merklePath &&
                (await e.merklePath.verify(t.txid, this.stores.blocks)) &&
                ((t.block.height = e.merklePath.blockHeight),
                (t.block.idx = BigInt(e.merklePath.path[0].find((e) => e.hash == t.txid).offset || 0))),
              t
            );
          }
          async resolveBlock() {
            const e = await this.services.blocks.getChaintip();
            if (e) for (const t of this.stores.txos.indexers) await t.resolve(this.stores.txos, e);
          }
        }
        class Ne extends V {
          constructor(e, t, r) {
            super(e, t, r, arguments.length > 3 && void 0 !== arguments[3] && arguments[3]),
              (this.services = void 0),
              (this.stores = void 0),
              (this.events = void 0),
              (this.services = e),
              (this.stores = t),
              (this.events = r);
          }
          static async init(e, t) {
            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Set(),
              a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
              o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 'mainnet';
            const i = new W(o, e),
              n = new K(),
              s = { account: i, blocks: i, txns: i, broadcast: i },
              [c, l, u] = await Promise.all([Ee.init(o), _e.init(o), Pe.init(e, o)]),
              d = {};
            return (
              (d.blocks = new Ie(c, s, n)),
              (d.txns = new xe(l, s, d, n)),
              (d.txos = new Be(u, s, d, t, r, n)),
              new V(s, d, n, a)
            );
          }
        }
      },
      5898: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["\u7684","\u4e00","\u662f","\u5728","\u4e0d","\u4e86","\u6709","\u548c","\u4eba","\u8fd9","\u4e2d","\u5927","\u4e3a","\u4e0a","\u4e2a","\u56fd","\u6211","\u4ee5","\u8981","\u4ed6","\u65f6","\u6765","\u7528","\u4eec","\u751f","\u5230","\u4f5c","\u5730","\u4e8e","\u51fa","\u5c31","\u5206","\u5bf9","\u6210","\u4f1a","\u53ef","\u4e3b","\u53d1","\u5e74","\u52a8","\u540c","\u5de5","\u4e5f","\u80fd","\u4e0b","\u8fc7","\u5b50","\u8bf4","\u4ea7","\u79cd","\u9762","\u800c","\u65b9","\u540e","\u591a","\u5b9a","\u884c","\u5b66","\u6cd5","\u6240","\u6c11","\u5f97","\u7ecf","\u5341","\u4e09","\u4e4b","\u8fdb","\u7740","\u7b49","\u90e8","\u5ea6","\u5bb6","\u7535","\u529b","\u91cc","\u5982","\u6c34","\u5316","\u9ad8","\u81ea","\u4e8c","\u7406","\u8d77","\u5c0f","\u7269","\u73b0","\u5b9e","\u52a0","\u91cf","\u90fd","\u4e24","\u4f53","\u5236","\u673a","\u5f53","\u4f7f","\u70b9","\u4ece","\u4e1a","\u672c","\u53bb","\u628a","\u6027","\u597d","\u5e94","\u5f00","\u5b83","\u5408","\u8fd8","\u56e0","\u7531","\u5176","\u4e9b","\u7136","\u524d","\u5916","\u5929","\u653f","\u56db","\u65e5","\u90a3","\u793e","\u4e49","\u4e8b","\u5e73","\u5f62","\u76f8","\u5168","\u8868","\u95f4","\u6837","\u4e0e","\u5173","\u5404","\u91cd","\u65b0","\u7ebf","\u5185","\u6570","\u6b63","\u5fc3","\u53cd","\u4f60","\u660e","\u770b","\u539f","\u53c8","\u4e48","\u5229","\u6bd4","\u6216","\u4f46","\u8d28","\u6c14","\u7b2c","\u5411","\u9053","\u547d","\u6b64","\u53d8","\u6761","\u53ea","\u6ca1","\u7ed3","\u89e3","\u95ee","\u610f","\u5efa","\u6708","\u516c","\u65e0","\u7cfb","\u519b","\u5f88","\u60c5","\u8005","\u6700","\u7acb","\u4ee3","\u60f3","\u5df2","\u901a","\u5e76","\u63d0","\u76f4","\u9898","\u515a","\u7a0b","\u5c55","\u4e94","\u679c","\u6599","\u8c61","\u5458","\u9769","\u4f4d","\u5165","\u5e38","\u6587","\u603b","\u6b21","\u54c1","\u5f0f","\u6d3b","\u8bbe","\u53ca","\u7ba1","\u7279","\u4ef6","\u957f","\u6c42","\u8001","\u5934","\u57fa","\u8d44","\u8fb9","\u6d41","\u8def","\u7ea7","\u5c11","\u56fe","\u5c71","\u7edf","\u63a5","\u77e5","\u8f83","\u5c06","\u7ec4","\u89c1","\u8ba1","\u522b","\u5979","\u624b","\u89d2","\u671f","\u6839","\u8bba","\u8fd0","\u519c","\u6307","\u51e0","\u4e5d","\u533a","\u5f3a","\u653e","\u51b3","\u897f","\u88ab","\u5e72","\u505a","\u5fc5","\u6218","\u5148","\u56de","\u5219","\u4efb","\u53d6","\u636e","\u5904","\u961f","\u5357","\u7ed9","\u8272","\u5149","\u95e8","\u5373","\u4fdd","\u6cbb","\u5317","\u9020","\u767e","\u89c4","\u70ed","\u9886","\u4e03","\u6d77","\u53e3","\u4e1c","\u5bfc","\u5668","\u538b","\u5fd7","\u4e16","\u91d1","\u589e","\u4e89","\u6d4e","\u9636","\u6cb9","\u601d","\u672f","\u6781","\u4ea4","\u53d7","\u8054","\u4ec0","\u8ba4","\u516d","\u5171","\u6743","\u6536","\u8bc1","\u6539","\u6e05","\u7f8e","\u518d","\u91c7","\u8f6c","\u66f4","\u5355","\u98ce","\u5207","\u6253","\u767d","\u6559","\u901f","\u82b1","\u5e26","\u5b89","\u573a","\u8eab","\u8f66","\u4f8b","\u771f","\u52a1","\u5177","\u4e07","\u6bcf","\u76ee","\u81f3","\u8fbe","\u8d70","\u79ef","\u793a","\u8bae","\u58f0","\u62a5","\u6597","\u5b8c","\u7c7b","\u516b","\u79bb","\u534e","\u540d","\u786e","\u624d","\u79d1","\u5f20","\u4fe1","\u9a6c","\u8282","\u8bdd","\u7c73","\u6574","\u7a7a","\u5143","\u51b5","\u4eca","\u96c6","\u6e29","\u4f20","\u571f","\u8bb8","\u6b65","\u7fa4","\u5e7f","\u77f3","\u8bb0","\u9700","\u6bb5","\u7814","\u754c","\u62c9","\u6797","\u5f8b","\u53eb","\u4e14","\u7a76","\u89c2","\u8d8a","\u7ec7","\u88c5","\u5f71","\u7b97","\u4f4e","\u6301","\u97f3","\u4f17","\u4e66","\u5e03","\u590d","\u5bb9","\u513f","\u987b","\u9645","\u5546","\u975e","\u9a8c","\u8fde","\u65ad","\u6df1","\u96be","\u8fd1","\u77ff","\u5343","\u5468","\u59d4","\u7d20","\u6280","\u5907","\u534a","\u529e","\u9752","\u7701","\u5217","\u4e60","\u54cd","\u7ea6","\u652f","\u822c","\u53f2","\u611f","\u52b3","\u4fbf","\u56e2","\u5f80","\u9178","\u5386","\u5e02","\u514b","\u4f55","\u9664","\u6d88","\u6784","\u5e9c","\u79f0","\u592a","\u51c6","\u7cbe","\u503c","\u53f7","\u7387","\u65cf","\u7ef4","\u5212","\u9009","\u6807","\u5199","\u5b58","\u5019","\u6bdb","\u4eb2","\u5feb","\u6548","\u65af","\u9662","\u67e5","\u6c5f","\u578b","\u773c","\u738b","\u6309","\u683c","\u517b","\u6613","\u7f6e","\u6d3e","\u5c42","\u7247","\u59cb","\u5374","\u4e13","\u72b6","\u80b2","\u5382","\u4eac","\u8bc6","\u9002","\u5c5e","\u5706","\u5305","\u706b","\u4f4f","\u8c03","\u6ee1","\u53bf","\u5c40","\u7167","\u53c2","\u7ea2","\u7ec6","\u5f15","\u542c","\u8be5","\u94c1","\u4ef7","\u4e25","\u9996","\u5e95","\u6db2","\u5b98","\u5fb7","\u968f","\u75c5","\u82cf","\u5931","\u5c14","\u6b7b","\u8bb2","\u914d","\u5973","\u9ec4","\u63a8","\u663e","\u8c08","\u7f6a","\u795e","\u827a","\u5462","\u5e2d","\u542b","\u4f01","\u671b","\u5bc6","\u6279","\u8425","\u9879","\u9632","\u4e3e","\u7403","\u82f1","\u6c27","\u52bf","\u544a","\u674e","\u53f0","\u843d","\u6728","\u5e2e","\u8f6e","\u7834","\u4e9a","\u5e08","\u56f4","\u6ce8","\u8fdc","\u5b57","\u6750","\u6392","\u4f9b","\u6cb3","\u6001","\u5c01","\u53e6","\u65bd","\u51cf","\u6811","\u6eb6","\u600e","\u6b62","\u6848","\u8a00","\u58eb","\u5747","\u6b66","\u56fa","\u53f6","\u9c7c","\u6ce2","\u89c6","\u4ec5","\u8d39","\u7d27","\u7231","\u5de6","\u7ae0","\u65e9","\u671d","\u5bb3","\u7eed","\u8f7b","\u670d","\u8bd5","\u98df","\u5145","\u5175","\u6e90","\u5224","\u62a4","\u53f8","\u8db3","\u67d0","\u7ec3","\u5dee","\u81f4","\u677f","\u7530","\u964d","\u9ed1","\u72af","\u8d1f","\u51fb","\u8303","\u7ee7","\u5174","\u4f3c","\u4f59","\u575a","\u66f2","\u8f93","\u4fee","\u6545","\u57ce","\u592b","\u591f","\u9001","\u7b14","\u8239","\u5360","\u53f3","\u8d22","\u5403","\u5bcc","\u6625","\u804c","\u89c9","\u6c49","\u753b","\u529f","\u5df4","\u8ddf","\u867d","\u6742","\u98de","\u68c0","\u5438","\u52a9","\u5347","\u9633","\u4e92","\u521d","\u521b","\u6297","\u8003","\u6295","\u574f","\u7b56","\u53e4","\u5f84","\u6362","\u672a","\u8dd1","\u7559","\u94a2","\u66fe","\u7aef","\u8d23","\u7ad9","\u7b80","\u8ff0","\u94b1","\u526f","\u5c3d","\u5e1d","\u5c04","\u8349","\u51b2","\u627f","\u72ec","\u4ee4","\u9650","\u963f","\u5ba3","\u73af","\u53cc","\u8bf7","\u8d85","\u5fae","\u8ba9","\u63a7","\u5dde","\u826f","\u8f74","\u627e","\u5426","\u7eaa","\u76ca","\u4f9d","\u4f18","\u9876","\u7840","\u8f7d","\u5012","\u623f","\u7a81","\u5750","\u7c89","\u654c","\u7565","\u5ba2","\u8881","\u51b7","\u80dc","\u7edd","\u6790","\u5757","\u5242","\u6d4b","\u4e1d","\u534f","\u8bc9","\u5ff5","\u9648","\u4ecd","\u7f57","\u76d0","\u53cb","\u6d0b","\u9519","\u82e6","\u591c","\u5211","\u79fb","\u9891","\u9010","\u9760","\u6df7","\u6bcd","\u77ed","\u76ae","\u7ec8","\u805a","\u6c7d","\u6751","\u4e91","\u54ea","\u65e2","\u8ddd","\u536b","\u505c","\u70c8","\u592e","\u5bdf","\u70e7","\u8fc5","\u5883","\u82e5","\u5370","\u6d32","\u523b","\u62ec","\u6fc0","\u5b54","\u641e","\u751a","\u5ba4","\u5f85","\u6838","\u6821","\u6563","\u4fb5","\u5427","\u7532","\u6e38","\u4e45","\u83dc","\u5473","\u65e7","\u6a21","\u6e56","\u8d27","\u635f","\u9884","\u963b","\u6beb","\u666e","\u7a33","\u4e59","\u5988","\u690d","\u606f","\u6269","\u94f6","\u8bed","\u6325","\u9152","\u5b88","\u62ff","\u5e8f","\u7eb8","\u533b","\u7f3a","\u96e8","\u5417","\u9488","\u5218","\u554a","\u6025","\u5531","\u8bef","\u8bad","\u613f","\u5ba1","\u9644","\u83b7","\u8336","\u9c9c","\u7cae","\u65a4","\u5b69","\u8131","\u786b","\u80a5","\u5584","\u9f99","\u6f14","\u7236","\u6e10","\u8840","\u6b22","\u68b0","\u638c","\u6b4c","\u6c99","\u521a","\u653b","\u8c13","\u76fe","\u8ba8","\u665a","\u7c92","\u4e71","\u71c3","\u77db","\u4e4e","\u6740","\u836f","\u5b81","\u9c81","\u8d35","\u949f","\u7164","\u8bfb","\u73ed","\u4f2f","\u9999","\u4ecb","\u8feb","\u53e5","\u4e30","\u57f9","\u63e1","\u5170","\u62c5","\u5f26","\u86cb","\u6c89","\u5047","\u7a7f","\u6267","\u7b54","\u4e50","\u8c01","\u987a","\u70df","\u7f29","\u5f81","\u8138","\u559c","\u677e","\u811a","\u56f0","\u5f02","\u514d","\u80cc","\u661f","\u798f","\u4e70","\u67d3","\u4e95","\u6982","\u6162","\u6015","\u78c1","\u500d","\u7956","\u7687","\u4fc3","\u9759","\u8865","\u8bc4","\u7ffb","\u8089","\u8df5","\u5c3c","\u8863","\u5bbd","\u626c","\u68c9","\u5e0c","\u4f24","\u64cd","\u5782","\u79cb","\u5b9c","\u6c22","\u5957","\u7763","\u632f","\u67b6","\u4eae","\u672b","\u5baa","\u5e86","\u7f16","\u725b","\u89e6","\u6620","\u96f7","\u9500","\u8bd7","\u5ea7","\u5c45","\u6293","\u88c2","\u80de","\u547c","\u5a18","\u666f","\u5a01","\u7eff","\u6676","\u539a","\u76df","\u8861","\u9e21","\u5b59","\u5ef6","\u5371","\u80f6","\u5c4b","\u4e61","\u4e34","\u9646","\u987e","\u6389","\u5440","\u706f","\u5c81","\u63aa","\u675f","\u8010","\u5267","\u7389","\u8d75","\u8df3","\u54e5","\u5b63","\u8bfe","\u51ef","\u80e1","\u989d","\u6b3e","\u7ecd","\u5377","\u9f50","\u4f1f","\u84b8","\u6b96","\u6c38","\u5b97","\u82d7","\u5ddd","\u7089","\u5ca9","\u5f31","\u96f6","\u6768","\u594f","\u6cbf","\u9732","\u6746","\u63a2","\u6ed1","\u9547","\u996d","\u6d53","\u822a","\u6000","\u8d76","\u5e93","\u593a","\u4f0a","\u7075","\u7a0e","\u9014","\u706d","\u8d5b","\u5f52","\u53ec","\u9f13","\u64ad","\u76d8","\u88c1","\u9669","\u5eb7","\u552f","\u5f55","\u83cc","\u7eaf","\u501f","\u7cd6","\u76d6","\u6a2a","\u7b26","\u79c1","\u52aa","\u5802","\u57df","\u67aa","\u6da6","\u5e45","\u54c8","\u7adf","\u719f","\u866b","\u6cfd","\u8111","\u58e4","\u78b3","\u6b27","\u904d","\u4fa7","\u5be8","\u6562","\u5f7b","\u8651","\u659c","\u8584","\u5ead","\u7eb3","\u5f39","\u9972","\u4f38","\u6298","\u9ea6","\u6e7f","\u6697","\u8377","\u74e6","\u585e","\u5e8a","\u7b51","\u6076","\u6237","\u8bbf","\u5854","\u5947","\u900f","\u6881","\u5200","\u65cb","\u8ff9","\u5361","\u6c2f","\u9047","\u4efd","\u6bd2","\u6ce5","\u9000","\u6d17","\u6446","\u7070","\u5f69","\u5356","\u8017","\u590f","\u62e9","\u5fd9","\u94dc","\u732e","\u786c","\u4e88","\u7e41","\u5708","\u96ea","\u51fd","\u4ea6","\u62bd","\u7bc7","\u9635","\u9634","\u4e01","\u5c3a","\u8ffd","\u5806","\u96c4","\u8fce","\u6cdb","\u7238","\u697c","\u907f","\u8c0b","\u5428","\u91ce","\u732a","\u65d7","\u7d2f","\u504f","\u5178","\u9986","\u7d22","\u79e6","\u8102","\u6f6e","\u7237","\u8c46","\u5ffd","\u6258","\u60ca","\u5851","\u9057","\u6108","\u6731","\u66ff","\u7ea4","\u7c97","\u503e","\u5c1a","\u75db","\u695a","\u8c22","\u594b","\u8d2d","\u78e8","\u541b","\u6c60","\u65c1","\u788e","\u9aa8","\u76d1","\u6355","\u5f1f","\u66b4","\u5272","\u8d2f","\u6b8a","\u91ca","\u8bcd","\u4ea1","\u58c1","\u987f","\u5b9d","\u5348","\u5c18","\u95fb","\u63ed","\u70ae","\u6b8b","\u51ac","\u6865","\u5987","\u8b66","\u7efc","\u62db","\u5434","\u4ed8","\u6d6e","\u906d","\u5f90","\u60a8","\u6447","\u8c37","\u8d5e","\u7bb1","\u9694","\u8ba2","\u7537","\u5439","\u56ed","\u7eb7","\u5510","\u8d25","\u5b8b","\u73bb","\u5de8","\u8015","\u5766","\u8363","\u95ed","\u6e7e","\u952e","\u51e1","\u9a7b","\u9505","\u6551","\u6069","\u5265","\u51dd","\u78b1","\u9f7f","\u622a","\u70bc","\u9ebb","\u7eba","\u7981","\u5e9f","\u76db","\u7248","\u7f13","\u51c0","\u775b","\u660c","\u5a5a","\u6d89","\u7b52","\u5634","\u63d2","\u5cb8","\u6717","\u5e84","\u8857","\u85cf","\u59d1","\u8d38","\u8150","\u5974","\u5566","\u60ef","\u4e58","\u4f19","\u6062","\u5300","\u7eb1","\u624e","\u8fa9","\u8033","\u5f6a","\u81e3","\u4ebf","\u7483","\u62b5","\u8109","\u79c0","\u8428","\u4fc4","\u7f51","\u821e","\u5e97","\u55b7","\u7eb5","\u5bf8","\u6c57","\u6302","\u6d2a","\u8d3a","\u95ea","\u67ec","\u7206","\u70ef","\u6d25","\u7a3b","\u5899","\u8f6f","\u52c7","\u50cf","\u6eda","\u5398","\u8499","\u82b3","\u80af","\u5761","\u67f1","\u8361","\u817f","\u4eea","\u65c5","\u5c3e","\u8f67","\u51b0","\u8d21","\u767b","\u9ece","\u524a","\u94bb","\u52d2","\u9003","\u969c","\u6c28","\u90ed","\u5cf0","\u5e01","\u6e2f","\u4f0f","\u8f68","\u4ea9","\u6bd5","\u64e6","\u83ab","\u523a","\u6d6a","\u79d8","\u63f4","\u682a","\u5065","\u552e","\u80a1","\u5c9b","\u7518","\u6ce1","\u7761","\u7ae5","\u94f8","\u6c64","\u9600","\u4f11","\u6c47","\u820d","\u7267","\u7ed5","\u70b8","\u54f2","\u78f7","\u7ee9","\u670b","\u6de1","\u5c16","\u542f","\u9677","\u67f4","\u5448","\u5f92","\u989c","\u6cea","\u7a0d","\u5fd8","\u6cf5","\u84dd","\u62d6","\u6d1e","\u6388","\u955c","\u8f9b","\u58ee","\u950b","\u8d2b","\u865a","\u5f2f","\u6469","\u6cf0","\u5e7c","\u5ef7","\u5c0a","\u7a97","\u7eb2","\u5f04","\u96b6","\u7591","\u6c0f","\u5bab","\u59d0","\u9707","\u745e","\u602a","\u5c24","\u7434","\u5faa","\u63cf","\u819c","\u8fdd","\u5939","\u8170","\u7f18","\u73e0","\u7a77","\u68ee","\u679d","\u7af9","\u6c9f","\u50ac","\u7ef3","\u5fc6","\u90a6","\u5269","\u5e78","\u6d46","\u680f","\u62e5","\u7259","\u8d2e","\u793c","\u6ee4","\u94a0","\u7eb9","\u7f62","\u62cd","\u54b1","\u558a","\u8896","\u57c3","\u52e4","\u7f5a","\u7126","\u6f5c","\u4f0d","\u58a8","\u6b32","\u7f1d","\u59d3","\u520a","\u9971","\u4eff","\u5956","\u94dd","\u9b3c","\u4e3d","\u8de8","\u9ed8","\u6316","\u94fe","\u626b","\u559d","\u888b","\u70ad","\u6c61","\u5e55","\u8bf8","\u5f27","\u52b1","\u6885","\u5976","\u6d01","\u707e","\u821f","\u9274","\u82ef","\u8bbc","\u62b1","\u6bc1","\u61c2","\u5bd2","\u667a","\u57d4","\u5bc4","\u5c4a","\u8dc3","\u6e21","\u6311","\u4e39","\u8270","\u8d1d","\u78b0","\u62d4","\u7239","\u6234","\u7801","\u68a6","\u82bd","\u7194","\u8d64","\u6e14","\u54ed","\u656c","\u9897","\u5954","\u94c5","\u4ef2","\u864e","\u7a00","\u59b9","\u4e4f","\u73cd","\u7533","\u684c","\u9075","\u5141","\u9686","\u87ba","\u4ed3","\u9b4f","\u9510","\u6653","\u6c2e","\u517c","\u9690","\u788d","\u8d6b","\u62e8","\u5fe0","\u8083","\u7f38","\u7275","\u62a2","\u535a","\u5de7","\u58f3","\u5144","\u675c","\u8baf","\u8bda","\u78a7","\u7965","\u67ef","\u9875","\u5de1","\u77e9","\u60b2","\u704c","\u9f84","\u4f26","\u7968","\u5bfb","\u6842","\u94fa","\u5723","\u6050","\u6070","\u90d1","\u8da3","\u62ac","\u8352","\u817e","\u8d34","\u67d4","\u6ef4","\u731b","\u9614","\u8f86","\u59bb","\u586b","\u64a4","\u50a8","\u7b7e","\u95f9","\u6270","\u7d2b","\u7802","\u9012","\u620f","\u540a","\u9676","\u4f10","\u5582","\u7597","\u74f6","\u5a46","\u629a","\u81c2","\u6478","\u5fcd","\u867e","\u8721","\u90bb","\u80f8","\u5de9","\u6324","\u5076","\u5f03","\u69fd","\u52b2","\u4e73","\u9093","\u5409","\u4ec1","\u70c2","\u7816","\u79df","\u4e4c","\u8230","\u4f34","\u74dc","\u6d45","\u4e19","\u6682","\u71e5","\u6a61","\u67f3","\u8ff7","\u6696","\u724c","\u79e7","\u80c6","\u8be6","\u7c27","\u8e0f","\u74f7","\u8c31","\u5446","\u5bbe","\u7cca","\u6d1b","\u8f89","\u6124","\u7ade","\u9699","\u6012","\u7c98","\u4e43","\u7eea","\u80a9","\u7c4d","\u654f","\u6d82","\u7199","\u7686","\u4fa6","\u60ac","\u6398","\u4eab","\u7ea0","\u9192","\u72c2","\u9501","\u6dc0","\u6068","\u7272","\u9738","\u722c","\u8d4f","\u9006","\u73a9","\u9675","\u795d","\u79d2","\u6d59","\u8c8c","\u5f79","\u5f7c","\u6089","\u9e2d","\u8d8b","\u51e4","\u6668","\u755c","\u8f88","\u79e9","\u5375","\u7f72","\u68af","\u708e","\u6ee9","\u68cb","\u9a71","\u7b5b","\u5ce1","\u5192","\u5565","\u5bff","\u8bd1","\u6d78","\u6cc9","\u5e3d","\u8fdf","\u7845","\u7586","\u8d37","\u6f0f","\u7a3f","\u51a0","\u5ae9","\u80c1","\u82af","\u7262","\u53db","\u8680","\u5965","\u9e23","\u5cad","\u7f8a","\u51ed","\u4e32","\u5858","\u7ed8","\u9175","\u878d","\u76c6","\u9521","\u5e99","\u7b79","\u51bb","\u8f85","\u6444","\u88ad","\u7b4b","\u62d2","\u50da","\u65f1","\u94be","\u9e1f","\u6f06","\u6c88","\u7709","\u758f","\u6dfb","\u68d2","\u7a57","\u785d","\u97e9","\u903c","\u626d","\u4fa8","\u51c9","\u633a","\u7897","\u683d","\u7092","\u676f","\u60a3","\u998f","\u529d","\u8c6a","\u8fbd","\u52c3","\u9e3f","\u65e6","\u540f","\u62dc","\u72d7","\u57cb","\u8f8a","\u63a9","\u996e","\u642c","\u9a82","\u8f9e","\u52fe","\u6263","\u4f30","\u848b","\u7ed2","\u96fe","\u4e08","\u6735","\u59c6","\u62df","\u5b87","\u8f91","\u9655","\u96d5","\u507f","\u84c4","\u5d07","\u526a","\u5021","\u5385","\u54ac","\u9a76","\u85af","\u5237","\u65a5","\u756a","\u8d4b","\u5949","\u4f5b","\u6d47","\u6f2b","\u66fc","\u6247","\u9499","\u6843","\u6276","\u4ed4","\u8fd4","\u4fd7","\u4e8f","\u8154","\u978b","\u68f1","\u8986","\u6846","\u6084","\u53d4","\u649e","\u9a97","\u52d8","\u65fa","\u6cb8","\u5b64","\u5410","\u5b5f","\u6e20","\u5c48","\u75be","\u5999","\u60dc","\u4ef0","\u72e0","\u80c0","\u8c10","\u629b","\u9709","\u6851","\u5c97","\u561b","\u8870","\u76d7","\u6e17","\u810f","\u8d56","\u6d8c","\u751c","\u66f9","\u9605","\u808c","\u54e9","\u5389","\u70c3","\u7eac","\u6bc5","\u6628","\u4f2a","\u75c7","\u716e","\u53f9","\u9489","\u642d","\u830e","\u7b3c","\u9177","\u5077","\u5f13","\u9525","\u6052","\u6770","\u5751","\u9f3b","\u7ffc","\u7eb6","\u53d9","\u72f1","\u902e","\u7f50","\u7edc","\u68da","\u6291","\u81a8","\u852c","\u5bfa","\u9aa4","\u7a46","\u51b6","\u67af","\u518c","\u5c38","\u51f8","\u7ec5","\u576f","\u727a","\u7130","\u8f70","\u6b23","\u664b","\u7626","\u5fa1","\u952d","\u9526","\u4e27","\u65ec","\u953b","\u5784","\u641c","\u6251","\u9080","\u4ead","\u916f","\u8fc8","\u8212","\u8106","\u9176","\u95f2","\u5fe7","\u915a","\u987d","\u7fbd","\u6da8","\u5378","\u4ed7","\u966a","\u8f9f","\u60e9","\u676d","\u59da","\u809a","\u6349","\u98d8","\u6f02","\u6606","\u6b3a","\u543e","\u90ce","\u70f7","\u6c41","\u5475","\u9970","\u8427","\u96c5","\u90ae","\u8fc1","\u71d5","\u6492","\u59fb","\u8d74","\u5bb4","\u70e6","\u503a","\u5e10","\u6591","\u94c3","\u65e8","\u9187","\u8463","\u997c","\u96cf","\u59ff","\u62cc","\u5085","\u8179","\u59a5","\u63c9","\u8d24","\u62c6","\u6b6a","\u8461","\u80fa","\u4e22","\u6d69","\u5fbd","\u6602","\u57ab","\u6321","\u89c8","\u8d2a","\u6170","\u7f34","\u6c6a","\u614c","\u51af","\u8bfa","\u59dc","\u8c0a","\u51f6","\u52a3","\u8bec","\u8000","\u660f","\u8eba","\u76c8","\u9a91","\u4e54","\u6eaa","\u4e1b","\u5362","\u62b9","\u95f7","\u54a8","\u522e","\u9a7e","\u7f06","\u609f","\u6458","\u94d2","\u63b7","\u9887","\u5e7b","\u67c4","\u60e0","\u60e8","\u4f73","\u4ec7","\u814a","\u7a9d","\u6da4","\u5251","\u77a7","\u5821","\u6cfc","\u8471","\u7f69","\u970d","\u635e","\u80ce","\u82cd","\u6ee8","\u4fe9","\u6345","\u6e58","\u780d","\u971e","\u90b5","\u8404","\u75af","\u6dee","\u9042","\u718a","\u7caa","\u70d8","\u5bbf","\u6863","\u6208","\u9a73","\u5ac2","\u88d5","\u5f99","\u7bad","\u6350","\u80a0","\u6491","\u6652","\u8fa8","\u6bbf","\u83b2","\u644a","\u6405","\u9171","\u5c4f","\u75ab","\u54c0","\u8521","\u5835","\u6cab","\u76b1","\u7545","\u53e0","\u9601","\u83b1","\u6572","\u8f96","\u94a9","\u75d5","\u575d","\u5df7","\u997f","\u7978","\u4e18","\u7384","\u6e9c","\u66f0","\u903b","\u5f6d","\u5c1d","\u537f","\u59a8","\u8247","\u541e","\u97e6","\u6028","\u77ee","\u6b47"]',
        );
      },
      81: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["\u7684","\u4e00","\u662f","\u5728","\u4e0d","\u4e86","\u6709","\u548c","\u4eba","\u9019","\u4e2d","\u5927","\u70ba","\u4e0a","\u500b","\u570b","\u6211","\u4ee5","\u8981","\u4ed6","\u6642","\u4f86","\u7528","\u5011","\u751f","\u5230","\u4f5c","\u5730","\u65bc","\u51fa","\u5c31","\u5206","\u5c0d","\u6210","\u6703","\u53ef","\u4e3b","\u767c","\u5e74","\u52d5","\u540c","\u5de5","\u4e5f","\u80fd","\u4e0b","\u904e","\u5b50","\u8aaa","\u7522","\u7a2e","\u9762","\u800c","\u65b9","\u5f8c","\u591a","\u5b9a","\u884c","\u5b78","\u6cd5","\u6240","\u6c11","\u5f97","\u7d93","\u5341","\u4e09","\u4e4b","\u9032","\u8457","\u7b49","\u90e8","\u5ea6","\u5bb6","\u96fb","\u529b","\u88e1","\u5982","\u6c34","\u5316","\u9ad8","\u81ea","\u4e8c","\u7406","\u8d77","\u5c0f","\u7269","\u73fe","\u5be6","\u52a0","\u91cf","\u90fd","\u5169","\u9ad4","\u5236","\u6a5f","\u7576","\u4f7f","\u9ede","\u5f9e","\u696d","\u672c","\u53bb","\u628a","\u6027","\u597d","\u61c9","\u958b","\u5b83","\u5408","\u9084","\u56e0","\u7531","\u5176","\u4e9b","\u7136","\u524d","\u5916","\u5929","\u653f","\u56db","\u65e5","\u90a3","\u793e","\u7fa9","\u4e8b","\u5e73","\u5f62","\u76f8","\u5168","\u8868","\u9593","\u6a23","\u8207","\u95dc","\u5404","\u91cd","\u65b0","\u7dda","\u5167","\u6578","\u6b63","\u5fc3","\u53cd","\u4f60","\u660e","\u770b","\u539f","\u53c8","\u9ebc","\u5229","\u6bd4","\u6216","\u4f46","\u8cea","\u6c23","\u7b2c","\u5411","\u9053","\u547d","\u6b64","\u8b8a","\u689d","\u53ea","\u6c92","\u7d50","\u89e3","\u554f","\u610f","\u5efa","\u6708","\u516c","\u7121","\u7cfb","\u8ecd","\u5f88","\u60c5","\u8005","\u6700","\u7acb","\u4ee3","\u60f3","\u5df2","\u901a","\u4e26","\u63d0","\u76f4","\u984c","\u9ee8","\u7a0b","\u5c55","\u4e94","\u679c","\u6599","\u8c61","\u54e1","\u9769","\u4f4d","\u5165","\u5e38","\u6587","\u7e3d","\u6b21","\u54c1","\u5f0f","\u6d3b","\u8a2d","\u53ca","\u7ba1","\u7279","\u4ef6","\u9577","\u6c42","\u8001","\u982d","\u57fa","\u8cc7","\u908a","\u6d41","\u8def","\u7d1a","\u5c11","\u5716","\u5c71","\u7d71","\u63a5","\u77e5","\u8f03","\u5c07","\u7d44","\u898b","\u8a08","\u5225","\u5979","\u624b","\u89d2","\u671f","\u6839","\u8ad6","\u904b","\u8fb2","\u6307","\u5e7e","\u4e5d","\u5340","\u5f37","\u653e","\u6c7a","\u897f","\u88ab","\u5e79","\u505a","\u5fc5","\u6230","\u5148","\u56de","\u5247","\u4efb","\u53d6","\u64da","\u8655","\u968a","\u5357","\u7d66","\u8272","\u5149","\u9580","\u5373","\u4fdd","\u6cbb","\u5317","\u9020","\u767e","\u898f","\u71b1","\u9818","\u4e03","\u6d77","\u53e3","\u6771","\u5c0e","\u5668","\u58d3","\u5fd7","\u4e16","\u91d1","\u589e","\u722d","\u6fdf","\u968e","\u6cb9","\u601d","\u8853","\u6975","\u4ea4","\u53d7","\u806f","\u4ec0","\u8a8d","\u516d","\u5171","\u6b0a","\u6536","\u8b49","\u6539","\u6e05","\u7f8e","\u518d","\u63a1","\u8f49","\u66f4","\u55ae","\u98a8","\u5207","\u6253","\u767d","\u6559","\u901f","\u82b1","\u5e36","\u5b89","\u5834","\u8eab","\u8eca","\u4f8b","\u771f","\u52d9","\u5177","\u842c","\u6bcf","\u76ee","\u81f3","\u9054","\u8d70","\u7a4d","\u793a","\u8b70","\u8072","\u5831","\u9b25","\u5b8c","\u985e","\u516b","\u96e2","\u83ef","\u540d","\u78ba","\u624d","\u79d1","\u5f35","\u4fe1","\u99ac","\u7bc0","\u8a71","\u7c73","\u6574","\u7a7a","\u5143","\u6cc1","\u4eca","\u96c6","\u6eab","\u50b3","\u571f","\u8a31","\u6b65","\u7fa4","\u5ee3","\u77f3","\u8a18","\u9700","\u6bb5","\u7814","\u754c","\u62c9","\u6797","\u5f8b","\u53eb","\u4e14","\u7a76","\u89c0","\u8d8a","\u7e54","\u88dd","\u5f71","\u7b97","\u4f4e","\u6301","\u97f3","\u773e","\u66f8","\u5e03","\u590d","\u5bb9","\u5152","\u9808","\u969b","\u5546","\u975e","\u9a57","\u9023","\u65b7","\u6df1","\u96e3","\u8fd1","\u7926","\u5343","\u9031","\u59d4","\u7d20","\u6280","\u5099","\u534a","\u8fa6","\u9752","\u7701","\u5217","\u7fd2","\u97ff","\u7d04","\u652f","\u822c","\u53f2","\u611f","\u52de","\u4fbf","\u5718","\u5f80","\u9178","\u6b77","\u5e02","\u514b","\u4f55","\u9664","\u6d88","\u69cb","\u5e9c","\u7a31","\u592a","\u6e96","\u7cbe","\u503c","\u865f","\u7387","\u65cf","\u7dad","\u5283","\u9078","\u6a19","\u5beb","\u5b58","\u5019","\u6bdb","\u89aa","\u5feb","\u6548","\u65af","\u9662","\u67e5","\u6c5f","\u578b","\u773c","\u738b","\u6309","\u683c","\u990a","\u6613","\u7f6e","\u6d3e","\u5c64","\u7247","\u59cb","\u537b","\u5c08","\u72c0","\u80b2","\u5ee0","\u4eac","\u8b58","\u9069","\u5c6c","\u5713","\u5305","\u706b","\u4f4f","\u8abf","\u6eff","\u7e23","\u5c40","\u7167","\u53c3","\u7d05","\u7d30","\u5f15","\u807d","\u8a72","\u9435","\u50f9","\u56b4","\u9996","\u5e95","\u6db2","\u5b98","\u5fb7","\u96a8","\u75c5","\u8607","\u5931","\u723e","\u6b7b","\u8b1b","\u914d","\u5973","\u9ec3","\u63a8","\u986f","\u8ac7","\u7f6a","\u795e","\u85dd","\u5462","\u5e2d","\u542b","\u4f01","\u671b","\u5bc6","\u6279","\u71df","\u9805","\u9632","\u8209","\u7403","\u82f1","\u6c27","\u52e2","\u544a","\u674e","\u53f0","\u843d","\u6728","\u5e6b","\u8f2a","\u7834","\u4e9e","\u5e2b","\u570d","\u6ce8","\u9060","\u5b57","\u6750","\u6392","\u4f9b","\u6cb3","\u614b","\u5c01","\u53e6","\u65bd","\u6e1b","\u6a39","\u6eb6","\u600e","\u6b62","\u6848","\u8a00","\u58eb","\u5747","\u6b66","\u56fa","\u8449","\u9b5a","\u6ce2","\u8996","\u50c5","\u8cbb","\u7dca","\u611b","\u5de6","\u7ae0","\u65e9","\u671d","\u5bb3","\u7e8c","\u8f15","\u670d","\u8a66","\u98df","\u5145","\u5175","\u6e90","\u5224","\u8b77","\u53f8","\u8db3","\u67d0","\u7df4","\u5dee","\u81f4","\u677f","\u7530","\u964d","\u9ed1","\u72af","\u8ca0","\u64ca","\u8303","\u7e7c","\u8208","\u4f3c","\u9918","\u5805","\u66f2","\u8f38","\u4fee","\u6545","\u57ce","\u592b","\u5920","\u9001","\u7b46","\u8239","\u4f54","\u53f3","\u8ca1","\u5403","\u5bcc","\u6625","\u8077","\u89ba","\u6f22","\u756b","\u529f","\u5df4","\u8ddf","\u96d6","\u96dc","\u98db","\u6aa2","\u5438","\u52a9","\u6607","\u967d","\u4e92","\u521d","\u5275","\u6297","\u8003","\u6295","\u58de","\u7b56","\u53e4","\u5f91","\u63db","\u672a","\u8dd1","\u7559","\u92fc","\u66fe","\u7aef","\u8cac","\u7ad9","\u7c21","\u8ff0","\u9322","\u526f","\u76e1","\u5e1d","\u5c04","\u8349","\u885d","\u627f","\u7368","\u4ee4","\u9650","\u963f","\u5ba3","\u74b0","\u96d9","\u8acb","\u8d85","\u5fae","\u8b93","\u63a7","\u5dde","\u826f","\u8ef8","\u627e","\u5426","\u7d00","\u76ca","\u4f9d","\u512a","\u9802","\u790e","\u8f09","\u5012","\u623f","\u7a81","\u5750","\u7c89","\u6575","\u7565","\u5ba2","\u8881","\u51b7","\u52dd","\u7d55","\u6790","\u584a","\u5291","\u6e2c","\u7d72","\u5354","\u8a34","\u5ff5","\u9673","\u4ecd","\u7f85","\u9e7d","\u53cb","\u6d0b","\u932f","\u82e6","\u591c","\u5211","\u79fb","\u983b","\u9010","\u9760","\u6df7","\u6bcd","\u77ed","\u76ae","\u7d42","\u805a","\u6c7d","\u6751","\u96f2","\u54ea","\u65e2","\u8ddd","\u885b","\u505c","\u70c8","\u592e","\u5bdf","\u71d2","\u8fc5","\u5883","\u82e5","\u5370","\u6d32","\u523b","\u62ec","\u6fc0","\u5b54","\u641e","\u751a","\u5ba4","\u5f85","\u6838","\u6821","\u6563","\u4fb5","\u5427","\u7532","\u904a","\u4e45","\u83dc","\u5473","\u820a","\u6a21","\u6e56","\u8ca8","\u640d","\u9810","\u963b","\u6beb","\u666e","\u7a69","\u4e59","\u5abd","\u690d","\u606f","\u64f4","\u9280","\u8a9e","\u63ee","\u9152","\u5b88","\u62ff","\u5e8f","\u7d19","\u91ab","\u7f3a","\u96e8","\u55ce","\u91dd","\u5289","\u554a","\u6025","\u5531","\u8aa4","\u8a13","\u9858","\u5be9","\u9644","\u7372","\u8336","\u9bae","\u7ce7","\u65a4","\u5b69","\u812b","\u786b","\u80a5","\u5584","\u9f8d","\u6f14","\u7236","\u6f38","\u8840","\u6b61","\u68b0","\u638c","\u6b4c","\u6c99","\u525b","\u653b","\u8b02","\u76fe","\u8a0e","\u665a","\u7c92","\u4e82","\u71c3","\u77db","\u4e4e","\u6bba","\u85e5","\u5be7","\u9b6f","\u8cb4","\u9418","\u7164","\u8b80","\u73ed","\u4f2f","\u9999","\u4ecb","\u8feb","\u53e5","\u8c50","\u57f9","\u63e1","\u862d","\u64d4","\u5f26","\u86cb","\u6c89","\u5047","\u7a7f","\u57f7","\u7b54","\u6a02","\u8ab0","\u9806","\u7159","\u7e2e","\u5fb5","\u81c9","\u559c","\u677e","\u8173","\u56f0","\u7570","\u514d","\u80cc","\u661f","\u798f","\u8cb7","\u67d3","\u4e95","\u6982","\u6162","\u6015","\u78c1","\u500d","\u7956","\u7687","\u4fc3","\u975c","\u88dc","\u8a55","\u7ffb","\u8089","\u8e10","\u5c3c","\u8863","\u5bec","\u63da","\u68c9","\u5e0c","\u50b7","\u64cd","\u5782","\u79cb","\u5b9c","\u6c2b","\u5957","\u7763","\u632f","\u67b6","\u4eae","\u672b","\u61b2","\u6176","\u7de8","\u725b","\u89f8","\u6620","\u96f7","\u92b7","\u8a69","\u5ea7","\u5c45","\u6293","\u88c2","\u80de","\u547c","\u5a18","\u666f","\u5a01","\u7da0","\u6676","\u539a","\u76df","\u8861","\u96de","\u5b6b","\u5ef6","\u5371","\u81a0","\u5c4b","\u9109","\u81e8","\u9678","\u9867","\u6389","\u5440","\u71c8","\u6b72","\u63aa","\u675f","\u8010","\u5287","\u7389","\u8d99","\u8df3","\u54e5","\u5b63","\u8ab2","\u51f1","\u80e1","\u984d","\u6b3e","\u7d39","\u5377","\u9f4a","\u5049","\u84b8","\u6b96","\u6c38","\u5b97","\u82d7","\u5ddd","\u7210","\u5ca9","\u5f31","\u96f6","\u694a","\u594f","\u6cbf","\u9732","\u687f","\u63a2","\u6ed1","\u93ae","\u98ef","\u6fc3","\u822a","\u61f7","\u8d95","\u5eab","\u596a","\u4f0a","\u9748","\u7a05","\u9014","\u6ec5","\u8cfd","\u6b78","\u53ec","\u9f13","\u64ad","\u76e4","\u88c1","\u96aa","\u5eb7","\u552f","\u9304","\u83cc","\u7d14","\u501f","\u7cd6","\u84cb","\u6a6b","\u7b26","\u79c1","\u52aa","\u5802","\u57df","\u69cd","\u6f64","\u5e45","\u54c8","\u7adf","\u719f","\u87f2","\u6fa4","\u8166","\u58e4","\u78b3","\u6b50","\u904d","\u5074","\u5be8","\u6562","\u5fb9","\u616e","\u659c","\u8584","\u5ead","\u7d0d","\u5f48","\u98fc","\u4f38","\u6298","\u9ea5","\u6fd5","\u6697","\u8377","\u74e6","\u585e","\u5e8a","\u7bc9","\u60e1","\u6236","\u8a2a","\u5854","\u5947","\u900f","\u6881","\u5200","\u65cb","\u8de1","\u5361","\u6c2f","\u9047","\u4efd","\u6bd2","\u6ce5","\u9000","\u6d17","\u64fa","\u7070","\u5f69","\u8ce3","\u8017","\u590f","\u64c7","\u5fd9","\u9285","\u737b","\u786c","\u4e88","\u7e41","\u5708","\u96ea","\u51fd","\u4ea6","\u62bd","\u7bc7","\u9663","\u9670","\u4e01","\u5c3a","\u8ffd","\u5806","\u96c4","\u8fce","\u6cdb","\u7238","\u6a13","\u907f","\u8b00","\u5678","\u91ce","\u8c6c","\u65d7","\u7d2f","\u504f","\u5178","\u9928","\u7d22","\u79e6","\u8102","\u6f6e","\u723a","\u8c46","\u5ffd","\u6258","\u9a5a","\u5851","\u907a","\u6108","\u6731","\u66ff","\u7e96","\u7c97","\u50be","\u5c1a","\u75db","\u695a","\u8b1d","\u596e","\u8cfc","\u78e8","\u541b","\u6c60","\u65c1","\u788e","\u9aa8","\u76e3","\u6355","\u5f1f","\u66b4","\u5272","\u8cab","\u6b8a","\u91cb","\u8a5e","\u4ea1","\u58c1","\u9813","\u5bf6","\u5348","\u5875","\u805e","\u63ed","\u70ae","\u6b98","\u51ac","\u6a4b","\u5a66","\u8b66","\u7d9c","\u62db","\u5433","\u4ed8","\u6d6e","\u906d","\u5f90","\u60a8","\u6416","\u8c37","\u8d0a","\u7bb1","\u9694","\u8a02","\u7537","\u5439","\u5712","\u7d1b","\u5510","\u6557","\u5b8b","\u73bb","\u5de8","\u8015","\u5766","\u69ae","\u9589","\u7063","\u9375","\u51e1","\u99d0","\u934b","\u6551","\u6069","\u525d","\u51dd","\u9e7c","\u9f52","\u622a","\u7149","\u9ebb","\u7d21","\u7981","\u5ee2","\u76db","\u7248","\u7de9","\u6de8","\u775b","\u660c","\u5a5a","\u6d89","\u7b52","\u5634","\u63d2","\u5cb8","\u6717","\u838a","\u8857","\u85cf","\u59d1","\u8cbf","\u8150","\u5974","\u5566","\u6163","\u4e58","\u5925","\u6062","\u52fb","\u7d17","\u624e","\u8faf","\u8033","\u5f6a","\u81e3","\u5104","\u7483","\u62b5","\u8108","\u79c0","\u85a9","\u4fc4","\u7db2","\u821e","\u5e97","\u5674","\u7e31","\u5bf8","\u6c57","\u639b","\u6d2a","\u8cc0","\u9583","\u67ec","\u7206","\u70ef","\u6d25","\u7a3b","\u7246","\u8edf","\u52c7","\u50cf","\u6efe","\u5398","\u8499","\u82b3","\u80af","\u5761","\u67f1","\u76ea","\u817f","\u5100","\u65c5","\u5c3e","\u8ecb","\u51b0","\u8ca2","\u767b","\u9ece","\u524a","\u947d","\u52d2","\u9003","\u969c","\u6c28","\u90ed","\u5cf0","\u5e63","\u6e2f","\u4f0f","\u8ecc","\u755d","\u7562","\u64e6","\u83ab","\u523a","\u6d6a","\u79d8","\u63f4","\u682a","\u5065","\u552e","\u80a1","\u5cf6","\u7518","\u6ce1","\u7761","\u7ae5","\u9444","\u6e6f","\u95a5","\u4f11","\u532f","\u820d","\u7267","\u7e5e","\u70b8","\u54f2","\u78f7","\u7e3e","\u670b","\u6de1","\u5c16","\u555f","\u9677","\u67f4","\u5448","\u5f92","\u984f","\u6dda","\u7a0d","\u5fd8","\u6cf5","\u85cd","\u62d6","\u6d1e","\u6388","\u93e1","\u8f9b","\u58ef","\u92d2","\u8ca7","\u865b","\u5f4e","\u6469","\u6cf0","\u5e7c","\u5ef7","\u5c0a","\u7a97","\u7db1","\u5f04","\u96b8","\u7591","\u6c0f","\u5bae","\u59d0","\u9707","\u745e","\u602a","\u5c24","\u7434","\u5faa","\u63cf","\u819c","\u9055","\u593e","\u8170","\u7de3","\u73e0","\u7aae","\u68ee","\u679d","\u7af9","\u6e9d","\u50ac","\u7e69","\u61b6","\u90a6","\u5269","\u5e78","\u6f3f","\u6b04","\u64c1","\u7259","\u8caf","\u79ae","\u6ffe","\u9209","\u7d0b","\u7f77","\u62cd","\u54b1","\u558a","\u8896","\u57c3","\u52e4","\u7f70","\u7126","\u6f5b","\u4f0d","\u58a8","\u6b32","\u7e2b","\u59d3","\u520a","\u98fd","\u4eff","\u734e","\u92c1","\u9b3c","\u9e97","\u8de8","\u9ed8","\u6316","\u93c8","\u6383","\u559d","\u888b","\u70ad","\u6c61","\u5e55","\u8af8","\u5f27","\u52f5","\u6885","\u5976","\u6f54","\u707d","\u821f","\u9451","\u82ef","\u8a1f","\u62b1","\u6bc0","\u61c2","\u5bd2","\u667a","\u57d4","\u5bc4","\u5c46","\u8e8d","\u6e21","\u6311","\u4e39","\u8271","\u8c9d","\u78b0","\u62d4","\u7239","\u6234","\u78bc","\u5922","\u82bd","\u7194","\u8d64","\u6f01","\u54ed","\u656c","\u9846","\u5954","\u925b","\u4ef2","\u864e","\u7a00","\u59b9","\u4e4f","\u73cd","\u7533","\u684c","\u9075","\u5141","\u9686","\u87ba","\u5009","\u9b4f","\u92b3","\u66c9","\u6c2e","\u517c","\u96b1","\u7919","\u8d6b","\u64a5","\u5fe0","\u8085","\u7f38","\u727d","\u6436","\u535a","\u5de7","\u6bbc","\u5144","\u675c","\u8a0a","\u8aa0","\u78a7","\u7965","\u67ef","\u9801","\u5de1","\u77e9","\u60b2","\u704c","\u9f61","\u502b","\u7968","\u5c0b","\u6842","\u92ea","\u8056","\u6050","\u6070","\u912d","\u8da3","\u62ac","\u8352","\u9a30","\u8cbc","\u67d4","\u6ef4","\u731b","\u95ca","\u8f1b","\u59bb","\u586b","\u64a4","\u5132","\u7c3d","\u9b27","\u64fe","\u7d2b","\u7802","\u905e","\u6232","\u540a","\u9676","\u4f10","\u9935","\u7642","\u74f6","\u5a46","\u64ab","\u81c2","\u6478","\u5fcd","\u8766","\u881f","\u9130","\u80f8","\u978f","\u64e0","\u5076","\u68c4","\u69fd","\u52c1","\u4e73","\u9127","\u5409","\u4ec1","\u721b","\u78da","\u79df","\u70cf","\u8266","\u4f34","\u74dc","\u6dfa","\u4e19","\u66ab","\u71e5","\u6a61","\u67f3","\u8ff7","\u6696","\u724c","\u79e7","\u81bd","\u8a73","\u7c27","\u8e0f","\u74f7","\u8b5c","\u5446","\u8cd3","\u7cca","\u6d1b","\u8f1d","\u61a4","\u7af6","\u9699","\u6012","\u7c98","\u4e43","\u7dd2","\u80a9","\u7c4d","\u654f","\u5857","\u7199","\u7686","\u5075","\u61f8","\u6398","\u4eab","\u7cfe","\u9192","\u72c2","\u9396","\u6dc0","\u6068","\u7272","\u9738","\u722c","\u8cde","\u9006","\u73a9","\u9675","\u795d","\u79d2","\u6d59","\u8c8c","\u5f79","\u5f7c","\u6089","\u9d28","\u8da8","\u9cf3","\u6668","\u755c","\u8f29","\u79e9","\u5375","\u7f72","\u68af","\u708e","\u7058","\u68cb","\u9a45","\u7be9","\u5cfd","\u5192","\u5565","\u58fd","\u8b6f","\u6d78","\u6cc9","\u5e3d","\u9072","\u77fd","\u7586","\u8cb8","\u6f0f","\u7a3f","\u51a0","\u5ae9","\u8105","\u82af","\u7262","\u53db","\u8755","\u5967","\u9cf4","\u5dba","\u7f8a","\u6191","\u4e32","\u5858","\u7e6a","\u9175","\u878d","\u76c6","\u932b","\u5edf","\u7c4c","\u51cd","\u8f14","\u651d","\u8972","\u7b4b","\u62d2","\u50da","\u65f1","\u9240","\u9ce5","\u6f06","\u6c88","\u7709","\u758f","\u6dfb","\u68d2","\u7a57","\u785d","\u97d3","\u903c","\u626d","\u50d1","\u6dbc","\u633a","\u7897","\u683d","\u7092","\u676f","\u60a3","\u993e","\u52f8","\u8c6a","\u907c","\u52c3","\u9d3b","\u65e6","\u540f","\u62dc","\u72d7","\u57cb","\u8f25","\u63a9","\u98f2","\u642c","\u7f75","\u8fad","\u52fe","\u6263","\u4f30","\u8523","\u7d68","\u9727","\u4e08","\u6735","\u59c6","\u64ec","\u5b87","\u8f2f","\u965d","\u96d5","\u511f","\u84c4","\u5d07","\u526a","\u5021","\u5ef3","\u54ac","\u99db","\u85af","\u5237","\u65a5","\u756a","\u8ce6","\u5949","\u4f5b","\u6f86","\u6f2b","\u66fc","\u6247","\u9223","\u6843","\u6276","\u4ed4","\u8fd4","\u4fd7","\u8667","\u8154","\u978b","\u68f1","\u8986","\u6846","\u6084","\u53d4","\u649e","\u9a19","\u52d8","\u65fa","\u6cb8","\u5b64","\u5410","\u5b5f","\u6e20","\u5c48","\u75be","\u5999","\u60dc","\u4ef0","\u72e0","\u8139","\u8ae7","\u62cb","\u9ef4","\u6851","\u5d17","\u561b","\u8870","\u76dc","\u6ef2","\u81df","\u8cf4","\u6e67","\u751c","\u66f9","\u95b1","\u808c","\u54e9","\u53b2","\u70f4","\u7def","\u6bc5","\u6628","\u507d","\u75c7","\u716e","\u5606","\u91d8","\u642d","\u8396","\u7c60","\u9177","\u5077","\u5f13","\u9310","\u6046","\u5091","\u5751","\u9f3b","\u7ffc","\u7db8","\u6558","\u7344","\u902e","\u7f50","\u7d61","\u68da","\u6291","\u81a8","\u852c","\u5bfa","\u9a5f","\u7a46","\u51b6","\u67af","\u518a","\u5c4d","\u51f8","\u7d33","\u576f","\u72a7","\u7130","\u8f5f","\u6b23","\u6649","\u7626","\u79a6","\u9320","\u9326","\u55aa","\u65ec","\u935b","\u58df","\u641c","\u64b2","\u9080","\u4ead","\u916f","\u9081","\u8212","\u8106","\u9176","\u9592","\u6182","\u915a","\u9811","\u7fbd","\u6f32","\u5378","\u4ed7","\u966a","\u95e2","\u61f2","\u676d","\u59da","\u809a","\u6349","\u98c4","\u6f02","\u6606","\u6b3a","\u543e","\u90ce","\u70f7","\u6c41","\u5475","\u98fe","\u856d","\u96c5","\u90f5","\u9077","\u71d5","\u6492","\u59fb","\u8d74","\u5bb4","\u7169","\u50b5","\u5e33","\u6591","\u9234","\u65e8","\u9187","\u8463","\u9905","\u96db","\u59ff","\u62cc","\u5085","\u8179","\u59a5","\u63c9","\u8ce2","\u62c6","\u6b6a","\u8461","\u80fa","\u4e1f","\u6d69","\u5fbd","\u6602","\u588a","\u64cb","\u89bd","\u8caa","\u6170","\u7e73","\u6c6a","\u614c","\u99ae","\u8afe","\u59dc","\u8abc","\u5147","\u52a3","\u8aa3","\u8000","\u660f","\u8eba","\u76c8","\u9a0e","\u55ac","\u6eaa","\u53e2","\u76e7","\u62b9","\u60b6","\u8aee","\u522e","\u99d5","\u7e9c","\u609f","\u6458","\u927a","\u64f2","\u9817","\u5e7b","\u67c4","\u60e0","\u6158","\u4f73","\u4ec7","\u81d8","\u7aa9","\u6ecc","\u528d","\u77a7","\u5821","\u6f51","\u8525","\u7f69","\u970d","\u6488","\u80ce","\u84bc","\u6ff1","\u5006","\u6345","\u6e58","\u780d","\u971e","\u90b5","\u8404","\u760b","\u6dee","\u9042","\u718a","\u7cde","\u70d8","\u5bbf","\u6a94","\u6208","\u99c1","\u5ac2","\u88d5","\u5f99","\u7bad","\u6350","\u8178","\u6490","\u66ec","\u8fa8","\u6bbf","\u84ee","\u6524","\u652a","\u91ac","\u5c4f","\u75ab","\u54c0","\u8521","\u5835","\u6cab","\u76ba","\u66a2","\u758a","\u95a3","\u840a","\u6572","\u8f44","\u9264","\u75d5","\u58e9","\u5df7","\u9913","\u798d","\u4e18","\u7384","\u6e9c","\u66f0","\u908f","\u5f6d","\u5617","\u537f","\u59a8","\u8247","\u541e","\u97cb","\u6028","\u77ee","\u6b47"]',
        );
      },
      2607: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"]',
        );
      },
      7736: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]',
        );
      },
      5040: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","acade\u0301mie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acque\u0301rir","acronyme","acteur","actif","actuel","adepte","ade\u0301quat","adhe\u0301sif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","ae\u0301rer","ae\u0301ronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agre\u0301able","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","alge\u0300bre","algue","alie\u0301ner","aliment","alle\u0301ger","alliage","allouer","allumer","alourdir","alpaga","altesse","alve\u0301ole","amateur","ambigu","ambre","ame\u0301nager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","ane\u0301antir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","ape\u0301ritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","arte\u0301riel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannie\u0300re","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","be\u0301lier","belote","be\u0301ne\u0301fice","berceau","berger","berline","bermuda","besace","besogne","be\u0301tail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","bre\u0300che","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","cafe\u0301ine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","came\u0301ra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","ce\u0301dille","ceinture","ce\u0301leste","cellule","cendrier","censurer","central","cercle","ce\u0301re\u0301bral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","che\u0301quier","chercher","cheval","chien","chiffre","chignon","chime\u0300re","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cine\u0301ma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohe\u0301sion","coiffer","coincer","cole\u0300re","colibri","colline","colmater","colonel","combat","come\u0301die","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","corte\u0300ge","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","cre\u0301ature","cre\u0301diter","cre\u0301meux","creuser","crevette","cribler","crier","cristal","crite\u0300re","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuille\u0300re","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","de\u0301battre","de\u0301biter","de\u0301border","de\u0301brider","de\u0301butant","de\u0301caler","de\u0301cembre","de\u0301chirer","de\u0301cider","de\u0301clarer","de\u0301corer","de\u0301crire","de\u0301cupler","de\u0301dale","de\u0301ductif","de\u0301esse","de\u0301fensif","de\u0301filer","de\u0301frayer","de\u0301gager","de\u0301givrer","de\u0301glutir","de\u0301grafer","de\u0301jeuner","de\u0301lice","de\u0301loger","demander","demeurer","de\u0301molir","de\u0301nicher","de\u0301nouer","dentelle","de\u0301nuder","de\u0301part","de\u0301penser","de\u0301phaser","de\u0301placer","de\u0301poser","de\u0301ranger","de\u0301rober","de\u0301sastre","descente","de\u0301sert","de\u0301signer","de\u0301sobe\u0301ir","dessiner","destrier","de\u0301tacher","de\u0301tester","de\u0301tourer","de\u0301tresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","diffe\u0301rer","dige\u0301rer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","e\u0301blouir","e\u0301carter","e\u0301charpe","e\u0301chelle","e\u0301clairer","e\u0301clipse","e\u0301clore","e\u0301cluse","e\u0301cole","e\u0301conomie","e\u0301corce","e\u0301couter","e\u0301craser","e\u0301cre\u0301mer","e\u0301crivain","e\u0301crou","e\u0301cume","e\u0301cureuil","e\u0301difier","e\u0301duquer","effacer","effectif","effigie","effort","effrayer","effusion","e\u0301galiser","e\u0301garer","e\u0301jecter","e\u0301laborer","e\u0301largir","e\u0301lectron","e\u0301le\u0301gant","e\u0301le\u0301phant","e\u0301le\u0300ve","e\u0301ligible","e\u0301litisme","e\u0301loge","e\u0301lucider","e\u0301luder","emballer","embellir","embryon","e\u0301meraude","e\u0301mission","emmener","e\u0301motion","e\u0301mouvoir","empereur","employer","emporter","emprise","e\u0301mulsion","encadrer","enche\u0300re","enclave","encoche","endiguer","endosser","endroit","enduire","e\u0301nergie","enfance","enfermer","enfouir","engager","engin","englober","e\u0301nigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","e\u0301nume\u0301rer","envahir","enviable","envoyer","enzyme","e\u0301olien","e\u0301paissir","e\u0301pargne","e\u0301patant","e\u0301paule","e\u0301picerie","e\u0301pide\u0301mie","e\u0301pier","e\u0301pilogue","e\u0301pine","e\u0301pisode","e\u0301pitaphe","e\u0301poque","e\u0301preuve","e\u0301prouver","e\u0301puisant","e\u0301querre","e\u0301quipe","e\u0301riger","e\u0301rosion","erreur","e\u0301ruption","escalier","espadon","espe\u0300ce","espie\u0300gle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","e\u0301tage\u0300re","e\u0301taler","e\u0301tanche","e\u0301tatique","e\u0301teindre","e\u0301tendoir","e\u0301ternel","e\u0301thanol","e\u0301thique","ethnie","e\u0301tirer","e\u0301toffer","e\u0301toile","e\u0301tonnant","e\u0301tourdir","e\u0301trange","e\u0301troit","e\u0301tude","euphorie","e\u0301valuer","e\u0301vasion","e\u0301ventail","e\u0301vidence","e\u0301viter","e\u0301volutif","e\u0301voquer","exact","exage\u0301rer","exaucer","exceller","excitant","exclusif","excuse","exe\u0301cuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expe\u0301dier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fe\u0301brile","fe\u0301conder","fe\u0301de\u0301rer","fe\u0301lin","femme","fe\u0301mur","fendoir","fe\u0301odal","fermer","fe\u0301roce","ferveur","festival","feuille","feutre","fe\u0301vrier","fiasco","ficeler","fictif","fide\u0300le","figure","filature","filetage","filie\u0300re","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fle\u0301au","fle\u0300che","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fouge\u0300re","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","fre\u0301gate","freiner","frelon","fre\u0301mir","fre\u0301ne\u0301sie","fre\u0300re","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","ge\u0301ant","ge\u0301latine","ge\u0301lule","gendarme","ge\u0301ne\u0301ral","ge\u0301nie","genou","gentil","ge\u0301ologie","ge\u0301ome\u0300tre","ge\u0301ranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruye\u0300re","gue\u0301pard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","he\u0301lium","he\u0301matome","herbe","he\u0301risson","hermine","he\u0301ron","he\u0301siter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homoge\u0300ne","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygie\u0300ne","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impe\u0301rial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","ine\u0301dit","ineptie","inexact","infini","infliger","informer","infusion","inge\u0301rer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irre\u0301el","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juve\u0301nile","kayak","kimono","kiosque","label","labial","labourer","lace\u0301rer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","le\u0301gal","le\u0301ger","le\u0301gume","lessive","lettre","levier","lexique","le\u0301zard","liasse","libe\u0301rer","libre","licence","licorne","lie\u0300ge","lie\u0300vre","ligature","ligoter","ligue","limer","limite","limonade","limpide","line\u0301aire","lingot","lionceau","liquide","lisie\u0300re","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumie\u0300re","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","male\u0301fice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","mate\u0301riel","matie\u0300re","matraque","maudire","maussade","mauve","maximal","me\u0301chant","me\u0301connu","me\u0301daille","me\u0301decin","me\u0301diter","me\u0301duse","meilleur","me\u0301lange","me\u0301lodie","membre","me\u0301moire","menacer","mener","menhir","mensonge","mentor","mercredi","me\u0301rite","merle","messager","mesure","me\u0301tal","me\u0301te\u0301ore","me\u0301thode","me\u0301tier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","mine\u0301ral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","mure\u0300ne","murmure","muscle","muse\u0301um","musicien","mutation","muter","mutuel","myriade","myrtille","myste\u0300re","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","ne\u0301buleux","nectar","ne\u0301faste","ne\u0301gation","ne\u0301gliger","ne\u0301gocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","nume\u0301ro","nuptial","nuque","nutritif","obe\u0301ir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","oce\u0301an","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","one\u0301reux","onirique","opale","opaque","ope\u0301rer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxyge\u0300ne","ozone","paisible","palace","palmare\u0300s","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","paste\u0300que","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pe\u0301lican","pelle","pelouse","peluche","pendule","pe\u0301ne\u0301trer","pe\u0301nible","pensif","pe\u0301nurie","pe\u0301pite","pe\u0301plum","perdrix","perforer","pe\u0301riode","permuter","perplexe","persil","perte","peser","pe\u0301tale","petit","pe\u0301trir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pie\u0300ce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poe\u0301sie","poe\u0300te","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","ponde\u0301rer","poney","portique","position","posse\u0301der","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","pre\u0301cieux","pre\u0301dire","pre\u0301fixe","pre\u0301lude","pre\u0301nom","pre\u0301sence","pre\u0301texte","pre\u0301voir","primitif","prince","prison","priver","proble\u0300me","proce\u0301der","prodige","profond","progre\u0300s","proie","projeter","prologue","promener","propre","prospe\u0300re","prote\u0301ger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quie\u0301tude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","re\u0301actif","re\u0301agir","re\u0301aliser","re\u0301animer","recevoir","re\u0301citer","re\u0301clamer","re\u0301colter","recruter","reculer","recycler","re\u0301diger","redouter","refaire","re\u0301flexe","re\u0301former","refrain","refuge","re\u0301galien","re\u0301gion","re\u0301glage","re\u0301gulier","re\u0301ite\u0301rer","rejeter","rejouer","relatif","relever","relief","remarque","reme\u0300de","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","re\u0301serve","re\u0301sineux","re\u0301soudre","respect","rester","re\u0301sultat","re\u0301tablir","retenir","re\u0301ticule","retomber","retracer","re\u0301union","re\u0301ussir","revanche","revivre","re\u0301volte","re\u0301vulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivie\u0300re","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","sce\u0301le\u0301rat","sce\u0301nario","sceptre","sche\u0301ma","science","scinder","score","scrutin","sculpter","se\u0301ance","se\u0301cable","se\u0301cher","secouer","se\u0301cre\u0301ter","se\u0301datif","se\u0301duire","seigneur","se\u0301jour","se\u0301lectif","semaine","sembler","semence","se\u0301minal","se\u0301nateur","sensible","sentence","se\u0301parer","se\u0301quence","serein","sergent","se\u0301rieux","serrure","se\u0301rum","service","se\u0301same","se\u0301vir","sevrage","sextuple","side\u0301ral","sie\u0300cle","sie\u0301ger","siffler","sigle","signal","silence","silicium","simple","since\u0300re","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spe\u0301cial","sphe\u0300re","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succe\u0300s","sucre","suffixe","sugge\u0301rer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","syme\u0301trie","synapse","syntaxe","syste\u0300me","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","te\u0301moin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","te\u0301tine","texte","the\u0300me","the\u0301orie","the\u0301rapie","thorax","tibia","tie\u0300de","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tole\u0301rant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","tre\u0300fle","tremper","tre\u0301sor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","ve\u0301ge\u0301tal","ve\u0301hicule","veinard","ve\u0301loce","vendredi","ve\u0301ne\u0301rer","venger","venimeux","ventouse","verdure","ve\u0301rin","vernir","verrou","verser","vertu","veston","ve\u0301te\u0301ran","ve\u0301tuste","vexant","vexer","viaduc","viande","victoire","vidange","vide\u0301o","vignette","vigueur","vilain","village","vinaigre","violon","vipe\u0300re","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xe\u0301non","yacht","ze\u0300bre","ze\u0301nith","zeste","zoologie"]',
        );
      },
      5576: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]',
        );
      },
      7967: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["\u3042\u3044\u3053\u304f\u3057\u3093","\u3042\u3044\u3055\u3064","\u3042\u3044\u305f\u3099","\u3042\u304a\u305d\u3099\u3089","\u3042\u304b\u3061\u3083\u3093","\u3042\u304d\u308b","\u3042\u3051\u304b\u3099\u305f","\u3042\u3051\u308b","\u3042\u3053\u304b\u3099\u308c\u308b","\u3042\u3055\u3044","\u3042\u3055\u3072","\u3042\u3057\u3042\u3068","\u3042\u3057\u3099\u308f\u3046","\u3042\u3059\u3099\u304b\u308b","\u3042\u3059\u3099\u304d","\u3042\u305d\u3075\u3099","\u3042\u305f\u3048\u308b","\u3042\u305f\u305f\u3081\u308b","\u3042\u305f\u308a\u307e\u3048","\u3042\u305f\u308b","\u3042\u3064\u3044","\u3042\u3064\u304b\u3046","\u3042\u3063\u3057\u3085\u304f","\u3042\u3064\u307e\u308a","\u3042\u3064\u3081\u308b","\u3042\u3066\u306a","\u3042\u3066\u306f\u307e\u308b","\u3042\u3072\u308b","\u3042\u3075\u3099\u3089","\u3042\u3075\u3099\u308b","\u3042\u3075\u308c\u308b","\u3042\u307e\u3044","\u3042\u307e\u3068\u3099","\u3042\u307e\u3084\u304b\u3059","\u3042\u307e\u308a","\u3042\u307f\u3082\u306e","\u3042\u3081\u308a\u304b","\u3042\u3084\u307e\u308b","\u3042\u3086\u3080","\u3042\u3089\u3044\u304f\u3099\u307e","\u3042\u3089\u3057","\u3042\u3089\u3059\u3057\u3099","\u3042\u3089\u305f\u3081\u308b","\u3042\u3089\u3086\u308b","\u3042\u3089\u308f\u3059","\u3042\u308a\u304b\u3099\u3068\u3046","\u3042\u308f\u305b\u308b","\u3042\u308f\u3066\u308b","\u3042\u3093\u3044","\u3042\u3093\u304b\u3099\u3044","\u3042\u3093\u3053","\u3042\u3093\u305b\u3099\u3093","\u3042\u3093\u3066\u3044","\u3042\u3093\u306a\u3044","\u3042\u3093\u307e\u308a","\u3044\u3044\u305f\u3099\u3059","\u3044\u304a\u3093","\u3044\u304b\u3099\u3044","\u3044\u304b\u3099\u304f","\u3044\u304d\u304a\u3044","\u3044\u304d\u306a\u308a","\u3044\u304d\u3082\u306e","\u3044\u304d\u308b","\u3044\u304f\u3057\u3099","\u3044\u304f\u3075\u3099\u3093","\u3044\u3051\u306f\u3099\u306a","\u3044\u3051\u3093","\u3044\u3053\u3046","\u3044\u3053\u304f","\u3044\u3053\u3064","\u3044\u3055\u307e\u3057\u3044","\u3044\u3055\u3093","\u3044\u3057\u304d","\u3044\u3057\u3099\u3085\u3046","\u3044\u3057\u3099\u3087\u3046","\u3044\u3057\u3099\u308f\u308b","\u3044\u3059\u3099\u307f","\u3044\u3059\u3099\u308c","\u3044\u305b\u3044","\u3044\u305b\u3048\u3072\u3099","\u3044\u305b\u304b\u3044","\u3044\u305b\u304d","\u3044\u305b\u3099\u3093","\u3044\u305d\u3046\u308d\u3046","\u3044\u305d\u304b\u3099\u3057\u3044","\u3044\u305f\u3099\u3044","\u3044\u305f\u3099\u304f","\u3044\u305f\u3059\u3099\u3089","\u3044\u305f\u307f","\u3044\u305f\u308a\u3042","\u3044\u3061\u304a\u3046","\u3044\u3061\u3057\u3099","\u3044\u3061\u3068\u3099","\u3044\u3061\u306f\u3099","\u3044\u3061\u3075\u3099","\u3044\u3061\u308a\u3085\u3046","\u3044\u3064\u304b","\u3044\u3063\u3057\u3085\u3093","\u3044\u3063\u305b\u3044","\u3044\u3063\u305d\u3046","\u3044\u3063\u305f\u3093","\u3044\u3063\u3061","\u3044\u3063\u3066\u3044","\u3044\u3063\u307b\u309a\u3046","\u3044\u3066\u3055\u3099","\u3044\u3066\u3093","\u3044\u3068\u3099\u3046","\u3044\u3068\u3053","\u3044\u306a\u3044","\u3044\u306a\u304b","\u3044\u306d\u3080\u308a","\u3044\u306e\u3061","\u3044\u306e\u308b","\u3044\u306f\u3064","\u3044\u306f\u3099\u308b","\u3044\u306f\u3093","\u3044\u3072\u3099\u304d","\u3044\u3072\u3093","\u3044\u3075\u304f","\u3044\u3078\u3093","\u3044\u307b\u3046","\u3044\u307f\u3093","\u3044\u3082\u3046\u3068","\u3044\u3082\u305f\u308c","\u3044\u3082\u308a","\u3044\u3084\u304b\u3099\u308b","\u3044\u3084\u3059","\u3044\u3088\u304b\u3093","\u3044\u3088\u304f","\u3044\u3089\u3044","\u3044\u3089\u3059\u3068","\u3044\u308a\u304f\u3099\u3061","\u3044\u308a\u3087\u3046","\u3044\u308c\u3044","\u3044\u308c\u3082\u306e","\u3044\u308c\u308b","\u3044\u308d\u3048\u3093\u3072\u309a\u3064","\u3044\u308f\u3044","\u3044\u308f\u3046","\u3044\u308f\u304b\u3093","\u3044\u308f\u306f\u3099","\u3044\u308f\u3086\u308b","\u3044\u3093\u3051\u3099\u3093\u307e\u3081","\u3044\u3093\u3055\u3064","\u3044\u3093\u3057\u3087\u3046","\u3044\u3093\u3088\u3046","\u3046\u3048\u304d","\u3046\u3048\u308b","\u3046\u304a\u3055\u3099","\u3046\u304b\u3099\u3044","\u3046\u304b\u3075\u3099","\u3046\u304b\u3078\u3099\u308b","\u3046\u304d\u308f","\u3046\u304f\u3089\u3044\u306a","\u3046\u304f\u308c\u308c","\u3046\u3051\u305f\u307e\u308f\u308b","\u3046\u3051\u3064\u3051","\u3046\u3051\u3068\u308b","\u3046\u3051\u3082\u3064","\u3046\u3051\u308b","\u3046\u3053\u3099\u304b\u3059","\u3046\u3053\u3099\u304f","\u3046\u3053\u3093","\u3046\u3055\u304d\u3099","\u3046\u3057\u306a\u3046","\u3046\u3057\u308d\u304b\u3099\u307f","\u3046\u3059\u3044","\u3046\u3059\u304d\u3099","\u3046\u3059\u304f\u3099\u3089\u3044","\u3046\u3059\u3081\u308b","\u3046\u305b\u3064","\u3046\u3061\u3042\u308f\u305b","\u3046\u3061\u304b\u3099\u308f","\u3046\u3061\u304d","\u3046\u3061\u3085\u3046","\u3046\u3063\u304b\u308a","\u3046\u3064\u304f\u3057\u3044","\u3046\u3063\u305f\u3048\u308b","\u3046\u3064\u308b","\u3046\u3068\u3099\u3093","\u3046\u306a\u304d\u3099","\u3046\u306a\u3057\u3099","\u3046\u306a\u3059\u3099\u304f","\u3046\u306a\u308b","\u3046\u306d\u308b","\u3046\u306e\u3046","\u3046\u3075\u3099\u3051\u3099","\u3046\u3075\u3099\u3053\u3099\u3048","\u3046\u307e\u308c\u308b","\u3046\u3081\u308b","\u3046\u3082\u3046","\u3046\u3084\u307e\u3046","\u3046\u3088\u304f","\u3046\u3089\u304b\u3099\u3048\u3059","\u3046\u3089\u304f\u3099\u3061","\u3046\u3089\u306a\u3044","\u3046\u308a\u3042\u3051\u3099","\u3046\u308a\u304d\u308c","\u3046\u308b\u3055\u3044","\u3046\u308c\u3057\u3044","\u3046\u308c\u3086\u304d","\u3046\u308c\u308b","\u3046\u308d\u3053","\u3046\u308f\u304d","\u3046\u308f\u3055","\u3046\u3093\u3053\u3046","\u3046\u3093\u3061\u3093","\u3046\u3093\u3066\u3093","\u3046\u3093\u3068\u3099\u3046","\u3048\u3044\u3048\u3093","\u3048\u3044\u304b\u3099","\u3048\u3044\u304d\u3087\u3046","\u3048\u3044\u3053\u3099","\u3048\u3044\u305b\u3044","\u3048\u3044\u3075\u3099\u3093","\u3048\u3044\u3088\u3046","\u3048\u3044\u308f","\u3048\u304a\u308a","\u3048\u304b\u3099\u304a","\u3048\u304b\u3099\u304f","\u3048\u304d\u305f\u3044","\u3048\u304f\u305b\u308b","\u3048\u3057\u3083\u304f","\u3048\u3059\u3066","\u3048\u3064\u3089\u3093","\u3048\u306e\u304f\u3099","\u3048\u307b\u3046\u307e\u304d","\u3048\u307b\u3093","\u3048\u307e\u304d","\u3048\u3082\u3057\u3099","\u3048\u3082\u306e","\u3048\u3089\u3044","\u3048\u3089\u3075\u3099","\u3048\u308a\u3042","\u3048\u3093\u3048\u3093","\u3048\u3093\u304b\u3044","\u3048\u3093\u304d\u3099","\u3048\u3093\u3051\u3099\u304d","\u3048\u3093\u3057\u3085\u3046","\u3048\u3093\u305b\u3099\u3064","\u3048\u3093\u305d\u304f","\u3048\u3093\u3061\u3087\u3046","\u3048\u3093\u3068\u3064","\u304a\u3044\u304b\u3051\u308b","\u304a\u3044\u3053\u3059","\u304a\u3044\u3057\u3044","\u304a\u3044\u3064\u304f","\u304a\u3046\u3048\u3093","\u304a\u3046\u3055\u307e","\u304a\u3046\u3057\u3099","\u304a\u3046\u305b\u3064","\u304a\u3046\u305f\u3044","\u304a\u3046\u3075\u304f","\u304a\u3046\u3078\u3099\u3044","\u304a\u3046\u3088\u3046","\u304a\u3048\u308b","\u304a\u304a\u3044","\u304a\u304a\u3046","\u304a\u304a\u3068\u3099\u304a\u308a","\u304a\u304a\u3084","\u304a\u304a\u3088\u305d","\u304a\u304b\u3048\u308a","\u304a\u304b\u3059\u3099","\u304a\u304b\u3099\u3080","\u304a\u304b\u308f\u308a","\u304a\u304d\u3099\u306a\u3046","\u304a\u304d\u308b","\u304a\u304f\u3055\u307e","\u304a\u304f\u3057\u3099\u3087\u3046","\u304a\u304f\u308a\u304b\u3099\u306a","\u304a\u304f\u308b","\u304a\u304f\u308c\u308b","\u304a\u3053\u3059","\u304a\u3053\u306a\u3046","\u304a\u3053\u308b","\u304a\u3055\u3048\u308b","\u304a\u3055\u306a\u3044","\u304a\u3055\u3081\u308b","\u304a\u3057\u3044\u308c","\u304a\u3057\u3048\u308b","\u304a\u3057\u3099\u304d\u3099","\u304a\u3057\u3099\u3055\u3093","\u304a\u3057\u3083\u308c","\u304a\u305d\u3089\u304f","\u304a\u305d\u308f\u308b","\u304a\u305f\u304b\u3099\u3044","\u304a\u305f\u304f","\u304a\u305f\u3099\u3084\u304b","\u304a\u3061\u3064\u304f","\u304a\u3063\u3068","\u304a\u3064\u308a","\u304a\u3066\u3099\u304b\u3051","\u304a\u3068\u3057\u3082\u306e","\u304a\u3068\u306a\u3057\u3044","\u304a\u3068\u3099\u308a","\u304a\u3068\u3099\u308d\u304b\u3059","\u304a\u306f\u3099\u3055\u3093","\u304a\u307e\u3044\u308a","\u304a\u3081\u3066\u3099\u3068\u3046","\u304a\u3082\u3044\u3066\u3099","\u304a\u3082\u3046","\u304a\u3082\u305f\u3044","\u304a\u3082\u3061\u3083","\u304a\u3084\u3064","\u304a\u3084\u3086\u3072\u3099","\u304a\u3088\u307b\u3099\u3059","\u304a\u3089\u3093\u305f\u3099","\u304a\u308d\u3059","\u304a\u3093\u304b\u3099\u304f","\u304a\u3093\u3051\u3044","\u304a\u3093\u3057\u3083","\u304a\u3093\u305b\u3093","\u304a\u3093\u305f\u3099\u3093","\u304a\u3093\u3061\u3085\u3046","\u304a\u3093\u3068\u3099\u3051\u3044","\u304b\u3042\u3064","\u304b\u3044\u304b\u3099","\u304b\u3099\u3044\u304d","\u304b\u3099\u3044\u3051\u3093","\u304b\u3099\u3044\u3053\u3046","\u304b\u3044\u3055\u3064","\u304b\u3044\u3057\u3083","\u304b\u3044\u3059\u3044\u3088\u304f","\u304b\u3044\u305b\u3099\u3093","\u304b\u3044\u305d\u3099\u3046\u3068\u3099","\u304b\u3044\u3064\u3046","\u304b\u3044\u3066\u3093","\u304b\u3044\u3068\u3046","\u304b\u3044\u3075\u304f","\u304b\u3099\u3044\u3078\u304d","\u304b\u3044\u307b\u3046","\u304b\u3044\u3088\u3046","\u304b\u3099\u3044\u3089\u3044","\u304b\u3044\u308f","\u304b\u3048\u308b","\u304b\u304a\u308a","\u304b\u304b\u3048\u308b","\u304b\u304b\u3099\u304f","\u304b\u304b\u3099\u3057","\u304b\u304b\u3099\u307f","\u304b\u304f\u3053\u3099","\u304b\u304f\u3068\u304f","\u304b\u3055\u3099\u308b","\u304b\u3099\u305d\u3099\u3046","\u304b\u305f\u3044","\u304b\u305f\u3061","\u304b\u3099\u3061\u3087\u3046","\u304b\u3099\u3063\u304d\u3085\u3046","\u304b\u3099\u3063\u3053\u3046","\u304b\u3099\u3063\u3055\u3093","\u304b\u3099\u3063\u3057\u3087\u3046","\u304b\u306a\u3055\u3099\u308f\u3057","\u304b\u306e\u3046","\u304b\u3099\u306f\u304f","\u304b\u3075\u3099\u304b","\u304b\u307b\u3046","\u304b\u307b\u3053\u3099","\u304b\u307e\u3046","\u304b\u307e\u307b\u3099\u3053","\u304b\u3081\u308c\u304a\u3093","\u304b\u3086\u3044","\u304b\u3088\u3046\u3072\u3099","\u304b\u3089\u3044","\u304b\u308b\u3044","\u304b\u308d\u3046","\u304b\u308f\u304f","\u304b\u308f\u3089","\u304b\u3099\u3093\u304b","\u304b\u3093\u3051\u3044","\u304b\u3093\u3053\u3046","\u304b\u3093\u3057\u3083","\u304b\u3093\u305d\u3046","\u304b\u3093\u305f\u3093","\u304b\u3093\u3061","\u304b\u3099\u3093\u306f\u3099\u308b","\u304d\u3042\u3044","\u304d\u3042\u3064","\u304d\u3044\u308d","\u304d\u3099\u3044\u3093","\u304d\u3046\u3044","\u304d\u3046\u3093","\u304d\u3048\u308b","\u304d\u304a\u3046","\u304d\u304a\u304f","\u304d\u304a\u3061","\u304d\u304a\u3093","\u304d\u304b\u3044","\u304d\u304b\u304f","\u304d\u304b\u3093\u3057\u3083","\u304d\u304d\u3066","\u304d\u304f\u306f\u3099\u308a","\u304d\u304f\u3089\u3051\u3099","\u304d\u3051\u3093\u305b\u3044","\u304d\u3053\u3046","\u304d\u3053\u3048\u308b","\u304d\u3053\u304f","\u304d\u3055\u3044","\u304d\u3055\u304f","\u304d\u3055\u307e","\u304d\u3055\u3089\u304d\u3099","\u304d\u3099\u3057\u3099\u304b\u304b\u3099\u304f","\u304d\u3099\u3057\u304d","\u304d\u3099\u3057\u3099\u305f\u3044\u3051\u3093","\u304d\u3099\u3057\u3099\u306b\u3063\u3066\u3044","\u304d\u3099\u3057\u3099\u3085\u3064\u3057\u3083","\u304d\u3059\u3046","\u304d\u305b\u3044","\u304d\u305b\u304d","\u304d\u305b\u3064","\u304d\u305d\u3046","\u304d\u305d\u3099\u304f","\u304d\u305d\u3099\u3093","\u304d\u305f\u3048\u308b","\u304d\u3061\u3087\u3046","\u304d\u3064\u3048\u3093","\u304d\u3099\u3063\u3061\u308a","\u304d\u3064\u3064\u304d","\u304d\u3064\u306d","\u304d\u3066\u3044","\u304d\u3068\u3099\u3046","\u304d\u3068\u3099\u304f","\u304d\u306a\u3044","\u304d\u306a\u304b\u3099","\u304d\u306a\u3053","\u304d\u306c\u3053\u3099\u3057","\u304d\u306d\u3093","\u304d\u306e\u3046","\u304d\u306e\u3057\u305f","\u304d\u306f\u304f","\u304d\u3072\u3099\u3057\u3044","\u304d\u3072\u3093","\u304d\u3075\u304f","\u304d\u3075\u3099\u3093","\u304d\u307b\u3099\u3046","\u304d\u307b\u3093","\u304d\u307e\u308b","\u304d\u307f\u3064","\u304d\u3080\u3059\u3099\u304b\u3057\u3044","\u304d\u3081\u308b","\u304d\u3082\u305f\u3099\u3081\u3057","\u304d\u3082\u3061","\u304d\u3082\u306e","\u304d\u3083\u304f","\u304d\u3084\u304f","\u304d\u3099\u3085\u3046\u306b\u304f","\u304d\u3088\u3046","\u304d\u3087\u3046\u308a\u3085\u3046","\u304d\u3089\u3044","\u304d\u3089\u304f","\u304d\u308a\u3093","\u304d\u308c\u3044","\u304d\u308c\u3064","\u304d\u308d\u304f","\u304d\u3099\u308d\u3093","\u304d\u308f\u3081\u308b","\u304d\u3099\u3093\u3044\u308d","\u304d\u3093\u304b\u304f\u3057\u3099","\u304d\u3093\u3057\u3099\u3087","\u304d\u3093\u3088\u3046\u3072\u3099","\u304f\u3099\u3042\u3044","\u304f\u3044\u3059\u3099","\u304f\u3046\u304b\u3093","\u304f\u3046\u304d","\u304f\u3046\u304f\u3099\u3093","\u304f\u3046\u3053\u3046","\u304f\u3099\u3046\u305b\u3044","\u304f\u3046\u305d\u3046","\u304f\u3099\u3046\u305f\u3089","\u304f\u3046\u3075\u304f","\u304f\u3046\u307b\u3099","\u304f\u304b\u3093","\u304f\u304d\u3087\u3046","\u304f\u3051\u3099\u3093","\u304f\u3099\u3053\u3046","\u304f\u3055\u3044","\u304f\u3055\u304d","\u304f\u3055\u306f\u3099\u306a","\u304f\u3055\u308b","\u304f\u3057\u3083\u307f","\u304f\u3057\u3087\u3046","\u304f\u3059\u306e\u304d","\u304f\u3059\u308a\u3086\u3072\u3099","\u304f\u305b\u3051\u3099","\u304f\u305b\u3093","\u304f\u3099\u305f\u3044\u3066\u304d","\u304f\u305f\u3099\u3055\u308b","\u304f\u305f\u3072\u3099\u308c\u308b","\u304f\u3061\u3053\u307f","\u304f\u3061\u3055\u304d","\u304f\u3064\u3057\u305f","\u304f\u3099\u3063\u3059\u308a","\u304f\u3064\u308d\u304f\u3099","\u304f\u3068\u3046\u3066\u3093","\u304f\u3068\u3099\u304f","\u304f\u306a\u3093","\u304f\u306d\u304f\u306d","\u304f\u306e\u3046","\u304f\u3075\u3046","\u304f\u307f\u3042\u308f\u305b","\u304f\u307f\u305f\u3066\u308b","\u304f\u3081\u308b","\u304f\u3084\u304f\u3057\u3087","\u304f\u3089\u3059","\u304f\u3089\u3078\u3099\u308b","\u304f\u308b\u307e","\u304f\u308c\u308b","\u304f\u308d\u3046","\u304f\u308f\u3057\u3044","\u304f\u3099\u3093\u304b\u3093","\u304f\u3099\u3093\u3057\u3087\u304f","\u304f\u3099\u3093\u305f\u3044","\u304f\u3099\u3093\u3066","\u3051\u3042\u306a","\u3051\u3044\u304b\u304f","\u3051\u3044\u3051\u3093","\u3051\u3044\u3053","\u3051\u3044\u3055\u3064","\u3051\u3099\u3044\u3057\u3099\u3085\u3064","\u3051\u3044\u305f\u3044","\u3051\u3099\u3044\u306e\u3046\u3057\u3099\u3093","\u3051\u3044\u308c\u304d","\u3051\u3044\u308d","\u3051\u304a\u3068\u3059","\u3051\u304a\u308a\u3082\u306e","\u3051\u3099\u304d\u304b","\u3051\u3099\u304d\u3051\u3099\u3093","\u3051\u3099\u304d\u305f\u3099\u3093","\u3051\u3099\u304d\u3061\u3093","\u3051\u3099\u304d\u3068\u3064","\u3051\u3099\u304d\u306f","\u3051\u3099\u304d\u3084\u304f","\u3051\u3099\u3053\u3046","\u3051\u3099\u3053\u304f\u3057\u3099\u3087\u3046","\u3051\u3099\u3055\u3099\u3044","\u3051\u3055\u304d","\u3051\u3099\u3055\u3099\u3093","\u3051\u3057\u304d","\u3051\u3057\u3053\u3099\u3080","\u3051\u3057\u3087\u3046","\u3051\u3099\u3059\u3068","\u3051\u305f\u306f\u3099","\u3051\u3061\u3083\u3063\u3075\u309a","\u3051\u3061\u3089\u3059","\u3051\u3064\u3042\u3064","\u3051\u3064\u3044","\u3051\u3064\u3048\u304d","\u3051\u3063\u3053\u3093","\u3051\u3064\u3057\u3099\u3087","\u3051\u3063\u305b\u304d","\u3051\u3063\u3066\u3044","\u3051\u3064\u307e\u3064","\u3051\u3099\u3064\u3088\u3046\u3072\u3099","\u3051\u3099\u3064\u308c\u3044","\u3051\u3064\u308d\u3093","\u3051\u3099\u3068\u3099\u304f","\u3051\u3068\u306f\u3099\u3059","\u3051\u3068\u308b","\u3051\u306a\u3051\u3099","\u3051\u306a\u3059","\u3051\u306a\u307f","\u3051\u306c\u304d","\u3051\u3099\u306d\u3064","\u3051\u306d\u3093","\u3051\u306f\u3044","\u3051\u3099\u3072\u3093","\u3051\u3075\u3099\u304b\u3044","\u3051\u3099\u307b\u3099\u304f","\u3051\u307e\u308a","\u3051\u307f\u304b\u308b","\u3051\u3080\u3057","\u3051\u3080\u308a","\u3051\u3082\u306e","\u3051\u3089\u3044","\u3051\u308d\u3051\u308d","\u3051\u308f\u3057\u3044","\u3051\u3093\u3044","\u3051\u3093\u3048\u3064","\u3051\u3093\u304a","\u3051\u3093\u304b","\u3051\u3099\u3093\u304d","\u3051\u3093\u3051\u3099\u3093","\u3051\u3093\u3053\u3046","\u3051\u3093\u3055\u304f","\u3051\u3093\u3057\u3085\u3046","\u3051\u3093\u3059\u3046","\u3051\u3099\u3093\u305d\u3046","\u3051\u3093\u3061\u304f","\u3051\u3093\u3066\u3044","\u3051\u3093\u3068\u3046","\u3051\u3093\u306a\u3044","\u3051\u3093\u306b\u3093","\u3051\u3099\u3093\u3075\u3099\u3064","\u3051\u3093\u307e","\u3051\u3093\u307f\u3093","\u3051\u3093\u3081\u3044","\u3051\u3093\u3089\u3093","\u3051\u3093\u308a","\u3053\u3042\u304f\u307e","\u3053\u3044\u306c","\u3053\u3044\u3072\u3099\u3068","\u3053\u3099\u3046\u3044","\u3053\u3046\u3048\u3093","\u3053\u3046\u304a\u3093","\u3053\u3046\u304b\u3093","\u3053\u3099\u3046\u304d\u3085\u3046","\u3053\u3099\u3046\u3051\u3044","\u3053\u3046\u3053\u3046","\u3053\u3046\u3055\u3044","\u3053\u3046\u3057\u3099","\u3053\u3046\u3059\u3044","\u3053\u3099\u3046\u305b\u3044","\u3053\u3046\u305d\u304f","\u3053\u3046\u305f\u3044","\u3053\u3046\u3061\u3083","\u3053\u3046\u3064\u3046","\u3053\u3046\u3066\u3044","\u3053\u3046\u3068\u3099\u3046","\u3053\u3046\u306a\u3044","\u3053\u3046\u306f\u3044","\u3053\u3099\u3046\u307b\u3046","\u3053\u3099\u3046\u307e\u3093","\u3053\u3046\u3082\u304f","\u3053\u3046\u308a\u3064","\u3053\u3048\u308b","\u3053\u304a\u308a","\u3053\u3099\u304b\u3044","\u3053\u3099\u304b\u3099\u3064","\u3053\u3099\u304b\u3093","\u3053\u304f\u3053\u3099","\u3053\u304f\u3055\u3044","\u3053\u304f\u3068\u3046","\u3053\u304f\u306a\u3044","\u3053\u304f\u306f\u304f","\u3053\u304f\u3099\u307e","\u3053\u3051\u3044","\u3053\u3051\u308b","\u3053\u3053\u306e\u304b","\u3053\u3053\u308d","\u3053\u3055\u3081","\u3053\u3057\u3064","\u3053\u3059\u3046","\u3053\u305b\u3044","\u3053\u305b\u304d","\u3053\u305b\u3099\u3093","\u3053\u305d\u305f\u3099\u3066","\u3053\u305f\u3044","\u3053\u305f\u3048\u308b","\u3053\u305f\u3064","\u3053\u3061\u3087\u3046","\u3053\u3063\u304b","\u3053\u3064\u3053\u3064","\u3053\u3064\u306f\u3099\u3093","\u3053\u3064\u3075\u3099","\u3053\u3066\u3044","\u3053\u3066\u3093","\u3053\u3068\u304b\u3099\u3089","\u3053\u3068\u3057","\u3053\u3068\u306f\u3099","\u3053\u3068\u308a","\u3053\u306a\u3053\u3099\u306a","\u3053\u306d\u3053\u306d","\u3053\u306e\u307e\u307e","\u3053\u306e\u307f","\u3053\u306e\u3088","\u3053\u3099\u306f\u3093","\u3053\u3072\u3064\u3057\u3099","\u3053\u3075\u3046","\u3053\u3075\u3093","\u3053\u307b\u3099\u308c\u308b","\u3053\u3099\u307e\u3042\u3075\u3099\u3089","\u3053\u307e\u304b\u3044","\u3053\u3099\u307e\u3059\u308a","\u3053\u307e\u3064\u306a","\u3053\u307e\u308b","\u3053\u3080\u304d\u3099\u3053","\u3053\u3082\u3057\u3099","\u3053\u3082\u3061","\u3053\u3082\u306e","\u3053\u3082\u3093","\u3053\u3084\u304f","\u3053\u3084\u307e","\u3053\u3086\u3046","\u3053\u3086\u3072\u3099","\u3053\u3088\u3044","\u3053\u3088\u3046","\u3053\u308a\u308b","\u3053\u308c\u304f\u3057\u3087\u3093","\u3053\u308d\u3063\u3051","\u3053\u308f\u3082\u3066","\u3053\u308f\u308c\u308b","\u3053\u3093\u3044\u3093","\u3053\u3093\u304b\u3044","\u3053\u3093\u304d","\u3053\u3093\u3057\u3085\u3046","\u3053\u3093\u3059\u3044","\u3053\u3093\u305f\u3099\u3066","\u3053\u3093\u3068\u3093","\u3053\u3093\u306a\u3093","\u3053\u3093\u3072\u3099\u306b","\u3053\u3093\u307b\u309a\u3093","\u3053\u3093\u307e\u3051","\u3053\u3093\u3084","\u3053\u3093\u308c\u3044","\u3053\u3093\u308f\u304f","\u3055\u3099\u3044\u3048\u304d","\u3055\u3044\u304b\u3044","\u3055\u3044\u304d\u3093","\u3055\u3099\u3044\u3051\u3099\u3093","\u3055\u3099\u3044\u3053","\u3055\u3044\u3057\u3087","\u3055\u3044\u305b\u3044","\u3055\u3099\u3044\u305f\u304f","\u3055\u3099\u3044\u3061\u3085\u3046","\u3055\u3044\u3066\u304d","\u3055\u3099\u3044\u308a\u3087\u3046","\u3055\u3046\u306a","\u3055\u304b\u3044\u3057","\u3055\u304b\u3099\u3059","\u3055\u304b\u306a","\u3055\u304b\u307f\u3061","\u3055\u304b\u3099\u308b","\u3055\u304d\u3099\u3087\u3046","\u3055\u304f\u3057","\u3055\u304f\u3072\u3093","\u3055\u304f\u3089","\u3055\u3053\u304f","\u3055\u3053\u3064","\u3055\u3059\u3099\u304b\u308b","\u3055\u3099\u305b\u304d","\u3055\u305f\u3093","\u3055\u3064\u3048\u3044","\u3055\u3099\u3064\u304a\u3093","\u3055\u3099\u3063\u304b","\u3055\u3099\u3064\u304b\u3099\u304f","\u3055\u3063\u304d\u3087\u304f","\u3055\u3099\u3063\u3057","\u3055\u3064\u3057\u3099\u3093","\u3055\u3099\u3063\u305d\u3046","\u3055\u3064\u305f\u306f\u3099","\u3055\u3064\u307e\u3044\u3082","\u3055\u3066\u3044","\u3055\u3068\u3044\u3082","\u3055\u3068\u3046","\u3055\u3068\u304a\u3084","\u3055\u3068\u3057","\u3055\u3068\u308b","\u3055\u306e\u3046","\u3055\u306f\u3099\u304f","\u3055\u3072\u3099\u3057\u3044","\u3055\u3078\u3099\u3064","\u3055\u307b\u3046","\u3055\u307b\u3068\u3099","\u3055\u307e\u3059","\u3055\u307f\u3057\u3044","\u3055\u307f\u305f\u3099\u308c","\u3055\u3080\u3051","\u3055\u3081\u308b","\u3055\u3084\u3048\u3093\u3068\u3099\u3046","\u3055\u3086\u3046","\u3055\u3088\u3046","\u3055\u3088\u304f","\u3055\u3089\u305f\u3099","\u3055\u3099\u308b\u305d\u306f\u3099","\u3055\u308f\u3084\u304b","\u3055\u308f\u308b","\u3055\u3093\u3044\u3093","\u3055\u3093\u304b","\u3055\u3093\u304d\u3083\u304f","\u3055\u3093\u3053\u3046","\u3055\u3093\u3055\u3044","\u3055\u3099\u3093\u3057\u3087","\u3055\u3093\u3059\u3046","\u3055\u3093\u305b\u3044","\u3055\u3093\u305d","\u3055\u3093\u3061","\u3055\u3093\u307e","\u3055\u3093\u307f","\u3055\u3093\u3089\u3093","\u3057\u3042\u3044","\u3057\u3042\u3051\u3099","\u3057\u3042\u3055\u3063\u3066","\u3057\u3042\u308f\u305b","\u3057\u3044\u304f","\u3057\u3044\u3093","\u3057\u3046\u3061","\u3057\u3048\u3044","\u3057\u304a\u3051","\u3057\u304b\u3044","\u3057\u304b\u304f","\u3057\u3099\u304b\u3093","\u3057\u3053\u3099\u3068","\u3057\u3059\u3046","\u3057\u3099\u305f\u3099\u3044","\u3057\u305f\u3046\u3051","\u3057\u305f\u304d\u3099","\u3057\u305f\u3066","\u3057\u305f\u307f","\u3057\u3061\u3087\u3046","\u3057\u3061\u308a\u3093","\u3057\u3063\u304b\u308a","\u3057\u3064\u3057\u3099","\u3057\u3064\u3082\u3093","\u3057\u3066\u3044","\u3057\u3066\u304d","\u3057\u3066\u3064","\u3057\u3099\u3066\u3093","\u3057\u3099\u3068\u3099\u3046","\u3057\u306a\u304d\u3099\u308c","\u3057\u306a\u3082\u306e","\u3057\u306a\u3093","\u3057\u306d\u307e","\u3057\u306d\u3093","\u3057\u306e\u304f\u3099","\u3057\u306e\u3075\u3099","\u3057\u306f\u3044","\u3057\u306f\u3099\u304b\u308a","\u3057\u306f\u3064","\u3057\u306f\u3089\u3044","\u3057\u306f\u3093","\u3057\u3072\u3087\u3046","\u3057\u3075\u304f","\u3057\u3099\u3075\u3099\u3093","\u3057\u3078\u3044","\u3057\u307b\u3046","\u3057\u307b\u3093","\u3057\u307e\u3046","\u3057\u307e\u308b","\u3057\u307f\u3093","\u3057\u3080\u3051\u308b","\u3057\u3099\u3080\u3057\u3087","\u3057\u3081\u3044","\u3057\u3081\u308b","\u3057\u3082\u3093","\u3057\u3083\u3044\u3093","\u3057\u3083\u3046\u3093","\u3057\u3083\u304a\u3093","\u3057\u3099\u3083\u304b\u3099\u3044\u3082","\u3057\u3084\u304f\u3057\u3087","\u3057\u3083\u304f\u307b\u3046","\u3057\u3083\u3051\u3093","\u3057\u3083\u3053","\u3057\u3083\u3055\u3099\u3044","\u3057\u3083\u3057\u3093","\u3057\u3083\u305b\u3093","\u3057\u3083\u305d\u3046","\u3057\u3083\u305f\u3044","\u3057\u3083\u3061\u3087\u3046","\u3057\u3083\u3063\u304d\u3093","\u3057\u3099\u3083\u307e","\u3057\u3083\u308a\u3093","\u3057\u3083\u308c\u3044","\u3057\u3099\u3086\u3046","\u3057\u3099\u3085\u3046\u3057\u3087","\u3057\u3085\u304f\u306f\u304f","\u3057\u3099\u3085\u3057\u3093","\u3057\u3085\u3063\u305b\u304d","\u3057\u3085\u307f","\u3057\u3085\u3089\u306f\u3099","\u3057\u3099\u3085\u3093\u306f\u3099\u3093","\u3057\u3087\u3046\u304b\u3044","\u3057\u3087\u304f\u305f\u304f","\u3057\u3087\u3063\u3051\u3093","\u3057\u3087\u3068\u3099\u3046","\u3057\u3087\u3082\u3064","\u3057\u3089\u305b\u308b","\u3057\u3089\u3078\u3099\u308b","\u3057\u3093\u304b","\u3057\u3093\u3053\u3046","\u3057\u3099\u3093\u3057\u3099\u3083","\u3057\u3093\u305b\u3044\u3057\u3099","\u3057\u3093\u3061\u304f","\u3057\u3093\u308a\u3093","\u3059\u3042\u3051\u3099","\u3059\u3042\u3057","\u3059\u3042\u306a","\u3059\u3099\u3042\u3093","\u3059\u3044\u3048\u3044","\u3059\u3044\u304b","\u3059\u3044\u3068\u3046","\u3059\u3099\u3044\u3075\u3099\u3093","\u3059\u3044\u3088\u3046\u3072\u3099","\u3059\u3046\u304b\u3099\u304f","\u3059\u3046\u3057\u3099\u3064","\u3059\u3046\u305b\u3093","\u3059\u304a\u3068\u3099\u308a","\u3059\u304d\u307e","\u3059\u304f\u3046","\u3059\u304f\u306a\u3044","\u3059\u3051\u308b","\u3059\u3053\u3099\u3044","\u3059\u3053\u3057","\u3059\u3099\u3055\u3093","\u3059\u3059\u3099\u3057\u3044","\u3059\u3059\u3080","\u3059\u3059\u3081\u308b","\u3059\u3063\u304b\u308a","\u3059\u3099\u3063\u3057\u308a","\u3059\u3099\u3063\u3068","\u3059\u3066\u304d","\u3059\u3066\u308b","\u3059\u306d\u308b","\u3059\u306e\u3053","\u3059\u306f\u305f\u3099","\u3059\u306f\u3099\u3089\u3057\u3044","\u3059\u3099\u3072\u3087\u3046","\u3059\u3099\u3075\u3099\u306c\u308c","\u3059\u3075\u3099\u308a","\u3059\u3075\u308c","\u3059\u3078\u3099\u3066","\u3059\u3078\u3099\u308b","\u3059\u3099\u307b\u3046","\u3059\u307b\u3099\u3093","\u3059\u307e\u3044","\u3059\u3081\u3057","\u3059\u3082\u3046","\u3059\u3084\u304d","\u3059\u3089\u3059\u3089","\u3059\u308b\u3081","\u3059\u308c\u3061\u304b\u3099\u3046","\u3059\u308d\u3063\u3068","\u3059\u308f\u308b","\u3059\u3093\u305b\u3099\u3093","\u3059\u3093\u307b\u309a\u3046","\u305b\u3042\u3075\u3099\u3089","\u305b\u3044\u304b\u3064","\u305b\u3044\u3051\u3099\u3093","\u305b\u3044\u3057\u3099","\u305b\u3044\u3088\u3046","\u305b\u304a\u3046","\u305b\u304b\u3044\u304b\u3093","\u305b\u304d\u306b\u3093","\u305b\u304d\u3080","\u305b\u304d\u3086","\u305b\u304d\u3089\u3093\u3046\u3093","\u305b\u3051\u3093","\u305b\u3053\u3046","\u305b\u3059\u3057\u3099","\u305b\u305f\u3044","\u305b\u305f\u3051","\u305b\u3063\u304b\u304f","\u305b\u3063\u304d\u3083\u304f","\u305b\u3099\u3063\u304f","\u305b\u3063\u3051\u3093","\u305b\u3063\u3053\u3064","\u305b\u3063\u3055\u305f\u304f\u307e","\u305b\u3064\u305d\u3099\u304f","\u305b\u3064\u305f\u3099\u3093","\u305b\u3064\u3066\u3099\u3093","\u305b\u3063\u306f\u309a\u3093","\u305b\u3064\u3072\u3099","\u305b\u3064\u3075\u3099\u3093","\u305b\u3064\u3081\u3044","\u305b\u3064\u308a\u3064","\u305b\u306a\u304b","\u305b\u306e\u3072\u3099","\u305b\u306f\u306f\u3099","\u305b\u3072\u3099\u308d","\u305b\u307b\u3099\u306d","\u305b\u307e\u3044","\u305b\u307e\u308b","\u305b\u3081\u308b","\u305b\u3082\u305f\u308c","\u305b\u308a\u3075","\u305b\u3099\u3093\u3042\u304f","\u305b\u3093\u3044","\u305b\u3093\u3048\u3044","\u305b\u3093\u304b","\u305b\u3093\u304d\u3087","\u305b\u3093\u304f","\u305b\u3093\u3051\u3099\u3093","\u305b\u3099\u3093\u3053\u3099","\u305b\u3093\u3055\u3044","\u305b\u3093\u3057\u3085","\u305b\u3093\u3059\u3044","\u305b\u3093\u305b\u3044","\u305b\u3093\u305d\u3099","\u305b\u3093\u305f\u304f","\u305b\u3093\u3061\u3087\u3046","\u305b\u3093\u3066\u3044","\u305b\u3093\u3068\u3046","\u305b\u3093\u306c\u304d","\u305b\u3093\u306d\u3093","\u305b\u3093\u306f\u309a\u3044","\u305b\u3099\u3093\u3075\u3099","\u305b\u3099\u3093\u307b\u309a\u3046","\u305b\u3093\u3080","\u305b\u3093\u3081\u3093\u3057\u3099\u3087","\u305b\u3093\u3082\u3093","\u305b\u3093\u3084\u304f","\u305b\u3093\u3086\u3046","\u305b\u3093\u3088\u3046","\u305b\u3099\u3093\u3089","\u305b\u3099\u3093\u308a\u3083\u304f","\u305b\u3093\u308c\u3044","\u305b\u3093\u308d","\u305d\u3042\u304f","\u305d\u3044\u3068\u3051\u3099\u308b","\u305d\u3044\u306d","\u305d\u3046\u304b\u3099\u3093\u304d\u3087\u3046","\u305d\u3046\u304d","\u305d\u3046\u3053\u3099","\u305d\u3046\u3057\u3093","\u305d\u3046\u305f\u3099\u3093","\u305d\u3046\u306a\u3093","\u305d\u3046\u3072\u3099","\u305d\u3046\u3081\u3093","\u305d\u3046\u308a","\u305d\u3048\u3082\u306e","\u305d\u3048\u3093","\u305d\u304b\u3099\u3044","\u305d\u3051\u3099\u304d","\u305d\u3053\u3046","\u305d\u3053\u305d\u3053","\u305d\u3055\u3099\u3044","\u305d\u3057\u306a","\u305d\u305b\u3044","\u305d\u305b\u3093","\u305d\u305d\u304f\u3099","\u305d\u305f\u3099\u3066\u308b","\u305d\u3064\u3046","\u305d\u3064\u3048\u3093","\u305d\u3063\u304b\u3093","\u305d\u3064\u304d\u3099\u3087\u3046","\u305d\u3063\u3051\u3064","\u305d\u3063\u3053\u3046","\u305d\u3063\u305b\u3093","\u305d\u3063\u3068","\u305d\u3068\u304b\u3099\u308f","\u305d\u3068\u3064\u3099\u3089","\u305d\u306a\u3048\u308b","\u305d\u306a\u305f","\u305d\u3075\u307b\u3099","\u305d\u307b\u3099\u304f","\u305d\u307b\u3099\u308d","\u305d\u307e\u3064","\u305d\u307e\u308b","\u305d\u3080\u304f","\u305d\u3080\u308a\u3048","\u305d\u3081\u308b","\u305d\u3082\u305d\u3082","\u305d\u3088\u304b\u305b\u3099","\u305d\u3089\u307e\u3081","\u305d\u308d\u3046","\u305d\u3093\u304b\u3044","\u305d\u3093\u3051\u3044","\u305d\u3093\u3055\u3099\u3044","\u305d\u3093\u3057\u3064","\u305d\u3093\u305d\u3099\u304f","\u305d\u3093\u3061\u3087\u3046","\u305d\u3099\u3093\u3072\u3099","\u305d\u3099\u3093\u3075\u3099\u3093","\u305d\u3093\u307f\u3093","\u305f\u3042\u3044","\u305f\u3044\u3044\u3093","\u305f\u3044\u3046\u3093","\u305f\u3044\u3048\u304d","\u305f\u3044\u304a\u3046","\u305f\u3099\u3044\u304b\u3099\u304f","\u305f\u3044\u304d","\u305f\u3044\u304f\u3099\u3046","\u305f\u3044\u3051\u3093","\u305f\u3044\u3053","\u305f\u3044\u3055\u3099\u3044","\u305f\u3099\u3044\u3057\u3099\u3087\u3046\u3075\u3099","\u305f\u3099\u3044\u3059\u304d","\u305f\u3044\u305b\u3064","\u305f\u3044\u305d\u3046","\u305f\u3099\u3044\u305f\u3044","\u305f\u3044\u3061\u3087\u3046","\u305f\u3044\u3066\u3044","\u305f\u3099\u3044\u3068\u3099\u3053\u308d","\u305f\u3044\u306a\u3044","\u305f\u3044\u306d\u3064","\u305f\u3044\u306e\u3046","\u305f\u3044\u306f\u3093","\u305f\u3099\u3044\u3072\u3087\u3046","\u305f\u3044\u3075\u3046","\u305f\u3044\u3078\u3093","\u305f\u3044\u307b","\u305f\u3044\u307e\u3064\u306f\u3099\u306a","\u305f\u3044\u307f\u3093\u304f\u3099","\u305f\u3044\u3080","\u305f\u3044\u3081\u3093","\u305f\u3044\u3084\u304d","\u305f\u3044\u3088\u3046","\u305f\u3044\u3089","\u305f\u3044\u308a\u3087\u304f","\u305f\u3044\u308b","\u305f\u3044\u308f\u3093","\u305f\u3046\u3048","\u305f\u3048\u308b","\u305f\u304a\u3059","\u305f\u304a\u308b","\u305f\u304a\u308c\u308b","\u305f\u304b\u3044","\u305f\u304b\u306d","\u305f\u304d\u3072\u3099","\u305f\u304f\u3055\u3093","\u305f\u3053\u304f","\u305f\u3053\u3084\u304d","\u305f\u3055\u3044","\u305f\u3057\u3055\u3099\u3093","\u305f\u3099\u3057\u3099\u3083\u308c","\u305f\u3059\u3051\u308b","\u305f\u3059\u3099\u3055\u308f\u308b","\u305f\u305d\u304b\u3099\u308c","\u305f\u305f\u304b\u3046","\u305f\u305f\u304f","\u305f\u305f\u3099\u3057\u3044","\u305f\u305f\u307f","\u305f\u3061\u306f\u3099\u306a","\u305f\u3099\u3063\u304b\u3044","\u305f\u3099\u3063\u304d\u3083\u304f","\u305f\u3099\u3063\u3053","\u305f\u3099\u3063\u3057\u3085\u3064","\u305f\u3099\u3063\u305f\u3044","\u305f\u3066\u308b","\u305f\u3068\u3048\u308b","\u305f\u306a\u306f\u3099\u305f","\u305f\u306b\u3093","\u305f\u306c\u304d","\u305f\u306e\u3057\u307f","\u305f\u306f\u3064","\u305f\u3075\u3099\u3093","\u305f\u3078\u3099\u308b","\u305f\u307b\u3099\u3046","\u305f\u307e\u3053\u3099","\u305f\u307e\u308b","\u305f\u3099\u3080\u308b","\u305f\u3081\u3044\u304d","\u305f\u3081\u3059","\u305f\u3081\u308b","\u305f\u3082\u3064","\u305f\u3084\u3059\u3044","\u305f\u3088\u308b","\u305f\u3089\u3059","\u305f\u308a\u304d\u307b\u3093\u304b\u3099\u3093","\u305f\u308a\u3087\u3046","\u305f\u308a\u308b","\u305f\u308b\u3068","\u305f\u308c\u308b","\u305f\u308c\u3093\u3068","\u305f\u308d\u3063\u3068","\u305f\u308f\u3080\u308c\u308b","\u305f\u3099\u3093\u3042\u3064","\u305f\u3093\u3044","\u305f\u3093\u304a\u3093","\u305f\u3093\u304b","\u305f\u3093\u304d","\u305f\u3093\u3051\u3093","\u305f\u3093\u3053\u3099","\u305f\u3093\u3055\u3093","\u305f\u3093\u3057\u3099\u3087\u3046\u3072\u3099","\u305f\u3099\u3093\u305b\u3044","\u305f\u3093\u305d\u304f","\u305f\u3093\u305f\u3044","\u305f\u3099\u3093\u3061","\u305f\u3093\u3066\u3044","\u305f\u3093\u3068\u3046","\u305f\u3099\u3093\u306a","\u305f\u3093\u306b\u3093","\u305f\u3099\u3093\u306d\u3064","\u305f\u3093\u306e\u3046","\u305f\u3093\u3072\u309a\u3093","\u305f\u3099\u3093\u307b\u3099\u3046","\u305f\u3093\u307e\u3064","\u305f\u3093\u3081\u3044","\u305f\u3099\u3093\u308c\u3064","\u305f\u3099\u3093\u308d","\u305f\u3099\u3093\u308f","\u3061\u3042\u3044","\u3061\u3042\u3093","\u3061\u3044\u304d","\u3061\u3044\u3055\u3044","\u3061\u3048\u3093","\u3061\u304b\u3044","\u3061\u304b\u3089","\u3061\u304d\u3085\u3046","\u3061\u304d\u3093","\u3061\u3051\u3044\u3059\u3099","\u3061\u3051\u3093","\u3061\u3053\u304f","\u3061\u3055\u3044","\u3061\u3057\u304d","\u3061\u3057\u308a\u3087\u3046","\u3061\u305b\u3044","\u3061\u305d\u3046","\u3061\u305f\u3044","\u3061\u305f\u3093","\u3061\u3061\u304a\u3084","\u3061\u3064\u3057\u3099\u3087","\u3061\u3066\u304d","\u3061\u3066\u3093","\u3061\u306c\u304d","\u3061\u306c\u308a","\u3061\u306e\u3046","\u3061\u3072\u3087\u3046","\u3061\u3078\u3044\u305b\u3093","\u3061\u307b\u3046","\u3061\u307e\u305f","\u3061\u307f\u3064","\u3061\u307f\u3068\u3099\u308d","\u3061\u3081\u3044\u3068\u3099","\u3061\u3083\u3093\u3053\u306a\u3078\u3099","\u3061\u3085\u3046\u3044","\u3061\u3086\u308a\u3087\u304f","\u3061\u3087\u3046\u3057","\u3061\u3087\u3055\u304f\u3051\u3093","\u3061\u3089\u3057","\u3061\u3089\u307f","\u3061\u308a\u304b\u3099\u307f","\u3061\u308a\u3087\u3046","\u3061\u308b\u3068\u3099","\u3061\u308f\u308f","\u3061\u3093\u305f\u3044","\u3061\u3093\u3082\u304f","\u3064\u3044\u304b","\u3064\u3044\u305f\u3061","\u3064\u3046\u304b","\u3064\u3046\u3057\u3099\u3087\u3046","\u3064\u3046\u306f\u3093","\u3064\u3046\u308f","\u3064\u304b\u3046","\u3064\u304b\u308c\u308b","\u3064\u304f\u306d","\u3064\u304f\u308b","\u3064\u3051\u306d","\u3064\u3051\u308b","\u3064\u3053\u3099\u3046","\u3064\u305f\u3048\u308b","\u3064\u3064\u3099\u304f","\u3064\u3064\u3057\u3099","\u3064\u3064\u3080","\u3064\u3068\u3081\u308b","\u3064\u306a\u304b\u3099\u308b","\u3064\u306a\u307f","\u3064\u306d\u3064\u3099\u306d","\u3064\u306e\u308b","\u3064\u3075\u3099\u3059","\u3064\u307e\u3089\u306a\u3044","\u3064\u307e\u308b","\u3064\u307f\u304d","\u3064\u3081\u305f\u3044","\u3064\u3082\u308a","\u3064\u3082\u308b","\u3064\u3088\u3044","\u3064\u308b\u307b\u3099","\u3064\u308b\u307f\u304f","\u3064\u308f\u3082\u306e","\u3064\u308f\u308a","\u3066\u3042\u3057","\u3066\u3042\u3066","\u3066\u3042\u307f","\u3066\u3044\u304a\u3093","\u3066\u3044\u304b","\u3066\u3044\u304d","\u3066\u3044\u3051\u3044","\u3066\u3044\u3053\u304f","\u3066\u3044\u3055\u3064","\u3066\u3044\u3057","\u3066\u3044\u305b\u3044","\u3066\u3044\u305f\u3044","\u3066\u3044\u3068\u3099","\u3066\u3044\u306d\u3044","\u3066\u3044\u3072\u3087\u3046","\u3066\u3044\u3078\u3093","\u3066\u3044\u307b\u3099\u3046","\u3066\u3046\u3061","\u3066\u304a\u304f\u308c","\u3066\u304d\u3068\u3046","\u3066\u304f\u3072\u3099","\u3066\u3099\u3053\u307b\u3099\u3053","\u3066\u3055\u304d\u3099\u3087\u3046","\u3066\u3055\u3051\u3099","\u3066\u3059\u308a","\u3066\u305d\u3046","\u3066\u3061\u304b\u3099\u3044","\u3066\u3061\u3087\u3046","\u3066\u3064\u304b\u3099\u304f","\u3066\u3064\u3064\u3099\u304d","\u3066\u3099\u3063\u306f\u309a","\u3066\u3064\u307b\u3099\u3046","\u3066\u3064\u3084","\u3066\u3099\u306c\u304b\u3048","\u3066\u306c\u304d","\u3066\u306c\u304f\u3099\u3044","\u3066\u306e\u3072\u3089","\u3066\u306f\u3044","\u3066\u3075\u3099\u304f\u308d","\u3066\u3075\u305f\u3099","\u3066\u307b\u3068\u3099\u304d","\u3066\u307b\u3093","\u3066\u307e\u3048","\u3066\u307e\u304d\u3059\u3099\u3057","\u3066\u307f\u3057\u3099\u304b","\u3066\u307f\u3084\u3051\u3099","\u3066\u3089\u3059","\u3066\u308c\u3072\u3099","\u3066\u308f\u3051","\u3066\u308f\u305f\u3057","\u3066\u3099\u3093\u3042\u3064","\u3066\u3093\u3044\u3093","\u3066\u3093\u304b\u3044","\u3066\u3093\u304d","\u3066\u3093\u304f\u3099","\u3066\u3093\u3051\u3093","\u3066\u3093\u3053\u3099\u304f","\u3066\u3093\u3055\u3044","\u3066\u3093\u3057","\u3066\u3093\u3059\u3046","\u3066\u3099\u3093\u3061","\u3066\u3093\u3066\u304d","\u3066\u3093\u3068\u3046","\u3066\u3093\u306a\u3044","\u3066\u3093\u3075\u309a\u3089","\u3066\u3093\u307b\u3099\u3046\u305f\u3099\u3044","\u3066\u3093\u3081\u3064","\u3066\u3093\u3089\u3093\u304b\u3044","\u3066\u3099\u3093\u308a\u3087\u304f","\u3066\u3099\u3093\u308f","\u3068\u3099\u3042\u3044","\u3068\u3044\u308c","\u3068\u3099\u3046\u304b\u3093","\u3068\u3046\u304d\u3085\u3046","\u3068\u3099\u3046\u304f\u3099","\u3068\u3046\u3057","\u3068\u3046\u3080\u304d\u3099","\u3068\u304a\u3044","\u3068\u304a\u304b","\u3068\u304a\u304f","\u3068\u304a\u3059","\u3068\u304a\u308b","\u3068\u304b\u3044","\u3068\u304b\u3059","\u3068\u304d\u304a\u308a","\u3068\u304d\u3068\u3099\u304d","\u3068\u304f\u3044","\u3068\u304f\u3057\u3085\u3046","\u3068\u304f\u3066\u3093","\u3068\u304f\u306b","\u3068\u304f\u3078\u3099\u3064","\u3068\u3051\u3044","\u3068\u3051\u308b","\u3068\u3053\u3084","\u3068\u3055\u304b","\u3068\u3057\u3087\u304b\u3093","\u3068\u305d\u3046","\u3068\u305f\u3093","\u3068\u3061\u3085\u3046","\u3068\u3063\u304d\u3085\u3046","\u3068\u3063\u304f\u3093","\u3068\u3064\u305b\u3099\u3093","\u3068\u3064\u306b\u3085\u3046","\u3068\u3068\u3099\u3051\u308b","\u3068\u3068\u306e\u3048\u308b","\u3068\u306a\u3044","\u3068\u306a\u3048\u308b","\u3068\u306a\u308a","\u3068\u306e\u3055\u307e","\u3068\u306f\u3099\u3059","\u3068\u3099\u3075\u3099\u304b\u3099\u308f","\u3068\u307b\u3046","\u3068\u307e\u308b","\u3068\u3081\u308b","\u3068\u3082\u305f\u3099\u3061","\u3068\u3082\u308b","\u3068\u3099\u3088\u3046\u3072\u3099","\u3068\u3089\u3048\u308b","\u3068\u3093\u304b\u3064","\u3068\u3099\u3093\u3075\u3099\u308a","\u306a\u3044\u304b\u304f","\u306a\u3044\u3053\u3046","\u306a\u3044\u3057\u3087","\u306a\u3044\u3059","\u306a\u3044\u305b\u3093","\u306a\u3044\u305d\u3046","\u306a\u304a\u3059","\u306a\u304b\u3099\u3044","\u306a\u304f\u3059","\u306a\u3051\u3099\u308b","\u306a\u3053\u3046\u3068\u3099","\u306a\u3055\u3051","\u306a\u305f\u3066\u3099\u3053\u3053","\u306a\u3063\u3068\u3046","\u306a\u3064\u3084\u3059\u307f","\u306a\u306a\u304a\u3057","\u306a\u306b\u3053\u3099\u3068","\u306a\u306b\u3082\u306e","\u306a\u306b\u308f","\u306a\u306e\u304b","\u306a\u3075\u305f\u3099","\u306a\u307e\u3044\u304d","\u306a\u307e\u3048","\u306a\u307e\u307f","\u306a\u307f\u305f\u3099","\u306a\u3081\u3089\u304b","\u306a\u3081\u308b","\u306a\u3084\u3080","\u306a\u3089\u3046","\u306a\u3089\u3072\u3099","\u306a\u3089\u3075\u3099","\u306a\u308c\u308b","\u306a\u308f\u3068\u3072\u3099","\u306a\u308f\u306f\u3099\u308a","\u306b\u3042\u3046","\u306b\u3044\u304b\u3099\u305f","\u306b\u3046\u3051","\u306b\u304a\u3044","\u306b\u304b\u3044","\u306b\u304b\u3099\u3066","\u306b\u304d\u3072\u3099","\u306b\u304f\u3057\u307f","\u306b\u304f\u307e\u3093","\u306b\u3051\u3099\u308b","\u306b\u3055\u3093\u304b\u305f\u3093\u305d","\u306b\u3057\u304d","\u306b\u305b\u3082\u306e","\u306b\u3061\u3057\u3099\u3087\u3046","\u306b\u3061\u3088\u3046\u3072\u3099","\u306b\u3063\u304b","\u306b\u3063\u304d","\u306b\u3063\u3051\u3044","\u306b\u3063\u3053\u3046","\u306b\u3063\u3055\u3093","\u306b\u3063\u3057\u3087\u304f","\u306b\u3063\u3059\u3046","\u306b\u3063\u305b\u304d","\u306b\u3063\u3066\u3044","\u306b\u306a\u3046","\u306b\u307b\u3093","\u306b\u307e\u3081","\u306b\u3082\u3064","\u306b\u3084\u308a","\u306b\u3085\u3046\u3044\u3093","\u306b\u308a\u3093\u3057\u3083","\u306b\u308f\u3068\u308a","\u306b\u3093\u3044","\u306b\u3093\u304b","\u306b\u3093\u304d","\u306b\u3093\u3051\u3099\u3093","\u306b\u3093\u3057\u304d","\u306b\u3093\u3059\u3099\u3046","\u306b\u3093\u305d\u3046","\u306b\u3093\u305f\u3044","\u306b\u3093\u3061","\u306b\u3093\u3066\u3044","\u306b\u3093\u306b\u304f","\u306b\u3093\u3075\u309a","\u306b\u3093\u307e\u308a","\u306b\u3093\u3080","\u306b\u3093\u3081\u3044","\u306b\u3093\u3088\u3046","\u306c\u3044\u304f\u304d\u3099","\u306c\u304b\u3059","\u306c\u304f\u3099\u3044\u3068\u308b","\u306c\u304f\u3099\u3046","\u306c\u304f\u3082\u308a","\u306c\u3059\u3080","\u306c\u307e\u3048\u3072\u3099","\u306c\u3081\u308a","\u306c\u3089\u3059","\u306c\u3093\u3061\u3083\u304f","\u306d\u3042\u3051\u3099","\u306d\u3044\u304d","\u306d\u3044\u308b","\u306d\u3044\u308d","\u306d\u304f\u3099\u305b","\u306d\u304f\u305f\u3044","\u306d\u304f\u3089","\u306d\u3053\u305b\u3099","\u306d\u3053\u3080","\u306d\u3055\u3051\u3099","\u306d\u3059\u3053\u3099\u3059","\u306d\u305d\u3078\u3099\u308b","\u306d\u305f\u3099\u3093","\u306d\u3064\u3044","\u306d\u3063\u3057\u3093","\u306d\u3064\u305d\u3099\u3046","\u306d\u3063\u305f\u3044\u304d\u3099\u3087","\u306d\u3075\u3099\u305d\u304f","\u306d\u3075\u305f\u3099","\u306d\u307b\u3099\u3046","\u306d\u307b\u308a\u306f\u307b\u308a","\u306d\u307e\u304d","\u306d\u307e\u308f\u3057","\u306d\u307f\u307f","\u306d\u3080\u3044","\u306d\u3080\u305f\u3044","\u306d\u3082\u3068","\u306d\u3089\u3046","\u306d\u308f\u3055\u3099","\u306d\u3093\u3044\u308a","\u306d\u3093\u304a\u3057","\u306d\u3093\u304b\u3093","\u306d\u3093\u304d\u3093","\u306d\u3093\u304f\u3099","\u306d\u3093\u3055\u3099","\u306d\u3093\u3057","\u306d\u3093\u3061\u3083\u304f","\u306d\u3093\u3068\u3099","\u306d\u3093\u3072\u309a","\u306d\u3093\u3075\u3099\u3064","\u306d\u3093\u307e\u3064","\u306d\u3093\u308a\u3087\u3046","\u306d\u3093\u308c\u3044","\u306e\u3044\u3059\u3099","\u306e\u304a\u3064\u3099\u307e","\u306e\u304b\u3099\u3059","\u306e\u304d\u306a\u307f","\u306e\u3053\u304d\u3099\u308a","\u306e\u3053\u3059","\u306e\u3053\u308b","\u306e\u305b\u308b","\u306e\u305d\u3099\u304f","\u306e\u305d\u3099\u3080","\u306e\u305f\u307e\u3046","\u306e\u3061\u307b\u3068\u3099","\u306e\u3063\u304f","\u306e\u306f\u3099\u3059","\u306e\u306f\u3089","\u306e\u3078\u3099\u308b","\u306e\u307b\u3099\u308b","\u306e\u307f\u3082\u306e","\u306e\u3084\u307e","\u306e\u3089\u3044\u306c","\u306e\u3089\u306d\u3053","\u306e\u308a\u3082\u306e","\u306e\u308a\u3086\u304d","\u306e\u308c\u3093","\u306e\u3093\u304d","\u306f\u3099\u3042\u3044","\u306f\u3042\u304f","\u306f\u3099\u3042\u3055\u3093","\u306f\u3099\u3044\u304b","\u306f\u3099\u3044\u304f","\u306f\u3044\u3051\u3093","\u306f\u3044\u3053\u3099","\u306f\u3044\u3057\u3093","\u306f\u3044\u3059\u3044","\u306f\u3044\u305b\u3093","\u306f\u3044\u305d\u3046","\u306f\u3044\u3061","\u306f\u3099\u3044\u306f\u3099\u3044","\u306f\u3044\u308c\u3064","\u306f\u3048\u308b","\u306f\u304a\u308b","\u306f\u304b\u3044","\u306f\u3099\u304b\u308a","\u306f\u304b\u308b","\u306f\u304f\u3057\u3085","\u306f\u3051\u3093","\u306f\u3053\u3075\u3099","\u306f\u3055\u307f","\u306f\u3055\u3093","\u306f\u3057\u3053\u3099","\u306f\u3099\u3057\u3087","\u306f\u3057\u308b","\u306f\u305b\u308b","\u306f\u309a\u305d\u3053\u3093","\u306f\u305d\u3093","\u306f\u305f\u3093","\u306f\u3061\u307f\u3064","\u306f\u3064\u304a\u3093","\u306f\u3063\u304b\u304f","\u306f\u3064\u3099\u304d","\u306f\u3063\u304d\u308a","\u306f\u3063\u304f\u3064","\u306f\u3063\u3051\u3093","\u306f\u3063\u3053\u3046","\u306f\u3063\u3055\u3093","\u306f\u3063\u3057\u3093","\u306f\u3063\u305f\u3064","\u306f\u3063\u3061\u3085\u3046","\u306f\u3063\u3066\u3093","\u306f\u3063\u3072\u309a\u3087\u3046","\u306f\u3063\u307b\u309a\u3046","\u306f\u306a\u3059","\u306f\u306a\u3072\u3099","\u306f\u306b\u304b\u3080","\u306f\u3075\u3099\u3089\u3057","\u306f\u307f\u304b\u3099\u304d","\u306f\u3080\u304b\u3046","\u306f\u3081\u3064","\u306f\u3084\u3044","\u306f\u3084\u3057","\u306f\u3089\u3046","\u306f\u308d\u3046\u3043\u3093","\u306f\u308f\u3044","\u306f\u3093\u3044","\u306f\u3093\u3048\u3044","\u306f\u3093\u304a\u3093","\u306f\u3093\u304b\u304f","\u306f\u3093\u304d\u3087\u3046","\u306f\u3099\u3093\u304f\u3099\u307f","\u306f\u3093\u3053","\u306f\u3093\u3057\u3083","\u306f\u3093\u3059\u3046","\u306f\u3093\u305f\u3099\u3093","\u306f\u309a\u3093\u3061","\u306f\u309a\u3093\u3064","\u306f\u3093\u3066\u3044","\u306f\u3093\u3068\u3057","\u306f\u3093\u306e\u3046","\u306f\u3093\u306f\u309a","\u306f\u3093\u3075\u3099\u3093","\u306f\u3093\u3078\u309a\u3093","\u306f\u3093\u307b\u3099\u3046\u304d","\u306f\u3093\u3081\u3044","\u306f\u3093\u3089\u3093","\u306f\u3093\u308d\u3093","\u3072\u3044\u304d","\u3072\u3046\u3093","\u3072\u3048\u308b","\u3072\u304b\u304f","\u3072\u304b\u308a","\u3072\u304b\u308b","\u3072\u304b\u3093","\u3072\u304f\u3044","\u3072\u3051\u3064","\u3072\u3053\u3046\u304d","\u3072\u3053\u304f","\u3072\u3055\u3044","\u3072\u3055\u3057\u3075\u3099\u308a","\u3072\u3055\u3093","\u3072\u3099\u3057\u3099\u3085\u3064\u304b\u3093","\u3072\u3057\u3087","\u3072\u305d\u304b","\u3072\u305d\u3080","\u3072\u305f\u3080\u304d","\u3072\u305f\u3099\u308a","\u3072\u305f\u308b","\u3072\u3064\u304d\u3099","\u3072\u3063\u3053\u3057","\u3072\u3063\u3057","\u3072\u3064\u3057\u3099\u3085\u3072\u3093","\u3072\u3063\u3059","\u3072\u3064\u305b\u3099\u3093","\u3072\u309a\u3063\u305f\u308a","\u3072\u309a\u3063\u3061\u308a","\u3072\u3064\u3088\u3046","\u3072\u3066\u3044","\u3072\u3068\u3053\u3099\u307f","\u3072\u306a\u307e\u3064\u308a","\u3072\u306a\u3093","\u3072\u306d\u308b","\u3072\u306f\u3093","\u3072\u3072\u3099\u304f","\u3072\u3072\u3087\u3046","\u3072\u307b\u3046","\u3072\u307e\u308f\u308a","\u3072\u307e\u3093","\u3072\u307f\u3064","\u3072\u3081\u3044","\u3072\u3081\u3057\u3099\u3057","\u3072\u3084\u3051","\u3072\u3084\u3059","\u3072\u3088\u3046","\u3072\u3099\u3087\u3046\u304d","\u3072\u3089\u304b\u3099\u306a","\u3072\u3089\u304f","\u3072\u308a\u3064","\u3072\u308a\u3087\u3046","\u3072\u308b\u307e","\u3072\u308b\u3084\u3059\u307f","\u3072\u308c\u3044","\u3072\u308d\u3044","\u3072\u308d\u3046","\u3072\u308d\u304d","\u3072\u308d\u3086\u304d","\u3072\u3093\u304b\u304f","\u3072\u3093\u3051\u3064","\u3072\u3093\u3053\u3093","\u3072\u3093\u3057\u3085","\u3072\u3093\u305d\u3046","\u3072\u309a\u3093\u3061","\u3072\u3093\u306f\u309a\u3093","\u3072\u3099\u3093\u307b\u3099\u3046","\u3075\u3042\u3093","\u3075\u3044\u3046\u3061","\u3075\u3046\u3051\u3044","\u3075\u3046\u305b\u3093","\u3075\u309a\u3046\u305f\u308d\u3046","\u3075\u3046\u3068\u3046","\u3075\u3046\u3075","\u3075\u3048\u308b","\u3075\u304a\u3093","\u3075\u304b\u3044","\u3075\u304d\u3093","\u3075\u304f\u3055\u3099\u3064","\u3075\u304f\u3075\u3099\u304f\u308d","\u3075\u3053\u3046","\u3075\u3055\u3044","\u3075\u3057\u304d\u3099","\u3075\u3057\u3099\u307f","\u3075\u3059\u307e","\u3075\u305b\u3044","\u3075\u305b\u304f\u3099","\u3075\u305d\u304f","\u3075\u3099\u305f\u306b\u304f","\u3075\u305f\u3093","\u3075\u3061\u3087\u3046","\u3075\u3064\u3046","\u3075\u3064\u304b","\u3075\u3063\u304b\u3064","\u3075\u3063\u304d","\u3075\u3063\u3053\u304f","\u3075\u3099\u3068\u3099\u3046","\u3075\u3068\u308b","\u3075\u3068\u3093","\u3075\u306e\u3046","\u3075\u306f\u3044","\u3075\u3072\u3087\u3046","\u3075\u3078\u3093","\u3075\u307e\u3093","\u3075\u307f\u3093","\u3075\u3081\u3064","\u3075\u3081\u3093","\u3075\u3088\u3046","\u3075\u308a\u3053","\u3075\u308a\u308b","\u3075\u308b\u3044","\u3075\u3093\u3044\u304d","\u3075\u3099\u3093\u304b\u3099\u304f","\u3075\u3099\u3093\u304f\u3099","\u3075\u3093\u3057\u3064","\u3075\u3099\u3093\u305b\u304d","\u3075\u3093\u305d\u3046","\u3075\u3099\u3093\u307b\u309a\u3046","\u3078\u3044\u3042\u3093","\u3078\u3044\u304a\u3093","\u3078\u3044\u304b\u3099\u3044","\u3078\u3044\u304d","\u3078\u3044\u3051\u3099\u3093","\u3078\u3044\u3053\u3046","\u3078\u3044\u3055","\u3078\u3044\u3057\u3083","\u3078\u3044\u305b\u3064","\u3078\u3044\u305d","\u3078\u3044\u305f\u304f","\u3078\u3044\u3066\u3093","\u3078\u3044\u306d\u3064","\u3078\u3044\u308f","\u3078\u304d\u304b\u3099","\u3078\u3053\u3080","\u3078\u3099\u306b\u3044\u308d","\u3078\u3099\u306b\u3057\u3087\u3046\u304b\u3099","\u3078\u3089\u3059","\u3078\u3093\u304b\u3093","\u3078\u3099\u3093\u304d\u3087\u3046","\u3078\u3099\u3093\u3053\u3099\u3057","\u3078\u3093\u3055\u3044","\u3078\u3093\u305f\u3044","\u3078\u3099\u3093\u308a","\u307b\u3042\u3093","\u307b\u3044\u304f","\u307b\u3099\u3046\u304d\u3099\u3087","\u307b\u3046\u3053\u304f","\u307b\u3046\u305d\u3046","\u307b\u3046\u307b\u3046","\u307b\u3046\u3082\u3093","\u307b\u3046\u308a\u3064","\u307b\u3048\u308b","\u307b\u304a\u3093","\u307b\u304b\u3093","\u307b\u304d\u3087\u3046","\u307b\u3099\u304d\u3093","\u307b\u304f\u308d","\u307b\u3051\u3064","\u307b\u3051\u3093","\u307b\u3053\u3046","\u307b\u3053\u308b","\u307b\u3057\u3044","\u307b\u3057\u3064","\u307b\u3057\u3085","\u307b\u3057\u3087\u3046","\u307b\u305b\u3044","\u307b\u305d\u3044","\u307b\u305d\u304f","\u307b\u305f\u3066","\u307b\u305f\u308b","\u307b\u309a\u3061\u3075\u3099\u304f\u308d","\u307b\u3063\u304d\u3087\u304f","\u307b\u3063\u3055","\u307b\u3063\u305f\u3093","\u307b\u3068\u3093\u3068\u3099","\u307b\u3081\u308b","\u307b\u3093\u3044","\u307b\u3093\u304d","\u307b\u3093\u3051","\u307b\u3093\u3057\u3064","\u307b\u3093\u3084\u304f","\u307e\u3044\u306b\u3061","\u307e\u304b\u3044","\u307e\u304b\u305b\u308b","\u307e\u304b\u3099\u308b","\u307e\u3051\u308b","\u307e\u3053\u3068","\u307e\u3055\u3064","\u307e\u3057\u3099\u3081","\u307e\u3059\u304f","\u307e\u305b\u3099\u308b","\u307e\u3064\u308a","\u307e\u3068\u3081","\u307e\u306a\u3075\u3099","\u307e\u306c\u3051","\u307e\u306d\u304f","\u307e\u307b\u3046","\u307e\u3082\u308b","\u307e\u3086\u3051\u3099","\u307e\u3088\u3046","\u307e\u308d\u3084\u304b","\u307e\u308f\u3059","\u307e\u308f\u308a","\u307e\u308f\u308b","\u307e\u3093\u304b\u3099","\u307e\u3093\u304d\u3064","\u307e\u3093\u305d\u3099\u304f","\u307e\u3093\u306a\u304b","\u307f\u3044\u3089","\u307f\u3046\u3061","\u307f\u3048\u308b","\u307f\u304b\u3099\u304f","\u307f\u304b\u305f","\u307f\u304b\u3093","\u307f\u3051\u3093","\u307f\u3053\u3093","\u307f\u3057\u3099\u304b\u3044","\u307f\u3059\u3044","\u307f\u3059\u3048\u308b","\u307f\u305b\u308b","\u307f\u3063\u304b","\u307f\u3064\u304b\u308b","\u307f\u3064\u3051\u308b","\u307f\u3066\u3044","\u307f\u3068\u3081\u308b","\u307f\u306a\u3068","\u307f\u306a\u307f\u304b\u3055\u3044","\u307f\u306d\u3089\u308b","\u307f\u306e\u3046","\u307f\u306e\u304b\u3099\u3059","\u307f\u307b\u3093","\u307f\u3082\u3068","\u307f\u3084\u3051\u3099","\u307f\u3089\u3044","\u307f\u308a\u3087\u304f","\u307f\u308f\u304f","\u307f\u3093\u304b","\u307f\u3093\u305d\u3099\u304f","\u3080\u3044\u304b","\u3080\u3048\u304d","\u3080\u3048\u3093","\u3080\u304b\u3044","\u3080\u304b\u3046","\u3080\u304b\u3048","\u3080\u304b\u3057","\u3080\u304d\u3099\u3061\u3083","\u3080\u3051\u308b","\u3080\u3051\u3099\u3093","\u3080\u3055\u307b\u3099\u308b","\u3080\u3057\u3042\u3064\u3044","\u3080\u3057\u306f\u3099","\u3080\u3057\u3099\u3085\u3093","\u3080\u3057\u308d","\u3080\u3059\u3046","\u3080\u3059\u3053","\u3080\u3059\u3075\u3099","\u3080\u3059\u3081","\u3080\u305b\u308b","\u3080\u305b\u3093","\u3080\u3061\u3085\u3046","\u3080\u306a\u3057\u3044","\u3080\u306e\u3046","\u3080\u3084\u307f","\u3080\u3088\u3046","\u3080\u3089\u3055\u304d","\u3080\u308a\u3087\u3046","\u3080\u308d\u3093","\u3081\u3044\u3042\u3093","\u3081\u3044\u3046\u3093","\u3081\u3044\u3048\u3093","\u3081\u3044\u304b\u304f","\u3081\u3044\u304d\u3087\u304f","\u3081\u3044\u3055\u3044","\u3081\u3044\u3057","\u3081\u3044\u305d\u3046","\u3081\u3044\u3075\u3099\u3064","\u3081\u3044\u308c\u3044","\u3081\u3044\u308f\u304f","\u3081\u304f\u3099\u307e\u308c\u308b","\u3081\u3055\u3099\u3059","\u3081\u3057\u305f","\u3081\u3059\u3099\u3089\u3057\u3044","\u3081\u305f\u3099\u3064","\u3081\u307e\u3044","\u3081\u3084\u3059","\u3081\u3093\u304d\u3087","\u3081\u3093\u305b\u304d","\u3081\u3093\u3068\u3099\u3046","\u3082\u3046\u3057\u3042\u3051\u3099\u308b","\u3082\u3046\u3068\u3099\u3046\u3051\u3093","\u3082\u3048\u308b","\u3082\u304f\u3057","\u3082\u304f\u3066\u304d","\u3082\u304f\u3088\u3046\u3072\u3099","\u3082\u3061\u308d\u3093","\u3082\u3068\u3099\u308b","\u3082\u3089\u3046","\u3082\u3093\u304f","\u3082\u3093\u305f\u3099\u3044","\u3084\u304a\u3084","\u3084\u3051\u308b","\u3084\u3055\u3044","\u3084\u3055\u3057\u3044","\u3084\u3059\u3044","\u3084\u3059\u305f\u308d\u3046","\u3084\u3059\u307f","\u3084\u305b\u308b","\u3084\u305d\u3046","\u3084\u305f\u3044","\u3084\u3061\u3093","\u3084\u3063\u3068","\u3084\u3063\u306f\u309a\u308a","\u3084\u3075\u3099\u308b","\u3084\u3081\u308b","\u3084\u3084\u3053\u3057\u3044","\u3084\u3088\u3044","\u3084\u308f\u3089\u304b\u3044","\u3086\u3046\u304d","\u3086\u3046\u3072\u3099\u3093\u304d\u3087\u304f","\u3086\u3046\u3078\u3099","\u3086\u3046\u3081\u3044","\u3086\u3051\u3064","\u3086\u3057\u3085\u3064","\u3086\u305b\u3093","\u3086\u305d\u3046","\u3086\u305f\u304b","\u3086\u3061\u3083\u304f","\u3086\u3066\u3099\u308b","\u3086\u306b\u3085\u3046","\u3086\u3072\u3099\u308f","\u3086\u3089\u3044","\u3086\u308c\u308b","\u3088\u3046\u3044","\u3088\u3046\u304b","\u3088\u3046\u304d\u3085\u3046","\u3088\u3046\u3057\u3099","\u3088\u3046\u3059","\u3088\u3046\u3061\u3048\u3093","\u3088\u304b\u305b\u3099","\u3088\u304b\u3093","\u3088\u304d\u3093","\u3088\u304f\u305b\u3044","\u3088\u304f\u307b\u3099\u3046","\u3088\u3051\u3044","\u3088\u3053\u3099\u308c\u308b","\u3088\u3055\u3093","\u3088\u3057\u3085\u3046","\u3088\u305d\u3046","\u3088\u305d\u304f","\u3088\u3063\u304b","\u3088\u3066\u3044","\u3088\u3068\u3099\u304b\u3099\u308f\u304f","\u3088\u306d\u3064","\u3088\u3084\u304f","\u3088\u3086\u3046","\u3088\u308d\u3053\u3075\u3099","\u3088\u308d\u3057\u3044","\u3089\u3044\u3046","\u3089\u304f\u304b\u3099\u304d","\u3089\u304f\u3053\u3099","\u3089\u304f\u3055\u3064","\u3089\u304f\u305f\u3099","\u3089\u3057\u3093\u306f\u3099\u3093","\u3089\u305b\u3093","\u3089\u305d\u3099\u304f","\u3089\u305f\u3044","\u3089\u3063\u304b","\u3089\u308c\u3064","\u308a\u3048\u304d","\u308a\u304b\u3044","\u308a\u304d\u3055\u304f","\u308a\u304d\u305b\u3064","\u308a\u304f\u304f\u3099\u3093","\u308a\u304f\u3064","\u308a\u3051\u3093","\u308a\u3053\u3046","\u308a\u305b\u3044","\u308a\u305d\u3046","\u308a\u305d\u304f","\u308a\u3066\u3093","\u308a\u306d\u3093","\u308a\u3086\u3046","\u308a\u3085\u3046\u304b\u3099\u304f","\u308a\u3088\u3046","\u308a\u3087\u3046\u308a","\u308a\u3087\u304b\u3093","\u308a\u3087\u304f\u3061\u3083","\u308a\u3087\u3053\u3046","\u308a\u308a\u304f","\u308a\u308c\u304d","\u308a\u308d\u3093","\u308a\u3093\u3053\u3099","\u308b\u3044\u3051\u3044","\u308b\u3044\u3055\u3044","\u308b\u3044\u3057\u3099","\u308b\u3044\u305b\u304d","\u308b\u3059\u306f\u3099\u3093","\u308b\u308a\u304b\u3099\u308f\u3089","\u308c\u3044\u304b\u3093","\u308c\u3044\u304d\u3099","\u308c\u3044\u305b\u3044","\u308c\u3044\u305d\u3099\u3046\u3053","\u308c\u3044\u3068\u3046","\u308c\u3044\u307b\u3099\u3046","\u308c\u304d\u3057","\u308c\u304d\u305f\u3099\u3044","\u308c\u3093\u3042\u3044","\u308c\u3093\u3051\u3044","\u308c\u3093\u3053\u3093","\u308c\u3093\u3055\u3044","\u308c\u3093\u3057\u3085\u3046","\u308c\u3093\u305d\u3099\u304f","\u308c\u3093\u3089\u304f","\u308d\u3046\u304b","\u308d\u3046\u3053\u3099","\u308d\u3046\u3057\u3099\u3093","\u308d\u3046\u305d\u304f","\u308d\u304f\u304b\u3099","\u308d\u3053\u3064","\u308d\u3057\u3099\u3046\u3089","\u308d\u3057\u3085\u3064","\u308d\u305b\u3093","\u308d\u3066\u3093","\u308d\u3081\u3093","\u308d\u308c\u3064","\u308d\u3093\u304d\u3099","\u308d\u3093\u306f\u309a","\u308d\u3093\u3075\u3099\u3093","\u308d\u3093\u308a","\u308f\u304b\u3059","\u308f\u304b\u3081","\u308f\u304b\u3084\u307e","\u308f\u304b\u308c\u308b","\u308f\u3057\u3064","\u308f\u3057\u3099\u307e\u3057","\u308f\u3059\u308c\u3082\u306e","\u308f\u3089\u3046","\u308f\u308c\u308b"]',
        );
      },
      5428: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["\u1100\u1161\u1100\u1167\u11a8","\u1100\u1161\u1101\u1173\u11b7","\u1100\u1161\u1102\u1161\u11ab","\u1100\u1161\u1102\u1173\u11bc","\u1100\u1161\u1103\u1173\u11a8","\u1100\u1161\u1105\u1173\u110e\u1175\u11b7","\u1100\u1161\u1106\u116e\u11b7","\u1100\u1161\u1107\u1161\u11bc","\u1100\u1161\u1109\u1161\u11bc","\u1100\u1161\u1109\u1173\u11b7","\u1100\u1161\u110b\u116e\u11ab\u1103\u1166","\u1100\u1161\u110b\u1173\u11af","\u1100\u1161\u110b\u1175\u1103\u1173","\u1100\u1161\u110b\u1175\u11b8","\u1100\u1161\u110c\u1161\u11bc","\u1100\u1161\u110c\u1165\u11bc","\u1100\u1161\u110c\u1169\u11a8","\u1100\u1161\u110c\u116e\u11a8","\u1100\u1161\u11a8\u110b\u1169","\u1100\u1161\u11a8\u110c\u1161","\u1100\u1161\u11ab\u1100\u1167\u11a8","\u1100\u1161\u11ab\u1107\u116e","\u1100\u1161\u11ab\u1109\u1165\u11b8","\u1100\u1161\u11ab\u110c\u1161\u11bc","\u1100\u1161\u11ab\u110c\u1165\u11b8","\u1100\u1161\u11ab\u1111\u1161\u11ab","\u1100\u1161\u11af\u1103\u1173\u11bc","\u1100\u1161\u11af\u1107\u1175","\u1100\u1161\u11af\u1109\u1162\u11a8","\u1100\u1161\u11af\u110c\u1173\u11bc","\u1100\u1161\u11b7\u1100\u1161\u11a8","\u1100\u1161\u11b7\u1100\u1175","\u1100\u1161\u11b7\u1109\u1169","\u1100\u1161\u11b7\u1109\u116e\u1109\u1165\u11bc","\u1100\u1161\u11b7\u110c\u1161","\u1100\u1161\u11b7\u110c\u1165\u11bc","\u1100\u1161\u11b8\u110c\u1161\u1100\u1175","\u1100\u1161\u11bc\u1102\u1161\u11b7","\u1100\u1161\u11bc\u1103\u1161\u11bc","\u1100\u1161\u11bc\u1103\u1169","\u1100\u1161\u11bc\u1105\u1167\u11a8\u1112\u1175","\u1100\u1161\u11bc\u1107\u1167\u11ab","\u1100\u1161\u11bc\u1107\u116e\u11a8","\u1100\u1161\u11bc\u1109\u1161","\u1100\u1161\u11bc\u1109\u116e\u1105\u1163\u11bc","\u1100\u1161\u11bc\u110b\u1161\u110c\u1175","\u1100\u1161\u11bc\u110b\u116f\u11ab\u1103\u1169","\u1100\u1161\u11bc\u110b\u1174","\u1100\u1161\u11bc\u110c\u1166","\u1100\u1161\u11bc\u110c\u1169","\u1100\u1161\u11c0\u110b\u1175","\u1100\u1162\u1100\u116e\u1105\u1175","\u1100\u1162\u1102\u1161\u1105\u1175","\u1100\u1162\u1107\u1161\u11bc","\u1100\u1162\u1107\u1167\u11af","\u1100\u1162\u1109\u1165\u11ab","\u1100\u1162\u1109\u1165\u11bc","\u1100\u1162\u110b\u1175\u11ab","\u1100\u1162\u11a8\u1100\u116a\u11ab\u110c\u1165\u11a8","\u1100\u1165\u1109\u1175\u11af","\u1100\u1165\u110b\u1162\u11a8","\u1100\u1165\u110b\u116e\u11af","\u1100\u1165\u110c\u1175\u11ba","\u1100\u1165\u1111\u116e\u11b7","\u1100\u1165\u11a8\u110c\u1165\u11bc","\u1100\u1165\u11ab\u1100\u1161\u11bc","\u1100\u1165\u11ab\u1106\u116e\u11af","\u1100\u1165\u11ab\u1109\u1165\u11af","\u1100\u1165\u11ab\u110c\u1169","\u1100\u1165\u11ab\u110e\u116e\u11a8","\u1100\u1165\u11af\u110b\u1173\u11b7","\u1100\u1165\u11b7\u1109\u1161","\u1100\u1165\u11b7\u1110\u1169","\u1100\u1166\u1109\u1175\u1111\u1161\u11ab","\u1100\u1166\u110b\u1175\u11b7","\u1100\u1167\u110b\u116e\u11af","\u1100\u1167\u11ab\u1112\u1162","\u1100\u1167\u11af\u1100\u116a","\u1100\u1167\u11af\u1100\u116e\u11a8","\u1100\u1167\u11af\u1105\u1169\u11ab","\u1100\u1167\u11af\u1109\u1165\u11a8","\u1100\u1167\u11af\u1109\u1173\u11bc","\u1100\u1167\u11af\u1109\u1175\u11b7","\u1100\u1167\u11af\u110c\u1165\u11bc","\u1100\u1167\u11af\u1112\u1169\u11ab","\u1100\u1167\u11bc\u1100\u1168","\u1100\u1167\u11bc\u1100\u1169","\u1100\u1167\u11bc\u1100\u1175","\u1100\u1167\u11bc\u1105\u1167\u11a8","\u1100\u1167\u11bc\u1107\u1169\u11a8\u1100\u116e\u11bc","\u1100\u1167\u11bc\u1107\u1175","\u1100\u1167\u11bc\u1109\u1161\u11bc\u1103\u1169","\u1100\u1167\u11bc\u110b\u1167\u11bc","\u1100\u1167\u11bc\u110b\u116e","\u1100\u1167\u11bc\u110c\u1162\u11bc","\u1100\u1167\u11bc\u110c\u1166","\u1100\u1167\u11bc\u110c\u116e","\u1100\u1167\u11bc\u110e\u1161\u11af","\u1100\u1167\u11bc\u110e\u1175","\u1100\u1167\u11bc\u1112\u1163\u11bc","\u1100\u1167\u11bc\u1112\u1165\u11b7","\u1100\u1168\u1100\u1169\u11a8","\u1100\u1168\u1103\u1161\u11ab","\u1100\u1168\u1105\u1161\u11ab","\u1100\u1168\u1109\u1161\u11ab","\u1100\u1168\u1109\u1169\u11a8","\u1100\u1168\u110b\u1163\u11a8","\u1100\u1168\u110c\u1165\u11af","\u1100\u1168\u110e\u1173\u11bc","\u1100\u1168\u1112\u116c\u11a8","\u1100\u1169\u1100\u1162\u11a8","\u1100\u1169\u1100\u116e\u1105\u1167","\u1100\u1169\u1100\u116e\u11bc","\u1100\u1169\u1100\u1173\u11b8","\u1100\u1169\u1103\u1173\u11bc\u1112\u1161\u11a8\u1109\u1162\u11bc","\u1100\u1169\u1106\u116e\u1109\u1175\u11ab","\u1100\u1169\u1106\u1175\u11ab","\u1100\u1169\u110b\u1163\u11bc\u110b\u1175","\u1100\u1169\u110c\u1161\u11bc","\u1100\u1169\u110c\u1165\u11ab","\u1100\u1169\u110c\u1175\u11b8","\u1100\u1169\u110e\u116e\u11ba\u1100\u1161\u1105\u116e","\u1100\u1169\u1110\u1169\u11bc","\u1100\u1169\u1112\u1163\u11bc","\u1100\u1169\u11a8\u1109\u1175\u11a8","\u1100\u1169\u11af\u1106\u1169\u11a8","\u1100\u1169\u11af\u110d\u1161\u1100\u1175","\u1100\u1169\u11af\u1111\u1173","\u1100\u1169\u11bc\u1100\u1161\u11ab","\u1100\u1169\u11bc\u1100\u1162","\u1100\u1169\u11bc\u1100\u1167\u11a8","\u1100\u1169\u11bc\u1100\u116e\u11ab","\u1100\u1169\u11bc\u1100\u1173\u11b8","\u1100\u1169\u11bc\u1100\u1175","\u1100\u1169\u11bc\u1103\u1169\u11bc","\u1100\u1169\u11bc\u1106\u116e\u110b\u116f\u11ab","\u1100\u1169\u11bc\u1107\u116e","\u1100\u1169\u11bc\u1109\u1161","\u1100\u1169\u11bc\u1109\u1175\u11a8","\u1100\u1169\u11bc\u110b\u1165\u11b8","\u1100\u1169\u11bc\u110b\u1167\u11ab","\u1100\u1169\u11bc\u110b\u116f\u11ab","\u1100\u1169\u11bc\u110c\u1161\u11bc","\u1100\u1169\u11bc\u110d\u1161","\u1100\u1169\u11bc\u110e\u1162\u11a8","\u1100\u1169\u11bc\u1110\u1169\u11bc","\u1100\u1169\u11bc\u1111\u1169","\u1100\u1169\u11bc\u1112\u1161\u11bc","\u1100\u1169\u11bc\u1112\u1172\u110b\u1175\u11af","\u1100\u116a\u1106\u1169\u11a8","\u1100\u116a\u110b\u1175\u11af","\u1100\u116a\u110c\u1161\u11bc","\u1100\u116a\u110c\u1165\u11bc","\u1100\u116a\u1112\u1161\u11a8","\u1100\u116a\u11ab\u1100\u1162\u11a8","\u1100\u116a\u11ab\u1100\u1168","\u1100\u116a\u11ab\u1100\u116a\u11bc","\u1100\u116a\u11ab\u1102\u1167\u11b7","\u1100\u116a\u11ab\u1105\u1161\u11b7","\u1100\u116a\u11ab\u1105\u1167\u11ab","\u1100\u116a\u11ab\u1105\u1175","\u1100\u116a\u11ab\u1109\u1173\u11b8","\u1100\u116a\u11ab\u1109\u1175\u11b7","\u1100\u116a\u11ab\u110c\u1165\u11b7","\u1100\u116a\u11ab\u110e\u1161\u11af","\u1100\u116a\u11bc\u1100\u1167\u11bc","\u1100\u116a\u11bc\u1100\u1169","\u1100\u116a\u11bc\u110c\u1161\u11bc","\u1100\u116a\u11bc\u110c\u116e","\u1100\u116c\u1105\u1169\u110b\u116e\u11b7","\u1100\u116c\u11bc\u110c\u1161\u11bc\u1112\u1175","\u1100\u116d\u1100\u116a\u1109\u1165","\u1100\u116d\u1106\u116e\u11ab","\u1100\u116d\u1107\u1169\u11a8","\u1100\u116d\u1109\u1175\u11af","\u1100\u116d\u110b\u1163\u11bc","\u1100\u116d\u110b\u1172\u11a8","\u1100\u116d\u110c\u1161\u11bc","\u1100\u116d\u110c\u1175\u11a8","\u1100\u116d\u1110\u1169\u11bc","\u1100\u116d\u1112\u116a\u11ab","\u1100\u116d\u1112\u116e\u11ab","\u1100\u116e\u1100\u1167\u11bc","\u1100\u116e\u1105\u1173\u11b7","\u1100\u116e\u1106\u1165\u11bc","\u1100\u116e\u1107\u1167\u11af","\u1100\u116e\u1107\u116e\u11ab","\u1100\u116e\u1109\u1165\u11a8","\u1100\u116e\u1109\u1165\u11bc","\u1100\u116e\u1109\u1169\u11a8","\u1100\u116e\u110b\u1167\u11a8","\u1100\u116e\u110b\u1175\u11b8","\u1100\u116e\u110e\u1165\u11bc","\u1100\u116e\u110e\u1166\u110c\u1165\u11a8","\u1100\u116e\u11a8\u1100\u1161","\u1100\u116e\u11a8\u1100\u1175","\u1100\u116e\u11a8\u1102\u1162","\u1100\u116e\u11a8\u1105\u1175\u11b8","\u1100\u116e\u11a8\u1106\u116e\u11af","\u1100\u116e\u11a8\u1106\u1175\u11ab","\u1100\u116e\u11a8\u1109\u116e","\u1100\u116e\u11a8\u110b\u1165","\u1100\u116e\u11a8\u110b\u116a\u11bc","\u1100\u116e\u11a8\u110c\u1165\u11a8","\u1100\u116e\u11a8\u110c\u1166","\u1100\u116e\u11a8\u1112\u116c","\u1100\u116e\u11ab\u1103\u1162","\u1100\u116e\u11ab\u1109\u1161","\u1100\u116e\u11ab\u110b\u1175\u11ab","\u1100\u116e\u11bc\u1100\u1173\u11a8\u110c\u1165\u11a8","\u1100\u116f\u11ab\u1105\u1175","\u1100\u116f\u11ab\u110b\u1171","\u1100\u116f\u11ab\u1110\u116e","\u1100\u1171\u1100\u116e\u11a8","\u1100\u1171\u1109\u1175\u11ab","\u1100\u1172\u110c\u1165\u11bc","\u1100\u1172\u110e\u1175\u11a8","\u1100\u1172\u11ab\u1112\u1167\u11bc","\u1100\u1173\u1102\u1161\u11af","\u1100\u1173\u1102\u1163\u11bc","\u1100\u1173\u1102\u1173\u11af","\u1100\u1173\u1105\u1165\u1102\u1161","\u1100\u1173\u1105\u116e\u11b8","\u1100\u1173\u1105\u1173\u11ba","\u1100\u1173\u1105\u1175\u11b7","\u1100\u1173\u110c\u1166\u1109\u1165\u110b\u1163","\u1100\u1173\u1110\u1169\u1105\u1169\u11a8","\u1100\u1173\u11a8\u1107\u1169\u11a8","\u1100\u1173\u11a8\u1112\u1175","\u1100\u1173\u11ab\u1100\u1165","\u1100\u1173\u11ab\u1100\u116d","\u1100\u1173\u11ab\u1105\u1162","\u1100\u1173\u11ab\u1105\u1169","\u1100\u1173\u11ab\u1106\u116e","\u1100\u1173\u11ab\u1107\u1169\u11ab","\u1100\u1173\u11ab\u110b\u116f\u11ab","\u1100\u1173\u11ab\u110b\u1172\u11a8","\u1100\u1173\u11ab\u110e\u1165","\u1100\u1173\u11af\u110a\u1175","\u1100\u1173\u11af\u110c\u1161","\u1100\u1173\u11b7\u1100\u1161\u11bc\u1109\u1161\u11ab","\u1100\u1173\u11b7\u1100\u1169","\u1100\u1173\u11b7\u1102\u1167\u11ab","\u1100\u1173\u11b7\u1106\u1166\u1103\u1161\u11af","\u1100\u1173\u11b7\u110b\u1162\u11a8","\u1100\u1173\u11b7\u110b\u1167\u11ab","\u1100\u1173\u11b7\u110b\u116d\u110b\u1175\u11af","\u1100\u1173\u11b7\u110c\u1175","\u1100\u1173\u11bc\u110c\u1165\u11bc\u110c\u1165\u11a8","\u1100\u1175\u1100\u1161\u11ab","\u1100\u1175\u1100\u116a\u11ab","\u1100\u1175\u1102\u1167\u11b7","\u1100\u1175\u1102\u1173\u11bc","\u1100\u1175\u1103\u1169\u11a8\u1100\u116d","\u1100\u1175\u1103\u116e\u11bc","\u1100\u1175\u1105\u1169\u11a8","\u1100\u1175\u1105\u1173\u11b7","\u1100\u1175\u1107\u1165\u11b8","\u1100\u1175\u1107\u1169\u11ab","\u1100\u1175\u1107\u116e\u11ab","\u1100\u1175\u1108\u1173\u11b7","\u1100\u1175\u1109\u116e\u11a8\u1109\u1161","\u1100\u1175\u1109\u116e\u11af","\u1100\u1175\u110b\u1165\u11a8","\u1100\u1175\u110b\u1165\u11b8","\u1100\u1175\u110b\u1169\u11ab","\u1100\u1175\u110b\u116e\u11ab","\u1100\u1175\u110b\u116f\u11ab","\u1100\u1175\u110c\u1165\u11a8","\u1100\u1175\u110c\u116e\u11ab","\u1100\u1175\u110e\u1175\u11b7","\u1100\u1175\u1112\u1169\u11ab","\u1100\u1175\u1112\u116c\u11a8","\u1100\u1175\u11ab\u1100\u1173\u11b8","\u1100\u1175\u11ab\u110c\u1161\u11bc","\u1100\u1175\u11af\u110b\u1175","\u1100\u1175\u11b7\u1107\u1161\u11b8","\u1100\u1175\u11b7\u110e\u1175","\u1100\u1175\u11b7\u1111\u1169\u1100\u1169\u11bc\u1112\u1161\u11bc","\u1101\u1161\u11a8\u1103\u116e\u1100\u1175","\u1101\u1161\u11b7\u1108\u1161\u11a8","\u1101\u1162\u1103\u1161\u11af\u110b\u1173\u11b7","\u1101\u1162\u1109\u1169\u1100\u1173\u11b7","\u1101\u1165\u11b8\u110c\u1175\u11af","\u1101\u1169\u11a8\u1103\u1162\u1100\u1175","\u1101\u1169\u11be\u110b\u1175\u11c1","\u1102\u1161\u1103\u1173\u11af\u110b\u1175","\u1102\u1161\u1105\u1161\u11ab\u1112\u1175","\u1102\u1161\u1106\u1165\u110c\u1175","\u1102\u1161\u1106\u116e\u11af","\u1102\u1161\u110e\u1175\u11b7\u1107\u1161\u11ab","\u1102\u1161\u1112\u1173\u11af","\u1102\u1161\u11a8\u110b\u1167\u11b8","\u1102\u1161\u11ab\u1107\u1161\u11bc","\u1102\u1161\u11af\u1100\u1162","\u1102\u1161\u11af\u110a\u1175","\u1102\u1161\u11af\u110d\u1161","\u1102\u1161\u11b7\u1102\u1167","\u1102\u1161\u11b7\u1103\u1162\u1106\u116e\u11ab","\u1102\u1161\u11b7\u1106\u1162","\u1102\u1161\u11b7\u1109\u1161\u11ab","\u1102\u1161\u11b7\u110c\u1161","\u1102\u1161\u11b7\u1111\u1167\u11ab","\u1102\u1161\u11b7\u1112\u1161\u11a8\u1109\u1162\u11bc","\u1102\u1161\u11bc\u1107\u1175","\u1102\u1161\u11c0\u1106\u1161\u11af","\u1102\u1162\u1102\u1167\u11ab","\u1102\u1162\u110b\u116d\u11bc","\u1102\u1162\u110b\u1175\u11af","\u1102\u1162\u11b7\u1107\u1175","\u1102\u1162\u11b7\u1109\u1162","\u1102\u1162\u11ba\u1106\u116e\u11af","\u1102\u1162\u11bc\u1103\u1169\u11bc","\u1102\u1162\u11bc\u1106\u1167\u11ab","\u1102\u1162\u11bc\u1107\u1161\u11bc","\u1102\u1162\u11bc\u110c\u1161\u11bc\u1100\u1169","\u1102\u1166\u11a8\u1110\u1161\u110b\u1175","\u1102\u1166\u11ba\u110d\u1162","\u1102\u1169\u1103\u1169\u11bc","\u1102\u1169\u1105\u1161\u11ab\u1109\u1162\u11a8","\u1102\u1169\u1105\u1167\u11a8","\u1102\u1169\u110b\u1175\u11ab","\u1102\u1169\u11a8\u110b\u1173\u11b7","\u1102\u1169\u11a8\u110e\u1161","\u1102\u1169\u11a8\u1112\u116a","\u1102\u1169\u11ab\u1105\u1175","\u1102\u1169\u11ab\u1106\u116e\u11ab","\u1102\u1169\u11ab\u110c\u1162\u11bc","\u1102\u1169\u11af\u110b\u1175","\u1102\u1169\u11bc\u1100\u116e","\u1102\u1169\u11bc\u1103\u1161\u11b7","\u1102\u1169\u11bc\u1106\u1175\u11ab","\u1102\u1169\u11bc\u1107\u116e","\u1102\u1169\u11bc\u110b\u1165\u11b8","\u1102\u1169\u11bc\u110c\u1161\u11bc","\u1102\u1169\u11bc\u110e\u1169\u11ab","\u1102\u1169\u11c1\u110b\u1175","\u1102\u116e\u11ab\u1103\u1169\u11bc\u110c\u1161","\u1102\u116e\u11ab\u1106\u116e\u11af","\u1102\u116e\u11ab\u110a\u1165\u11b8","\u1102\u1172\u110b\u116d\u11a8","\u1102\u1173\u1101\u1175\u11b7","\u1102\u1173\u11a8\u1103\u1162","\u1102\u1173\u11bc\u1103\u1169\u11bc\u110c\u1165\u11a8","\u1102\u1173\u11bc\u1105\u1167\u11a8","\u1103\u1161\u1107\u1161\u11bc","\u1103\u1161\u110b\u1163\u11bc\u1109\u1165\u11bc","\u1103\u1161\u110b\u1173\u11b7","\u1103\u1161\u110b\u1175\u110b\u1165\u1110\u1173","\u1103\u1161\u1112\u1162\u11bc","\u1103\u1161\u11ab\u1100\u1168","\u1103\u1161\u11ab\u1100\u1169\u11af","\u1103\u1161\u11ab\u1103\u1169\u11a8","\u1103\u1161\u11ab\u1106\u1161\u11ba","\u1103\u1161\u11ab\u1109\u116e\u11ab","\u1103\u1161\u11ab\u110b\u1165","\u1103\u1161\u11ab\u110b\u1171","\u1103\u1161\u11ab\u110c\u1165\u11b7","\u1103\u1161\u11ab\u110e\u1166","\u1103\u1161\u11ab\u110e\u116e","\u1103\u1161\u11ab\u1111\u1167\u11ab","\u1103\u1161\u11ab\u1111\u116e\u11bc","\u1103\u1161\u11af\u1100\u1163\u11af","\u1103\u1161\u11af\u1105\u1165","\u1103\u1161\u11af\u1105\u1167\u11a8","\u1103\u1161\u11af\u1105\u1175","\u1103\u1161\u11b0\u1100\u1169\u1100\u1175","\u1103\u1161\u11b7\u1103\u1161\u11bc","\u1103\u1161\u11b7\u1107\u1162","\u1103\u1161\u11b7\u110b\u116d","\u1103\u1161\u11b7\u110b\u1175\u11b7","\u1103\u1161\u11b8\u1107\u1167\u11ab","\u1103\u1161\u11b8\u110c\u1161\u11bc","\u1103\u1161\u11bc\u1100\u1173\u11ab","\u1103\u1161\u11bc\u1107\u116e\u11ab\u1100\u1161\u11ab","\u1103\u1161\u11bc\u110b\u1167\u11ab\u1112\u1175","\u1103\u1161\u11bc\u110c\u1161\u11bc","\u1103\u1162\u1100\u1172\u1106\u1169","\u1103\u1162\u1102\u1161\u11bd","\u1103\u1162\u1103\u1161\u11ab\u1112\u1175","\u1103\u1162\u1103\u1161\u11b8","\u1103\u1162\u1103\u1169\u1109\u1175","\u1103\u1162\u1105\u1163\u11a8","\u1103\u1162\u1105\u1163\u11bc","\u1103\u1162\u1105\u1172\u11a8","\u1103\u1162\u1106\u116e\u11ab","\u1103\u1162\u1107\u116e\u1107\u116e\u11ab","\u1103\u1162\u1109\u1175\u11ab","\u1103\u1162\u110b\u1173\u11bc","\u1103\u1162\u110c\u1161\u11bc","\u1103\u1162\u110c\u1165\u11ab","\u1103\u1162\u110c\u1165\u11b8","\u1103\u1162\u110c\u116e\u11bc","\u1103\u1162\u110e\u1162\u11a8","\u1103\u1162\u110e\u116e\u11af","\u1103\u1162\u110e\u116e\u11bc","\u1103\u1162\u1110\u1169\u11bc\u1105\u1167\u11bc","\u1103\u1162\u1112\u1161\u11a8","\u1103\u1162\u1112\u1161\u11ab\u1106\u1175\u11ab\u1100\u116e\u11a8","\u1103\u1162\u1112\u1161\u11b8\u1109\u1175\u11af","\u1103\u1162\u1112\u1167\u11bc","\u1103\u1165\u11bc\u110b\u1165\u1105\u1175","\u1103\u1166\u110b\u1175\u1110\u1173","\u1103\u1169\u1103\u1162\u110e\u1166","\u1103\u1169\u1103\u1165\u11a8","\u1103\u1169\u1103\u116e\u11a8","\u1103\u1169\u1106\u1161\u11bc","\u1103\u1169\u1109\u1165\u1100\u116a\u11ab","\u1103\u1169\u1109\u1175\u11b7","\u1103\u1169\u110b\u116e\u11b7","\u1103\u1169\u110b\u1175\u11b8","\u1103\u1169\u110c\u1161\u1100\u1175","\u1103\u1169\u110c\u1165\u1112\u1175","\u1103\u1169\u110c\u1165\u11ab","\u1103\u1169\u110c\u116e\u11bc","\u1103\u1169\u110e\u1161\u11a8","\u1103\u1169\u11a8\u1100\u1161\u11b7","\u1103\u1169\u11a8\u1105\u1175\u11b8","\u1103\u1169\u11a8\u1109\u1165","\u1103\u1169\u11a8\u110b\u1175\u11af","\u1103\u1169\u11a8\u110e\u1161\u11bc\u110c\u1165\u11a8","\u1103\u1169\u11bc\u1112\u116a\u110e\u1162\u11a8","\u1103\u1171\u11ba\u1106\u1169\u1109\u1173\u11b8","\u1103\u1171\u11ba\u1109\u1161\u11ab","\u1104\u1161\u11af\u110b\u1161\u110b\u1175","\u1106\u1161\u1102\u116e\u1105\u1161","\u1106\u1161\u1102\u1173\u11af","\u1106\u1161\u1103\u1161\u11bc","\u1106\u1161\u1105\u1161\u1110\u1169\u11ab","\u1106\u1161\u1105\u1167\u11ab","\u1106\u1161\u1106\u116e\u1105\u1175","\u1106\u1161\u1109\u1161\u110c\u1175","\u1106\u1161\u110b\u1163\u11a8","\u1106\u1161\u110b\u116d\u1102\u1166\u110c\u1173","\u1106\u1161\u110b\u1173\u11af","\u1106\u1161\u110b\u1173\u11b7","\u1106\u1161\u110b\u1175\u110f\u1173","\u1106\u1161\u110c\u116e\u11bc","\u1106\u1161\u110c\u1175\u1106\u1161\u11a8","\u1106\u1161\u110e\u1161\u11ab\u1100\u1161\u110c\u1175","\u1106\u1161\u110e\u1161\u11af","\u1106\u1161\u1112\u1173\u11ab","\u1106\u1161\u11a8\u1100\u1165\u11af\u1105\u1175","\u1106\u1161\u11a8\u1102\u1162","\u1106\u1161\u11a8\u1109\u1161\u11bc","\u1106\u1161\u11ab\u1102\u1161\u11b7","\u1106\u1161\u11ab\u1103\u116e","\u1106\u1161\u11ab\u1109\u1166","\u1106\u1161\u11ab\u110b\u1163\u11a8","\u1106\u1161\u11ab\u110b\u1175\u11af","\u1106\u1161\u11ab\u110c\u1165\u11b7","\u1106\u1161\u11ab\u110c\u1169\u11a8","\u1106\u1161\u11ab\u1112\u116a","\u1106\u1161\u11ad\u110b\u1175","\u1106\u1161\u11af\u1100\u1175","\u1106\u1161\u11af\u110a\u1173\u11b7","\u1106\u1161\u11af\u1110\u116e","\u1106\u1161\u11b7\u1103\u1162\u1105\u1169","\u1106\u1161\u11bc\u110b\u116f\u11ab\u1100\u1167\u11bc","\u1106\u1162\u1102\u1167\u11ab","\u1106\u1162\u1103\u1161\u11af","\u1106\u1162\u1105\u1167\u11a8","\u1106\u1162\u1107\u1165\u11ab","\u1106\u1162\u1109\u1173\u110f\u1165\u11b7","\u1106\u1162\u110b\u1175\u11af","\u1106\u1162\u110c\u1161\u11bc","\u1106\u1162\u11a8\u110c\u116e","\u1106\u1165\u11a8\u110b\u1175","\u1106\u1165\u11ab\u110c\u1165","\u1106\u1165\u11ab\u110c\u1175","\u1106\u1165\u11af\u1105\u1175","\u1106\u1166\u110b\u1175\u11af","\u1106\u1167\u1102\u1173\u1105\u1175","\u1106\u1167\u110e\u1175\u11af","\u1106\u1167\u11ab\u1103\u1161\u11b7","\u1106\u1167\u11af\u110e\u1175","\u1106\u1167\u11bc\u1103\u1161\u11ab","\u1106\u1167\u11bc\u1105\u1167\u11bc","\u1106\u1167\u11bc\u110b\u1168","\u1106\u1167\u11bc\u110b\u1174","\u1106\u1167\u11bc\u110c\u1165\u11af","\u1106\u1167\u11bc\u110e\u1175\u11bc","\u1106\u1167\u11bc\u1112\u1161\u11b7","\u1106\u1169\u1100\u1173\u11b7","\u1106\u1169\u1102\u1175\u1110\u1165","\u1106\u1169\u1103\u1166\u11af","\u1106\u1169\u1103\u1173\u11ab","\u1106\u1169\u1107\u1165\u11b7","\u1106\u1169\u1109\u1173\u11b8","\u1106\u1169\u110b\u1163\u11bc","\u1106\u1169\u110b\u1175\u11b7","\u1106\u1169\u110c\u1169\u1105\u1175","\u1106\u1169\u110c\u1175\u11b8","\u1106\u1169\u1110\u116e\u11bc\u110b\u1175","\u1106\u1169\u11a8\u1100\u1165\u11af\u110b\u1175","\u1106\u1169\u11a8\u1105\u1169\u11a8","\u1106\u1169\u11a8\u1109\u1161","\u1106\u1169\u11a8\u1109\u1169\u1105\u1175","\u1106\u1169\u11a8\u1109\u116e\u11b7","\u1106\u1169\u11a8\u110c\u1165\u11a8","\u1106\u1169\u11a8\u1111\u116d","\u1106\u1169\u11af\u1105\u1162","\u1106\u1169\u11b7\u1106\u1162","\u1106\u1169\u11b7\u1106\u116e\u1100\u1166","\u1106\u1169\u11b7\u1109\u1161\u11af","\u1106\u1169\u11b7\u1109\u1169\u11a8","\u1106\u1169\u11b7\u110c\u1175\u11ba","\u1106\u1169\u11b7\u1110\u1169\u11bc","\u1106\u1169\u11b8\u1109\u1175","\u1106\u116e\u1100\u116a\u11ab\u1109\u1175\u11b7","\u1106\u116e\u1100\u116e\u11bc\u1112\u116a","\u1106\u116e\u1103\u1165\u110b\u1171","\u1106\u116e\u1103\u1165\u11b7","\u1106\u116e\u1105\u1173\u11c1","\u1106\u116e\u1109\u1173\u11ab","\u1106\u116e\u110b\u1165\u11ba","\u1106\u116e\u110b\u1167\u11a8","\u1106\u116e\u110b\u116d\u11bc","\u1106\u116e\u110c\u1169\u1100\u1165\u11ab","\u1106\u116e\u110c\u1175\u1100\u1162","\u1106\u116e\u110e\u1165\u11a8","\u1106\u116e\u11ab\u1100\u116e","\u1106\u116e\u11ab\u1103\u1173\u11a8","\u1106\u116e\u11ab\u1107\u1165\u11b8","\u1106\u116e\u11ab\u1109\u1165","\u1106\u116e\u11ab\u110c\u1166","\u1106\u116e\u11ab\u1112\u1161\u11a8","\u1106\u116e\u11ab\u1112\u116a","\u1106\u116e\u11af\u1100\u1161","\u1106\u116e\u11af\u1100\u1165\u11ab","\u1106\u116e\u11af\u1100\u1167\u11af","\u1106\u116e\u11af\u1100\u1169\u1100\u1175","\u1106\u116e\u11af\u1105\u1169\u11ab","\u1106\u116e\u11af\u1105\u1175\u1112\u1161\u11a8","\u1106\u116e\u11af\u110b\u1173\u11b7","\u1106\u116e\u11af\u110c\u1175\u11af","\u1106\u116e\u11af\u110e\u1166","\u1106\u1175\u1100\u116e\u11a8","\u1106\u1175\u1103\u1175\u110b\u1165","\u1106\u1175\u1109\u1161\u110b\u1175\u11af","\u1106\u1175\u1109\u116e\u11af","\u1106\u1175\u110b\u1167\u11a8","\u1106\u1175\u110b\u116d\u11bc\u1109\u1175\u11af","\u1106\u1175\u110b\u116e\u11b7","\u1106\u1175\u110b\u1175\u11ab","\u1106\u1175\u1110\u1175\u11bc","\u1106\u1175\u1112\u1169\u11ab","\u1106\u1175\u11ab\u1100\u1161\u11ab","\u1106\u1175\u11ab\u110c\u1169\u11a8","\u1106\u1175\u11ab\u110c\u116e","\u1106\u1175\u11ae\u110b\u1173\u11b7","\u1106\u1175\u11af\u1100\u1161\u1105\u116e","\u1106\u1175\u11af\u1105\u1175\u1106\u1175\u1110\u1165","\u1106\u1175\u11c0\u1107\u1161\u1103\u1161\u11a8","\u1107\u1161\u1100\u1161\u110c\u1175","\u1107\u1161\u1100\u116e\u1102\u1175","\u1107\u1161\u1102\u1161\u1102\u1161","\u1107\u1161\u1102\u1173\u11af","\u1107\u1161\u1103\u1161\u11a8","\u1107\u1161\u1103\u1161\u11ba\u1100\u1161","\u1107\u1161\u1105\u1161\u11b7","\u1107\u1161\u110b\u1175\u1105\u1165\u1109\u1173","\u1107\u1161\u1110\u1161\u11bc","\u1107\u1161\u11a8\u1106\u116e\u11af\u1100\u116a\u11ab","\u1107\u1161\u11a8\u1109\u1161","\u1107\u1161\u11a8\u1109\u116e","\u1107\u1161\u11ab\u1103\u1162","\u1107\u1161\u11ab\u1103\u1173\u1109\u1175","\u1107\u1161\u11ab\u1106\u1161\u11af","\u1107\u1161\u11ab\u1107\u1161\u11af","\u1107\u1161\u11ab\u1109\u1165\u11bc","\u1107\u1161\u11ab\u110b\u1173\u11bc","\u1107\u1161\u11ab\u110c\u1161\u11bc","\u1107\u1161\u11ab\u110c\u116e\u11a8","\u1107\u1161\u11ab\u110c\u1175","\u1107\u1161\u11ab\u110e\u1161\u11ab","\u1107\u1161\u11ae\u110e\u1175\u11b7","\u1107\u1161\u11af\u1100\u1161\u1105\u1161\u11a8","\u1107\u1161\u11af\u1100\u1165\u11af\u110b\u1173\u11b7","\u1107\u1161\u11af\u1100\u1167\u11ab","\u1107\u1161\u11af\u1103\u1161\u11af","\u1107\u1161\u11af\u1105\u1166","\u1107\u1161\u11af\u1106\u1169\u11a8","\u1107\u1161\u11af\u1107\u1161\u1103\u1161\u11a8","\u1107\u1161\u11af\u1109\u1162\u11bc","\u1107\u1161\u11af\u110b\u1173\u11b7","\u1107\u1161\u11af\u110c\u1161\u1100\u116e\u11a8","\u1107\u1161\u11af\u110c\u1165\u11ab","\u1107\u1161\u11af\u1110\u1169\u11b8","\u1107\u1161\u11af\u1111\u116d","\u1107\u1161\u11b7\u1112\u1161\u1102\u1173\u11af","\u1107\u1161\u11b8\u1100\u1173\u1105\u1173\u11ba","\u1107\u1161\u11b8\u1106\u1161\u11ba","\u1107\u1161\u11b8\u1109\u1161\u11bc","\u1107\u1161\u11b8\u1109\u1169\u11c0","\u1107\u1161\u11bc\u1100\u1173\u11b7","\u1107\u1161\u11bc\u1106\u1167\u11ab","\u1107\u1161\u11bc\u1106\u116e\u11ab","\u1107\u1161\u11bc\u1107\u1161\u1103\u1161\u11a8","\u1107\u1161\u11bc\u1107\u1165\u11b8","\u1107\u1161\u11bc\u1109\u1169\u11bc","\u1107\u1161\u11bc\u1109\u1175\u11a8","\u1107\u1161\u11bc\u110b\u1161\u11ab","\u1107\u1161\u11bc\u110b\u116e\u11af","\u1107\u1161\u11bc\u110c\u1175","\u1107\u1161\u11bc\u1112\u1161\u11a8","\u1107\u1161\u11bc\u1112\u1162","\u1107\u1161\u11bc\u1112\u1163\u11bc","\u1107\u1162\u1100\u1167\u11bc","\u1107\u1162\u1101\u1169\u11b8","\u1107\u1162\u1103\u1161\u11af","\u1107\u1162\u1103\u1173\u1106\u1175\u11ab\u1110\u1165\u11ab","\u1107\u1162\u11a8\u1103\u116e\u1109\u1161\u11ab","\u1107\u1162\u11a8\u1109\u1162\u11a8","\u1107\u1162\u11a8\u1109\u1165\u11bc","\u1107\u1162\u11a8\u110b\u1175\u11ab","\u1107\u1162\u11a8\u110c\u1166","\u1107\u1162\u11a8\u1112\u116a\u110c\u1165\u11b7","\u1107\u1165\u1105\u1173\u11ba","\u1107\u1165\u1109\u1165\u11ba","\u1107\u1165\u1110\u1173\u11ab","\u1107\u1165\u11ab\u1100\u1162","\u1107\u1165\u11ab\u110b\u1167\u11a8","\u1107\u1165\u11ab\u110c\u1175","\u1107\u1165\u11ab\u1112\u1169","\u1107\u1165\u11af\u1100\u1173\u11b7","\u1107\u1165\u11af\u1105\u1166","\u1107\u1165\u11af\u110a\u1165","\u1107\u1165\u11b7\u110b\u1171","\u1107\u1165\u11b7\u110b\u1175\u11ab","\u1107\u1165\u11b7\u110c\u116c","\u1107\u1165\u11b8\u1105\u1172\u11af","\u1107\u1165\u11b8\u110b\u116f\u11ab","\u1107\u1165\u11b8\u110c\u1165\u11a8","\u1107\u1165\u11b8\u110e\u1175\u11a8","\u1107\u1166\u110b\u1175\u110c\u1175\u11bc","\u1107\u1166\u11af\u1110\u1173","\u1107\u1167\u11ab\u1100\u1167\u11bc","\u1107\u1167\u11ab\u1103\u1169\u11bc","\u1107\u1167\u11ab\u1106\u1167\u11bc","\u1107\u1167\u11ab\u1109\u1175\u11ab","\u1107\u1167\u11ab\u1112\u1169\u1109\u1161","\u1107\u1167\u11ab\u1112\u116a","\u1107\u1167\u11af\u1103\u1169","\u1107\u1167\u11af\u1106\u1167\u11bc","\u1107\u1167\u11af\u110b\u1175\u11af","\u1107\u1167\u11bc\u1109\u1175\u11af","\u1107\u1167\u11bc\u110b\u1161\u1105\u1175","\u1107\u1167\u11bc\u110b\u116f\u11ab","\u1107\u1169\u1100\u116a\u11ab","\u1107\u1169\u1102\u1165\u1109\u1173","\u1107\u1169\u1105\u1161\u1109\u1162\u11a8","\u1107\u1169\u1105\u1161\u11b7","\u1107\u1169\u1105\u1173\u11b7","\u1107\u1169\u1109\u1161\u11bc","\u1107\u1169\u110b\u1161\u11ab","\u1107\u1169\u110c\u1161\u1100\u1175","\u1107\u1169\u110c\u1161\u11bc","\u1107\u1169\u110c\u1165\u11ab","\u1107\u1169\u110c\u1169\u11ab","\u1107\u1169\u1110\u1169\u11bc","\u1107\u1169\u1111\u1167\u11ab\u110c\u1165\u11a8","\u1107\u1169\u1112\u1165\u11b7","\u1107\u1169\u11a8\u1103\u1169","\u1107\u1169\u11a8\u1109\u1161","\u1107\u1169\u11a8\u1109\u116e\u11bc\u110b\u1161","\u1107\u1169\u11a8\u1109\u1173\u11b8","\u1107\u1169\u11a9\u110b\u1173\u11b7","\u1107\u1169\u11ab\u1100\u1167\u11a8\u110c\u1165\u11a8","\u1107\u1169\u11ab\u1105\u1162","\u1107\u1169\u11ab\u1107\u116e","\u1107\u1169\u11ab\u1109\u1161","\u1107\u1169\u11ab\u1109\u1165\u11bc","\u1107\u1169\u11ab\u110b\u1175\u11ab","\u1107\u1169\u11ab\u110c\u1175\u11af","\u1107\u1169\u11af\u1111\u1166\u11ab","\u1107\u1169\u11bc\u1109\u1161","\u1107\u1169\u11bc\u110c\u1175","\u1107\u1169\u11bc\u1110\u116e","\u1107\u116e\u1100\u1173\u11ab","\u1107\u116e\u1101\u1173\u1105\u1165\u110b\u116e\u11b7","\u1107\u116e\u1103\u1161\u11b7","\u1107\u116e\u1103\u1169\u11bc\u1109\u1161\u11ab","\u1107\u116e\u1106\u116e\u11ab","\u1107\u116e\u1107\u116e\u11ab","\u1107\u116e\u1109\u1161\u11ab","\u1107\u116e\u1109\u1161\u11bc","\u1107\u116e\u110b\u1165\u11bf","\u1107\u116e\u110b\u1175\u11ab","\u1107\u116e\u110c\u1161\u11a8\u110b\u116d\u11bc","\u1107\u116e\u110c\u1161\u11bc","\u1107\u116e\u110c\u1165\u11bc","\u1107\u116e\u110c\u1169\u11a8","\u1107\u116e\u110c\u1175\u1105\u1165\u11ab\u1112\u1175","\u1107\u116e\u110e\u1175\u11ab","\u1107\u116e\u1110\u1161\u11a8","\u1107\u116e\u1111\u116e\u11b7","\u1107\u116e\u1112\u116c\u110c\u1161\u11bc","\u1107\u116e\u11a8\u1107\u116e","\u1107\u116e\u11a8\u1112\u1161\u11ab","\u1107\u116e\u11ab\u1102\u1169","\u1107\u116e\u11ab\u1105\u1163\u11bc","\u1107\u116e\u11ab\u1105\u1175","\u1107\u116e\u11ab\u1106\u1167\u11bc","\u1107\u116e\u11ab\u1109\u1165\u11a8","\u1107\u116e\u11ab\u110b\u1163","\u1107\u116e\u11ab\u110b\u1171\u1100\u1175","\u1107\u116e\u11ab\u1111\u1175\u11af","\u1107\u116e\u11ab\u1112\u1169\u11bc\u1109\u1162\u11a8","\u1107\u116e\u11af\u1100\u1169\u1100\u1175","\u1107\u116e\u11af\u1100\u116a","\u1107\u116e\u11af\u1100\u116d","\u1107\u116e\u11af\u1101\u1169\u11be","\u1107\u116e\u11af\u1106\u1161\u11ab","\u1107\u116e\u11af\u1107\u1165\u11b8","\u1107\u116e\u11af\u1107\u1175\u11be","\u1107\u116e\u11af\u110b\u1161\u11ab","\u1107\u116e\u11af\u110b\u1175\u110b\u1175\u11a8","\u1107\u116e\u11af\u1112\u1162\u11bc","\u1107\u1173\u1105\u1162\u11ab\u1103\u1173","\u1107\u1175\u1100\u1173\u11a8","\u1107\u1175\u1102\u1161\u11ab","\u1107\u1175\u1102\u1175\u11af","\u1107\u1175\u1103\u116e\u11af\u1100\u1175","\u1107\u1175\u1103\u1175\u110b\u1169","\u1107\u1175\u1105\u1169\u1109\u1169","\u1107\u1175\u1106\u1161\u11ab","\u1107\u1175\u1106\u1167\u11bc","\u1107\u1175\u1106\u1175\u11af","\u1107\u1175\u1107\u1161\u1105\u1161\u11b7","\u1107\u1175\u1107\u1175\u11b7\u1107\u1161\u11b8","\u1107\u1175\u1109\u1161\u11bc","\u1107\u1175\u110b\u116d\u11bc","\u1107\u1175\u110b\u1172\u11af","\u1107\u1175\u110c\u116e\u11bc","\u1107\u1175\u1110\u1161\u1106\u1175\u11ab","\u1107\u1175\u1111\u1161\u11ab","\u1107\u1175\u11af\u1103\u1175\u11bc","\u1107\u1175\u11ba\u1106\u116e\u11af","\u1107\u1175\u11ba\u1107\u1161\u11bc\u110b\u116e\u11af","\u1107\u1175\u11ba\u110c\u116e\u11af\u1100\u1175","\u1107\u1175\u11be\u1101\u1161\u11af","\u1108\u1161\u11af\u1100\u1161\u11ab\u1109\u1162\u11a8","\u1108\u1161\u11af\u1105\u1162","\u1108\u1161\u11af\u1105\u1175","\u1109\u1161\u1100\u1165\u11ab","\u1109\u1161\u1100\u1168\u110c\u1165\u11af","\u1109\u1161\u1102\u1161\u110b\u1175","\u1109\u1161\u1102\u1163\u11bc","\u1109\u1161\u1105\u1161\u11b7","\u1109\u1161\u1105\u1161\u11bc","\u1109\u1161\u1105\u1175\u11b8","\u1109\u1161\u1106\u1169\u1102\u1175\u11b7","\u1109\u1161\u1106\u116e\u11af","\u1109\u1161\u1107\u1161\u11bc","\u1109\u1161\u1109\u1161\u11bc","\u1109\u1161\u1109\u1162\u11bc\u1112\u116a\u11af","\u1109\u1161\u1109\u1165\u11af","\u1109\u1161\u1109\u1173\u11b7","\u1109\u1161\u1109\u1175\u11af","\u1109\u1161\u110b\u1165\u11b8","\u1109\u1161\u110b\u116d\u11bc","\u1109\u1161\u110b\u116f\u11af","\u1109\u1161\u110c\u1161\u11bc","\u1109\u1161\u110c\u1165\u11ab","\u1109\u1161\u110c\u1175\u11ab","\u1109\u1161\u110e\u1169\u11ab","\u1109\u1161\u110e\u116e\u11ab\u1100\u1175","\u1109\u1161\u1110\u1161\u11bc","\u1109\u1161\u1110\u116e\u1105\u1175","\u1109\u1161\u1112\u1173\u11af","\u1109\u1161\u11ab\u1100\u1175\u11af","\u1109\u1161\u11ab\u1107\u116e\u110b\u1175\u11ab\u1100\u116a","\u1109\u1161\u11ab\u110b\u1165\u11b8","\u1109\u1161\u11ab\u110e\u1162\u11a8","\u1109\u1161\u11af\u1105\u1175\u11b7","\u1109\u1161\u11af\u110b\u1175\u11ab","\u1109\u1161\u11af\u110d\u1161\u11a8","\u1109\u1161\u11b7\u1100\u1168\u1110\u1161\u11bc","\u1109\u1161\u11b7\u1100\u116e\u11a8","\u1109\u1161\u11b7\u1109\u1175\u11b8","\u1109\u1161\u11b7\u110b\u116f\u11af","\u1109\u1161\u11b7\u110e\u1169\u11ab","\u1109\u1161\u11bc\u1100\u116a\u11ab","\u1109\u1161\u11bc\u1100\u1173\u11b7","\u1109\u1161\u11bc\u1103\u1162","\u1109\u1161\u11bc\u1105\u1172","\u1109\u1161\u11bc\u1107\u1161\u11ab\u1100\u1175","\u1109\u1161\u11bc\u1109\u1161\u11bc","\u1109\u1161\u11bc\u1109\u1175\u11a8","\u1109\u1161\u11bc\u110b\u1165\u11b8","\u1109\u1161\u11bc\u110b\u1175\u11ab","\u1109\u1161\u11bc\u110c\u1161","\u1109\u1161\u11bc\u110c\u1165\u11b7","\u1109\u1161\u11bc\u110e\u1165","\u1109\u1161\u11bc\u110e\u116e","\u1109\u1161\u11bc\u1110\u1162","\u1109\u1161\u11bc\u1111\u116d","\u1109\u1161\u11bc\u1111\u116e\u11b7","\u1109\u1161\u11bc\u1112\u116a\u11bc","\u1109\u1162\u1107\u1167\u11a8","\u1109\u1162\u11a8\u1101\u1161\u11af","\u1109\u1162\u11a8\u110b\u1167\u11ab\u1111\u1175\u11af","\u1109\u1162\u11bc\u1100\u1161\u11a8","\u1109\u1162\u11bc\u1106\u1167\u11bc","\u1109\u1162\u11bc\u1106\u116e\u11af","\u1109\u1162\u11bc\u1107\u1161\u11bc\u1109\u1169\u11bc","\u1109\u1162\u11bc\u1109\u1161\u11ab","\u1109\u1162\u11bc\u1109\u1165\u11ab","\u1109\u1162\u11bc\u1109\u1175\u11ab","\u1109\u1162\u11bc\u110b\u1175\u11af","\u1109\u1162\u11bc\u1112\u116a\u11af","\u1109\u1165\u1105\u1161\u11b8","\u1109\u1165\u1105\u1173\u11ab","\u1109\u1165\u1106\u1167\u11bc","\u1109\u1165\u1106\u1175\u11ab","\u1109\u1165\u1107\u1175\u1109\u1173","\u1109\u1165\u110b\u1163\u11bc","\u1109\u1165\u110b\u116e\u11af","\u1109\u1165\u110c\u1165\u11a8","\u1109\u1165\u110c\u1165\u11b7","\u1109\u1165\u110d\u1169\u11a8","\u1109\u1165\u110f\u1173\u11af","\u1109\u1165\u11a8\u1109\u1161","\u1109\u1165\u11a8\u110b\u1172","\u1109\u1165\u11ab\u1100\u1165","\u1109\u1165\u11ab\u1106\u116e\u11af","\u1109\u1165\u11ab\u1107\u1162","\u1109\u1165\u11ab\u1109\u1162\u11bc","\u1109\u1165\u11ab\u1109\u116e","\u1109\u1165\u11ab\u110b\u116f\u11ab","\u1109\u1165\u11ab\u110c\u1161\u11bc","\u1109\u1165\u11ab\u110c\u1165\u11ab","\u1109\u1165\u11ab\u1110\u1162\u11a8","\u1109\u1165\u11ab\u1111\u116e\u11bc\u1100\u1175","\u1109\u1165\u11af\u1100\u1165\u110c\u1175","\u1109\u1165\u11af\u1102\u1161\u11af","\u1109\u1165\u11af\u1105\u1165\u11bc\u1110\u1161\u11bc","\u1109\u1165\u11af\u1106\u1167\u11bc","\u1109\u1165\u11af\u1106\u116e\u11ab","\u1109\u1165\u11af\u1109\u1161","\u1109\u1165\u11af\u110b\u1161\u11a8\u1109\u1161\u11ab","\u1109\u1165\u11af\u110e\u1175","\u1109\u1165\u11af\u1110\u1161\u11bc","\u1109\u1165\u11b8\u110a\u1175","\u1109\u1165\u11bc\u1100\u1169\u11bc","\u1109\u1165\u11bc\u1103\u1161\u11bc","\u1109\u1165\u11bc\u1106\u1167\u11bc","\u1109\u1165\u11bc\u1107\u1167\u11af","\u1109\u1165\u11bc\u110b\u1175\u11ab","\u1109\u1165\u11bc\u110c\u1161\u11bc","\u1109\u1165\u11bc\u110c\u1165\u11a8","\u1109\u1165\u11bc\u110c\u1175\u11af","\u1109\u1165\u11bc\u1112\u1161\u11b7","\u1109\u1166\u1100\u1173\u11b7","\u1109\u1166\u1106\u1175\u1102\u1161","\u1109\u1166\u1109\u1161\u11bc","\u1109\u1166\u110b\u116f\u11af","\u1109\u1166\u110c\u1169\u11bc\u1103\u1162\u110b\u116a\u11bc","\u1109\u1166\u1110\u1161\u11a8","\u1109\u1166\u11ab\u1110\u1165","\u1109\u1166\u11ab\u1110\u1175\u1106\u1175\u1110\u1165","\u1109\u1166\u11ba\u110d\u1162","\u1109\u1169\u1100\u1172\u1106\u1169","\u1109\u1169\u1100\u1173\u11a8\u110c\u1165\u11a8","\u1109\u1169\u1100\u1173\u11b7","\u1109\u1169\u1102\u1161\u1100\u1175","\u1109\u1169\u1102\u1167\u11ab","\u1109\u1169\u1103\u1173\u11a8","\u1109\u1169\u1106\u1161\u11bc","\u1109\u1169\u1106\u116e\u11ab","\u1109\u1169\u1109\u1165\u11af","\u1109\u1169\u1109\u1169\u11a8","\u1109\u1169\u110b\u1161\u1100\u116a","\u1109\u1169\u110b\u116d\u11bc","\u1109\u1169\u110b\u116f\u11ab","\u1109\u1169\u110b\u1173\u11b7","\u1109\u1169\u110c\u116e\u11bc\u1112\u1175","\u1109\u1169\u110c\u1175\u1111\u116e\u11b7","\u1109\u1169\u110c\u1175\u11af","\u1109\u1169\u1111\u116e\u11bc","\u1109\u1169\u1112\u1167\u11bc","\u1109\u1169\u11a8\u1103\u1161\u11b7","\u1109\u1169\u11a8\u1103\u1169","\u1109\u1169\u11a8\u110b\u1169\u11ba","\u1109\u1169\u11ab\u1100\u1161\u1105\u1161\u11a8","\u1109\u1169\u11ab\u1100\u1175\u11af","\u1109\u1169\u11ab\u1102\u1167","\u1109\u1169\u11ab\u1102\u1175\u11b7","\u1109\u1169\u11ab\u1103\u1173\u11bc","\u1109\u1169\u11ab\u1106\u1169\u11a8","\u1109\u1169\u11ab\u1108\u1167\u11a8","\u1109\u1169\u11ab\u1109\u1175\u11af","\u1109\u1169\u11ab\u110c\u1175\u11af","\u1109\u1169\u11ab\u1110\u1169\u11b8","\u1109\u1169\u11ab\u1112\u1162","\u1109\u1169\u11af\u110c\u1175\u11a8\u1112\u1175","\u1109\u1169\u11b7\u110a\u1175","\u1109\u1169\u11bc\u110b\u1161\u110c\u1175","\u1109\u1169\u11bc\u110b\u1175","\u1109\u1169\u11bc\u1111\u1167\u11ab","\u1109\u116c\u1100\u1169\u1100\u1175","\u1109\u116d\u1111\u1175\u11bc","\u1109\u116e\u1100\u1165\u11ab","\u1109\u116e\u1102\u1167\u11ab","\u1109\u116e\u1103\u1161\u11ab","\u1109\u116e\u1103\u1169\u11ba\u1106\u116e\u11af","\u1109\u116e\u1103\u1169\u11bc\u110c\u1165\u11a8","\u1109\u116e\u1106\u1167\u11ab","\u1109\u116e\u1106\u1167\u11bc","\u1109\u116e\u1107\u1161\u11a8","\u1109\u116e\u1109\u1161\u11bc","\u1109\u116e\u1109\u1165\u11a8","\u1109\u116e\u1109\u116e\u11af","\u1109\u116e\u1109\u1175\u1105\u1169","\u1109\u116e\u110b\u1165\u11b8","\u1109\u116e\u110b\u1167\u11b7","\u1109\u116e\u110b\u1167\u11bc","\u1109\u116e\u110b\u1175\u11b8","\u1109\u116e\u110c\u116e\u11ab","\u1109\u116e\u110c\u1175\u11b8","\u1109\u116e\u110e\u116e\u11af","\u1109\u116e\u110f\u1165\u11ba","\u1109\u116e\u1111\u1175\u11af","\u1109\u116e\u1112\u1161\u11a8","\u1109\u116e\u1112\u1165\u11b7\u1109\u1162\u11bc","\u1109\u116e\u1112\u116a\u1100\u1175","\u1109\u116e\u11a8\u1102\u1167","\u1109\u116e\u11a8\u1109\u1169","\u1109\u116e\u11a8\u110c\u1166","\u1109\u116e\u11ab\u1100\u1161\u11ab","\u1109\u116e\u11ab\u1109\u1165","\u1109\u116e\u11ab\u1109\u116e","\u1109\u116e\u11ab\u1109\u1175\u11a8\u1100\u1161\u11ab","\u1109\u116e\u11ab\u110b\u1171","\u1109\u116e\u11ae\u1100\u1161\u1105\u1161\u11a8","\u1109\u116e\u11af\u1107\u1167\u11bc","\u1109\u116e\u11af\u110c\u1175\u11b8","\u1109\u116e\u11ba\u110c\u1161","\u1109\u1173\u1102\u1175\u11b7","\u1109\u1173\u1106\u116e\u11af","\u1109\u1173\u1109\u1173\u1105\u1169","\u1109\u1173\u1109\u1173\u11bc","\u1109\u1173\u110b\u1170\u1110\u1165","\u1109\u1173\u110b\u1171\u110e\u1175","\u1109\u1173\u110f\u1166\u110b\u1175\u1110\u1173","\u1109\u1173\u1110\u1172\u1103\u1175\u110b\u1169","\u1109\u1173\u1110\u1173\u1105\u1166\u1109\u1173","\u1109\u1173\u1111\u1169\u110e\u1173","\u1109\u1173\u11af\u110d\u1165\u11a8","\u1109\u1173\u11af\u1111\u1173\u11b7","\u1109\u1173\u11b8\u1100\u116a\u11ab","\u1109\u1173\u11b8\u1100\u1175","\u1109\u1173\u11bc\u1100\u1162\u11a8","\u1109\u1173\u11bc\u1105\u1175","\u1109\u1173\u11bc\u1107\u116e","\u1109\u1173\u11bc\u110b\u116d\u11bc\u110e\u1161","\u1109\u1173\u11bc\u110c\u1175\u11ab","\u1109\u1175\u1100\u1161\u11a8","\u1109\u1175\u1100\u1161\u11ab","\u1109\u1175\u1100\u1169\u11af","\u1109\u1175\u1100\u1173\u11b7\u110e\u1175","\u1109\u1175\u1102\u1161\u1105\u1175\u110b\u1169","\u1109\u1175\u1103\u1162\u11a8","\u1109\u1175\u1105\u1175\u110c\u1173","\u1109\u1175\u1106\u1166\u11ab\u1110\u1173","\u1109\u1175\u1106\u1175\u11ab","\u1109\u1175\u1107\u116e\u1106\u1169","\u1109\u1175\u1109\u1165\u11ab","\u1109\u1175\u1109\u1165\u11af","\u1109\u1175\u1109\u1173\u1110\u1166\u11b7","\u1109\u1175\u110b\u1161\u1107\u1165\u110c\u1175","\u1109\u1175\u110b\u1165\u1106\u1165\u1102\u1175","\u1109\u1175\u110b\u116f\u11af","\u1109\u1175\u110b\u1175\u11ab","\u1109\u1175\u110b\u1175\u11af","\u1109\u1175\u110c\u1161\u11a8","\u1109\u1175\u110c\u1161\u11bc","\u1109\u1175\u110c\u1165\u11af","\u1109\u1175\u110c\u1165\u11b7","\u1109\u1175\u110c\u116e\u11bc","\u1109\u1175\u110c\u1173\u11ab","\u1109\u1175\u110c\u1175\u11b8","\u1109\u1175\u110e\u1165\u11bc","\u1109\u1175\u1112\u1161\u11b8","\u1109\u1175\u1112\u1165\u11b7","\u1109\u1175\u11a8\u1100\u116e","\u1109\u1175\u11a8\u1100\u1175","\u1109\u1175\u11a8\u1103\u1161\u11bc","\u1109\u1175\u11a8\u1105\u1163\u11bc","\u1109\u1175\u11a8\u1105\u116d\u1111\u116e\u11b7","\u1109\u1175\u11a8\u1106\u116e\u11af","\u1109\u1175\u11a8\u1108\u1161\u11bc","\u1109\u1175\u11a8\u1109\u1161","\u1109\u1175\u11a8\u1109\u1162\u11bc\u1112\u116a\u11af","\u1109\u1175\u11a8\u110e\u1169","\u1109\u1175\u11a8\u1110\u1161\u11a8","\u1109\u1175\u11a8\u1111\u116e\u11b7","\u1109\u1175\u11ab\u1100\u1169","\u1109\u1175\u11ab\u1100\u1172","\u1109\u1175\u11ab\u1102\u1167\u11b7","\u1109\u1175\u11ab\u1106\u116e\u11ab","\u1109\u1175\u11ab\u1107\u1161\u11af","\u1109\u1175\u11ab\u1107\u1175","\u1109\u1175\u11ab\u1109\u1161","\u1109\u1175\u11ab\u1109\u1166","\u1109\u1175\u11ab\u110b\u116d\u11bc","\u1109\u1175\u11ab\u110c\u1166\u1111\u116e\u11b7","\u1109\u1175\u11ab\u110e\u1165\u11bc","\u1109\u1175\u11ab\u110e\u1166","\u1109\u1175\u11ab\u1112\u116a","\u1109\u1175\u11af\u1100\u1161\u11b7","\u1109\u1175\u11af\u1102\u1162","\u1109\u1175\u11af\u1105\u1167\u11a8","\u1109\u1175\u11af\u1105\u1168","\u1109\u1175\u11af\u1106\u1161\u11bc","\u1109\u1175\u11af\u1109\u116e","\u1109\u1175\u11af\u1109\u1173\u11b8","\u1109\u1175\u11af\u1109\u1175","\u1109\u1175\u11af\u110c\u1161\u11bc","\u1109\u1175\u11af\u110c\u1165\u11bc","\u1109\u1175\u11af\u110c\u1175\u11af\u110c\u1165\u11a8","\u1109\u1175\u11af\u110e\u1165\u11ab","\u1109\u1175\u11af\u110e\u1166","\u1109\u1175\u11af\u110f\u1165\u11ba","\u1109\u1175\u11af\u1110\u1162","\u1109\u1175\u11af\u1111\u1162","\u1109\u1175\u11af\u1112\u1165\u11b7","\u1109\u1175\u11af\u1112\u1167\u11ab","\u1109\u1175\u11b7\u1105\u1175","\u1109\u1175\u11b7\u1107\u116e\u1105\u1173\u11b7","\u1109\u1175\u11b7\u1109\u1161","\u1109\u1175\u11b7\u110c\u1161\u11bc","\u1109\u1175\u11b7\u110c\u1165\u11bc","\u1109\u1175\u11b7\u1111\u1161\u11ab","\u110a\u1161\u11bc\u1103\u116e\u11bc\u110b\u1175","\u110a\u1175\u1105\u1173\u11b7","\u110a\u1175\u110b\u1161\u11ba","\u110b\u1161\u1100\u1161\u110a\u1175","\u110b\u1161\u1102\u1161\u110b\u116e\u11ab\u1109\u1165","\u110b\u1161\u1103\u1173\u1102\u1175\u11b7","\u110b\u1161\u1103\u1173\u11af","\u110b\u1161\u1109\u1171\u110b\u116e\u11b7","\u110b\u1161\u1109\u1173\u1111\u1161\u11af\u1110\u1173","\u110b\u1161\u1109\u1175\u110b\u1161","\u110b\u1161\u110b\u116e\u11af\u1105\u1165","\u110b\u1161\u110c\u1165\u110a\u1175","\u110b\u1161\u110c\u116e\u11b7\u1106\u1161","\u110b\u1161\u110c\u1175\u11a8","\u110b\u1161\u110e\u1175\u11b7","\u110b\u1161\u1111\u1161\u1110\u1173","\u110b\u1161\u1111\u1173\u1105\u1175\u110f\u1161","\u110b\u1161\u1111\u1173\u11b7","\u110b\u1161\u1112\u1169\u11b8","\u110b\u1161\u1112\u1173\u11ab","\u110b\u1161\u11a8\u1100\u1175","\u110b\u1161\u11a8\u1106\u1169\u11bc","\u110b\u1161\u11a8\u1109\u116e","\u110b\u1161\u11ab\u1100\u1162","\u110b\u1161\u11ab\u1100\u1167\u11bc","\u110b\u1161\u11ab\u1100\u116a","\u110b\u1161\u11ab\u1102\u1162","\u110b\u1161\u11ab\u1102\u1167\u11bc","\u110b\u1161\u11ab\u1103\u1169\u11bc","\u110b\u1161\u11ab\u1107\u1161\u11bc","\u110b\u1161\u11ab\u1107\u116e","\u110b\u1161\u11ab\u110c\u116e","\u110b\u1161\u11af\u1105\u116e\u1106\u1175\u1102\u1172\u11b7","\u110b\u1161\u11af\u110f\u1169\u110b\u1169\u11af","\u110b\u1161\u11b7\u1109\u1175","\u110b\u1161\u11b7\u110f\u1165\u11ba","\u110b\u1161\u11b8\u1105\u1167\u11a8","\u110b\u1161\u11c1\u1102\u1161\u11af","\u110b\u1161\u11c1\u1106\u116e\u11ab","\u110b\u1162\u110b\u1175\u11ab","\u110b\u1162\u110c\u1165\u11bc","\u110b\u1162\u11a8\u1109\u116e","\u110b\u1162\u11af\u1107\u1165\u11b7","\u110b\u1163\u1100\u1161\u11ab","\u110b\u1163\u1103\u1161\u11ab","\u110b\u1163\u110b\u1169\u11bc","\u110b\u1163\u11a8\u1100\u1161\u11ab","\u110b\u1163\u11a8\u1100\u116e\u11a8","\u110b\u1163\u11a8\u1109\u1169\u11a8","\u110b\u1163\u11a8\u1109\u116e","\u110b\u1163\u11a8\u110c\u1165\u11b7","\u110b\u1163\u11a8\u1111\u116e\u11b7","\u110b\u1163\u11a8\u1112\u1169\u11ab\u1102\u1167","\u110b\u1163\u11bc\u1102\u1167\u11b7","\u110b\u1163\u11bc\u1105\u1167\u11a8","\u110b\u1163\u11bc\u1106\u1161\u11af","\u110b\u1163\u11bc\u1107\u1162\u110e\u116e","\u110b\u1163\u11bc\u110c\u116e","\u110b\u1163\u11bc\u1111\u1161","\u110b\u1165\u1103\u116e\u11b7","\u110b\u1165\u1105\u1167\u110b\u116e\u11b7","\u110b\u1165\u1105\u1173\u11ab","\u110b\u1165\u110c\u1166\u11ba\u1107\u1161\u11b7","\u110b\u1165\u110d\u1162\u11bb\u1103\u1173\u11ab","\u110b\u1165\u110d\u1165\u1103\u1161\u1100\u1161","\u110b\u1165\u110d\u1165\u11ab\u110c\u1175","\u110b\u1165\u11ab\u1102\u1175","\u110b\u1165\u11ab\u1103\u1165\u11a8","\u110b\u1165\u11ab\u1105\u1169\u11ab","\u110b\u1165\u11ab\u110b\u1165","\u110b\u1165\u11af\u1100\u116e\u11af","\u110b\u1165\u11af\u1105\u1173\u11ab","\u110b\u1165\u11af\u110b\u1173\u11b7","\u110b\u1165\u11af\u1111\u1175\u11ba","\u110b\u1165\u11b7\u1106\u1161","\u110b\u1165\u11b8\u1106\u116e","\u110b\u1165\u11b8\u110c\u1169\u11bc","\u110b\u1165\u11b8\u110e\u1166","\u110b\u1165\u11bc\u1103\u1165\u11bc\u110b\u1175","\u110b\u1165\u11bc\u1106\u1161\u11bc","\u110b\u1165\u11bc\u1110\u1165\u1105\u1175","\u110b\u1165\u11bd\u1100\u1173\u110c\u1166","\u110b\u1166\u1102\u1165\u110c\u1175","\u110b\u1166\u110b\u1165\u110f\u1165\u11ab","\u110b\u1166\u11ab\u110c\u1175\u11ab","\u110b\u1167\u1100\u1165\u11ab","\u110b\u1167\u1100\u1169\u1109\u1162\u11bc","\u110b\u1167\u1100\u116a\u11ab","\u110b\u1167\u1100\u116e\u11ab","\u110b\u1167\u1100\u116f\u11ab","\u110b\u1167\u1103\u1162\u1109\u1162\u11bc","\u110b\u1167\u1103\u1165\u11b2","\u110b\u1167\u1103\u1169\u11bc\u1109\u1162\u11bc","\u110b\u1167\u1103\u1173\u11ab","\u110b\u1167\u1105\u1169\u11ab","\u110b\u1167\u1105\u1173\u11b7","\u110b\u1167\u1109\u1165\u11ba","\u110b\u1167\u1109\u1165\u11bc","\u110b\u1167\u110b\u116a\u11bc","\u110b\u1167\u110b\u1175\u11ab","\u110b\u1167\u110c\u1165\u11ab\u1112\u1175","\u110b\u1167\u110c\u1175\u11a8\u110b\u116f\u11ab","\u110b\u1167\u1112\u1161\u11a8\u1109\u1162\u11bc","\u110b\u1167\u1112\u1162\u11bc","\u110b\u1167\u11a8\u1109\u1161","\u110b\u1167\u11a8\u1109\u1175","\u110b\u1167\u11a8\u1112\u1161\u11af","\u110b\u1167\u11ab\u1100\u1167\u11af","\u110b\u1167\u11ab\u1100\u116e","\u110b\u1167\u11ab\u1100\u1173\u11a8","\u110b\u1167\u11ab\u1100\u1175","\u110b\u1167\u11ab\u1105\u1161\u11a8","\u110b\u1167\u11ab\u1109\u1165\u11af","\u110b\u1167\u11ab\u1109\u1166","\u110b\u1167\u11ab\u1109\u1169\u11a8","\u110b\u1167\u11ab\u1109\u1173\u11b8","\u110b\u1167\u11ab\u110b\u1162","\u110b\u1167\u11ab\u110b\u1168\u110b\u1175\u11ab","\u110b\u1167\u11ab\u110b\u1175\u11ab","\u110b\u1167\u11ab\u110c\u1161\u11bc","\u110b\u1167\u11ab\u110c\u116e","\u110b\u1167\u11ab\u110e\u116e\u11af","\u110b\u1167\u11ab\u1111\u1175\u11af","\u110b\u1167\u11ab\u1112\u1161\u11b8","\u110b\u1167\u11ab\u1112\u1172","\u110b\u1167\u11af\u1100\u1175","\u110b\u1167\u11af\u1106\u1162","\u110b\u1167\u11af\u1109\u116c","\u110b\u1167\u11af\u1109\u1175\u11b7\u1112\u1175","\u110b\u1167\u11af\u110c\u1165\u11bc","\u110b\u1167\u11af\u110e\u1161","\u110b\u1167\u11af\u1112\u1173\u11af","\u110b\u1167\u11b7\u1105\u1167","\u110b\u1167\u11b8\u1109\u1165","\u110b\u1167\u11bc\u1100\u116e\u11a8","\u110b\u1167\u11bc\u1102\u1161\u11b7","\u110b\u1167\u11bc\u1109\u1161\u11bc","\u110b\u1167\u11bc\u110b\u1163\u11bc","\u110b\u1167\u11bc\u110b\u1167\u11a8","\u110b\u1167\u11bc\u110b\u116e\u11bc","\u110b\u1167\u11bc\u110b\u116f\u11ab\u1112\u1175","\u110b\u1167\u11bc\u1112\u1161","\u110b\u1167\u11bc\u1112\u1163\u11bc","\u110b\u1167\u11bc\u1112\u1169\u11ab","\u110b\u1167\u11bc\u1112\u116a","\u110b\u1167\u11c1\u1100\u116e\u1105\u1175","\u110b\u1167\u11c1\u1107\u1161\u11bc","\u110b\u1167\u11c1\u110c\u1175\u11b8","\u110b\u1168\u1100\u1161\u11b7","\u110b\u1168\u1100\u1173\u11b7","\u110b\u1168\u1107\u1161\u11bc","\u110b\u1168\u1109\u1161\u11ab","\u110b\u1168\u1109\u1161\u11bc","\u110b\u1168\u1109\u1165\u11ab","\u110b\u1168\u1109\u116e\u11af","\u110b\u1168\u1109\u1173\u11b8","\u110b\u1168\u1109\u1175\u11a8\u110c\u1161\u11bc","\u110b\u1168\u110b\u1163\u11a8","\u110b\u1168\u110c\u1165\u11ab","\u110b\u1168\u110c\u1165\u11af","\u110b\u1168\u110c\u1165\u11bc","\u110b\u1168\u110f\u1165\u11ab\u1103\u1162","\u110b\u1168\u11ba\u1102\u1161\u11af","\u110b\u1169\u1102\u1173\u11af","\u110b\u1169\u1105\u1161\u11a8","\u110b\u1169\u1105\u1162\u11ba\u1103\u1169\u11bc\u110b\u1161\u11ab","\u110b\u1169\u1105\u1166\u11ab\u110c\u1175","\u110b\u1169\u1105\u1169\u110c\u1175","\u110b\u1169\u1105\u1173\u11ab\u1107\u1161\u11af","\u110b\u1169\u1107\u1173\u11ab","\u110b\u1169\u1109\u1175\u11b8","\u110b\u1169\u110b\u1167\u11b7","\u110b\u1169\u110b\u116f\u11af","\u110b\u1169\u110c\u1165\u11ab","\u110b\u1169\u110c\u1175\u11a8","\u110b\u1169\u110c\u1175\u11bc\u110b\u1165","\u110b\u1169\u1111\u1166\u1105\u1161","\u110b\u1169\u1111\u1175\u1109\u1173\u1110\u1166\u11af","\u110b\u1169\u1112\u1175\u1105\u1167","\u110b\u1169\u11a8\u1109\u1161\u11bc","\u110b\u1169\u11a8\u1109\u116e\u1109\u116e","\u110b\u1169\u11ab\u1100\u1161\u11bd","\u110b\u1169\u11ab\u1105\u1161\u110b\u1175\u11ab","\u110b\u1169\u11ab\u1106\u1169\u11b7","\u110b\u1169\u11ab\u110c\u1169\u11bc\u110b\u1175\u11af","\u110b\u1169\u11ab\u1110\u1169\u11bc","\u110b\u1169\u11af\u1100\u1161\u110b\u1173\u11af","\u110b\u1169\u11af\u1105\u1175\u11b7\u1111\u1175\u11a8","\u110b\u1169\u11af\u1112\u1162","\u110b\u1169\u11ba\u110e\u1161\u1105\u1175\u11b7","\u110b\u116a\u110b\u1175\u1109\u1167\u110e\u1173","\u110b\u116a\u110b\u1175\u11ab","\u110b\u116a\u11ab\u1109\u1165\u11bc","\u110b\u116a\u11ab\u110c\u1165\u11ab","\u110b\u116a\u11bc\u1107\u1175","\u110b\u116a\u11bc\u110c\u1161","\u110b\u116b\u1102\u1163\u1112\u1161\u1106\u1167\u11ab","\u110b\u116b\u11ab\u110c\u1175","\u110b\u116c\u1100\u1161\u11ba\u110c\u1175\u11b8","\u110b\u116c\u1100\u116e\u11a8","\u110b\u116c\u1105\u1169\u110b\u116e\u11b7","\u110b\u116c\u1109\u1161\u11b7\u110e\u1169\u11ab","\u110b\u116c\u110e\u116e\u11af","\u110b\u116c\u110e\u1175\u11b7","\u110b\u116c\u1112\u1161\u11af\u1106\u1165\u1102\u1175","\u110b\u116c\u11ab\u1107\u1161\u11af","\u110b\u116c\u11ab\u1109\u1169\u11ab","\u110b\u116c\u11ab\u110d\u1169\u11a8","\u110b\u116d\u1100\u1173\u11b7","\u110b\u116d\u110b\u1175\u11af","\u110b\u116d\u110c\u1173\u11b7","\u110b\u116d\u110e\u1165\u11bc","\u110b\u116d\u11bc\u1100\u1175","\u110b\u116d\u11bc\u1109\u1165","\u110b\u116d\u11bc\u110b\u1165","\u110b\u116e\u1109\u1161\u11ab","\u110b\u116e\u1109\u1165\u11ab","\u110b\u116e\u1109\u1173\u11bc","\u110b\u116e\u110b\u1167\u11ab\u1112\u1175","\u110b\u116e\u110c\u1165\u11bc","\u110b\u116e\u110e\u1166\u1100\u116e\u11a8","\u110b\u116e\u1111\u1167\u11ab","\u110b\u116e\u11ab\u1103\u1169\u11bc","\u110b\u116e\u11ab\u1106\u1167\u11bc","\u110b\u116e\u11ab\u1107\u1161\u11ab","\u110b\u116e\u11ab\u110c\u1165\u11ab","\u110b\u116e\u11ab\u1112\u1162\u11bc","\u110b\u116e\u11af\u1109\u1161\u11ab","\u110b\u116e\u11af\u110b\u1173\u11b7","\u110b\u116e\u11b7\u110c\u1175\u11a8\u110b\u1175\u11b7","\u110b\u116e\u11ba\u110b\u1165\u1105\u1173\u11ab","\u110b\u116e\u11ba\u110b\u1173\u11b7","\u110b\u116f\u1102\u1161\u11a8","\u110b\u116f\u11ab\u1100\u1169","\u110b\u116f\u11ab\u1105\u1162","\u110b\u116f\u11ab\u1109\u1165","\u110b\u116f\u11ab\u1109\u116e\u11bc\u110b\u1175","\u110b\u116f\u11ab\u110b\u1175\u11ab","\u110b\u116f\u11ab\u110c\u1161\u11bc","\u110b\u116f\u11ab\u1111\u1175\u1109\u1173","\u110b\u116f\u11af\u1100\u1173\u11b8","\u110b\u116f\u11af\u1103\u1173\u110f\u1165\u11b8","\u110b\u116f\u11af\u1109\u1166","\u110b\u116f\u11af\u110b\u116d\u110b\u1175\u11af","\u110b\u1170\u110b\u1175\u1110\u1165","\u110b\u1171\u1107\u1161\u11ab","\u110b\u1171\u1107\u1165\u11b8","\u110b\u1171\u1109\u1165\u11bc","\u110b\u1171\u110b\u116f\u11ab","\u110b\u1171\u1112\u1165\u11b7","\u110b\u1171\u1112\u1167\u11b8","\u110b\u1171\u11ba\u1109\u1161\u1105\u1161\u11b7","\u110b\u1172\u1102\u1161\u11ab\u1112\u1175","\u110b\u1172\u1105\u1165\u11b8","\u110b\u1172\u1106\u1167\u11bc","\u110b\u1172\u1106\u116e\u11af","\u110b\u1172\u1109\u1161\u11ab","\u110b\u1172\u110c\u1165\u11a8","\u110b\u1172\u110e\u1175\u110b\u116f\u11ab","\u110b\u1172\u1112\u1161\u11a8","\u110b\u1172\u1112\u1162\u11bc","\u110b\u1172\u1112\u1167\u11bc","\u110b\u1172\u11a8\u1100\u116e\u11ab","\u110b\u1172\u11a8\u1109\u1161\u11bc","\u110b\u1172\u11a8\u1109\u1175\u11b8","\u110b\u1172\u11a8\u110e\u1166","\u110b\u1173\u11ab\u1112\u1162\u11bc","\u110b\u1173\u11b7\u1105\u1167\u11a8","\u110b\u1173\u11b7\u1105\u116d","\u110b\u1173\u11b7\u1107\u1161\u11ab","\u110b\u1173\u11b7\u1109\u1165\u11bc","\u110b\u1173\u11b7\u1109\u1175\u11a8","\u110b\u1173\u11b7\u110b\u1161\u11a8","\u110b\u1173\u11b7\u110c\u116e","\u110b\u1174\u1100\u1167\u11ab","\u110b\u1174\u1102\u1169\u11ab","\u110b\u1174\u1106\u116e\u11ab","\u110b\u1174\u1107\u1169\u11a8","\u110b\u1174\u1109\u1175\u11a8","\u110b\u1174\u1109\u1175\u11b7","\u110b\u1174\u110b\u116c\u1105\u1169","\u110b\u1174\u110b\u116d\u11a8","\u110b\u1174\u110b\u116f\u11ab","\u110b\u1174\u1112\u1161\u11a8","\u110b\u1175\u1100\u1165\u11ba","\u110b\u1175\u1100\u1169\u11ba","\u110b\u1175\u1102\u1167\u11b7","\u110b\u1175\u1102\u1169\u11b7","\u110b\u1175\u1103\u1161\u11af","\u110b\u1175\u1103\u1162\u1105\u1169","\u110b\u1175\u1103\u1169\u11bc","\u110b\u1175\u1105\u1165\u11c2\u1100\u1166","\u110b\u1175\u1105\u1167\u11a8\u1109\u1165","\u110b\u1175\u1105\u1169\u11ab\u110c\u1165\u11a8","\u110b\u1175\u1105\u1173\u11b7","\u110b\u1175\u1106\u1175\u11ab","\u110b\u1175\u1107\u1161\u11af\u1109\u1169","\u110b\u1175\u1107\u1167\u11af","\u110b\u1175\u1107\u116e\u11af","\u110b\u1175\u1108\u1161\u11af","\u110b\u1175\u1109\u1161\u11bc","\u110b\u1175\u1109\u1165\u11bc","\u110b\u1175\u1109\u1173\u11af","\u110b\u1175\u110b\u1163\u1100\u1175","\u110b\u1175\u110b\u116d\u11bc","\u110b\u1175\u110b\u116e\u11ba","\u110b\u1175\u110b\u116f\u11af","\u110b\u1175\u110b\u1173\u11a8\u1100\u1169","\u110b\u1175\u110b\u1175\u11a8","\u110b\u1175\u110c\u1165\u11ab","\u110b\u1175\u110c\u116e\u11bc","\u110b\u1175\u1110\u1173\u11ae\u1102\u1161\u11af","\u110b\u1175\u1110\u1173\u11af","\u110b\u1175\u1112\u1169\u11ab","\u110b\u1175\u11ab\u1100\u1161\u11ab","\u110b\u1175\u11ab\u1100\u1167\u11a8","\u110b\u1175\u11ab\u1100\u1169\u11bc","\u110b\u1175\u11ab\u1100\u116e","\u110b\u1175\u11ab\u1100\u1173\u11ab","\u110b\u1175\u11ab\u1100\u1175","\u110b\u1175\u11ab\u1103\u1169","\u110b\u1175\u11ab\u1105\u1172","\u110b\u1175\u11ab\u1106\u116e\u11af","\u110b\u1175\u11ab\u1109\u1162\u11bc","\u110b\u1175\u11ab\u1109\u116b","\u110b\u1175\u11ab\u110b\u1167\u11ab","\u110b\u1175\u11ab\u110b\u116f\u11ab","\u110b\u1175\u11ab\u110c\u1162","\u110b\u1175\u11ab\u110c\u1169\u11bc","\u110b\u1175\u11ab\u110e\u1165\u11ab","\u110b\u1175\u11ab\u110e\u1166","\u110b\u1175\u11ab\u1110\u1165\u1102\u1166\u11ba","\u110b\u1175\u11ab\u1112\u1161","\u110b\u1175\u11ab\u1112\u1167\u11bc","\u110b\u1175\u11af\u1100\u1169\u11b8","\u110b\u1175\u11af\u1100\u1175","\u110b\u1175\u11af\u1103\u1161\u11ab","\u110b\u1175\u11af\u1103\u1162","\u110b\u1175\u11af\u1103\u1173\u11bc","\u110b\u1175\u11af\u1107\u1161\u11ab","\u110b\u1175\u11af\u1107\u1169\u11ab","\u110b\u1175\u11af\u1107\u116e","\u110b\u1175\u11af\u1109\u1161\u11bc","\u110b\u1175\u11af\u1109\u1162\u11bc","\u110b\u1175\u11af\u1109\u1169\u11ab","\u110b\u1175\u11af\u110b\u116d\u110b\u1175\u11af","\u110b\u1175\u11af\u110b\u116f\u11af","\u110b\u1175\u11af\u110c\u1165\u11bc","\u110b\u1175\u11af\u110c\u1169\u11bc","\u110b\u1175\u11af\u110c\u116e\u110b\u1175\u11af","\u110b\u1175\u11af\u110d\u1175\u11a8","\u110b\u1175\u11af\u110e\u1166","\u110b\u1175\u11af\u110e\u1175","\u110b\u1175\u11af\u1112\u1162\u11bc","\u110b\u1175\u11af\u1112\u116c\u110b\u116d\u11bc","\u110b\u1175\u11b7\u1100\u1173\u11b7","\u110b\u1175\u11b7\u1106\u116e","\u110b\u1175\u11b8\u1103\u1162","\u110b\u1175\u11b8\u1105\u1167\u11a8","\u110b\u1175\u11b8\u1106\u1161\u11ba","\u110b\u1175\u11b8\u1109\u1161","\u110b\u1175\u11b8\u1109\u116e\u11af","\u110b\u1175\u11b8\u1109\u1175","\u110b\u1175\u11b8\u110b\u116f\u11ab","\u110b\u1175\u11b8\u110c\u1161\u11bc","\u110b\u1175\u11b8\u1112\u1161\u11a8","\u110c\u1161\u1100\u1161\u110b\u116d\u11bc","\u110c\u1161\u1100\u1167\u11a8","\u110c\u1161\u1100\u1173\u11a8","\u110c\u1161\u1103\u1169\u11bc","\u110c\u1161\u1105\u1161\u11bc","\u110c\u1161\u1107\u116e\u1109\u1175\u11b7","\u110c\u1161\u1109\u1175\u11a8","\u110c\u1161\u1109\u1175\u11ab","\u110c\u1161\u110b\u1167\u11ab","\u110c\u1161\u110b\u116f\u11ab","\u110c\u1161\u110b\u1172\u11af","\u110c\u1161\u110c\u1165\u11ab\u1100\u1165","\u110c\u1161\u110c\u1165\u11bc","\u110c\u1161\u110c\u1169\u11ab\u1109\u1175\u11b7","\u110c\u1161\u1111\u1161\u11ab","\u110c\u1161\u11a8\u1100\u1161","\u110c\u1161\u11a8\u1102\u1167\u11ab","\u110c\u1161\u11a8\u1109\u1165\u11bc","\u110c\u1161\u11a8\u110b\u1165\u11b8","\u110c\u1161\u11a8\u110b\u116d\u11bc","\u110c\u1161\u11a8\u110b\u1173\u11ab\u1104\u1161\u11af","\u110c\u1161\u11a8\u1111\u116e\u11b7","\u110c\u1161\u11ab\u1103\u1175","\u110c\u1161\u11ab\u1104\u1173\u11a8","\u110c\u1161\u11ab\u110e\u1175","\u110c\u1161\u11af\u1106\u1169\u11ba","\u110c\u1161\u11b7\u1101\u1161\u11ab","\u110c\u1161\u11b7\u1109\u116e\u1112\u1161\u11b7","\u110c\u1161\u11b7\u1109\u1175","\u110c\u1161\u11b7\u110b\u1169\u11ba","\u110c\u1161\u11b7\u110c\u1161\u1105\u1175","\u110c\u1161\u11b8\u110c\u1175","\u110c\u1161\u11bc\u1100\u116a\u11ab","\u110c\u1161\u11bc\u1100\u116e\u11ab","\u110c\u1161\u11bc\u1100\u1175\u1100\u1161\u11ab","\u110c\u1161\u11bc\u1105\u1162","\u110c\u1161\u11bc\u1105\u1168","\u110c\u1161\u11bc\u1105\u1173","\u110c\u1161\u11bc\u1106\u1161","\u110c\u1161\u11bc\u1106\u1167\u11ab","\u110c\u1161\u11bc\u1106\u1169","\u110c\u1161\u11bc\u1106\u1175","\u110c\u1161\u11bc\u1107\u1175","\u110c\u1161\u11bc\u1109\u1161","\u110c\u1161\u11bc\u1109\u1169","\u110c\u1161\u11bc\u1109\u1175\u11a8","\u110c\u1161\u11bc\u110b\u1162\u110b\u1175\u11ab","\u110c\u1161\u11bc\u110b\u1175\u11ab","\u110c\u1161\u11bc\u110c\u1165\u11b7","\u110c\u1161\u11bc\u110e\u1161","\u110c\u1161\u11bc\u1112\u1161\u11a8\u1100\u1173\u11b7","\u110c\u1162\u1102\u1173\u11bc","\u110c\u1162\u1108\u1161\u11af\u1105\u1175","\u110c\u1162\u1109\u1161\u11ab","\u110c\u1162\u1109\u1162\u11bc","\u110c\u1162\u110c\u1161\u11a8\u1102\u1167\u11ab","\u110c\u1162\u110c\u1165\u11bc","\u110c\u1162\u110e\u1162\u1100\u1175","\u110c\u1162\u1111\u1161\u11ab","\u110c\u1162\u1112\u1161\u11a8","\u110c\u1162\u1112\u116a\u11af\u110b\u116d\u11bc","\u110c\u1165\u1100\u1165\u11ba","\u110c\u1165\u1100\u1169\u1105\u1175","\u110c\u1165\u1100\u1169\u11ba","\u110c\u1165\u1102\u1167\u11a8","\u110c\u1165\u1105\u1165\u11ab","\u110c\u1165\u1105\u1165\u11c2\u1100\u1166","\u110c\u1165\u1107\u1165\u11ab","\u110c\u1165\u110b\u116e\u11af","\u110c\u1165\u110c\u1165\u11af\u1105\u1169","\u110c\u1165\u110e\u116e\u11a8","\u110c\u1165\u11a8\u1100\u1173\u11a8","\u110c\u1165\u11a8\u1103\u1161\u11bc\u1112\u1175","\u110c\u1165\u11a8\u1109\u1165\u11bc","\u110c\u1165\u11a8\u110b\u116d\u11bc","\u110c\u1165\u11a8\u110b\u1173\u11bc","\u110c\u1165\u11ab\u1100\u1162","\u110c\u1165\u11ab\u1100\u1169\u11bc","\u110c\u1165\u11ab\u1100\u1175","\u110c\u1165\u11ab\u1103\u1161\u11af","\u110c\u1165\u11ab\u1105\u1161\u1103\u1169","\u110c\u1165\u11ab\u1106\u1161\u11bc","\u110c\u1165\u11ab\u1106\u116e\u11ab","\u110c\u1165\u11ab\u1107\u1161\u11ab","\u110c\u1165\u11ab\u1107\u116e","\u110c\u1165\u11ab\u1109\u1166","\u110c\u1165\u11ab\u1109\u1175","\u110c\u1165\u11ab\u110b\u116d\u11bc","\u110c\u1165\u11ab\u110c\u1161","\u110c\u1165\u11ab\u110c\u1162\u11bc","\u110c\u1165\u11ab\u110c\u116e","\u110c\u1165\u11ab\u110e\u1165\u11af","\u110c\u1165\u11ab\u110e\u1166","\u110c\u1165\u11ab\u1110\u1169\u11bc","\u110c\u1165\u11ab\u1112\u1167","\u110c\u1165\u11ab\u1112\u116e","\u110c\u1165\u11af\u1103\u1162","\u110c\u1165\u11af\u1106\u1161\u11bc","\u110c\u1165\u11af\u1107\u1161\u11ab","\u110c\u1165\u11af\u110b\u1163\u11a8","\u110c\u1165\u11af\u110e\u1161","\u110c\u1165\u11b7\u1100\u1165\u11b7","\u110c\u1165\u11b7\u1109\u116e","\u110c\u1165\u11b7\u1109\u1175\u11b7","\u110c\u1165\u11b7\u110b\u116f\u11ab","\u110c\u1165\u11b7\u110c\u1165\u11b7","\u110c\u1165\u11b7\u110e\u1161","\u110c\u1165\u11b8\u1100\u1173\u11ab","\u110c\u1165\u11b8\u1109\u1175","\u110c\u1165\u11b8\u110e\u1169\u11a8","\u110c\u1165\u11ba\u1100\u1161\u1105\u1161\u11a8","\u110c\u1165\u11bc\u1100\u1165\u110c\u1161\u11bc","\u110c\u1165\u11bc\u1103\u1169","\u110c\u1165\u11bc\u1105\u1172\u110c\u1161\u11bc","\u110c\u1165\u11bc\u1105\u1175","\u110c\u1165\u11bc\u1106\u1161\u11af","\u110c\u1165\u11bc\u1106\u1167\u11ab","\u110c\u1165\u11bc\u1106\u116e\u11ab","\u110c\u1165\u11bc\u1107\u1161\u11ab\u1103\u1162","\u110c\u1165\u11bc\u1107\u1169","\u110c\u1165\u11bc\u1107\u116e","\u110c\u1165\u11bc\u1107\u1175","\u110c\u1165\u11bc\u1109\u1161\u11bc","\u110c\u1165\u11bc\u1109\u1165\u11bc","\u110c\u1165\u11bc\u110b\u1169","\u110c\u1165\u11bc\u110b\u116f\u11ab","\u110c\u1165\u11bc\u110c\u1161\u11bc","\u110c\u1165\u11bc\u110c\u1175","\u110c\u1165\u11bc\u110e\u1175","\u110c\u1165\u11bc\u1112\u116a\u11a8\u1112\u1175","\u110c\u1166\u1100\u1169\u11bc","\u110c\u1166\u1100\u116a\u110c\u1165\u11b7","\u110c\u1166\u1103\u1162\u1105\u1169","\u110c\u1166\u1106\u1169\u11a8","\u110c\u1166\u1107\u1161\u11af","\u110c\u1166\u1107\u1165\u11b8","\u110c\u1166\u1109\u1161\u11ba\u1102\u1161\u11af","\u110c\u1166\u110b\u1161\u11ab","\u110c\u1166\u110b\u1175\u11af","\u110c\u1166\u110c\u1161\u11a8","\u110c\u1166\u110c\u116e\u1103\u1169","\u110c\u1166\u110e\u116e\u11af","\u110c\u1166\u1111\u116e\u11b7","\u110c\u1166\u1112\u1161\u11ab","\u110c\u1169\u1100\u1161\u11a8","\u110c\u1169\u1100\u1165\u11ab","\u110c\u1169\u1100\u1173\u11b7","\u110c\u1169\u1100\u1175\u11bc","\u110c\u1169\u1106\u1167\u11bc","\u110c\u1169\u1106\u1175\u1105\u116d","\u110c\u1169\u1109\u1161\u11bc","\u110c\u1169\u1109\u1165\u11ab","\u110c\u1169\u110b\u116d\u11bc\u1112\u1175","\u110c\u1169\u110c\u1165\u11af","\u110c\u1169\u110c\u1165\u11bc","\u110c\u1169\u110c\u1175\u11a8","\u110c\u1169\u11ab\u1103\u1162\u11ba\u1106\u1161\u11af","\u110c\u1169\u11ab\u110c\u1162","\u110c\u1169\u11af\u110b\u1165\u11b8","\u110c\u1169\u11af\u110b\u1173\u11b7","\u110c\u1169\u11bc\u1100\u116d","\u110c\u1169\u11bc\u1105\u1169","\u110c\u1169\u11bc\u1105\u1172","\u110c\u1169\u11bc\u1109\u1169\u1105\u1175","\u110c\u1169\u11bc\u110b\u1165\u11b8\u110b\u116f\u11ab","\u110c\u1169\u11bc\u110c\u1169\u11bc","\u110c\u1169\u11bc\u1112\u1161\u11b8","\u110c\u116a\u1109\u1165\u11a8","\u110c\u116c\u110b\u1175\u11ab","\u110c\u116e\u1100\u116a\u11ab\u110c\u1165\u11a8","\u110c\u116e\u1105\u1173\u11b7","\u110c\u116e\u1106\u1161\u11af","\u110c\u116e\u1106\u1165\u1102\u1175","\u110c\u116e\u1106\u1165\u11a8","\u110c\u116e\u1106\u116e\u11ab","\u110c\u116e\u1106\u1175\u11ab","\u110c\u116e\u1107\u1161\u11bc","\u110c\u116e\u1107\u1167\u11ab","\u110c\u116e\u1109\u1175\u11a8","\u110c\u116e\u110b\u1175\u11ab","\u110c\u116e\u110b\u1175\u11af","\u110c\u116e\u110c\u1161\u11bc","\u110c\u116e\u110c\u1165\u11ab\u110c\u1161","\u110c\u116e\u1110\u1162\u11a8","\u110c\u116e\u11ab\u1107\u1175","\u110c\u116e\u11af\u1100\u1165\u1105\u1175","\u110c\u116e\u11af\u1100\u1175","\u110c\u116e\u11af\u1106\u116e\u1102\u1174","\u110c\u116e\u11bc\u1100\u1161\u11ab","\u110c\u116e\u11bc\u1100\u1168\u1107\u1161\u11bc\u1109\u1169\u11bc","\u110c\u116e\u11bc\u1100\u116e\u11a8","\u110c\u116e\u11bc\u1102\u1167\u11ab","\u110c\u116e\u11bc\u1103\u1161\u11ab","\u110c\u116e\u11bc\u1103\u1169\u11a8","\u110c\u116e\u11bc\u1107\u1161\u11ab","\u110c\u116e\u11bc\u1107\u116e","\u110c\u116e\u11bc\u1109\u1166","\u110c\u116e\u11bc\u1109\u1169\u1100\u1175\u110b\u1165\u11b8","\u110c\u116e\u11bc\u1109\u116e\u11ab","\u110c\u116e\u11bc\u110b\u1161\u11bc","\u110c\u116e\u11bc\u110b\u116d","\u110c\u116e\u11bc\u1112\u1161\u11a8\u1100\u116d","\u110c\u1173\u11a8\u1109\u1165\u11a8","\u110c\u1173\u11a8\u1109\u1175","\u110c\u1173\u11af\u1100\u1165\u110b\u116e\u11b7","\u110c\u1173\u11bc\u1100\u1161","\u110c\u1173\u11bc\u1100\u1165","\u110c\u1173\u11bc\u1100\u116f\u11ab","\u110c\u1173\u11bc\u1109\u1161\u11bc","\u110c\u1173\u11bc\u1109\u1166","\u110c\u1175\u1100\u1161\u11a8","\u110c\u1175\u1100\u1161\u11b8","\u110c\u1175\u1100\u1167\u11bc","\u110c\u1175\u1100\u1173\u11a8\u1112\u1175","\u110c\u1175\u1100\u1173\u11b7","\u110c\u1175\u1100\u1173\u11b8","\u110c\u1175\u1102\u1173\u11bc","\u110c\u1175\u1105\u1173\u11b7\u1100\u1175\u11af","\u110c\u1175\u1105\u1175\u1109\u1161\u11ab","\u110c\u1175\u1107\u1161\u11bc","\u110c\u1175\u1107\u116e\u11bc","\u110c\u1175\u1109\u1175\u11a8","\u110c\u1175\u110b\u1167\u11a8","\u110c\u1175\u110b\u116e\u1100\u1162","\u110c\u1175\u110b\u116f\u11ab","\u110c\u1175\u110c\u1165\u11a8","\u110c\u1175\u110c\u1165\u11b7","\u110c\u1175\u110c\u1175\u11ab","\u110c\u1175\u110e\u116e\u11af","\u110c\u1175\u11a8\u1109\u1165\u11ab","\u110c\u1175\u11a8\u110b\u1165\u11b8","\u110c\u1175\u11a8\u110b\u116f\u11ab","\u110c\u1175\u11a8\u110c\u1161\u11bc","\u110c\u1175\u11ab\u1100\u1173\u11b8","\u110c\u1175\u11ab\u1103\u1169\u11bc","\u110c\u1175\u11ab\u1105\u1169","\u110c\u1175\u11ab\u1105\u116d","\u110c\u1175\u11ab\u1105\u1175","\u110c\u1175\u11ab\u110d\u1161","\u110c\u1175\u11ab\u110e\u1161\u11af","\u110c\u1175\u11ab\u110e\u116e\u11af","\u110c\u1175\u11ab\u1110\u1169\u11bc","\u110c\u1175\u11ab\u1112\u1162\u11bc","\u110c\u1175\u11af\u1106\u116e\u11ab","\u110c\u1175\u11af\u1107\u1167\u11bc","\u110c\u1175\u11af\u1109\u1165","\u110c\u1175\u11b7\u110c\u1161\u11a8","\u110c\u1175\u11b8\u1103\u1161\u11ab","\u110c\u1175\u11b8\u110b\u1161\u11ab","\u110c\u1175\u11b8\u110c\u116e\u11bc","\u110d\u1161\u110c\u1173\u11bc","\u110d\u1175\u1101\u1165\u1100\u1175","\u110e\u1161\u1102\u1161\u11b7","\u110e\u1161\u1105\u1161\u1105\u1175","\u110e\u1161\u1105\u1163\u11bc","\u110e\u1161\u1105\u1175\u11b7","\u110e\u1161\u1107\u1167\u11af","\u110e\u1161\u1109\u1165\u11ab","\u110e\u1161\u110e\u1173\u11b7","\u110e\u1161\u11a8\u1100\u1161\u11a8","\u110e\u1161\u11ab\u1106\u116e\u11af","\u110e\u1161\u11ab\u1109\u1165\u11bc","\u110e\u1161\u11b7\u1100\u1161","\u110e\u1161\u11b7\u1100\u1175\u1105\u1173\u11b7","\u110e\u1161\u11b7\u1109\u1162","\u110e\u1161\u11b7\u1109\u1165\u11a8","\u110e\u1161\u11b7\u110b\u1167","\u110e\u1161\u11b7\u110b\u116c","\u110e\u1161\u11b7\u110c\u1169","\u110e\u1161\u11ba\u110c\u1161\u11ab","\u110e\u1161\u11bc\u1100\u1161","\u110e\u1161\u11bc\u1100\u1169","\u110e\u1161\u11bc\u1100\u116e","\u110e\u1161\u11bc\u1106\u116e\u11ab","\u110e\u1161\u11bc\u1107\u1161\u11a9","\u110e\u1161\u11bc\u110c\u1161\u11a8","\u110e\u1161\u11bc\u110c\u1169","\u110e\u1162\u1102\u1165\u11af","\u110e\u1162\u110c\u1165\u11b7","\u110e\u1162\u11a8\u1100\u1161\u1107\u1161\u11bc","\u110e\u1162\u11a8\u1107\u1161\u11bc","\u110e\u1162\u11a8\u1109\u1161\u11bc","\u110e\u1162\u11a8\u110b\u1175\u11b7","\u110e\u1162\u11b7\u1111\u1175\u110b\u1165\u11ab","\u110e\u1165\u1107\u1165\u11af","\u110e\u1165\u110b\u1173\u11b7","\u110e\u1165\u11ab\u1100\u116e\u11a8","\u110e\u1165\u11ab\u1103\u116e\u11bc","\u110e\u1165\u11ab\u110c\u1161\u11bc","\u110e\u1165\u11ab\u110c\u1162","\u110e\u1165\u11ab\u110e\u1165\u11ab\u1112\u1175","\u110e\u1165\u11af\u1103\u1169","\u110e\u1165\u11af\u110c\u1165\u1112\u1175","\u110e\u1165\u11af\u1112\u1161\u11a8","\u110e\u1165\u11ba\u1102\u1161\u11af","\u110e\u1165\u11ba\u110d\u1162","\u110e\u1165\u11bc\u1102\u1167\u11ab","\u110e\u1165\u11bc\u1107\u1161\u110c\u1175","\u110e\u1165\u11bc\u1109\u1169","\u110e\u1165\u11bc\u110e\u116e\u11ab","\u110e\u1166\u1100\u1168","\u110e\u1166\u1105\u1167\u11a8","\u110e\u1166\u110b\u1169\u11ab","\u110e\u1166\u110b\u1172\u11a8","\u110e\u1166\u110c\u116e\u11bc","\u110e\u1166\u1112\u1165\u11b7","\u110e\u1169\u1103\u1173\u11bc\u1112\u1161\u11a8\u1109\u1162\u11bc","\u110e\u1169\u1107\u1161\u11ab","\u110e\u1169\u1107\u1161\u11b8","\u110e\u1169\u1109\u1161\u11bc\u1112\u116a","\u110e\u1169\u1109\u116e\u11ab","\u110e\u1169\u110b\u1167\u1105\u1173\u11b7","\u110e\u1169\u110b\u116f\u11ab","\u110e\u1169\u110c\u1165\u1102\u1167\u11a8","\u110e\u1169\u110c\u1165\u11b7","\u110e\u1169\u110e\u1165\u11bc","\u110e\u1169\u110f\u1169\u11af\u1105\u1175\u11ba","\u110e\u1169\u11ba\u1107\u116e\u11af","\u110e\u1169\u11bc\u1100\u1161\u11a8","\u110e\u1169\u11bc\u1105\u1175","\u110e\u1169\u11bc\u110c\u1161\u11bc","\u110e\u116a\u11af\u110b\u1167\u11bc","\u110e\u116c\u1100\u1173\u11ab","\u110e\u116c\u1109\u1161\u11bc","\u110e\u116c\u1109\u1165\u11ab","\u110e\u116c\u1109\u1175\u11ab","\u110e\u116c\u110b\u1161\u11a8","\u110e\u116c\u110c\u1169\u11bc","\u110e\u116e\u1109\u1165\u11a8","\u110e\u116e\u110b\u1165\u11a8","\u110e\u116e\u110c\u1175\u11ab","\u110e\u116e\u110e\u1165\u11ab","\u110e\u116e\u110e\u1173\u11a8","\u110e\u116e\u11a8\u1100\u116e","\u110e\u116e\u11a8\u1109\u1169","\u110e\u116e\u11a8\u110c\u1166","\u110e\u116e\u11a8\u1112\u1161","\u110e\u116e\u11af\u1100\u1173\u11ab","\u110e\u116e\u11af\u1107\u1161\u11af","\u110e\u116e\u11af\u1109\u1161\u11ab","\u110e\u116e\u11af\u1109\u1175\u11ab","\u110e\u116e\u11af\u110b\u1167\u11ab","\u110e\u116e\u11af\u110b\u1175\u11b8","\u110e\u116e\u11af\u110c\u1161\u11bc","\u110e\u116e\u11af\u1111\u1161\u11ab","\u110e\u116e\u11bc\u1100\u1167\u11a8","\u110e\u116e\u11bc\u1100\u1169","\u110e\u116e\u11bc\u1103\u1169\u11af","\u110e\u116e\u11bc\u1107\u116e\u11ab\u1112\u1175","\u110e\u116e\u11bc\u110e\u1165\u11bc\u1103\u1169","\u110e\u1171\u110b\u1165\u11b8","\u110e\u1171\u110c\u1175\u11a8","\u110e\u1171\u1112\u1163\u11bc","\u110e\u1175\u110b\u1163\u11a8","\u110e\u1175\u11ab\u1100\u116e","\u110e\u1175\u11ab\u110e\u1165\u11a8","\u110e\u1175\u11af\u1109\u1175\u11b8","\u110e\u1175\u11af\u110b\u116f\u11af","\u110e\u1175\u11af\u1111\u1161\u11ab","\u110e\u1175\u11b7\u1103\u1162","\u110e\u1175\u11b7\u1106\u116e\u11a8","\u110e\u1175\u11b7\u1109\u1175\u11af","\u110e\u1175\u11ba\u1109\u1169\u11af","\u110e\u1175\u11bc\u110e\u1161\u11ab","\u110f\u1161\u1106\u1166\u1105\u1161","\u110f\u1161\u110b\u116e\u11ab\u1110\u1165","\u110f\u1161\u11af\u1100\u116e\u11a8\u1109\u116e","\u110f\u1162\u1105\u1175\u11a8\u1110\u1165","\u110f\u1162\u11b7\u1111\u1165\u1109\u1173","\u110f\u1162\u11b7\u1111\u1166\u110b\u1175\u11ab","\u110f\u1165\u1110\u1173\u11ab","\u110f\u1165\u11ab\u1103\u1175\u1109\u1167\u11ab","\u110f\u1165\u11af\u1105\u1165","\u110f\u1165\u11b7\u1111\u1172\u1110\u1165","\u110f\u1169\u1101\u1175\u1105\u1175","\u110f\u1169\u1106\u1175\u1103\u1175","\u110f\u1169\u11ab\u1109\u1165\u1110\u1173","\u110f\u1169\u11af\u1105\u1161","\u110f\u1169\u11b7\u1111\u1173\u11af\u1105\u1166\u11a8\u1109\u1173","\u110f\u1169\u11bc\u1102\u1161\u1106\u116e\u11af","\u110f\u116b\u1100\u1161\u11b7","\u110f\u116e\u1103\u1166\u1110\u1161","\u110f\u1173\u1105\u1175\u11b7","\u110f\u1173\u11ab\u1100\u1175\u11af","\u110f\u1173\u11ab\u1104\u1161\u11af","\u110f\u1173\u11ab\u1109\u1169\u1105\u1175","\u110f\u1173\u11ab\u110b\u1161\u1103\u1173\u11af","\u110f\u1173\u11ab\u110b\u1165\u1106\u1165\u1102\u1175","\u110f\u1173\u11ab\u110b\u1175\u11af","\u110f\u1173\u11ab\u110c\u1165\u11af","\u110f\u1173\u11af\u1105\u1162\u1109\u1175\u11a8","\u110f\u1173\u11af\u1105\u1165\u11b8","\u110f\u1175\u11af\u1105\u1169","\u1110\u1161\u110b\u1175\u11b8","\u1110\u1161\u110c\u1161\u1100\u1175","\u1110\u1161\u11a8\u1100\u116e","\u1110\u1161\u11a8\u110c\u1161","\u1110\u1161\u11ab\u1109\u1162\u11bc","\u1110\u1162\u1100\u116f\u11ab\u1103\u1169","\u1110\u1162\u110b\u1163\u11bc","\u1110\u1162\u1111\u116e\u11bc","\u1110\u1162\u11a8\u1109\u1175","\u1110\u1162\u11af\u1105\u1165\u11ab\u1110\u1173","\u1110\u1165\u1102\u1165\u11af","\u1110\u1165\u1106\u1175\u1102\u1165\u11af","\u1110\u1166\u1102\u1175\u1109\u1173","\u1110\u1166\u1109\u1173\u1110\u1173","\u1110\u1166\u110b\u1175\u1107\u1173\u11af","\u1110\u1166\u11af\u1105\u1166\u1107\u1175\u110c\u1165\u11ab","\u1110\u1169\u1105\u1169\u11ab","\u1110\u1169\u1106\u1161\u1110\u1169","\u1110\u1169\u110b\u116d\u110b\u1175\u11af","\u1110\u1169\u11bc\u1100\u1168","\u1110\u1169\u11bc\u1100\u116a","\u1110\u1169\u11bc\u1105\u1169","\u1110\u1169\u11bc\u1109\u1175\u11ab","\u1110\u1169\u11bc\u110b\u1167\u11a8","\u1110\u1169\u11bc\u110b\u1175\u11af","\u1110\u1169\u11bc\u110c\u1161\u11bc","\u1110\u1169\u11bc\u110c\u1166","\u1110\u1169\u11bc\u110c\u1173\u11bc","\u1110\u1169\u11bc\u1112\u1161\u11b8","\u1110\u1169\u11bc\u1112\u116a","\u1110\u116c\u1100\u1173\u11ab","\u1110\u116c\u110b\u116f\u11ab","\u1110\u116c\u110c\u1175\u11a8\u1100\u1173\u11b7","\u1110\u1171\u1100\u1175\u11b7","\u1110\u1173\u1105\u1165\u11a8","\u1110\u1173\u11a8\u1100\u1173\u11b8","\u1110\u1173\u11a8\u1107\u1167\u11af","\u1110\u1173\u11a8\u1109\u1165\u11bc","\u1110\u1173\u11a8\u1109\u116e","\u1110\u1173\u11a8\u110c\u1175\u11bc","\u1110\u1173\u11a8\u1112\u1175","\u1110\u1173\u11ab\u1110\u1173\u11ab\u1112\u1175","\u1110\u1175\u1109\u1167\u110e\u1173","\u1111\u1161\u1105\u1161\u11ab\u1109\u1162\u11a8","\u1111\u1161\u110b\u1175\u11af","\u1111\u1161\u110e\u116e\u11af\u1109\u1169","\u1111\u1161\u11ab\u1100\u1167\u11af","\u1111\u1161\u11ab\u1103\u1161\u11ab","\u1111\u1161\u11ab\u1106\u1162","\u1111\u1161\u11ab\u1109\u1161","\u1111\u1161\u11af\u1109\u1175\u11b8","\u1111\u1161\u11af\u110b\u116f\u11af","\u1111\u1161\u11b8\u1109\u1169\u11bc","\u1111\u1162\u1109\u1167\u11ab","\u1111\u1162\u11a8\u1109\u1173","\u1111\u1162\u11a8\u1109\u1175\u1106\u1175\u11af\u1105\u1175","\u1111\u1162\u11ab\u1110\u1175","\u1111\u1165\u1109\u1166\u11ab\u1110\u1173","\u1111\u1166\u110b\u1175\u11ab\u1110\u1173","\u1111\u1167\u11ab\u1100\u1167\u11ab","\u1111\u1167\u11ab\u110b\u1174","\u1111\u1167\u11ab\u110c\u1175","\u1111\u1167\u11ab\u1112\u1175","\u1111\u1167\u11bc\u1100\u1161","\u1111\u1167\u11bc\u1100\u1172\u11ab","\u1111\u1167\u11bc\u1109\u1162\u11bc","\u1111\u1167\u11bc\u1109\u1169","\u1111\u1167\u11bc\u110b\u1163\u11bc","\u1111\u1167\u11bc\u110b\u1175\u11af","\u1111\u1167\u11bc\u1112\u116a","\u1111\u1169\u1109\u1173\u1110\u1165","\u1111\u1169\u110b\u1175\u11ab\u1110\u1173","\u1111\u1169\u110c\u1161\u11bc","\u1111\u1169\u1112\u1161\u11b7","\u1111\u116d\u1106\u1167\u11ab","\u1111\u116d\u110c\u1165\u11bc","\u1111\u116d\u110c\u116e\u11ab","\u1111\u116d\u1112\u1167\u11ab","\u1111\u116e\u11b7\u1106\u1169\u11a8","\u1111\u116e\u11b7\u110c\u1175\u11af","\u1111\u116e\u11bc\u1100\u1167\u11bc","\u1111\u116e\u11bc\u1109\u1169\u11a8","\u1111\u116e\u11bc\u1109\u1173\u11b8","\u1111\u1173\u1105\u1161\u11bc\u1109\u1173","\u1111\u1173\u1105\u1175\u11ab\u1110\u1165","\u1111\u1173\u11af\u1105\u1161\u1109\u1173\u1110\u1175\u11a8","\u1111\u1175\u1100\u1169\u11ab","\u1111\u1175\u1106\u1161\u11bc","\u1111\u1175\u110b\u1161\u1102\u1169","\u1111\u1175\u11af\u1105\u1173\u11b7","\u1111\u1175\u11af\u1109\u116e","\u1111\u1175\u11af\u110b\u116d","\u1111\u1175\u11af\u110c\u1161","\u1111\u1175\u11af\u1110\u1169\u11bc","\u1111\u1175\u11bc\u1100\u1168","\u1112\u1161\u1102\u1173\u1102\u1175\u11b7","\u1112\u1161\u1102\u1173\u11af","\u1112\u1161\u1103\u1173\u110b\u1170\u110b\u1165","\u1112\u1161\u1105\u116e\u11ba\u1107\u1161\u11b7","\u1112\u1161\u1107\u1161\u11ab\u1100\u1175","\u1112\u1161\u1109\u116e\u11a8\u110c\u1175\u11b8","\u1112\u1161\u1109\u116e\u11ab","\u1112\u1161\u110b\u1167\u1110\u1173\u11ab","\u1112\u1161\u110c\u1175\u1106\u1161\u11ab","\u1112\u1161\u110e\u1165\u11ab","\u1112\u1161\u1111\u116e\u11b7","\u1112\u1161\u1111\u1175\u11af","\u1112\u1161\u11a8\u1100\u116a","\u1112\u1161\u11a8\u1100\u116d","\u1112\u1161\u11a8\u1100\u1173\u11b8","\u1112\u1161\u11a8\u1100\u1175","\u1112\u1161\u11a8\u1102\u1167\u11ab","\u1112\u1161\u11a8\u1105\u1167\u11a8","\u1112\u1161\u11a8\u1107\u1165\u11ab","\u1112\u1161\u11a8\u1107\u116e\u1106\u1169","\u1112\u1161\u11a8\u1107\u1175","\u1112\u1161\u11a8\u1109\u1162\u11bc","\u1112\u1161\u11a8\u1109\u116e\u11af","\u1112\u1161\u11a8\u1109\u1173\u11b8","\u1112\u1161\u11a8\u110b\u116d\u11bc\u1111\u116e\u11b7","\u1112\u1161\u11a8\u110b\u116f\u11ab","\u1112\u1161\u11a8\u110b\u1171","\u1112\u1161\u11a8\u110c\u1161","\u1112\u1161\u11a8\u110c\u1165\u11b7","\u1112\u1161\u11ab\u1100\u1168","\u1112\u1161\u11ab\u1100\u1173\u11af","\u1112\u1161\u11ab\u1101\u1165\u1107\u1165\u11ab\u110b\u1166","\u1112\u1161\u11ab\u1102\u1161\u11bd","\u1112\u1161\u11ab\u1102\u116e\u11ab","\u1112\u1161\u11ab\u1103\u1169\u11bc\u110b\u1161\u11ab","\u1112\u1161\u11ab\u1104\u1162","\u1112\u1161\u11ab\u1105\u1161\u1109\u1161\u11ab","\u1112\u1161\u11ab\u1106\u1161\u1103\u1175","\u1112\u1161\u11ab\u1106\u116e\u11ab","\u1112\u1161\u11ab\u1107\u1165\u11ab","\u1112\u1161\u11ab\u1107\u1169\u11a8","\u1112\u1161\u11ab\u1109\u1175\u11a8","\u1112\u1161\u11ab\u110b\u1167\u1105\u1173\u11b7","\u1112\u1161\u11ab\u110d\u1169\u11a8","\u1112\u1161\u11af\u1106\u1165\u1102\u1175","\u1112\u1161\u11af\u110b\u1161\u1107\u1165\u110c\u1175","\u1112\u1161\u11af\u110b\u1175\u11ab","\u1112\u1161\u11b7\u1101\u1166","\u1112\u1161\u11b7\u1107\u116e\u1105\u1169","\u1112\u1161\u11b8\u1100\u1167\u11a8","\u1112\u1161\u11b8\u1105\u1175\u110c\u1165\u11a8","\u1112\u1161\u11bc\u1100\u1169\u11bc","\u1112\u1161\u11bc\u1100\u116e","\u1112\u1161\u11bc\u1109\u1161\u11bc","\u1112\u1161\u11bc\u110b\u1174","\u1112\u1162\u1100\u1167\u11af","\u1112\u1162\u1100\u116e\u11ab","\u1112\u1162\u1103\u1161\u11b8","\u1112\u1162\u1103\u1161\u11bc","\u1112\u1162\u1106\u116e\u11af","\u1112\u1162\u1109\u1165\u11a8","\u1112\u1162\u1109\u1165\u11af","\u1112\u1162\u1109\u116e\u110b\u116d\u11a8\u110c\u1161\u11bc","\u1112\u1162\u110b\u1161\u11ab","\u1112\u1162\u11a8\u1109\u1175\u11b7","\u1112\u1162\u11ab\u1103\u1173\u1107\u1162\u11a8","\u1112\u1162\u11b7\u1107\u1165\u1100\u1165","\u1112\u1162\u11ba\u1107\u1167\u11c0","\u1112\u1162\u11ba\u1109\u1161\u11af","\u1112\u1162\u11bc\u1103\u1169\u11bc","\u1112\u1162\u11bc\u1107\u1169\u11a8","\u1112\u1162\u11bc\u1109\u1161","\u1112\u1162\u11bc\u110b\u116e\u11ab","\u1112\u1162\u11bc\u110b\u1171","\u1112\u1163\u11bc\u1100\u1175","\u1112\u1163\u11bc\u1109\u1161\u11bc","\u1112\u1163\u11bc\u1109\u116e","\u1112\u1165\u1105\u1161\u11a8","\u1112\u1165\u110b\u116d\u11bc","\u1112\u1166\u11af\u1100\u1175","\u1112\u1167\u11ab\u1100\u116a\u11ab","\u1112\u1167\u11ab\u1100\u1173\u11b7","\u1112\u1167\u11ab\u1103\u1162","\u1112\u1167\u11ab\u1109\u1161\u11bc","\u1112\u1167\u11ab\u1109\u1175\u11af","\u1112\u1167\u11ab\u110c\u1161\u11bc","\u1112\u1167\u11ab\u110c\u1162","\u1112\u1167\u11ab\u110c\u1175","\u1112\u1167\u11af\u110b\u1162\u11a8","\u1112\u1167\u11b8\u1105\u1167\u11a8","\u1112\u1167\u11bc\u1107\u116e","\u1112\u1167\u11bc\u1109\u1161","\u1112\u1167\u11bc\u1109\u116e","\u1112\u1167\u11bc\u1109\u1175\u11a8","\u1112\u1167\u11bc\u110c\u1166","\u1112\u1167\u11bc\u1110\u1162","\u1112\u1167\u11bc\u1111\u1167\u11ab","\u1112\u1168\u1110\u1162\u11a8","\u1112\u1169\u1100\u1175\u1109\u1175\u11b7","\u1112\u1169\u1102\u1161\u11b7","\u1112\u1169\u1105\u1161\u11bc\u110b\u1175","\u1112\u1169\u1107\u1161\u11a8","\u1112\u1169\u1110\u1166\u11af","\u1112\u1169\u1112\u1173\u11b8","\u1112\u1169\u11a8\u1109\u1175","\u1112\u1169\u11af\u1105\u1169","\u1112\u1169\u11b7\u1111\u1166\u110b\u1175\u110c\u1175","\u1112\u1169\u11bc\u1107\u1169","\u1112\u1169\u11bc\u1109\u116e","\u1112\u1169\u11bc\u110e\u1161","\u1112\u116a\u1106\u1167\u11ab","\u1112\u116a\u1107\u116e\u11ab","\u1112\u116a\u1109\u1161\u11af","\u1112\u116a\u110b\u116d\u110b\u1175\u11af","\u1112\u116a\u110c\u1161\u11bc","\u1112\u116a\u1112\u1161\u11a8","\u1112\u116a\u11a8\u1107\u1169","\u1112\u116a\u11a8\u110b\u1175\u11ab","\u1112\u116a\u11a8\u110c\u1161\u11bc","\u1112\u116a\u11a8\u110c\u1165\u11bc","\u1112\u116a\u11ab\u1100\u1161\u11b8","\u1112\u116a\u11ab\u1100\u1167\u11bc","\u1112\u116a\u11ab\u110b\u1167\u11bc","\u1112\u116a\u11ab\u110b\u1172\u11af","\u1112\u116a\u11ab\u110c\u1161","\u1112\u116a\u11af\u1100\u1175","\u1112\u116a\u11af\u1103\u1169\u11bc","\u1112\u116a\u11af\u1107\u1161\u11af\u1112\u1175","\u1112\u116a\u11af\u110b\u116d\u11bc","\u1112\u116a\u11af\u110d\u1161\u11a8","\u1112\u116c\u1100\u1167\u11ab","\u1112\u116c\u1100\u116a\u11ab","\u1112\u116c\u1107\u1169\u11a8","\u1112\u116c\u1109\u1162\u11a8","\u1112\u116c\u110b\u116f\u11ab","\u1112\u116c\u110c\u1161\u11bc","\u1112\u116c\u110c\u1165\u11ab","\u1112\u116c\u11ba\u1109\u116e","\u1112\u116c\u11bc\u1103\u1161\u11ab\u1107\u1169\u1103\u1169","\u1112\u116d\u110b\u1172\u11af\u110c\u1165\u11a8","\u1112\u116e\u1107\u1161\u11ab","\u1112\u116e\u110e\u116e\u11ba\u1100\u1161\u1105\u116e","\u1112\u116e\u11ab\u1105\u1167\u11ab","\u1112\u116f\u11af\u110a\u1175\u11ab","\u1112\u1172\u1109\u1175\u11a8","\u1112\u1172\u110b\u1175\u11af","\u1112\u1172\u11bc\u1102\u1162","\u1112\u1173\u1105\u1173\u11b7","\u1112\u1173\u11a8\u1107\u1162\u11a8","\u1112\u1173\u11a8\u110b\u1175\u11ab","\u1112\u1173\u11ab\u110c\u1165\u11a8","\u1112\u1173\u11ab\u1112\u1175","\u1112\u1173\u11bc\u1106\u1175","\u1112\u1173\u11bc\u1107\u116e\u11ab","\u1112\u1174\u1100\u1169\u11a8","\u1112\u1174\u1106\u1161\u11bc","\u1112\u1174\u1109\u1162\u11bc","\u1112\u1174\u11ab\u1109\u1162\u11a8","\u1112\u1175\u11b7\u1101\u1165\u11ba"]',
        );
      },
      7357: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"]',
        );
      },
      5376: (e) => {
        'use strict';
        e.exports = JSON.parse(
          '["a\u0301baco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","accio\u0301n","aceite","acelga","acento","aceptar","a\u0301cido","aclarar","acne\u0301","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","ae\u0301reo","afectar","aficio\u0301n","afinar","afirmar","a\u0301gil","agitar","agoni\u0301a","agosto","agotar","agregar","agrio","agua","agudo","a\u0301guila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacra\u0301n","alambre","alarma","alba","a\u0301lbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodo\u0301n","aliado","aliento","alivio","alma","almeja","almi\u0301bar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","a\u0301mbar","a\u0301mbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","ande\u0301n","anemia","a\u0301ngulo","anillo","a\u0301nimo","ani\u0301s","anotar","antena","antiguo","antojo","anual","anular","anuncio","an\u0303adir","an\u0303ejo","an\u0303o","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","aran\u0303a","arar","a\u0301rbitro","a\u0301rbol","arbusto","archivo","arco","arder","ardilla","arduo","a\u0301rea","a\u0301rido","aries","armoni\u0301a","arne\u0301s","aroma","arpa","arpo\u0301n","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","a\u0301spero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","a\u0301tico","atleta","a\u0301tomo","atraer","atroz","atu\u0301n","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avio\u0301n","aviso","ayer","ayuda","ayuno","azafra\u0301n","azar","azote","azu\u0301car","azufre","azul","baba","babor","bache","bahi\u0301a","baile","bajar","balanza","balco\u0301n","balde","bambu\u0301","banco","banda","ban\u0303o","barba","barco","barniz","barro","ba\u0301scula","basto\u0301n","basura","batalla","bateri\u0301a","batir","batuta","bau\u0301l","bazar","bebe\u0301","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsa\u0301i","borde","borrar","bosque","bote","boti\u0301n","bo\u0301veda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufo\u0301n","bu\u0301ho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzo\u0301n","caballo","cabeza","cabina","cabra","cacao","cada\u0301ver","cadena","caer","cafe\u0301","cai\u0301da","caima\u0301n","caja","cajo\u0301n","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","ca\u0301ncer","candil","canela","canguro","canica","canto","can\u0303a","can\u0303o\u0301n","caoba","caos","capaz","capita\u0301n","capote","captar","capucha","cara","carbo\u0301n","ca\u0301rcel","careta","carga","carin\u0303o","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","ce\u0301lebre","celoso","ce\u0301lula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","ce\u0301sped","cetro","chacal","chaleco","champu\u0301","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclo\u0301n","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","cipre\u0301s","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","cli\u0301nica","cobre","coccio\u0301n","cochino","cocina","coco","co\u0301digo","codo","cofre","coger","cohete","coji\u0301n","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","co\u0301modo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazo\u0301n","corbata","corcho","cordo\u0301n","corona","correr","coser","cosmos","costa","cra\u0301neo","cra\u0301ter","crear","crecer","crei\u0301do","crema","cri\u0301a","crimen","cripta","crisis","cromo","cro\u0301nica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupo\u0301n","cu\u0301pula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","da\u0301til","deber","de\u0301bil","de\u0301cada","decir","dedo","defensa","definir","dejar","delfi\u0301n","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvi\u0301o","detalle","detener","deuda","di\u0301a","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difi\u0301cil","digno","dilema","diluir","dinero","directo","dirigir","disco","disen\u0303o","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","drago\u0301n","droga","ducha","duda","duelo","duen\u0303o","dulce","du\u0301o","duque","durar","dureza","duro","e\u0301bano","ebrio","echar","eco","ecuador","edad","edicio\u0301n","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","e\u0301lite","elixir","elogio","eludir","embudo","emitir","emocio\u0301n","empate","empen\u0303o","empleo","empresa","enano","encargo","enchufe","enci\u0301a","enemigo","enero","enfado","enfermo","engan\u0303o","enigma","enlace","enorme","enredo","ensayo","ensen\u0303ar","entero","entrar","envase","envi\u0301o","e\u0301poca","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espi\u0301a","esposa","espuma","esqui\u0301","estar","este","estilo","estufa","etapa","eterno","e\u0301tica","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","e\u0301xito","experto","explicar","exponer","extremo","fa\u0301brica","fa\u0301bula","fachada","fa\u0301cil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","farao\u0301n","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fe\u0301rtil","fervor","festi\u0301n","fiable","fianza","fiar","fibra","ficcio\u0301n","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flu\u0301or","fobia","foca","fogata","fogo\u0301n","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","fra\u0301gil","franja","frase","fraude","frei\u0301r","freno","fresa","fri\u0301o","frito","fruta","fuego","fuente","fuerza","fuga","fumar","funcio\u0301n","funda","furgo\u0301n","furia","fusil","fu\u0301tbol","futuro","gacela","gafas","gaita","gajo","gala","galeri\u0301a","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavila\u0301n","gemelo","gemir","gen","ge\u0301nero","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gra\u0301fico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","gru\u0301a","grueso","grumo","grupo","guante","guapo","guardia","guerra","gui\u0301a","guin\u0303o","guion","guiso","guitarra","gusano","gustar","haber","ha\u0301bil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazan\u0303a","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","he\u0301roe","hervir","hielo","hierro","hi\u0301gado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","hu\u0301medo","humilde","humo","hundir","huraca\u0301n","hurto","icono","ideal","idioma","i\u0301dolo","iglesia","iglu\u0301","igual","ilegal","ilusio\u0301n","imagen","ima\u0301n","imitar","impar","imperio","imponer","impulso","incapaz","i\u0301ndice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","intere\u0301s","i\u0301ntimo","intuir","inu\u0301til","invierno","ira","iris","ironi\u0301a","isla","islote","jabali\u0301","jabo\u0301n","jamo\u0301n","jarabe","jardi\u0301n","jarra","jaula","jazmi\u0301n","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","ju\u0301piter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladro\u0301n","lagarto","la\u0301grima","laguna","laico","lamer","la\u0301mina","la\u0301mpara","lana","lancha","langosta","lanza","la\u0301piz","largo","larva","la\u0301stima","lata","la\u0301tex","latir","laurel","lavar","lazo","leal","leccio\u0301n","leche","lector","leer","legio\u0301n","legumbre","lejano","lengua","lento","len\u0303a","leo\u0301n","leopardo","lesio\u0301n","letal","letra","leve","leyenda","libertad","libro","licor","li\u0301der","lidiar","lienzo","liga","ligero","lima","li\u0301mite","limo\u0301n","limpio","lince","lindo","li\u0301nea","lingote","lino","linterna","li\u0301quido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","locio\u0301n","loco","locura","lo\u0301gica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","mai\u0301z","maldad","maleta","malla","malo","mama\u0301","mambo","mamut","manco","mando","manejar","manga","maniqui\u0301","manjar","mano","manso","manta","man\u0303ana","mapa","ma\u0301quina","mar","marco","marea","marfil","margen","marido","ma\u0301rmol","marro\u0301n","martes","marzo","masa","ma\u0301scara","masivo","matar","materia","matiz","matriz","ma\u0301ximo","mayor","mazorca","mecha","medalla","medio","me\u0301dula","mejilla","mejor","melena","melo\u0301n","memoria","menor","mensaje","mente","menu\u0301","mercado","merengue","me\u0301rito","mes","meso\u0301n","meta","meter","me\u0301todo","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millo\u0301n","mimo","mina","minero","mi\u0301nimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","mocio\u0301n","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","mon\u0303o","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","mo\u0301vil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","mun\u0303eca","mural","muro","mu\u0301sculo","museo","musgo","mu\u0301sica","muslo","na\u0301car","nacio\u0301n","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","na\u0301usea","naval","nave","navidad","necio","ne\u0301ctar","negar","negocio","negro","neo\u0301n","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","nin\u0303ez","nin\u0303o","ni\u0301tido","nivel","nobleza","noche","no\u0301mina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","nu\u0301cleo","nudillo","nudo","nuera","nueve","nuez","nulo","nu\u0301mero","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","oce\u0301ano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oi\u0301do","oi\u0301r","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opcio\u0301n","o\u0301pera","opinar","oponer","optar","o\u0301ptica","opuesto","oracio\u0301n","orador","oral","o\u0301rbita","orca","orden","oreja","o\u0301rgano","orgi\u0301a","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadi\u0301a","oscuro","osezno","oso","ostra","oton\u0303o","otro","oveja","o\u0301vulo","o\u0301xido","oxi\u0301geno","oyente","ozono","pacto","padre","paella","pa\u0301gina","pago","pai\u0301s","pa\u0301jaro","palabra","palco","paleta","pa\u0301lido","palma","paloma","palpar","pan","panal","pa\u0301nico","pantera","pan\u0303uelo","papa\u0301","papel","papilla","paquete","parar","parcela","pared","parir","paro","pa\u0301rpado","parque","pa\u0301rrafo","parte","pasar","paseo","pasio\u0301n","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peato\u0301n","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldan\u0303o","pelea","peligro","pellejo","pelo","peluca","pena","pensar","pen\u0303o\u0301n","peo\u0301n","peor","pepino","pequen\u0303o","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pe\u0301simo","pestan\u0303a","pe\u0301talo","petro\u0301leo","pez","pezun\u0303a","picar","picho\u0301n","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","pin\u0303a","piojo","pipa","pirata","pisar","piscina","piso","pista","pito\u0301n","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesi\u0301a","poeta","polen","polici\u0301a","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porcio\u0301n","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","pri\u0301ncipe","prisio\u0301n","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","pro\u0301ximo","prueba","pu\u0301blico","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmo\u0301n","pulpo","pulso","puma","punto","pun\u0303al","pun\u0303o","pupa","pupila","pure\u0301","quedar","queja","quemar","querer","queso","quieto","qui\u0301mica","quince","quitar","ra\u0301bano","rabia","rabo","racio\u0301n","radical","rai\u0301z","rama","rampa","rancho","rango","rapaz","ra\u0301pido","rapto","rasgo","raspa","rato","rayo","raza","razo\u0301n","reaccio\u0301n","realidad","reban\u0303o","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refra\u0301n","refugio","regalo","regir","regla","regreso","rehe\u0301n","reino","rei\u0301r","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","reve\u0301s","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","ri\u0301gido","rigor","rinco\u0301n","rin\u0303o\u0301n","ri\u0301o","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubi\u0301","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sa\u0301bado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmo\u0301n","salo\u0301n","salsa","salto","salud","salvar","samba","sancio\u0301n","sandi\u0301a","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sarte\u0301n","sastre","sata\u0301n","sauna","saxofo\u0301n","seccio\u0301n","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","sen\u0303al","sen\u0303or","separar","sepia","sequi\u0301a","ser","serie","sermo\u0301n","servir","sesenta","sesio\u0301n","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","si\u0301laba","silbar","silencio","silla","si\u0301mbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","so\u0301lido","soltar","solucio\u0301n","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","soste\u0301n","so\u0301tano","suave","subir","suceso","sudor","suegra","suelo","suen\u0303o","suerte","sufrir","sujeto","sulta\u0301n","sumar","superar","suplir","suponer","supremo","sur","surco","suren\u0303o","surgir","susto","sutil","tabaco","tabique","tabla","tabu\u0301","taco","tacto","tajo","talar","talco","talento","talla","talo\u0301n","taman\u0303o","tambor","tango","tanque","tapa","tapete","tapia","tapo\u0301n","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazo\u0301n","teatro","techo","tecla","te\u0301cnica","tejado","tejer","tejido","tela","tele\u0301fono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teori\u0301a","terapia","terco","te\u0301rmino","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburo\u0301n","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","ti\u0301mido","timo","tinta","ti\u0301o","ti\u0301pico","tipo","tira","tiro\u0301n","tita\u0301n","ti\u0301tere","ti\u0301tulo","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","to\u0301rax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","to\u0301xico","trabajo","tractor","traer","tra\u0301fico","trago","traje","tramo","trance","trato","trauma","trazar","tre\u0301bol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tuberi\u0301a","tubo","tuerto","tumba","tumor","tu\u0301nel","tu\u0301nica","turbina","turismo","turno","tutor","ubicar","u\u0301lcera","umbral","unidad","unir","universo","uno","untar","un\u0303a","urbano","urbe","urgente","urna","usar","usuario","u\u0301til","utopi\u0301a","uva","vaca","vaci\u0301o","vacuna","vagar","vago","vaina","vajilla","vale","va\u0301lido","valle","valor","va\u0301lvula","vampiro","vara","variar","varo\u0301n","vaso","vecino","vector","vehi\u0301culo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vi\u0301a","viaje","vibrar","vicio","vi\u0301ctima","vida","vi\u0301deo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","vin\u0303edo","violi\u0301n","viral","virgo","virtud","visor","vi\u0301spera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volca\u0301n","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]',
        );
      },
    },
    t = {};
  function r(a) {
    var o = t[a];
    if (void 0 !== o) return o.exports;
    var i = (t[a] = { exports: {} });
    return e[a].call(i.exports, i, i.exports, r), i.exports;
  }
  (r.n = (e) => {
    var t = e && e.__esModule ? () => e.default : () => e;
    return r.d(t, { a: t }), t;
  }),
    (r.d = (e, t) => {
      for (var a in t) r.o(t, a) && !r.o(e, a) && Object.defineProperty(e, a, { enumerable: !0, get: t[a] });
    }),
    (r.g = (function () {
      if ('object' === typeof globalThis) return globalThis;
      try {
        return this || new Function('return this')();
      } catch (e) {
        if ('object' === typeof window) return window;
      }
    })()),
    (r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
    (r.r = (e) => {
      'undefined' !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (() => {
      'use strict';
      var e = r(4389),
        t = r(3299),
        a = r(5917),
        o = r(4963),
        i = r(8700),
        n = r(7461),
        s = r(4292),
        c = r(3329);
      const l = async function (t) {
          let r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          const { selectedAccount: a, account: o } = t.getCurrentAccountObject(),
            i = t.getNetwork();
          let {
            bsvAddress: n,
            identityAddress: l,
            ordAddress: d,
          } = (null === o || void 0 === o ? void 0 : o.addresses) || {};
          n || (n = ''), l || (l = ''), d || (d = '');
          const h = new Set([n, l, d]),
            f = [new s.l2(h, s.kd.TrustAndVerify, i)],
            p = new s.nH(h, s.kd.TrustAndVerify, i),
            b = [new s.w9(h, s.kd.Trust, i), new s.r9(h, s.kd.Trust, i)],
            m = [
              new s.kV(h, s.kd.TrustAndVerify, i),
              new s.Uk(h, s.kd.TrustAndVerify, i),
              new s._w(h, s.kd.TrustAndVerify, i),
              new s.KG(h, s.kd.Verify, i),
              new s.BN(h, s.kd.Verify, i),
              new s.ih(h, s.kd.TrustAndVerify, i),
            ];
          c.w.settings.services.locks && f.push(p),
            c.w.settings.services.ordinals && f.push(...m),
            c.w.settings.services.bsv20 && f.push(...b);
          const g = await s.ay.init(
            a || '',
            f,
            h,
            r && !!o,
            i == e.NetWork.Mainnet ? e.NetWork.Mainnet : e.NetWork.Testnet,
          );
          if (!g) throw Error('SPV not initialized!');
          return await u(g, a || '', r), g;
        },
        u = async (e, r, o) => {
          if (
            (e.events.on('queueStats', (e) => {
              const r = { action: t.A.QUEUE_STATUS_UPDATE, data: e };
              try {
                (0, a._z)(r);
              } catch (o) {}
            }),
            e.events.on('importing', (e) => {
              const r = { action: t.A.IMPORT_STATUS_UPDATE, data: e };
              try {
                (0, a._z)(r);
              } catch (o) {}
            }),
            e.events.on('fetchingTx', (e) => {
              const r = { action: t.A.FETCHING_TX_STATUS_UPDATE, data: e };
              try {
                (0, a._z)(r);
              } catch (o) {}
            }),
            o)
          ) {
            const o = await e.getChaintip();
            e.events.on('syncedBlockHeight', (e) => {
              try {
                const i = {
                  action: t.A.BLOCK_HEIGHT_UPDATE,
                  data: { currentHeight: (null === o || void 0 === o ? void 0 : o.height) || 0, lastHeight: e },
                };
                r && (0, a._z)(i);
              } catch (i) {}
            });
          }
        };
      var d,
        h = r(7627),
        f = r(6382).hp;
      let p = new o.L();
      const b = void 0 === (null === (d = self) || void 0 === d ? void 0 : d.document),
        m = new i.Q(p);
      let g = p.getAndSetStorage().then(() => l(p, b));
      console.log('Yours Wallet Background Script Running!');
      let v,
        y = null,
        w = null,
        k = null,
        E = null,
        S = null,
        x = null,
        _ = null,
        A = null,
        O = null,
        P = null,
        I = null;
      const B = 6e5;
      if (b) {
        const r = async () => {
          (await g).events.on('newTxs', (e) => {
            (0, a.aT)(e);
          });
        };
        r();
        const i = async () => {
            try {
              const e = await g;
              if (!e) throw Error('SPV not initialized!');
              await p.update({ hasUpgradedToSPV: !0 }), await e.sync(), console.log('done importing');
            } catch (e) {
              console.error('Error during sync:', e);
            }
          },
          c = async () => {
            const e = await indexedDB.databases();
            for (const r of e) {
              var t;
              (null !== (t = r.name) && void 0 !== t && t.startsWith('block')) ||
                (r.name && (indexedDB.deleteDatabase(r.name), console.log(`Deleted database: ${r.name}`)));
            }
            console.log('All IndexedDB databases deleted.');
          },
          u = async () => {
            await (await g).destroy(), await c();
          },
          d = async () => {
            await (await g).destroy(), (p = new o.L()), await p.getAndSetStorage(), (g = l(p, b)), r();
          },
          N = () => {
            chrome.windows.create(
              { url: chrome.runtime.getURL('index.html'), type: 'popup', width: 392, height: 567 },
              (e) => {
                (v = null === e || void 0 === e ? void 0 : e.id), v && chrome.storage.local.set({ popupWindowId: v });
              },
            );
          },
          T = async (e) => {
            const { accounts: t, selectedAccount: r } = await p.getAndSetStorage();
            if (!t || !r) return !1;
            const a = t[r].settings.whitelist;
            return !!a && a.map((e) => e.domain).includes(e);
          },
          z = async (e) => {
            if (
              e.action === t.A.QUEUE_STATUS_UPDATE ||
              e.action === t.A.IMPORT_STATUS_UPDATE ||
              e.action === t.A.FETCHING_TX_STATUS_UPDATE
            )
              return !0;
            const { params: r } = e;
            return await T(r.domain);
          };
        chrome.runtime.onMessage.addListener((e, r, a) => {
          [t.A.SIGNED_OUT, t.A.SWITCH_ACCOUNT].includes(e.action) && R(e);
          if (
            ![
              t.A.IS_CONNECTED,
              t.A.USER_CONNECT_RESPONSE,
              t.A.SEND_BSV_RESPONSE,
              t.A.SEND_BSV20_RESPONSE,
              t.A.TRANSFER_ORDINAL_RESPONSE,
              t.A.PURCHASE_ORDINAL_RESPONSE,
              t.A.SIGN_MESSAGE_RESPONSE,
              t.A.BROADCAST_RESPONSE,
              t.A.GET_SIGNATURES_RESPONSE,
              t.A.GENERATE_TAGGED_KEYS_RESPONSE,
              t.A.ENCRYPT_RESPONSE,
              t.A.DECRYPT_RESPONSE,
              t.A.SYNC_UTXOS,
              t.A.SWITCH_ACCOUNT,
              t.A.SIGNED_OUT,
            ].includes(e.action)
          )
            return (
              z(e).then((r) => {
                if (e.action === t.A.CONNECT) return M(e, a, r);
                if (r)
                  switch (e.action) {
                    case t.A.DISCONNECT:
                      return F(e, a);
                    case t.A.GET_PUB_KEYS:
                      return U(a);
                    case t.A.GET_BALANCE:
                      return j(a);
                    case t.A.GET_ADDRESSES:
                      return D(a);
                    case t.A.GET_NETWORK:
                      return L(a);
                    case t.A.GET_ORDINALS:
                      return q(e, a);
                    case t.A.GET_BSV20S:
                      return H(a);
                    case t.A.SEND_BSV:
                    case t.A.INSCRIBE:
                      return V(e, a);
                    case t.A.SEND_BSV20:
                      return $(e, a);
                    case t.A.TRANSFER_ORDINAL:
                      return W(e, a);
                    case t.A.PURCHASE_ORDINAL:
                    case t.A.PURCHASE_BSV20:
                      return Y(e, a);
                    case t.A.SIGN_MESSAGE:
                      return J(e, a);
                    case t.A.BROADCAST:
                      return X(e, a);
                    case t.A.GET_SIGNATURES:
                      return Q(e, a);
                    case t.A.GET_SOCIAL_PROFILE:
                      return Z(a);
                    case t.A.GET_PAYMENT_UTXOS:
                      return K(a);
                    case t.A.GET_EXCHANGE_RATE:
                      return G(a);
                    case t.A.GENERATE_TAGGED_KEYS:
                      return ee(e, a);
                    case t.A.GET_TAGGED_KEYS:
                      return te(e, a);
                    case t.A.ENCRYPT:
                      return re(e, a);
                    case t.A.DECRYPT:
                      return ae(e, a);
                  }
                else a({ type: e.action, success: !1, error: 'Unauthorized!' });
              }),
              !0
            );
          switch (e.action) {
            case t.A.IS_CONNECTED:
              return C(e.params, a);
            case t.A.USER_CONNECT_RESPONSE:
              return ie(e);
            case t.A.SEND_BSV_RESPONSE:
              return ne(e);
            case t.A.SEND_BSV20_RESPONSE:
              return se(e);
            case t.A.TRANSFER_ORDINAL_RESPONSE:
              return ce(e);
            case t.A.PURCHASE_ORDINAL_RESPONSE:
              return ue(e);
            case t.A.SIGN_MESSAGE_RESPONSE:
              return de(e);
            case t.A.BROADCAST_RESPONSE:
              return he(e);
            case t.A.GET_SIGNATURES_RESPONSE:
              return fe(e);
            case t.A.GENERATE_TAGGED_KEYS_RESPONSE:
              return le(e);
            case t.A.ENCRYPT_RESPONSE:
              return pe(e);
            case t.A.DECRYPT_RESPONSE:
              return be(e);
            case t.A.SYNC_UTXOS:
              return i();
            case t.A.SWITCH_ACCOUNT:
              return d();
            case t.A.SIGNED_OUT:
              return u();
          }
        });
        const R = (e) => {
            const { action: r, params: a } = e;
            return (
              chrome.tabs.query({}, function (e) {
                e.forEach(function (e) {
                  e.id && chrome.tabs.sendMessage(e.id, { type: t.R.YOURS_EMIT_EVENT, action: r, params: a });
                });
              }),
              !0
            );
          },
          M = (e, t, r) => (
            (y = t),
            p.update({ connectRequest: { ...e.params, isAuthorized: r } }).then(() => {
              N();
            }),
            !0
          ),
          F = (e, r) => {
            try {
              p.getAndSetStorage().then(() => {
                const { account: a } = p.getCurrentAccountObject();
                if (!a) throw Error('No account found!');
                const { whitelist: o } = a.settings;
                if (!o) throw Error('Already disconnected!');
                const { params: i } = e,
                  n = o.filter((e) => e.domain !== i.domain),
                  s = { [a.addresses.identityAddress]: { ...a, settings: { ...a.settings, whitelist: n } } };
                p.updateNested('accounts', s).then(() => {
                  r({ type: t.A.DISCONNECT, success: !0, data: !0 });
                });
              });
            } catch (a) {
              r({ type: t.A.DISCONNECT, success: !0, data: !1 });
            }
          },
          C = (e, r) => {
            try {
              p.getAndSetStorage().then(() => {
                var a;
                const o = p.getCurrentAccountObject();
                if (null === o || void 0 === o || !o.account) throw Error('No account found!');
                const i = Date.now(),
                  n = o.lastActiveTime;
                r({
                  type: t.A.IS_CONNECTED,
                  success: !0,
                  data:
                    !o.isLocked &&
                    i - Number(n) < B &&
                    (null === (a = o.account.settings.whitelist) || void 0 === a
                      ? void 0
                      : a.map((e) => e.domain).includes(e.domain)),
                });
              });
            } catch (a) {
              r({ type: t.A.IS_CONNECTED, success: !0, error: !1 });
            }
            return !0;
          },
          j = (e) => {
            try {
              p.getAndSetStorage().then(() => {
                const { account: r } = p.getCurrentAccountObject();
                if (!r) throw Error('No account found!');
                e({ type: t.A.GET_BALANCE, success: !0, data: r.balance });
              });
            } catch (r) {
              e({ type: t.A.GET_BALANCE, success: !1, error: JSON.stringify(r) });
            }
          },
          U = (e) => {
            try {
              p.getAndSetStorage().then(() => {
                const { account: r } = p.getCurrentAccountObject();
                if (!r) throw Error('No account found!');
                e({ type: t.A.GET_PUB_KEYS, success: !0, data: r.pubKeys });
              });
            } catch (r) {
              e({ type: t.A.GET_PUB_KEYS, success: !1, error: JSON.stringify(r) });
            }
          },
          D = (e) => {
            try {
              p.getAndSetStorage().then(() => {
                const { account: r } = p.getCurrentAccountObject();
                if (!r) throw Error('No account found!');
                e({ type: t.A.GET_ADDRESSES, success: !0, data: r.addresses });
              });
            } catch (r) {
              e({ type: t.A.GET_ADDRESSES, success: !1, error: JSON.stringify(r) });
            }
          },
          L = (r) => {
            try {
              p.getAndSetStorage().then(() => {
                var a;
                const { account: o } = p.getCurrentAccountObject();
                if (!o) throw Error('No account found!');
                r({
                  type: t.A.GET_NETWORK,
                  success: !0,
                  data:
                    null !== (a = null === o || void 0 === o ? void 0 : o.network) && void 0 !== a
                      ? a
                      : e.NetWork.Mainnet,
                });
              });
            } catch (a) {
              r({ type: t.A.GET_NETWORK, success: !1, error: JSON.stringify(a) });
            }
          },
          q = (e, r) => {
            try {
              p.getAndSetStorage().then(async () => {
                const a = await g;
                if (!a) throw Error('SPV not initialized!');
                if (void 0 === e.params.from || null === e.params.from) {
                  const e = (await a.search(new s.Wg('origin'), s.m7.DESC, 0)).txos.map(n.Q);
                  r({ type: t.A.GET_ORDINALS, success: !0, data: e });
                } else {
                  const o = await a.search(new s.Wg('origin'), s.m7.DESC, e.params.limit || 50, e.params.from || ''),
                    i = o.txos.map(n.Q);
                  r({ type: t.A.GET_ORDINALS, success: !0, data: { ordinals: i, from: o.nextPage } });
                }
              });
            } catch (a) {
              r({ type: t.A.GET_ORDINALS, success: !1, error: JSON.stringify(a) });
            }
          },
          H = (e) => {
            try {
              p.getAndSetStorage().then(async () => {
                var r, a, o, i;
                let n = [];
                const s = p.getCurrentAccountObject();
                if (
                  null !== (r = s.account) &&
                  void 0 !== r &&
                  null !== (a = r.addresses) &&
                  void 0 !== a &&
                  a.bsvAddress &&
                  null !== (o = s.account) &&
                  void 0 !== o &&
                  null !== (i = o.addresses) &&
                  void 0 !== i &&
                  i.ordAddress
                ) {
                  var c, l;
                  n = (
                    await m.getBsv20Balances([
                      null === (c = s.account) || void 0 === c ? void 0 : c.addresses.bsvAddress,
                      null === (l = s.account) || void 0 === l ? void 0 : l.addresses.ordAddress,
                    ])
                  ).map((e) => ({
                    ...e,
                    listed: { confirmed: e.listed.confirmed.toString(), pending: e.listed.pending.toString() },
                    all: { confirmed: e.all.confirmed.toString(), pending: e.all.pending.toString() },
                  }));
                }
                e({ type: t.A.GET_BSV20S, success: !0, data: n });
              });
            } catch (r) {
              e({ type: t.A.GET_BSV20S, success: !1, error: JSON.stringify(r) });
            }
          },
          G = (e) => {
            try {
              p.getAndSetStorage().then(async (r) => {
                if (!r) throw Error('Could not get storage!');
                const { exchangeRateCache: a } = r;
                if (null !== a && void 0 !== a && a.rate && Date.now() - a.timestamp < 3e5)
                  e({ type: t.A.GET_EXCHANGE_RATE, success: !0, data: Number(a.rate.toFixed(2)) });
                else {
                  const r = await fetch('https://api.whatsonchain.com/v1/bsv/main/exchangerate');
                  if (!r.ok) throw new Error(`Fetch error: ${r.status} - ${r.statusText}`);
                  const a = (await r.json()).rate,
                    o = Date.now();
                  p.update({ exchangeRateCache: { rate: a, timestamp: o } }),
                    e({ type: t.A.GET_EXCHANGE_RATE, success: !0, data: Number(a.toFixed(2)) });
                }
              });
            } catch (r) {
              e({ type: t.A.GET_EXCHANGE_RATE, success: !1, error: JSON.stringify(r) });
            }
          },
          K = (e) => {
            try {
              p.getAndSetStorage().then(async () => {
                const r = await g;
                if (!r) throw Error('SPV not initialized!');
                const a = (await r.search(new s.Wg('fund'))).txos.map((e) => ({
                  txid: e.outpoint.txid,
                  vout: e.outpoint.vout,
                  satoshis: Number(e.satoshis),
                  script: f.from(e.script).toString('hex'),
                }));
                e({ type: t.A.GET_PAYMENT_UTXOS, success: !0, data: a });
              });
            } catch (r) {
              e({ type: t.A.GET_PAYMENT_UTXOS, success: !1, error: JSON.stringify(r) });
            }
          },
          V = (e, r) => {
            if (e.params.data)
              try {
                w = r;
                let t = e.params.data;
                const a = e.params.data;
                a[0].base64Data &&
                  (t = a.map((e) => {
                    var t;
                    return {
                      address: e.address,
                      inscription: { base64Data: e.base64Data, mimeType: e.mimeType, map: e.map },
                      satoshis: null !== (t = e.satoshis) && void 0 !== t ? t : 1,
                    };
                  })),
                  p.update({ sendBsvRequest: t }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.SEND_BSV, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.SEND_BSV, success: !1, error: 'Must provide valid params!' });
          },
          $ = (e, r) => {
            if ((console.log('processSendBsv20Request', e), e.params))
              try {
                k = r;
                const t = e.params;
                p.update({ sendBsv20Request: t }).then(() => {
                  N();
                });
              } catch (a) {
                r({ type: t.A.SEND_BSV20, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.SEND_BSV20, success: !1, error: 'Must provide valid params!' });
          },
          W = (e, r) => {
            if (e.params)
              try {
                (E = r),
                  p.update({ transferOrdinalRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.TRANSFER_ORDINAL, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.TRANSFER_ORDINAL, success: !1, error: 'Must provide valid params!' });
          },
          Y = (e, r) => {
            if (e.params)
              try {
                (S = r),
                  p.update({ purchaseOrdinalRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.PURCHASE_ORDINAL, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.PURCHASE_ORDINAL, success: !1, error: 'Must provide valid params!' });
          },
          X = (e, r) => {
            if (e.params)
              try {
                (_ = r),
                  p.update({ broadcastRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.BROADCAST, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.BROADCAST, success: !1, error: 'Must provide valid params!' });
          },
          J = (e, r) => {
            if (e.params) {
              try {
                (x = r),
                  p.update({ signMessageRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.SIGN_MESSAGE, success: !1, error: JSON.stringify(a) });
              }
              return !0;
            }
            r({ type: t.A.SIGN_MESSAGE, success: !1, error: 'Must provide valid params!' });
          },
          Q = (e, r) => {
            if (e.params)
              try {
                (A = r),
                  p
                    .update({ getSignaturesRequest: { rawtx: e.params.rawtx, sigRequests: e.params.sigRequests } })
                    .then(() => {
                      N();
                    });
              } catch (a) {
                r({ type: t.A.GET_SIGNATURES, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.GET_SIGNATURES, success: !1, error: 'Must provide valid params!' });
          },
          Z = (e) => {
            try {
              p.getAndSetStorage().then(() => {
                var r, a, o, i, n, s;
                const { account: c } = p.getCurrentAccountObject();
                if (!c) throw Error('No account found!');
                const l =
                    null !==
                      (r =
                        null === (a = c.settings) || void 0 === a || null === (o = a.socialProfile) || void 0 === o
                          ? void 0
                          : o.displayName) && void 0 !== r
                      ? r
                      : 'Anonymous',
                  u =
                    null !==
                      (i =
                        null === (n = c.settings) || void 0 === n || null === (s = n.socialProfile) || void 0 === s
                          ? void 0
                          : s.avatar) && void 0 !== i
                      ? i
                      : h.Nv;
                e({ type: t.A.GET_SOCIAL_PROFILE, success: !0, data: { displayName: l, avatar: u } });
              });
            } catch (r) {
              e({ type: t.A.GET_SOCIAL_PROFILE, success: !1, error: JSON.stringify(r) });
            }
          },
          ee = (e, r) => {
            if (e.params)
              try {
                (O = r),
                  p.update({ generateTaggedKeysRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.GENERATE_TAGGED_KEYS, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.GENERATE_TAGGED_KEYS, success: !1, error: 'Must provide valid params!' });
          },
          te = async (e, r) => {
            if (e.params.label)
              try {
                p.getAndSetStorage().then((a) => {
                  var o, i, n;
                  const { account: s } = p.getCurrentAccountObject();
                  if (!a || !s) throw Error('No account found!');
                  const { lastActiveTime: c, isLocked: l } = a,
                    { derivationTags: u } = s,
                    d = Date.now();
                  (l || d - Number(c) > B) &&
                    r({ type: t.A.GET_TAGGED_KEYS, success: !1, error: 'Unauthorized! Wallet is locked.' });
                  let h =
                    u.length > 0
                      ? null === u || void 0 === u
                        ? void 0
                        : u.filter((t) => t.tag.label === e.params.label && t.tag.domain === e.params.domain)
                      : [];
                  var f;
                  h.length > 0 &&
                    null !==
                      (o =
                        null === e ||
                        void 0 === e ||
                        null === (i = e.params) ||
                        void 0 === i ||
                        null === (n = i.ids) ||
                        void 0 === n
                          ? void 0
                          : n.length) &&
                    void 0 !== o &&
                    o &&
                    (h =
                      null === (f = h) || void 0 === f
                        ? void 0
                        : f.filter((t) => {
                            var r, a;
                            return null === e ||
                              void 0 === e ||
                              null === (r = e.params) ||
                              void 0 === r ||
                              null === (a = r.ids) ||
                              void 0 === a
                              ? void 0
                              : a.includes(t.tag.id);
                          }));
                  r({ type: t.A.GET_TAGGED_KEYS, success: !0, data: h });
                });
              } catch (a) {
                r({ type: t.A.GET_TAGGED_KEYS, success: !1, error: JSON.stringify(a) });
              }
            else r({ type: t.A.GET_TAGGED_KEYS, success: !1, error: 'Must provide valid params!' });
          },
          re = (e, r) => {
            if (e.params) {
              try {
                (P = r),
                  p.update({ encryptRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.ENCRYPT, success: !1, error: JSON.stringify(a) });
              }
              return !0;
            }
            r({ type: t.A.ENCRYPT, success: !1, error: 'Must provide valid params!' });
          },
          ae = (e, r) => {
            if (e.params) {
              try {
                (I = r),
                  p.update({ decryptRequest: e.params }).then(() => {
                    N();
                  });
              } catch (a) {
                r({ type: t.A.DECRYPT, success: !1, error: JSON.stringify(a) });
              }
              return !0;
            }
            r({ type: t.A.DECRYPT, success: !1, error: 'Must provide valid params!' });
          },
          oe = (e) => {
            p.getAndSetStorage().then((t) => {
              null !== t &&
                void 0 !== t &&
                t.popupWindowId &&
                ((0, a.lM)(t.popupWindowId), p.remove([...e, 'popupWindowId']));
            });
          },
          ie = (e) => {
            if (!y) throw Error('Missing callback!');
            try {
              y({
                type: t.A.CONNECT,
                success: !0,
                data: 'approved' === e.decision ? e.pubKeys.identityPubKey : void 0,
              });
            } catch (a) {
              var r;
              null === (r = y) || void 0 === r || r({ type: t.A.CONNECT, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.CONNECT]);
            }
            return !0;
          },
          ne = (e) => {
            if (!w) throw Error('Missing callback!');
            try {
              w({ type: t.A.SEND_BSV, success: !0, data: { txid: e.txid, rawtx: e.rawtx } });
            } catch (a) {
              var r;
              null === (r = w) || void 0 === r || r({ type: t.A.SEND_BSV, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.SEND_BSV]);
            }
            return !0;
          },
          se = (e) => {
            if (!k) throw Error('Missing callback!');
            try {
              k({ type: t.A.SEND_BSV20, success: !0, data: { txid: e.txid, rawtx: e.rawtx } });
            } catch (a) {
              var r;
              null === (r = k) || void 0 === r || r({ type: t.A.SEND_BSV20, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.SEND_BSV20]);
            }
            return !0;
          },
          ce = (e) => {
            if (!E) throw Error('Missing callback!');
            try {
              E({ type: t.A.TRANSFER_ORDINAL, success: !0, data: null === e || void 0 === e ? void 0 : e.txid });
            } catch (a) {
              var r;
              null === (r = E) ||
                void 0 === r ||
                r({ type: t.A.TRANSFER_ORDINAL, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.TRANSFER_ORDINAL]);
            }
            return !0;
          },
          le = (e) => {
            if (!O) throw Error('Missing callback!');
            try {
              O({
                type: t.A.GENERATE_TAGGED_KEYS,
                success: !0,
                data: {
                  address: null === e || void 0 === e ? void 0 : e.address,
                  pubKey: null === e || void 0 === e ? void 0 : e.pubKey,
                  tag: null === e || void 0 === e ? void 0 : e.tag,
                },
              });
            } catch (a) {
              var r;
              null === (r = O) ||
                void 0 === r ||
                r({ type: t.A.GENERATE_TAGGED_KEYS, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.GENERATE_TAGGED_KEYS]);
            }
            return !0;
          },
          ue = (e) => {
            if (!S) throw Error('Missing callback!');
            try {
              S({ type: t.A.PURCHASE_ORDINAL, success: !0, data: null === e || void 0 === e ? void 0 : e.txid });
            } catch (a) {
              var r;
              null === (r = S) ||
                void 0 === r ||
                r({ type: t.A.PURCHASE_ORDINAL, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.PURCHASE_ORDINAL]);
            }
            return !0;
          },
          de = (e) => {
            if (!x) throw Error('Missing callback!');
            try {
              x({
                type: t.A.SIGN_MESSAGE,
                success: !0,
                data: {
                  address: null === e || void 0 === e ? void 0 : e.address,
                  pubKey: null === e || void 0 === e ? void 0 : e.pubKey,
                  message: null === e || void 0 === e ? void 0 : e.message,
                  sig: null === e || void 0 === e ? void 0 : e.sig,
                  derivationTag: null === e || void 0 === e ? void 0 : e.derivationTag,
                },
              });
            } catch (a) {
              var r;
              null === (r = x) || void 0 === r || r({ type: t.A.SIGN_MESSAGE, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.SIGN_MESSAGE]);
            }
            return !0;
          },
          he = (e) => {
            if (!_) throw Error('Missing callback!');
            try {
              if (null !== e && void 0 !== e && e.error)
                return void _({
                  type: t.A.BROADCAST,
                  success: !1,
                  error: null === e || void 0 === e ? void 0 : e.error,
                });
              _({ type: t.A.BROADCAST, success: !0, data: null === e || void 0 === e ? void 0 : e.txid });
            } catch (a) {
              var r;
              null === (r = _) || void 0 === r || r({ type: t.A.BROADCAST, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.BROADCAST]);
            }
            return !0;
          },
          fe = (e) => {
            if (!A) throw Error('Missing callback!');
            try {
              var r;
              A({
                type: t.A.GET_SIGNATURES,
                success: !(null !== e && void 0 !== e && e.error),
                data: null !== (r = null === e || void 0 === e ? void 0 : e.sigResponses) && void 0 !== r ? r : [],
                error: null === e || void 0 === e ? void 0 : e.error,
              });
            } catch (o) {
              var a;
              null === (a = A) ||
                void 0 === a ||
                a({ type: t.A.GET_SIGNATURES, success: !1, error: JSON.stringify(o) });
            } finally {
              oe([t.A.GET_SIGNATURES]);
            }
            return !0;
          },
          pe = (e) => {
            if (!P) throw Error('Missing callback!');
            try {
              P({ type: t.A.ENCRYPT, success: !0, data: e.encryptedMessages });
            } catch (a) {
              var r;
              null === (r = P) || void 0 === r || r({ type: t.A.ENCRYPT, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.ENCRYPT]);
            }
            return !0;
          },
          be = (e) => {
            if (!I) throw Error('Missing callback!');
            try {
              I({ type: t.A.DECRYPT, success: !0, data: e.decryptedMessages });
            } catch (a) {
              var r;
              null === (r = I) || void 0 === r || r({ type: t.A.DECRYPT, success: !1, error: JSON.stringify(a) });
            } finally {
              oe([t.A.DECRYPT]);
            }
            return !0;
          };
        chrome.windows.onRemoved.addListener((e) => {
          e === v &&
            (y &&
              (y({ type: t.A.CONNECT, success: !1, error: 'User dismissed the request!' }),
              (y = null),
              p.remove('connectRequest')),
            w &&
              (w({ type: t.A.SEND_BSV, success: !1, error: 'User dismissed the request!' }),
              (w = null),
              p.remove('sendBsvRequest')),
            k &&
              (k({ type: t.A.SEND_BSV20, success: !1, error: 'User dismissed the request!' }),
              (w = null),
              p.remove('sendBsv20Request')),
            x &&
              (x({ type: t.A.SIGN_MESSAGE, success: !1, error: 'User dismissed the request!' }),
              (x = null),
              p.remove('signMessageRequest')),
            E &&
              (E({ type: t.A.TRANSFER_ORDINAL, success: !1, error: 'User dismissed the request!' }),
              (E = null),
              p.remove('transferOrdinalRequest')),
            S &&
              (S({ type: t.A.PURCHASE_ORDINAL, success: !1, error: 'User dismissed the request!' }),
              (S = null),
              p.remove('purchaseOrdinalRequest')),
            _ &&
              (_({ type: t.A.BROADCAST, success: !1, error: 'User dismissed the request!' }),
              (_ = null),
              p.remove('broadcastRequest')),
            A &&
              (A({ type: t.A.GET_SIGNATURES, success: !1, error: 'User dismissed the request!' }),
              (A = null),
              p.remove('getSignaturesRequest')),
            O &&
              (O({ type: t.A.GENERATE_TAGGED_KEYS, success: !1, error: 'User dismissed the request!' }),
              (O = null),
              p.remove('generateTaggedKeysRequest')),
            P &&
              (P({ type: t.A.ENCRYPT, success: !1, error: 'User dismissed the request!' }),
              (P = null),
              p.remove('encryptRequest')),
            I &&
              (I({ type: t.A.DECRYPT, success: !1, error: 'User dismissed the request!' }),
              (I = null),
              p.remove('decryptRequest')),
            (v = void 0),
            p.remove('popupWindowId'));
        });
      }
    })();
})();
//# sourceMappingURL=background.js.map
