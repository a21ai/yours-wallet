{"version":3,"file":"content.js","mappings":"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","sources":["inject.ts","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","content.ts"],"sourcesContent":["export var YoursEventName;\n(function (YoursEventName) {\n    YoursEventName[\"CONNECT\"] = \"connectRequest\";\n    YoursEventName[\"DISCONNECT\"] = \"disconnect\";\n    YoursEventName[\"IS_CONNECTED\"] = \"isConnected\";\n    YoursEventName[\"GET_PUB_KEYS\"] = \"getPubKeys\";\n    YoursEventName[\"GET_ADDRESSES\"] = \"getAddresses\";\n    YoursEventName[\"GET_NETWORK\"] = \"getNetwork\";\n    YoursEventName[\"GET_BALANCE\"] = \"getBalance\";\n    YoursEventName[\"GET_ORDINALS\"] = \"getOrdinals\";\n    YoursEventName[\"GET_BSV20S\"] = \"getBsv20s\";\n    YoursEventName[\"SEND_BSV\"] = \"sendBsvRequest\";\n    YoursEventName[\"SEND_BSV20\"] = \"sendBsv20Request\";\n    YoursEventName[\"TRANSFER_ORDINAL\"] = \"transferOrdinalRequest\";\n    YoursEventName[\"SIGN_MESSAGE\"] = \"signMessageRequest\";\n    YoursEventName[\"BROADCAST\"] = \"broadcastRequest\";\n    YoursEventName[\"GET_SIGNATURES\"] = \"getSignaturesRequest\";\n    YoursEventName[\"GET_SOCIAL_PROFILE\"] = \"getSocialProfile\";\n    YoursEventName[\"GET_PAYMENT_UTXOS\"] = \"getPaymentUtxos\";\n    YoursEventName[\"GET_EXCHANGE_RATE\"] = \"getExchangeRate\";\n    YoursEventName[\"PURCHASE_ORDINAL\"] = \"purchaseOrdinalRequest\";\n    YoursEventName[\"PURCHASE_BSV20\"] = \"purchaseOrdinalRequest\";\n    YoursEventName[\"GENERATE_TAGGED_KEYS\"] = \"generateTaggedKeysRequest\";\n    YoursEventName[\"GET_TAGGED_KEYS\"] = \"getTaggedKeys\";\n    YoursEventName[\"INSCRIBE\"] = \"sendBsvRequest\";\n    YoursEventName[\"ENCRYPT\"] = \"encryptRequest\";\n    YoursEventName[\"DECRYPT\"] = \"decryptRequest\";\n    YoursEventName[\"SIGNED_OUT\"] = \"signedOut\";\n    YoursEventName[\"USER_CONNECT_RESPONSE\"] = \"userConnectResponse\";\n    YoursEventName[\"SEND_BSV_RESPONSE\"] = \"sendBsvResponse\";\n    YoursEventName[\"SEND_BSV20_RESPONSE\"] = \"sendBsv20Response\";\n    YoursEventName[\"TRANSFER_ORDINAL_RESPONSE\"] = \"transferOrdinalResponse\";\n    YoursEventName[\"PURCHASE_ORDINAL_RESPONSE\"] = \"purchaseOrdinalResponse\";\n    YoursEventName[\"SIGN_MESSAGE_RESPONSE\"] = \"signMessageResponse\";\n    YoursEventName[\"BROADCAST_RESPONSE\"] = \"broadcastResponse\";\n    YoursEventName[\"GET_SIGNATURES_RESPONSE\"] = \"getSignaturesResponse\";\n    YoursEventName[\"GENERATE_TAGGED_KEYS_RESPONSE\"] = \"generateTaggedKeysResponse\";\n    YoursEventName[\"ENCRYPT_RESPONSE\"] = \"encryptResponse\";\n    YoursEventName[\"DECRYPT_RESPONSE\"] = \"decryptResponse\";\n    YoursEventName[\"SYNC_UTXOS\"] = \"syncUtxos\";\n    YoursEventName[\"QUEUE_STATUS_UPDATE\"] = \"queueStatusUpdate\";\n    YoursEventName[\"IMPORT_STATUS_UPDATE\"] = \"importStatusUpdate\";\n    YoursEventName[\"FETCHING_TX_STATUS_UPDATE\"] = \"fetchingTx\";\n    YoursEventName[\"BLOCK_HEIGHT_UPDATE\"] = \"blockHeightUpdate\";\n    YoursEventName[\"SWITCH_ACCOUNT\"] = \"switchAccount\";\n})(YoursEventName || (YoursEventName = {}));\nexport var CustomListenerName;\n(function (CustomListenerName) {\n    CustomListenerName[\"YOURS_EMIT_EVENT\"] = \"YoursEmitEvent\";\n    CustomListenerName[\"YOURS_REQUEST\"] = \"YoursRequest\";\n    CustomListenerName[\"YOURS_RESPONSE\"] = \"YoursResponse\";\n})(CustomListenerName || (CustomListenerName = {}));\nconst createYoursMethod = (type) => {\n    return async (params) => {\n        return new Promise((resolve, reject) => {\n            const messageId = `${type}-${Date.now()}-${Math.random()}`;\n            const requestEvent = new CustomEvent(CustomListenerName.YOURS_REQUEST, {\n                detail: { messageId, type, params },\n            });\n            function onResponse(e) {\n                const responseEvent = e;\n                const { detail } = responseEvent;\n                if (detail.type === type) {\n                    if (detail.success) {\n                        resolve(detail.data);\n                    }\n                    else {\n                        reject(detail.error);\n                    }\n                }\n            }\n            self.addEventListener(messageId, onResponse, { once: true });\n            self.dispatchEvent(requestEvent);\n        });\n    };\n};\nconst whitelistedEvents = [YoursEventName.SIGNED_OUT, YoursEventName.SWITCH_ACCOUNT]; // Whitelisted event names\nconst createYoursEventEmitter = () => {\n    const eventListeners = new Map(); // Object to store event listeners\n    const on = (eventName, callback) => {\n        // Check if the provided event name is in the whitelist\n        if (whitelistedEvents.includes(eventName)) {\n            if (!eventListeners.has(eventName)) {\n                eventListeners.set(eventName, []);\n            }\n            eventListeners.get(eventName)?.push(callback);\n        }\n        else {\n            console.error('Event name is not whitelisted:', eventName);\n        }\n    };\n    const removeListener = (eventName, callback) => {\n        const listeners = eventListeners.get(eventName);\n        if (listeners) {\n            eventListeners.set(eventName, listeners.filter((fn) => fn !== callback));\n        }\n    };\n    const emit = (eventName, params) => {\n        const listeners = eventListeners.get(eventName);\n        if (listeners) {\n            listeners.forEach((callback) => callback(params));\n        }\n    };\n    return {\n        on,\n        removeListener,\n        emit,\n    };\n};\nconst { on, removeListener, emit } = createYoursEventEmitter();\nconst provider = {\n    isReady: true,\n    on,\n    removeListener,\n    connect: createYoursMethod(YoursEventName.CONNECT),\n    disconnect: createYoursMethod(YoursEventName.DISCONNECT),\n    isConnected: createYoursMethod(YoursEventName.IS_CONNECTED),\n    getPubKeys: createYoursMethod(YoursEventName.GET_PUB_KEYS),\n    getAddresses: createYoursMethod(YoursEventName.GET_ADDRESSES),\n    getNetwork: createYoursMethod(YoursEventName.GET_NETWORK),\n    getBalance: createYoursMethod(YoursEventName.GET_BALANCE),\n    getOrdinals: createYoursMethod(YoursEventName.GET_ORDINALS),\n    getBsv20s: createYoursMethod(YoursEventName.GET_BSV20S),\n    sendBsv: createYoursMethod(YoursEventName.SEND_BSV),\n    sendBsv20: createYoursMethod(YoursEventName.SEND_BSV20),\n    transferOrdinal: createYoursMethod(YoursEventName.TRANSFER_ORDINAL),\n    signMessage: createYoursMethod(YoursEventName.SIGN_MESSAGE),\n    broadcast: createYoursMethod(YoursEventName.BROADCAST),\n    getSignatures: createYoursMethod(YoursEventName.GET_SIGNATURES),\n    getSocialProfile: createYoursMethod(YoursEventName.GET_SOCIAL_PROFILE),\n    getPaymentUtxos: createYoursMethod(YoursEventName.GET_PAYMENT_UTXOS),\n    getExchangeRate: createYoursMethod(YoursEventName.GET_EXCHANGE_RATE),\n    purchaseOrdinal: createYoursMethod(YoursEventName.PURCHASE_ORDINAL),\n    purchaseBsv20: createYoursMethod(YoursEventName.PURCHASE_BSV20),\n    generateTaggedKeys: createYoursMethod(YoursEventName.GENERATE_TAGGED_KEYS),\n    getTaggedKeys: createYoursMethod(YoursEventName.GET_TAGGED_KEYS),\n    inscribe: createYoursMethod(YoursEventName.INSCRIBE),\n    encrypt: createYoursMethod(YoursEventName.ENCRYPT),\n    decrypt: createYoursMethod(YoursEventName.DECRYPT),\n};\nif (typeof window !== 'undefined') {\n    window.panda = provider;\n    window.yours = provider;\n}\n// Utility function to filter and emit only whitelisted events\nconst emitWhitelistedEvent = (action, params) => {\n    if (whitelistedEvents.includes(action)) {\n        emit(action, params);\n    }\n};\nself.addEventListener(CustomListenerName.YOURS_EMIT_EVENT, (event) => {\n    const emitEvent = event;\n    const { action, params } = emitEvent.detail;\n    emitWhitelistedEvent(action, params);\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* global chrome */\nimport { CustomListenerName, YoursEventName, } from './inject';\nconsole.log('🌱 Yours Wallet Loaded');\nconst script = document.createElement('script');\nscript.src = chrome.runtime.getURL('inject.js');\n(document.head || document.documentElement).appendChild(script);\nself.addEventListener(CustomListenerName.YOURS_REQUEST, (e) => {\n    const { type, messageId, params: originalParams = {} } = e.detail;\n    if (!type)\n        return;\n    let params = {};\n    if (type === YoursEventName.CONNECT) {\n        params.appName =\n            document.title ||\n                document.querySelector('meta[name=\"application-name\"]')?.content ||\n                'Unknown';\n        params.appIcon =\n            document.querySelector('link[rel=\"apple-touch-icon\"]')?.href ||\n                document.querySelector('link[rel=\"icon\"]')?.href ||\n                '';\n    }\n    if (Array.isArray(originalParams)) {\n        params.data = originalParams;\n    }\n    else if (typeof originalParams === 'object') {\n        params = { ...params, ...originalParams };\n    }\n    params.domain = window.location.hostname;\n    chrome.runtime.sendMessage({ action: type, params }, buildResponseCallback(messageId));\n});\nconst buildResponseCallback = (messageId) => {\n    return (response) => {\n        const responseEvent = new CustomEvent(messageId, { detail: response });\n        self.dispatchEvent(responseEvent);\n    };\n};\nchrome.runtime.onMessage.addListener((message) => {\n    const { type, action, params } = message;\n    if (type === CustomListenerName.YOURS_EMIT_EVENT) {\n        const event = new CustomEvent(type, { detail: { action, params } });\n        self.dispatchEvent(event);\n    }\n});\n"],"names":["YoursEventName","CustomListenerName","createYoursMethod","type","async","Promise","resolve","reject","messageId","Date","now","Math","random","requestEvent","CustomEvent","YOURS_REQUEST","detail","params","self","addEventListener","e","responseEvent","success","data","error","once","dispatchEvent","whitelistedEvents","SIGNED_OUT","SWITCH_ACCOUNT","on","removeListener","emit","createYoursEventEmitter","eventListeners","Map","eventName","callback","_eventListeners$get","includes","has","set","get","push","console","listeners","filter","fn","forEach","provider","isReady","connect","CONNECT","disconnect","DISCONNECT","isConnected","IS_CONNECTED","getPubKeys","GET_PUB_KEYS","getAddresses","GET_ADDRESSES","getNetwork","GET_NETWORK","getBalance","GET_BALANCE","getOrdinals","GET_ORDINALS","getBsv20s","GET_BSV20S","sendBsv","SEND_BSV","sendBsv20","SEND_BSV20","transferOrdinal","TRANSFER_ORDINAL","signMessage","SIGN_MESSAGE","broadcast","BROADCAST","getSignatures","GET_SIGNATURES","getSocialProfile","GET_SOCIAL_PROFILE","getPaymentUtxos","GET_PAYMENT_UTXOS","getExchangeRate","GET_EXCHANGE_RATE","purchaseOrdinal","PURCHASE_ORDINAL","purchaseBsv20","PURCHASE_BSV20","generateTaggedKeys","GENERATE_TAGGED_KEYS","getTaggedKeys","GET_TAGGED_KEYS","inscribe","INSCRIBE","encrypt","ENCRYPT","decrypt","DECRYPT","window","panda","yours","YOURS_EMIT_EVENT","event","emitEvent","action","emitWhitelistedEvent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","log","script","document","createElement","src","chrome","runtime","getURL","head","documentElement","appendChild","originalParams","_document$querySelect","_document$querySelect2","_document$querySelect3","appName","title","querySelector","content","appIcon","href","Array","isArray","domain","location","hostname","sendMessage","buildResponseCallback","response","onMessage","addListener","message"],"sourceRoot":""}