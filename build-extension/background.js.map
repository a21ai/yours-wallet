{"version":3,"file":"background.js","mappings":"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Y,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,YAGVC,EAAS,CACX,CAAI,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,QAAY,UAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YACxC,CAAI,WAAY,WAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,SAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,UAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,UAAY,WAAY,SAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,WAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,YACxC,CAAI,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,SAAY,WAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,UACpC,UAAY,SAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,UACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,QAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,YACxC,CAAI,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,UAAY,SACpC,WAAY,SAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,SAAY,SACpC,WAAY,WAAY,WAAY,WACpC,UAAY,UAAY,WAAY,UACpC,WAAY,WAAY,SAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,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ACHpL,EAAG,qCAEL,CACEoL,EAAG,oCACHpL,EAAG,qCAIPo7D,MAAM,EACNl3B,EAAG,CACD,mEACA,mEAryBgB,CAClB8yB,QAAS,CACPC,KAAM,EACNC,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINC,IAAK,CACH/M,IAAK,EACL8M,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,yEAmCR9+D,KAAKm4C,EAAI,IAAImI,EAAUuiB,EAAK1qB,EAAG,IAG/Bn4C,KAAKygD,IAAM,IAAI+Q,EAAiBqR,EAAKpR,OAGrCzxD,KAAKu+D,KAAO,IAAIje,EAAU,GAAGkO,MAAMxuD,KAAKygD,KACxCzgD,KAAK4xD,IAAM,IAAItR,EAAU,GAAGkO,MAAMxuD,KAAKygD,KACvCzgD,KAAK+hE,IAAM,IAAIzhB,EAAU,GAAGkO,MAAMxuD,KAAKygD,KAGvCzgD,KAAK4S,EAAI,IAAI0tC,EAAUuiB,EAAKjwD,EAAG,IAC/B5S,KAAK8rC,EAAI+mB,GAAM9C,SAAS8S,EAAK/2B,EAAG+2B,EAAKG,MAGrChjE,KAAK6gE,QAAU,IAAI53D,MAAM,GACzBjJ,KAAK8gE,QAAU,IAAI73D,MAAM,GACzBjJ,KAAK+gE,QAAU,IAAI93D,MAAM,GACzBjJ,KAAKuhE,QAAU,IAAIt4D,MAAM,GAEzBjJ,KAAKsgE,WAAatgE,KAAK4S,EAAEuwC,YACzBnjD,KAAK00D,KAAO10D,KAAK4S,EAAE47C,MAAMxuD,KAAKygD,KAC9BzgD,KAAKgT,EAAI,IAAIstC,EAAUuiB,EAAK7vD,EAAG,IAAIw7C,MAAMxuD,KAAKygD,KAC9CzgD,KAAK4H,EAAI,IAAI04C,EAAUuiB,EAAKj7D,EAAG,IAAI4mD,MAAMxuD,KAAKygD,KAC9CzgD,KAAKgiE,KAAOhiE,KAAK+hE,IAAIrS,UAErB1vD,KAAKiiE,MAAqC,IAA7BjiE,KAAKgT,EAAE27C,UAAUjB,KAAK,GACnC1tD,KAAKkiE,OAAmD,IAA1CliE,KAAKgT,EAAE27C,UAAUp8B,IAAIvyB,KAAKm4C,GAAGuV,MAAM,GAGjD1tD,KAAKkgE,KAAOlgE,KAAKijE,iBAAiBJ,GAClC7iE,KAAKyhE,YAAc,IAAIx4D,MAAM,GAC7BjJ,KAAK2hE,YAAc,IAAI14D,MAAM,EAC/B,CAEAg6D,gBAAAA,CAAkBJ,GAMhB,IAAK7iE,KAAKiiE,OAA6B,IAApBjiE,KAAKm4C,EAAEsK,MAAM,GAAY,OAG5C,IAAIkc,EACAmE,EAuBAC,EAtBJ,QAAkB/9D,IAAd69D,EAAKlE,KACPA,EAAO,IAAIre,EAAUuiB,EAAKlE,KAAM,IAAInQ,MAAMxuD,KAAKygD,SAC1C,CACL,MAAMyiB,EAAQljE,KAAKmjE,cAAcnjE,KAAKm4C,GAEtCwmB,EAAOuE,EAAM,GAAGtiB,IAAIsiB,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,GACrDvE,EAAOA,EAAKnQ,MAAMxuD,KAAKygD,IACzB,CACA,QAAoBz7C,IAAhB69D,EAAKC,OACPA,EAAS,IAAIxiB,EAAUuiB,EAAKC,OAAQ,QAC/B,CAEL,MAAMM,EAAUpjE,KAAKmjE,cAAcnjE,KAAK4S,GACoB,IAAxD5S,KAAK8rC,EAAE1c,IAAIg0C,EAAQ,IAAIz9C,EAAEi7B,IAAI5gD,KAAK8rC,EAAEnmB,EAAEwpC,OAAOwP,IAC/CmE,EAASM,EAAQ,IAEjBN,EAASM,EAAQ,GACjB5Q,GAAMt+C,OAA2D,IAApDlU,KAAK8rC,EAAE1c,IAAI0zC,GAAQn9C,EAAEi7B,IAAI5gD,KAAK8rC,EAAEnmB,EAAEwpC,OAAOwP,KAE1D,CAeA,OAVEoE,EADwB,kBAAfF,EAAKE,OAAqC,OAAfF,EAAKE,MACjCF,EAAKE,MAAMt9D,KAAI,SAAU49D,GAC/B,MAAO,CACLrwD,EAAG,IAAIstC,EAAU+iB,EAAIrwD,EAAG,IACxBpL,EAAG,IAAI04C,EAAU+iB,EAAIz7D,EAAG,IAE5B,IAEQ5H,KAAKsjE,cAAcR,GAGtB,CACLnE,OACAmE,SACAC,QAEJ,CAEAI,aAAAA,CAAe7xD,GAIb,MAAMmvC,EAAMnvC,IAAQtR,KAAKm4C,EAAIn4C,KAAKygD,IAAM,IAAIyR,EAAiB5gD,GACvD0wD,EAAO,IAAI1hB,EAAU,GAAGkO,MAAM/N,GAAKiP,UACnC6T,EAAQvB,EAAKrS,SAEbx9C,EAAI,IAAImuC,EAAU,GAAGkO,MAAM/N,GAAKkP,SAASF,UAAUN,OAAO6S,GAIhE,MAAO,CAFIuB,EAAM1U,OAAO18C,GAAGw8C,UAChB4U,EAAMxU,OAAO58C,GAAGw8C,UAE7B,CAEA2U,aAAAA,CAAeR,GAEb,MAAMU,EAAWxjE,KAAK4S,EAAE64C,MAAMnyD,KAAK4nB,MAAMlhB,KAAK4S,EAAEuwC,YAAc,IAI9D,IAQIsC,EACA8B,EAEA3B,EACA9f,EAEAigB,EACAhgB,EAEA09B,EAEAzqB,EACArzB,EApBArL,EAAIwoD,EACJ7pB,EAAIj5C,KAAK4S,EAAEwP,QACX08B,EAAK,IAAIwB,EAAU,GACnBvB,EAAK,IAAIuB,EAAU,GACnBrqB,EAAK,IAAIqqB,EAAU,GACnBtB,EAAK,IAAIsB,EAAU,GAanB3qC,EAAI,EAGR,KAAqB,IAAd2E,EAAEozC,KAAK,IAAU,CACtB,MAAMnV,EAAIU,EAAEoT,IAAI/xC,GAChB0+B,EAAIC,EAAE1mB,IAAIgmB,EAAEnpB,IAAI9U,IAChBqL,EAAIsQ,EAAG1D,IAAIgmB,EAAEnpB,IAAI0vB,IACjB,MAAM5xB,EAAI8xB,EAAGzsB,IAAIgmB,EAAEnpB,IAAI2vB,IAEvB,GAAkB,kBAAP6G,GAAmB5M,EAAE4H,IAAI4iB,GAAY,EAC9C/d,EAAKge,EAAMzf,MACXuD,EAAKzI,EACL8G,EAAK5M,EAAEgL,MACPle,EAAKngB,OACA,GAAkB,kBAAPigC,GAA2B,MAANjwC,EACrC,MAEF8tD,EAAQzqB,EAERC,EAAI3+B,EACJA,EAAI0+B,EACJ/iB,EAAK6oB,EACLA,EAAKn5B,EACLq5B,EAAKD,EACLA,EAAK7xB,CACP,CACA64B,EAAK/M,EAAEgL,MACPje,EAAKpgB,EAEL,MAAM+9C,EAAO9d,EAAG+E,MAAM5zC,IAAI+uB,EAAG6kB,OAiB7B,OAhBa5E,EAAG4E,MAAM5zC,IAAIgvB,EAAG4kB,OACpB/J,IAAI8iB,IAAS,IACpB3d,EAAKN,EACL1f,EAAKwhB,GAIa,IAAhB3B,EAAGpF,WACLoF,EAAKA,EAAG5B,MACRle,EAAKA,EAAGke,OAEU,IAAhB+B,EAAGvF,WACLuF,EAAKA,EAAG/B,MACRje,EAAKA,EAAGie,OAGH,CACL,CAAEhxC,EAAG4yC,EAAIh+C,EAAGk+B,GACZ,CAAE9yB,EAAG+yC,EAAIn+C,EAAGm+B,GAEhB,CAEA67B,UAAAA,CAAY7pB,GACV,MAAMgrB,EAAQ/iE,KAAKkgE,KAAK6C,MAClBY,EAAKZ,EAAM,GACXa,EAAKb,EAAM,GAEXc,EAAKD,EAAGh8D,EAAEwnB,IAAI2oB,GAAG2U,SAAS1sD,KAAK4S,GAC/BkxD,EAAKH,EAAG/7D,EAAEo8C,MAAM50B,IAAI2oB,GAAG2U,SAAS1sD,KAAK4S,GAErCmxD,EAAKF,EAAGz0C,IAAIu0C,EAAG3wD,GACf2sD,EAAKmE,EAAG10C,IAAIw0C,EAAG5wD,GACfgxD,EAAKH,EAAGz0C,IAAIu0C,EAAG/7D,GACfq8D,EAAKH,EAAG10C,IAAIw0C,EAAGh8D,GAKrB,MAAO,CAAE83D,GAFE3nB,EAAExlB,IAAIwxC,GAAIxxC,IAAIotC,GAEZ3f,GADFgkB,EAAGjtD,IAAIktD,GAAIjgB,MAExB,CAEAgb,QAAAA,CAAUkF,GACR,GAAIA,EAAMzG,IAAO,OAAO,EAExB,MAAM93C,EAAIu+C,EAAMv+C,EACVuH,EAAIg3C,EAAMh3C,EAEV8lC,EAAKhzD,KAAKgT,EAAEm8C,OAAOxpC,GACnBw+C,EAAMx+C,EAAE2pC,SAASH,OAAOxpC,GAAGmpC,QAAQkE,GAAIlE,QAAQ9uD,KAAK4H,GAC1D,OAA2C,IAApCslB,EAAEoiC,SAASN,QAAQmV,GAAKzW,KAAK,EACtC,ECvnCY,MAAO0W,GAInBprB,EAKA7mC,EAgBA,cAAOurD,CAASxjE,EAAyB4/B,GACvC,MAAMqiC,EAAYA,CAACxiD,EAAKw+B,KACtB,MAAMksB,EAAU1qD,EAAIw+B,EAAEmsB,SACtB,GAAyB,KAAV,IAAVD,GACH,OAAOA,EAEP,MAAM,IAAI1/D,MAAM,4BAClB,EASFzK,EAAOihD,GAAQjhD,EAAM4/B,GAErB,MAAMqe,EAAI,IARV,MACEmsB,MACA7kE,WAAAA,GACEO,KAAKskE,MAAQ,CACf,GAKF,GAAwB,KAApBpqE,EAAKi+C,EAAEmsB,SACT,MAAM,IAAI3/D,MAAM,sCAGlB,GADYw3D,EAAUjiE,EAAMi+C,GACjBA,EAAEmsB,QAAWpqE,EAAKmN,OAC3B,MAAM,IAAI1C,MAAM,yBAElB,GAAwB,IAApBzK,EAAKi+C,EAAEmsB,SACT,MAAM,IAAI3/D,MAAM,yBAElB,MAAMysD,EAAO+K,EAAUjiE,EAAMi+C,GAC7B,IAAIa,EAAI9+C,EAAKoT,MAAM6qC,EAAEmsB,MAAOlT,EAAOjZ,EAAEmsB,OAErC,GADAnsB,EAAEmsB,OAASlT,EACa,IAApBl3D,EAAKi+C,EAAEmsB,SACT,MAAM,IAAI3/D,MAAM,yBAElB,MAAM4/D,EAAOpI,EAAUjiE,EAAMi+C,GAC7B,GAAIj+C,EAAKmN,SAAWk9D,EAAOpsB,EAAEmsB,MAC3B,MAAM,IAAI3/D,MAAM,qCAElB,IAAIwN,EAAIjY,EAAKoT,MAAM6qC,EAAEmsB,MAAOC,EAAOpsB,EAAEmsB,OACrC,GAAa,IAATtrB,EAAE,GAAU,CACd,GAAsB,KAAV,IAAPA,EAAE,IAGL,MAAM,IAAIr0C,MAAM,oCAFhBq0C,EAAIA,EAAE1rC,MAAM,EAIhB,CACA,GAAa,IAAT6E,EAAE,GAAU,CACd,GAAsB,KAAV,IAAPA,EAAE,IAGL,MAAM,IAAIxN,MAAM,oCAFhBwN,EAAIA,EAAE7E,MAAM,EAIhB,CAEA,OAAO,IAAI82D,GACT,IAAI9jB,EAAUtH,GACd,IAAIsH,EAAUnuC,GAElB,CAoBA,kBAAOqyD,CAAatqE,EAAyB4/B,GAE3C,GAAoB,MADpB5/B,EAAOihD,GAAQjhD,EAAM4/B,IACZzyB,OACP,MAAM,IAAI1C,MAAM,6BAElB,MAAM8/D,EAAcvqE,EAAK,GACzB,GAAIuqE,EAAc,IAAMA,GAAe,GACrC,MAAM,IAAI9/D,MAAM,wBAElB,OAAO,IAAIy/D,GACT,IAAI9jB,EAAUpmD,EAAKoT,MAAM,EAAG,KAC5B,IAAIgzC,EAAUpmD,EAAKoT,MAAM,GAAI,KAEjC,CAcA7N,WAAAA,CAAau5C,EAAc7mC,GACzBnS,KAAKg5C,EAAIA,EACTh5C,KAAKmS,EAAIA,CACX,CAmBAuyD,MAAAA,CAAQ/jD,EAAwBtc,EAAgBy1B,GAC9C,MAAM6qC,EAAU,IAAIrkB,EAAUv6B,GAAOpF,EAAKmZ,GAAM,IAChD,OAAO4qC,GAAOC,EAAS3kE,KAAMqE,EAC/B,CAiBAuJ,QAAAA,CAAUksB,GACR,OAAO95B,KAAK4kE,MAAM9qC,EACpB,CAgBA8qC,KAAAA,CAAO9qC,GACL,MAAM+qC,EAAkBA,CAACxqD,EAAKnF,KAC5B,KAAIA,EAAM,KAGR,MAAM,IAAIvQ,MAAM,sBAFhB0V,EAAI/e,KAAK4Z,EAGX,EAGI4vD,EAAanrD,IACjB,IAAIhE,EAAI,EACR,MAAMT,EAAMyE,EAAItS,OAAS,EACzB,KAAmB,IAAXsS,EAAIhE,IAAsC,KAAV,IAAbgE,EAAIhE,EAAI,KAAqBA,EAAIT,GAC1DS,IAEF,OAAU,IAANA,EACKgE,EAEFA,EAAIrM,MAAMqI,EAAE,EAGrB,IAAIqjC,EAAIh5C,KAAKg5C,EAAEmC,UACXhpC,EAAInS,KAAKmS,EAAEgpC,UAUf,IAPsB,KAAV,IAAPnC,EAAE,MAAoBA,EAAI,CAAC,GAAG7rB,OAAO6rB,IAEpB,KAAV,IAAP7mC,EAAE,MAAoBA,EAAI,CAAC,GAAGgb,OAAOhb,IAE1C6mC,EAAI8rB,EAAU9rB,GACd7mC,EAAI2yD,EAAU3yD,GAEG,IAATA,EAAE,IAA+B,KAAV,IAAPA,EAAE,KACxBA,EAAIA,EAAE7E,MAAM,GAEd,IAAI+M,EAAM,CAAC,GACXwqD,EAAgBxqD,EAAK2+B,EAAE3xC,QACvBgT,EAAMA,EAAI8S,OAAO6rB,GACjB3+B,EAAI/e,KAAK,GACTupE,EAAgBxqD,EAAKlI,EAAE9K,QACvB,MAAM09D,EAAW1qD,EAAI8S,OAAOhb,GAC5B,IAAIsE,EAAM,CAAC,IAGX,OAFAouD,EAAgBpuD,EAAKsuD,EAAS19D,QAC9BoP,EAAMA,EAAI0W,OAAO43C,GACL,QAARjrC,EACKg2B,GAAMr5C,GACI,WAARqjB,EACFghC,GAASrkD,GAETA,CAEX,CAgBAuuD,SAAAA,CAAWC,EAAkBC,EAAqBprC,GAChD,GAAImrC,EAAW,GAAKA,EAAW,EAAG,MAAM,IAAItgE,MAAM,0BAClD,GAA0B,mBAAfugE,EAA0B,MAAM,IAAIvgE,MAAM,4BACrD,IAAI8/D,EAAc,GAAKQ,EACnBC,IACFT,GAAe,GAEjB,IAAIpqD,EAAM,CAACoqD,GAGX,OAFApqD,EAAMA,EAAI8S,OAAOntB,KAAKg5C,EAAEmC,QAAQ,KAAM,KACtC9gC,EAAMA,EAAI8S,OAAOntB,KAAKmS,EAAEgpC,QAAQ,KAAM,KAC1B,QAARrhB,EACKg2B,GAAMz1C,GACI,WAARyf,EACFghC,GAASzgD,GAETA,CAEX,CAeA8qD,gBAAAA,CAAkBF,EAAkBlrE,GAClC,MAAMi/C,EAAIh5C,KAAKg5C,EACT7mC,EAAInS,KAAKmS,EAGTisD,KAAuB,EAAX6G,GAIZG,EAAcH,GAAY,EAE1B3S,EAAQ,IAAIE,GACZ5/C,EAAI0/C,EAAM1/C,EACVkJ,EAAIw2C,EAAMxmB,EAGVnmB,EAAIy/C,EAAcpsB,EAAEjiC,IAAInE,GAAKomC,EAC7BsB,EAAIuY,GAAM8K,MAAMh4C,EAAGy4C,GAIzB,IADW9jB,EAAElrB,IAAIxc,GACTggD,aACN,MAAM,IAAIjuD,MAAM,yBAIlB,MAAM0gE,EAAOtrE,EAAEiqD,MAAMyI,KAAK75C,GAIpB0yD,EAAOtsB,EAAE2U,KAAK/6C,GAGd2yD,EAAQD,EAAKl2C,IAAIjd,GAAGs6C,KAAK75C,GACzB4yD,EAAWF,EAAKl2C,IAAIi2C,GAAM5Y,KAAK75C,GAC/BynC,EAAIv+B,EAAEsT,IAAIo2C,GAAUzuD,IAAIujC,EAAElrB,IAAIm2C,IAE9BE,EAAS,IAAIC,GAAUrrB,GAG7B,OAFAorB,EAAOzG,WAEAyG,CACT,CAeAE,uBAAAA,CAAyBC,EAAmBjB,GAC1C,IAAK,IAAIM,EAAW,EAAGA,EAAW,EAAGA,IAAY,CAC/C,IAAIY,EACJ,IACEA,EAAS7lE,KAAKmlE,iBAAiBF,EAAUN,EAC3C,CAAE,MAAO5qE,GACP,QACF,CACA,GAAI6rE,EAAOrX,GAAGsX,GACZ,OAAOZ,CAEX,CACA,MAAM,IAAItgE,MAAM,uCAClB,ECzWY,MAAOmhE,GACnBr+B,EACAoT,EAEAp7C,WAAAA,CAAaknB,EAA4BtV,GAIvC,GAHAsV,EAAUw0B,GAAQx0B,EAAS,OAC3BtV,EAAQ8pC,GAAQ9pC,EAAO,OAEnBsV,EAAQtf,OAAS,GACnB,MAAM,IAAI1C,MAAM,2CAElB,MAAMohE,EAAOp/C,EAAQwG,OAAO9b,GAE5BrR,KAAKynC,EAAI,IAAIx+B,MAAM,IACnBjJ,KAAK66C,EAAI,IAAI5xC,MAAM,IACnB,IAAK,IAAI0M,EAAI,EAAGA,EAAI,GAAIA,IACtB3V,KAAKynC,EAAE9xB,GAAK,EACZ3V,KAAK66C,EAAEllC,GAAK,EAEd3V,KAAKsE,OAAOyhE,EACd,CAWAlsD,IAAAA,GACE,OAAO,IAAI2/C,GAAWx5D,KAAKynC,EAC7B,CAaAnjC,MAAAA,CAAQyhE,GACN,IAAIC,EAAOhmE,KAAK6Z,OACbvV,OAAOtE,KAAK66C,GACZv2C,OAAO,CAAC,SACEU,IAAT+gE,IAAsBC,EAAOA,EAAK1hE,OAAOyhE,IAC7C/lE,KAAKynC,EAAIu+B,EAAKxvD,SACdxW,KAAK66C,EAAI76C,KAAK6Z,OAAOvV,OAAOtE,KAAK66C,GAAGrkC,cACvBxR,IAAT+gE,IAEJ/lE,KAAKynC,EAAIznC,KAAK6Z,OACXvV,OAAOtE,KAAK66C,GACZv2C,OAAO,CAAC,IACRA,OAAOyhE,GACPvvD,SACHxW,KAAK66C,EAAI76C,KAAK6Z,OAAOvV,OAAOtE,KAAK66C,GAAGrkC,SACtC,CAaAyvD,QAAAA,CAAU/wD,GACR,IAAIyjB,EAAO,GACX,KAAOA,EAAKtxB,OAAS6N,GACnBlV,KAAK66C,EAAI76C,KAAK6Z,OAAOvV,OAAOtE,KAAK66C,GAAGrkC,SACpCmiB,EAAOA,EAAKxL,OAAOntB,KAAK66C,GAG1B,MAAMpkC,EAAMkiB,EAAKrrB,MAAM,EAAG4H,GAE1B,OADAlV,KAAKsE,SACEwrD,GAAMr5C,EACf,EC3EF,SAASyvD,GAAavlD,EAAgBwlD,GAAwC,IAAnB7T,EAAKhqD,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAG,IAAIkqD,GACrE,MAAM/E,EAA2B,EAAnB9sC,EAAIM,aAAmBqxC,EAAM1/C,EAAEuwC,YAE7C,OADIsK,EAAQ,GAAK9sC,EAAIsqC,OAAOwC,IACvB0Y,GAAaxlD,EAAIigC,IAAI0R,EAAM1/C,IAAM,EAC7B+N,EAAI4R,IAAI+/B,EAAM1/C,GAEd+N,CAEX,CAiBO,MAAMylD,GAAO,SAACzlD,EAAgBtc,GAAyF,IAAzEgiE,EAAA/9D,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAA4Bg+D,EAA8Bh+D,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAC7G,GAAsB,oBAAXkD,OAAuB,CAEhC,MAAMq2D,EAAOr2D,OAAO,GACd0pD,EAAM1pD,OAAO,GACb65D,EAAM75D,OAAO,GACb0K,EAAI1K,OACR,sEAEIiwC,EAAIjwC,OACR,sEAQI4T,EAAI,CAAE6J,EANDzd,OACT,sEAKiBglB,EAHRhlB,OACT,uEAKI+iC,EAAI/iC,OAAO,KAAOyY,EAAI/S,SAAS,KAC/B9H,EAAIoC,OAAO,KAAO7D,EAAIuJ,SAAS,KAGrC,GAAI9H,GAAKy4D,GAAQz4D,GAAK8M,EACpB,MAAM,IAAIjO,MAAM,uBAIlB,SAAS4hE,EAAe1wD,EAAexO,GACrC,MAAM6X,EAAMrJ,EAAMjI,SAAS,IAAI6T,SAAkB,EAATpa,EAAY,KAC9C6L,EAAQ,IAAID,WAAW5L,GAC7B,IAAK,IAAIsO,EAAI,EAAGA,EAAItO,EAAQsO,IAC1BzC,EAAMyC,GAAK8P,SAASvG,EAAI+L,OAAW,EAAJtV,EAAO,GAAI,IAE5C,OAAOzC,CACT,CAGA,MAAMA,EAAQ,GACRszD,EAAOD,EAAczgE,EAAGoN,GAGxB7B,EAAQk1D,EAAct7B,EAAG/3B,GAGzBuzD,EAAO,IAAIX,GAAK78D,MAAMsY,KAAKilD,GAAOv9D,MAAMsY,KAAKlQ,IAG7Cq1D,EAAM9zD,EAAIg/C,EAEhB,IAAI+U,EAAO,EAGX,SAAST,EAAanuB,EAAWnlC,GAAoC,IAAzBuzD,IAAA79D,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,KAAAA,UAAA,GAC1C,MAEMmlD,EAFa1V,EAAEnqC,SAAS,GAAGvG,OACduL,EAAEhF,SAAS,GAAGvG,OAKjC,OAHIomD,EAAQ,IACV1V,IAAS7vC,OAAOulD,KAEb0Y,GAAapuB,GAAKnlC,EACdmlC,EAAInlC,EAEJmlC,CAEX,CAEA,SAAS6uB,IACP,GAAuB,oBAAZN,EAAwB,CAEjC,MAEMO,EAFOP,EAAQK,GAEF/4D,SAAS,IAC5B,OAAO1F,OAAO,KAAO2+D,EACvB,CAAO,GAAIvmB,EAAUI,KAAK4lB,GAAU,CAElC,MAAMO,EAAQP,EAAQ14D,SAAS,IAC/B,OAAO1F,OAAO,KAAO2+D,EACvB,CAAO,CAEL,MAAMC,EAAQL,EAAKR,SAAS/yD,GAC5B,OAAOhL,OAAO,KAAO4+D,EACvB,CACF,CAGA,SAASnlB,EAAK3uC,EAAW8W,GACvB,OAAS9W,EAAI8W,EAAKA,GAAKA,CACzB,CAEA,SAASi9C,EAAQ/zD,EAAW8W,GAC1B,IAAIk9C,EAAKpV,EACLqV,EAAK1I,EACL7lD,EAAMipC,EAAI3uC,EAAG8W,GACb0jB,EAAO1jB,EACX,KAAOpR,EAAMk5C,GAAK,CAChB,MAAM5Y,EAAIxL,EAAO90B,EACXwuD,EAAKD,EAAKD,EAAKhuB,EACfmuB,EAAO35B,EAAO90B,EAAMsgC,EAC1BiuB,EAAKD,EACLA,EAAKE,EACL15B,EAAO90B,EACPA,EAAMyuD,CACR,CACA,OAAOxlB,EAAIqlB,EAAIl9C,EACjB,CAEA,SAASs9C,EACPhtB,EACAC,GAEA,GAAU,OAAND,EAAY,OAAOC,EACvB,GAAU,OAANA,EAAY,OAAOD,EAEvB,GAAIA,EAAEz0B,IAAM00B,EAAE10B,GAAKy0B,EAAEltB,IAAMy0B,GAAKtH,EAAEntB,EAAGirB,GACnC,OAAO,KAGT,IAAIruB,EACJ,GAAIswB,EAAEz0B,IAAM00B,EAAE10B,GAAKy0B,EAAEltB,IAAMmtB,EAAEntB,EAAG,CAE9B,GAAIktB,EAAEltB,IAAMqxC,EACV,OAAO,KAET,MAAM8I,EAAY1lB,EAAIz5C,OAAO,GAAKkyC,EAAEz0B,EAAIy0B,EAAEz0B,EAAGwyB,GAE7CruB,EAAI63B,EAAI0lB,EADYN,EAAOhF,EAAM3nB,EAAEltB,EAAGirB,GACLA,EACnC,KAAO,CACL,MAAMkvB,EAAY1lB,EAAItH,EAAEntB,EAAIktB,EAAEltB,EAAGirB,GAEjCruB,EAAI63B,EAAI0lB,EADYN,EAAO1sB,EAAE10B,EAAIy0B,EAAEz0B,EAAGwyB,GACLA,EACnC,CAEA,MAAMmvB,EAAK3lB,EAAI73B,EAAIA,EAAIswB,EAAEz0B,EAAI00B,EAAE10B,EAAGwyB,GAGlC,MAAO,CAAExyB,EAAG2hD,EAAIp6C,EAFLy0B,EAAI73B,GAAKswB,EAAEz0B,EAAI2hD,GAAMltB,EAAEltB,EAAGirB,GAGvC,CAEA,SAASovB,EACPxvB,EACAqC,GAEA,IAAIniB,EAAImiB,EACJC,EAAI,KAER,KAAOtC,EAAIwmB,GACLxmB,EAAIgqB,IAAQnQ,IACdvX,EAAI+sB,EAAS/sB,EAAGpiB,IAElBA,EAAImvC,EAASnvC,EAAGA,GAChB8f,IAAM6Z,EAER,OAAOvX,CACT,CAEA,OAAa,CACX,IAAItC,EAAI6uB,IAMR,GALAD,GAAQ,EAGR5uB,EAAImuB,EAAYnuB,EAAGnlC,GAAG,GAElBmlC,GAAK6Z,GAAO7Z,GAAK2uB,EAAK,CACxB,GAAIJ,aAAmBhmB,EACrB,MAAM,IAAI37C,MACR,wEAGF,QAEJ,CAEA,MAAM21C,EAAIitB,EAAUxvB,EAAGj8B,GACvB,GAAU,OAANw+B,EAAY,CACd,GAAIgsB,aAAmBhmB,EACrB,MAAM,IAAI37C,MACR,6GAGF,QAEJ,CAEA,MAAMq0C,EAAI2I,EAAIrH,EAAE30B,EAAG/S,GACnB,GAAIomC,IAAMulB,EAAM,CACd,GAAI+H,aAAmBhmB,EACrB,MAAM,IAAI37C,MACR,0GAGF,QAEJ,CAEA,MAAM6iE,EAAOT,EAAOhvB,EAAGnlC,GACjB60D,EAAK9lB,EAAI3I,EAAIlzC,EAAG8M,GACtB,IAAIT,EAAIwvC,EAAI6lB,GAAQv8B,EAAIw8B,GAAK70D,GAC7B,GAAIT,IAAMosD,EAAM,CACd,GAAI+H,aAAmBhmB,EACrB,MAAM,IAAI37C,MACR,8FAGF,QAEJ,CAGI0hE,GAAal0D,EAAIS,EAAImvD,IACvB5vD,EAAIS,EAAIT,GAIV,MAAMu1D,EAAO,IAAIpnB,EAAUtH,EAAEprC,SAAS,IAAK,IACrC+5D,EAAO,IAAIrnB,EAAUnuC,EAAEvE,SAAS,IAAK,IAC3C,OAAO,IAAIw2D,GAAUsD,EAAMC,EAC7B,CACF,KAAO,CACL,MAAMrV,EAAQ,IAAIE,GAClB7xC,EAAMulD,GAAYvlD,GAGlB,MAAMzN,EAAQo/C,EAAM1/C,EAAEqO,aAChBulD,EAAOniE,EAAI82C,QAAQ,KAAMjoC,GAGzB7B,EAAQsP,EAAIw6B,QAAQ,KAAMjoC,GAG1BuzD,EAAO,IAAIX,GAAKU,EAAMn1D,GAGtBq1D,EAAMpU,EAAM1/C,EAAEm5C,KAAK,GAEzB,IAAK,IAAI4a,EAAO,GAAKA,IAAQ,CAE3B,IAAI5uB,EAAuB,oBAAZuuB,EACXA,EAAQK,GACRrmB,EAAUI,KAAK4lB,GACbA,EACA,IAAIhmB,EAAUmmB,EAAKR,SAAS/yD,GAAQ,IAE1C,GADA6kC,EAAImuB,GAAYnuB,GAAG,GACfA,EAAE2V,KAAK,IAAM,GAAK3V,EAAE6I,IAAI8lB,IAAQ,EAAG,CACrC,GAAIpmB,EAAUI,KAAK4lB,GACjB,MAAM,IAAI3hE,MAAM,wEAEhB,QAEJ,CAEA,MAAMijE,EAAKtV,EAAMxmB,EAAE1c,IAAI2oB,GACvB,GAAI6vB,EAAGhV,aAAc,CACnB,GAAItS,EAAUI,KAAK4lB,GACjB,MAAM,IAAI3hE,MAAM,6GAEhB,QAEJ,CAEA,MACMq0C,EADM4uB,EAAG1I,OACDzS,KAAK6F,EAAM1/C,GACzB,GAAkB,IAAdomC,EAAE0U,KAAK,GAAU,CACnB,GAAIpN,EAAUI,KAAK4lB,GACjB,MAAM,IAAI3hE,MAAM,0GAEhB,QAEJ,CAEA,IAAIwN,EAAI4lC,EAAE4V,KAAK2E,EAAM1/C,GAAGwc,IAAI4pB,EAAE5pB,IAAI/qB,GAAK4gD,KAAKtkC,IAE5C,GADAxO,EAAIA,EAAEs6C,KAAK6F,EAAM1/C,GACC,IAAdT,EAAEu7C,KAAK,GAYX,OAHI2Y,GAAal0D,EAAEyuC,IAAI0R,EAAM1/C,EAAE64C,MAAM,IAAM,IACzCt5C,EAAImgD,EAAM1/C,EAAE2f,IAAIpgB,IAEX,IAAIiyD,GAAUprB,EAAG7mC,GAXtB,GAAImuC,EAAUI,KAAK4lB,GACjB,MAAM,IAAI3hE,MAAM,6FAWtB,CACF,CACF,EAoBa+/D,GAASA,CAAC/jD,EAAgBknD,EAAgBxjE,KAErD,GAAsB,oBAAX6D,OAAuB,CAEhC,MAAMq2D,EAAOr2D,OAAO,GACd0pD,EAAM1pD,OAAO,GACb65D,EAAM75D,OAAO,GACb4/D,EAAQ5/D,OAAO,GACfiwC,EAAIjwC,OACR,sEAEI0K,EAAI1K,OACR,sEAEI4T,EAAI,CACR6J,EAAGzd,OACD,sEAEFglB,EAAGhlB,OACD,uEAKEy5C,EAAMA,CAAC3uC,EAAW8W,KAAwB9W,EAAI8W,EAAKA,GAAKA,EACxDi9C,EAASA,CAAC/zD,EAAW8W,KAEzB,IAAKi+C,EAAO/uB,GAAK,CAAChmC,EAAG8W,IAChBk+C,EAAO71D,GAAK,CAACjK,OAAO,GAAIA,OAAO,IACpC,KAAO8wC,IAAMulB,GAAM,CACjB,MAAMhmB,EAAIwvB,EAAQ/uB,GACjB+uB,EAAO/uB,GAAK,CAACA,EAAG+uB,EAAQxvB,EAAIS,IAC5BgvB,EAAO71D,GAAK,CAACA,EAAG61D,EAAQzvB,EAAIpmC,EAC/B,CACA,OAAI41D,EAAQnW,EAAY2M,EACjB5c,EAAIqmB,EAAOl+C,EAAE,EAEhBm+C,EAASA,CAACj1D,EAAWpL,EAAWkiB,IACpC63B,EAAI3uC,EAAIpL,EAAGkiB,GACPo+C,EAASA,CAACl1D,EAAWpL,EAAWkiB,IACpC63B,EAAI3uC,EAAIpL,EAAGkiB,GAKPq+C,EAAOjgE,OAAO,GACdkgE,EAAQlgE,OAAO,GAUfmgE,EAAejuB,IACnB,MAAQ1S,EAAG4gC,EAAIC,EAAGC,EAAIC,EAAGC,GAAOtuB,EAEhC,GAAIouB,IAAOjK,EACT,MAAO,CAAE72B,EAAG62B,EAAMgK,EAAG3W,EAAK6W,EAAGlK,GAG/B,MAAMoK,EAAQV,EAAOO,EAAIA,EAAIrwB,GACvB7Q,EAAI2gC,EAAOE,EAAMF,EAAOK,EAAIK,EAAOxwB,GAAIA,GACvC/gB,EAAI6wC,EAAOH,EAAOG,EAAOK,EAAIA,EAAInwB,GAAIA,GACrCywB,EAAKV,EAAOD,EAAO7wC,EAAGA,EAAG+gB,GAAI8vB,EAAOlG,EAAKz6B,EAAG6Q,GAAIA,GAQtD,MAAO,CAAEzQ,EAAGkhC,EAAIL,EAPLL,EACTD,EAAO7wC,EAAG8wC,EAAO5gC,EAAGshC,EAAIzwB,GAAIA,GAC5B8vB,EAAOG,EAAOH,EAAOU,EAAOA,EAAOxwB,GAAIA,GACvCA,GAIqBswB,EAFZR,EAAOlG,EAAKkG,EAAOO,EAAIE,EAAIvwB,GAAIA,GAEZ,EAI1BivB,EAAWA,CAAChtB,EAAkBC,KAClC,GAAID,EAAEquB,IAAMlK,EAAM,OAAOlkB,EACzB,GAAIA,EAAEouB,IAAMlK,EAAM,OAAOnkB,EAEzB,MAAMyuB,EAAOZ,EAAO7tB,EAAEquB,EAAGruB,EAAEquB,EAAGtwB,GACxB2wB,EAAOb,EAAO5tB,EAAEouB,EAAGpuB,EAAEouB,EAAGtwB,GACxB4wB,EAAKd,EAAO7tB,EAAE1S,EAAGohC,EAAM3wB,GACvB6wB,EAAKf,EAAO5tB,EAAE3S,EAAGmhC,EAAM1wB,GACvB8wB,EAAKhB,EAAO7tB,EAAEmuB,EAAGN,EAAOa,EAAMzuB,EAAEouB,EAAGtwB,GAAIA,GACvC+wB,EAAKjB,EAAO5tB,EAAEkuB,EAAGN,EAAOY,EAAMzuB,EAAEquB,EAAGtwB,GAAIA,GAEvCp8B,EAAImsD,EAAOc,EAAID,EAAI5wB,GACnBa,EAAIkvB,EAAOgB,EAAID,EAAI9wB,GAEzB,GAAIp8B,IAAMwiD,EACR,OAAIvlB,IAAMulB,EAED8J,EAAYjuB,GAGZ,CAAE1S,EAAG62B,EAAMgK,EAAG3W,EAAK6W,EAAGlK,GAIjC,MAAMt5B,EAAKgjC,EAAOlsD,EAAGA,EAAGo8B,GAClBgxB,EAAMlB,EAAOlsD,EAAGkpB,EAAIkT,GACpB0C,EAAIotB,EAAOc,EAAI9jC,EAAIkT,GAEnBywB,EAAKV,EAAOA,EAAOD,EAAOjvB,EAAGA,EAAGb,GAAIgxB,EAAKhxB,GAAI8vB,EAAOlG,EAAKlnB,EAAG1C,GAAIA,GAQtE,MAAO,CAAEzQ,EAAGkhC,EAAIL,EAPLL,EACTD,EAAOjvB,EAAGkvB,EAAOrtB,EAAG+tB,EAAIzwB,GAAIA,GAC5B8vB,EAAOgB,EAAIE,EAAKhxB,GAChBA,GAIqBswB,EAFZR,EAAOlsD,EAAGksD,EAAO7tB,EAAEquB,EAAGpuB,EAAEouB,EAAGtwB,GAAIA,GAEZ,EAI1BixB,EAAiBA,CAACrxB,EAAWqC,KACjC,MAAMniB,EAAmB,CAAEyP,EAAG0S,EAAEz0B,EAAG4iD,EAAGnuB,EAAEltB,EAAGu7C,EAAG7W,GAC9C,IAAIvX,EAAmB,CAAE3S,EAAG62B,EAAMgK,EAAG3W,EAAK6W,EAAGlK,GAE7C,MAAM8K,EAAOtxB,EAAEnqC,SAAS,GACxB,IAAK,IAAI+H,EAAI,EAAGA,EAAI0zD,EAAKhiE,OAAQsO,IAC/B0kC,EAAIguB,EAAYhuB,GACA,MAAZgvB,EAAK1zD,KACP0kC,EAAI+sB,EAAS/sB,EAAGpiB,IAGpB,OAAOoiB,CAAC,EAIJivB,EAAcA,CAClBz3D,EACA03D,EACAn3D,KAEA,MAAM,EAAE4mC,EAAC,EAAE7mC,GAAMC,EACX64B,EAAIp5B,EAGV,GAAImnC,GAAKulB,GAAQvlB,GAAKpmC,GAAKT,GAAKosD,GAAQpsD,GAAKS,EAC3C,OAAO,EAGT,MAAMsmC,EAAI6tB,EAAO50D,EAAGS,GACpB,GAAIsmC,IAAMqlB,EACR,OAAO,EAET,MAAMnL,EAAK6U,EAAOh9B,EAAGiO,EAAGtmC,GAClBygD,EAAK4U,EAAOjvB,EAAGE,EAAGtmC,GAGlB42D,EAAKJ,EAAehW,EAAIt3C,GACxB2tD,EAAKL,EAAe/V,EAAIkW,GACxBjvB,EAAI8sB,EAASoC,EAAIC,GAEvB,GAAInvB,EAAEmuB,IAAMlK,EAEV,OAAO,EAIT,MAAMmL,EAAO3C,EAAOzsB,EAAEmuB,EAAGtwB,GACzB,GAAIuxB,IAASnL,EACX,OAAO,EAET,MAAMoL,EAAQ1B,EAAOyB,EAAMA,EAAMvxB,GAC3ByxB,EAAY3B,EAAO3tB,EAAE5S,EAAGiiC,EAAOxxB,GAMrC,OAHUwJ,EAAIioB,EAAWh3D,KAGZomC,CAAC,EAchB,OAAOswB,EAVMphE,OAAO,KAAOyY,EAAI/S,SAAS,KACtB,CAChB+X,EAAGzd,OAAO,KAAO7D,EAAIshB,EAAE/X,SAAS,KAChCsf,EAAGhlB,OAAO,KAAO7D,EAAI6oB,EAAEtf,SAAS,MAEhB,CAChBorC,EAAG9wC,OAAO,KAAO2/D,EAAI7uB,EAAEprC,SAAS,KAChCuE,EAAGjK,OAAO,KAAO2/D,EAAI11D,EAAEvE,SAAS,MAIpC,CAAO,CACL,MAAM0kD,EAAQ,IAAIE,GAClB7xC,EAAMulD,GAAYvlD,GAElB,MAAMq4B,EAAI6uB,EAAI7uB,EACR7mC,EAAI01D,EAAI11D,EACd,GAAI6mC,EAAE0U,KAAK,GAAK,GAAK1U,EAAE4H,IAAI0R,EAAM1/C,IAAM,EAAK,OAAO,EACnD,GAAIT,EAAEu7C,KAAK,GAAK,GAAKv7C,EAAEyuC,IAAI0R,EAAM1/C,IAAM,EAAK,OAAO,EAGnD,MAAMi3D,EAAO13D,EAAEw7C,KAAK2E,EAAM1/C,GACpBwgD,EAAKyW,EAAKz6C,IAAIzO,GAAK8rC,KAAK6F,EAAM1/C,GAC9BygD,EAAKwW,EAAKz6C,IAAI4pB,GAAGyT,KAAK6F,EAAM1/C,GAI5BulC,EAAIma,EAAMxmB,EAAE+zB,QAAQzM,EAAI/uD,EAAKgvD,GACnC,OAAIlb,EAAEya,cAKCza,EAAEmc,OAAOtb,EAClB,GC5iBY,MAAO0sB,WAAkB7S,GAgBrC,qBAAOiX,CAAgBzlE,GACrB,MACM8zC,GADI,IAAIqa,IACF1mB,EAAE1c,IAAI/qB,GAClB,OAAO,IAAIqhE,GAAUvtB,EAAExyB,EAAGwyB,EAAEjrB,EAC9B,CAYA,iBAAOhF,CAAYjG,GACjB,MAAMk2B,EAAI0a,GAAM3qC,WAAWjG,GAC3B,OAAO,IAAIyjD,GAAUvtB,EAAExyB,EAAGwyB,EAAEjrB,EAC9B,CAYA,cAAOwwC,CAASxqD,GACd,MAAMilC,EAAI0a,GAAM6K,QAAQxqD,GACxB,OAAO,IAAIwyD,GAAUvtB,EAAExyB,EAAGwyB,EAAEjrB,EAC9B,CAYAztB,WAAAA,CACEkmB,GAEqB,IADrBuH,EAAA5kB,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmD,KACnDk2D,IAAAl2D,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,KAAAA,UAAA,GAEIqd,aAAaktC,GACfh+C,MAAM8Q,EAAEu5C,OAAQv5C,EAAEw5C,QAElBtqD,MAAM8Q,EAAGuH,EAAGsxC,EAEhB,CAgBAuL,kBAAAA,CAAoBC,GAClB,IAAKhqE,KAAKg/D,WACR,MAAM,IAAIr6D,MAAM,mDAElB,OAAO3E,KAAKovB,IAAI46C,EAClB,CAgBAtF,MAAAA,CAAQ/jD,EAAwBknD,EAAgB/tC,GAC9C,MAAM6qC,EAAU,IAAIrkB,EAAUv6B,GAAOpF,EAAKmZ,GAAM,IAChD,OAAO4qC,GAAOC,EAASkD,EAAK7nE,KAC9B,CAYA4kE,KAAAA,CAAO9qC,GACL,MAAY,QAARA,EAAsB95B,KAAKmiB,QAAO,EAAM2X,GACrC95B,KAAKmiB,QAAO,EACrB,CAUA8nD,MAAAA,CAAQnwC,GACN,MAAMowC,EAAMjQ,GAAQj6D,KAAKmiB,QAAO,IAChC,MAAY,QAAR2X,EACKg2B,GAAMoa,GAERA,CACT,CAgBAC,SAAAA,GAA6C,IAAlCtO,EAAAvzD,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAA4B,CAAC,GACtC,GAAsB,kBAAXuzD,EACT,GAAe,YAAXA,GAAmC,SAAXA,EAC1BA,EAAS,CAAC,SACL,IAAe,YAAXA,GAAmC,SAAXA,EAGjC,MAAM,IAAIl3D,MAAM,kBAAkBk3D,KAFlCA,EAAS,CAAC,EAGZ,CAEF,OAAOD,GAAc57D,KAAKiqE,SAAsBpO,EAClD,CAQAuO,WAAAA,CAAaC,EAAwBC,GACnC,MAAMC,EAAevqE,KAAK+pE,mBAAmBM,GACvCG,EAAmBrvB,GAAQmvB,EAAe,QAC1CzwD,EAAOqgD,GAAWqQ,EAAapoD,QAAO,GAAOqoD,GAE7CtG,GADQ,IAAI1R,IACE1mB,EAAE1c,IAAI,IAAIkxB,EAAUzmC,IAClC4wD,EAAazqE,KAAK+W,IAAImtD,GAC5B,OAAO,IAAIwB,GAAU+E,EAAW9kD,EAAG8kD,EAAWv9C,EAChD,CAmBA,qCAAOw9C,CAAgC/F,EAAoBvyD,EAA8B0nB,GACvF,MAAM5/B,EAAOihD,GAAQ/oC,EAAW0nB,GAChC,GAAoB,KAAhB5/B,EAAKmN,OACP,MAAM,IAAI1C,MAAM,6BAElB,MAAM8/D,EAAcvqE,EAAK,GACzB,GAAIuqE,EAAc,IAAMA,GAAe,GACrC,MAAM,IAAI9/D,MAAM,wBAElB,IAAIq0C,EAAI9+C,EAAK,GAAK,GACdgrE,GAAa,EACblsB,EAAI,IACNksB,GAAa,EACblsB,GAAK,GAMP,OAJU,IAAIorB,GACZ,IAAI9jB,EAAUpmD,EAAKoT,MAAM,EAAG,KAC5B,IAAIgzC,EAAUpmD,EAAKoT,MAAM,GAAI,MAEtB63D,iBAAiBnsB,EAAG2rB,EAC/B,iBC3OI,MAAOgG,GACXhlD,EACAuH,EAEAztB,WAAAA,CAAakmB,EAAcuH,GACzB,MAAMktB,GAAI,IAAIoY,IAAQra,EACtBn4C,KAAK2lB,EAAIA,EAAE8mC,KAAKrS,GAChBp6C,KAAKktB,EAAIA,EAAEu/B,KAAKrS,EAClB,CAEAxsC,QAAAA,GACE,OAAO8tD,GAAS17D,KAAK2lB,EAAEw1B,WAAa,IAAMugB,GAAS17D,KAAKktB,EAAEiuB,UAC5D,CAEA,iBAAOjzB,CAAYjG,GACjB,MAAO0D,EAAGuH,GAAKjL,EAAInL,MAAM,KACzB,OAAO,IAAI6zD,GAAmB,IAAIrqB,EAAUgb,GAAW31C,IAAK,IAAI26B,EAAUgb,GAAWpuC,IACvF,EAkBY,MAAO09C,GACV9L,OACA+L,UAETprE,WAAAA,CAAaq/D,EAA8B+L,GACzC7qE,KAAK8+D,OAASA,EACd9+D,KAAK6qE,UAAYA,GAAa/L,EAAOz3D,MACvC,CAEA,qBAAOyiE,CAAgBzlE,EAAiBwmE,GACtC,MAAMzwB,GAAI,IAAIoY,IAAQra,EAEhB2mB,EAAS,CAAC,IAAI6L,GAAmB,IAAIrqB,EAAU,GAAI,IAAIA,EAAUj8C,EAAI82C,aAG3E,IAAK,IAAIxlC,EAAI,EAAGA,EAAIk1D,EAAWl1D,IAAK,CAClC,MAAMm1D,EAAU,IAAIxqB,GAAUyqB,EAAAA,GAAAA,GAAO,KAAKte,KAAKrS,GACzC4wB,EAAU,IAAI1qB,GAAUyqB,EAAAA,GAAAA,GAAO,KAAKte,KAAKrS,GAC/C0kB,EAAOxjE,KAAK,IAAIqvE,GAAmBG,EAASE,GAC9C,CAEA,OAAO,IAAIJ,GAAW9L,EACxB,CAGAmM,OAAAA,CAAStlD,GACP,MAAMy0B,GAAI,IAAIoY,IAAQra,EACtB,IAAIjrB,EAAI,IAAIozB,EAAU,GACtB,IAAK,IAAI3qC,EAAI,EAAGA,EAAI3V,KAAK6qE,UAAWl1D,IAAK,CACvC,IAAIu1D,EAAOlrE,KAAK8+D,OAAOnpD,GAAGuX,EAC1B,IAAK,IAAItC,EAAI,EAAGA,EAAI5qB,KAAK6qE,UAAWjgD,IAClC,GAAIjV,IAAMiV,EAAG,CACX,MAAMugD,EAAKnrE,KAAK8+D,OAAOl0C,GAAGjF,EACpBoQ,EAAK/1B,KAAK8+D,OAAOnpD,GAAGgQ,EAEpB0hD,EAAY1hD,EAAE4M,IAAI44C,GAAI1e,KAAKrS,GAE3BgxB,EADcr1C,EAAGxD,IAAI44C,GAAI1e,KAAKrS,GACGuT,KAAKvT,GAEtCixB,EAAWhE,EAAUj4C,IAAIg8C,GAAoB3e,KAAKrS,GACxD8wB,EAAOA,EAAK97C,IAAIi8C,GAAU5e,KAAKrS,EACjC,CAEFltB,EAAIA,EAAEnW,IAAIm0D,GAAMze,KAAKrS,EACvB,CACA,OAAOltB,CACT,EC7DI,MAAOo+C,GACXxM,OACA+L,UACAU,UAEA9rE,WAAAA,CAAaq/D,EAA8B+L,EAAmBU,GAC5DvrE,KAAK8+D,OAASA,EACd9+D,KAAK6qE,UAAYA,EACjB7qE,KAAKurE,UAAYA,CACnB,CAEA,uBAAOC,CAAkBC,GACvB,IAAIZ,EAAY,EACZU,EAAY,GAChB,MAAMzM,EAAS2M,EAAOhmE,KAAI,CAACimE,EAAOj6D,KAChC,MAAMk6D,EAAaD,EAAM50D,MAAM,KAC/B,GAA0B,IAAtB60D,EAAWtkE,OAAc,MAAM1C,MAAM,iCAAmC8M,EAAM,2CAA6Ci6D,GAC/H,MAAO/lD,EAAGuH,EAAGlf,EAAG2H,GAAKg2D,EACrB,IAAK39D,EAAG,MAAMrJ,MAAM,gCAAkC8M,GACtD,IAAKkE,EAAG,MAAMhR,MAAM,gCAAkC8M,GACtD,MAAMm6D,EAAOnmD,SAASzX,GACtB,GAAY,IAARyD,GAAao5D,IAAce,EAAM,MAAMjnE,MAAM,+BAAiC8M,GAClF,GAAY,IAARA,GAAa85D,IAAc51D,EAAG,MAAMhR,MAAM,+BAAiC8M,GAG/E,OAFAo5D,EAAYe,EACZL,EAAY51D,EACLg1D,GAAmBziD,WAAW,CAACvC,EAAGuH,GAAGvlB,KAAK,KAAK,IAExD,OAAO,IAAI2jE,GAAUxM,EAAQ+L,EAAWU,EAC1C,CAEAM,cAAAA,GACE,OAAO7rE,KAAK8+D,OAAOr5D,KAAIimE,GAASA,EAAM99D,WAAa,IAAM5N,KAAK6qE,UAAY,IAAM7qE,KAAKurE,WACvF,EAYY,MAAOO,WAAmBxrB,EAWtC,iBAAOyrB,GACL,OAAO,IAAID,IAAWf,EAAAA,GAAAA,GAAO,IAC/B,CAYA,iBAAO7iD,CAAYjG,EAAa4+B,GAC9B,OAAO,IAAIirB,GAAWxrB,EAAUp4B,WAAWjG,EAAK4+B,GAAM1F,UACxD,CAYA,cAAO6wB,CAASC,GACd,MAAMC,EAAUpQ,GAAgBmQ,EAAK,KADV3jE,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAuB,GAElD,GAA4B,KAAxB4jE,EAAQhyE,KAAKmN,OACf,MAAM,IAAI1C,MAAM,sBAElB,GAAyB,IAArBunE,EAAQhyE,KAAK,IACf,MAAM,IAAIyK,MAAM,uBAElB,OAAO,IAAImnE,GAAWI,EAAQhyE,KAAKoT,MAAM,EAAG,IAC9C,CAkBA7N,WAAAA,GAI+C,IAH7CkT,EAAArK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAiD,EACjDu4C,EAAAv4C,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAqC,GACrCw4C,EAAAx4C,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAsB,KACtB6jE,EAAA7jE,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAsC,QAStC,GAPIqK,aAAkB2tC,GACpBzrC,QACAlC,EAAO4V,KAAKvoB,OAEZ6U,MAAMlC,EAAQkuC,EAAMC,GAGT,YAATqrB,EAAoB,CACtB,MAAMnQ,EAAQh8D,KAAKosE,eACnB,IAAKpQ,EAAMqQ,QAAS,CAClB,GAAa,UAATF,EACF,MAAM,IAAIxnE,MAAM,yBAGlB27C,EAAUyB,KAAK/hD,KAAMg8D,EAAMmQ,KAC7B,CACF,CACF,CAMAC,YAAAA,GACE,MAAM9Z,EAAQ,IAAIE,GACZ2Z,EAAOnsE,KAAK2hD,IAAI2Q,EAAM1/C,GAE5B,MAAO,CAAEy5D,QAD0B,IAAnBrsE,KAAK4gD,IAAIurB,GACPA,OACpB,CAKAG,OAAAA,GACE,OAAOtsE,KAAKosE,eAAeC,OAC7B,CAgBAjG,IAAAA,CAAMzlD,EAAwBmZ,GAA+E,IAAzDusC,IAAA/9D,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,KAAAA,UAAA,GAA2Bg+D,EAA8Bh+D,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAC3G,MAAM2/D,EAAU,IAAIrkB,EAAUv6B,GAAOpF,EAAKmZ,GAAM,IAChD,OAAOssC,GAAKzB,EAAS3kE,KAAMqmE,EAAWC,EACxC,CAgBA5B,MAAAA,CAAQ/jD,EAAwBknD,EAAgB/tC,GAC9C,MAAM6qC,EAAU,IAAIrkB,EAAUv6B,GAAOpF,EAAKmZ,GAAM,IAChD,OAAO4qC,GAAOC,EAASkD,EAAK7nE,KAAKusE,cACnC,CAcAA,WAAAA,GACE,MACMp0B,GADI,IAAIqa,IACF1mB,EAAE1c,IAAIpvB,MAClB,OAAO,IAAI0lE,GAAUvtB,EAAExyB,EAAGwyB,EAAEjrB,EAC9B,CAoBAs/C,KAAAA,GAAgC,IAAzB3Q,EAAAvzD,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,CAAC,KACzB,IAAKtI,KAAKssE,UAAa,MAAM,IAAI3nE,MAAM,yBACvC,OAAOi3D,GAAc,IAAI57D,KAAKm7C,QAAQ,KAAM,IAAK,GAAI0gB,EACvD,CAgBAsO,SAAAA,GAA6C,IAAlCtO,EAAAvzD,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAA4B,CAAC,GACtC,OAAOtI,KAAKusE,cAAcpC,UAAUtO,EACtC,CAeAkO,kBAAAA,CAAoB1lE,GAClB,IAAKA,EAAI26D,WACP,MAAM,IAAIr6D,MAAM,mDAElB,OAAON,EAAI+qB,IAAIpvB,KACjB,CAQAoqE,WAAAA,CAAab,EAAsBe,GACjC,MAAMC,EAAevqE,KAAK+pE,mBAAmBR,GACvCiB,EAAmBrvB,GAAQmvB,EAAe,QAC1CzwD,EAAOqgD,GAAWqQ,EAAapoD,QAAO,GAAOqoD,GAC7ClY,EAAQ,IAAIE,GAClB,OAAO,IAAIsZ,GAAW9rE,KAAK+W,IAAI,IAAIupC,EAAUzmC,IAAO8nC,IAAI2Q,EAAM1/C,GAAGuoC,UACnE,CAcAsxB,WAAAA,CAAa5B,EAAmB6B,GAC9B,GAAyB,kBAAd7B,GAAiD,kBAAhB6B,EAA0B,MAAM,IAAI/nE,MAAM,6CACtF,GAAIkmE,EAAY,EAAG,MAAM,IAAIlmE,MAAM,gCACnC,GAAI+nE,EAAc,EAAG,MAAM,IAAI/nE,MAAM,kCACrC,GAAIkmE,EAAY6B,EAAa,MAAM,IAAI/nE,MAAM,yDAE7C,MAAMgoE,EAAO/B,GAAWd,eAAe9pE,KAAM6qE,GAEvC/L,EAAS,GACf,IAAK,IAAInpD,EAAI,EAAGA,EAAI+2D,EAAa/2D,IAAK,CACpC,MAAMgQ,EAAI,IAAI26B,EAAUwrB,GAAWC,aAAa5wB,WAC1CjuB,EAAIy/C,EAAK1B,QAAQtlD,GACvBm5C,EAAOxjE,KAAK,IAAIqvE,GAAmBhlD,EAAGuH,GACxC,CAEA,MAAMq+C,EAAavrE,KAAKusE,cAActC,OAAO,OAAkB38D,MAAM,EAAG,GAExE,OAAO,IAAIg+D,GAAUxM,EAAQ+L,EAAWU,EAC1C,CAYAqB,cAAAA,CAAgB/B,EAAmB6B,GACjC,OAAO1sE,KAAKysE,YAAY5B,EAAW6B,GAAab,gBAClD,CAkBA,uBAAOgB,CAAkBpB,GACvB,OAAOK,GAAWgB,cAAcxB,GAAUE,iBAAiBC,GAC7D,CAWA,oBAAOqB,CAAeC,GACpB,MAAM,OAAEjO,EAAM,UAAE+L,EAAS,UAAEU,GAAcwB,EACzC,GAAIlC,EAAY,EAAG,MAAM,IAAIlmE,MAAM,gCACnC,GAAIm6D,EAAOz3D,OAASwjE,EAAW,MAAM,IAAIlmE,MAAM,YAAYkmE,wDAE3D,IAAK,IAAIl1D,EAAI,EAAGA,EAAIk1D,EAAWl1D,IAC7B,IAAK,IAAIiV,EAAIjV,EAAI,EAAGiV,EAAIigD,EAAWjgD,IACjC,GAAIk0C,EAAOnpD,GAAGgQ,EAAE4oC,GAAGuQ,EAAOl0C,GAAGjF,GAC3B,MAAM,IAAIhhB,MAAM,kDAItB,MAAMgoE,EAAO,IAAI/B,GAAW9L,EAAQ+L,GAC9BR,EAAa,IAAIyB,GAAWa,EAAK1B,QAAQ,IAAI3qB,EAAU,IAAInF,WAEjE,GADsBkvB,EAAWkC,cAActC,OAAO,OAAO38D,MAAM,EAAG,KAChDi+D,EACpB,MAAM,IAAI5mE,MAAM,2BAGlB,OAAO0lE,CACT,ECrLK,MAiBD2C,GAAkB,SAAU3lE,GAChC,IAAIsO,EACJ,MAAMxV,EAAS,GAEf,IAAKwV,EAAI,EAAGA,EAAItO,EAAQsO,IACtBxV,EAAO7E,KAAK,GAGd,OAAO6E,CACT,EAEU,CAAC,KAAMgtB,OAAO6/C,GAAgB,KCpP1B,MAAOC,WAA6B7I,GACzC7jB,mBAA8B,EAC9BA,oBAA+B,EAC/BA,sBAAiC,EACjCA,sBAAiC,GACjCA,4BAAuC,IAE9C2sB,MAEA,aAAO/vC,CAAQvjC,GAab,MAAMuzE,EAAe,CACnBC,WAAYxzE,EAAOwzE,WACnBC,kBAAmBzzE,EAAOyzE,kBAC1BC,SAAU1zE,EAAO2zE,eAEbC,EAAS,IAAI5zE,EAAO6zE,aAC1BD,EAAOjwC,OAAO3jC,EAAO8zE,WAAY,EAAGP,GA8BpC,SAASQ,EAAgBC,GACvB,MAAMC,EAAS,IAAI5R,GAEnB,GAA2B,qBAAhB2R,EAA6B,CACtC,IAAI5mE,EACJ,IAAK,MAAM8M,KAAUla,EAAOk0E,QAC1BD,EAAOnR,cAAc5oD,EAAO9Q,UAC5BgE,EAAS8M,EAAOi6D,cAAcC,WAC9BH,EAAOlR,eAAe31D,EAAOK,QAC7BwmE,EAAO5lD,MAAMjhB,EAEjB,KAAO,CACL,MAAM8M,EAASla,EAAOk0E,QAAQF,GAC9BC,EAAOnR,cAAc5oD,EAAO9Q,UAC5B,MAAMgE,EAAS8M,EAAOi6D,cAAcC,WACpCH,EAAOlR,eAAe31D,EAAOK,QAC7BwmE,EAAO5lD,MAAMjhB,EACf,CAEA,MAAM2S,EAAMk0D,EAAO1yB,UAEnB,OADYzmC,GAAaiF,EAE3B,CAEA,IAAIs0D,EAAe,IAAIhlE,MAAM,IAAIyM,KAAK,GAClCw4D,EAAe,IAAIjlE,MAAM,IAAIyM,KAAK,GAClCy4D,EAAc,IAAIllE,MAAM,IAAIyM,KAAK,GAE8B,KAA9D9b,EAAOszE,MAAQD,GAAqBmB,wBACvCH,EAzDqBI,MACrB,MAAMR,EAAS,IAAI5R,GACnB,IAAK,MAAM/nC,KAASs5C,EACc,qBAArBt5C,EAAMk5C,WACfS,EAAO5lD,MAAMiM,EAAMo6C,kBAAkBz8D,QAErCg8D,EAAOxR,aAAalhB,GAAQjnB,EAAMk5C,WAAY,QAEhDS,EAAO77C,cAAckC,EAAMm5C,mBAG7B,MAAM1zD,EAAMk0D,EAAO1yB,UAEnB,OADYzmC,GAAaiF,EACf,EA4CK00D,IAGkD,KAA9Dz0E,EAAOszE,MAAQD,GAAqBmB,wBACvB,GAAfx0E,EAAOszE,SAAgBD,GAAqBsB,iBAC7B,GAAf30E,EAAOszE,SAAgBD,GAAqBuB,eAC7CN,EA/CsBO,MACtB,MAAMZ,EAAS,IAAI5R,GAEnB,IAAK,MAAM/nC,KAASs5C,EAClBK,EAAO77C,cAAckC,EAAMo5C,UAG7B,MAAM3zD,EAAMk0D,EAAO1yB,UAEnB,OADYzmC,GAAaiF,EACf,EAsCK80D,KAGG,GAAf70E,EAAOszE,SAAgBD,GAAqBsB,iBAAkC,GAAf30E,EAAOszE,SAAgBD,GAAqBuB,aAC9GL,EAAcR,KACW,GAAf/zE,EAAOszE,SAAgBD,GAAqBsB,gBAAkB30E,EAAO8zE,WAAa9zE,EAAOk0E,QAAQzmE,SAC3G8mE,EAAcR,EAAe/zE,EAAO8zE,aAGtC,MAAMG,EAAS,IAAI5R,GAGnB4R,EAAOj7C,aAAah5B,EAAO80E,oBAG3Bb,EAAO5lD,MAAMgmD,GACbJ,EAAO5lD,MAAMimD,GAGbL,EAAOxR,aAAalhB,GAAQvhD,EAAOwzE,WAAY,QAC/CS,EAAO77C,cAAcp4B,EAAOyzE,mBAG5B,MAAMsB,EAAe/0E,EAAOg1E,UAAUZ,WACtCH,EAAOlR,eAAegS,EAAatnE,QACnCwmE,EAAO5lD,MAAM0mD,GAGbd,EAAOnR,cAAc9iE,EAAOi1E,gBAG5B,MAAMC,EAAiB3B,EAAaG,SACpCO,EAAO77C,cAAc88C,GAGrBjB,EAAO5lD,MAAMkmD,GAGbN,EAAO77C,cAAcp4B,EAAOm1E,UAG5BlB,EAAO77C,cAAcp4B,EAAOszE,QAAU,GAGtC,OADYW,EAAO1yB,SAErB,CAGA,yBAAO6zB,CAAoBr1D,GACzB,GAAmB,IAAfA,EAAItS,OAAc,CAEpB,MAAM2xC,EAAI,IAAIsH,EAAU,GAClBnuC,EAAI,IAAImuC,EAAU,GAExB,OAAO,IAAI2sB,GAAqBj0B,EAAG7mC,EADrB,EAEhB,CACA,MAAM+6D,EAAQvzD,EAAIA,EAAItS,OAAS,GACzB4nE,EAASt1D,EAAIrM,MAAM,EAAGqM,EAAItS,OAAS,GACnC6nE,EAAU9K,GAAU1G,QAAQuR,GAClC,OAAO,IAAIhC,GAAqBiC,EAAQl2B,EAAGk2B,EAAQ/8D,EAAG+6D,EACxD,CAEAztE,WAAAA,CAAau5C,EAAc7mC,EAAc+6D,GACvCr4D,MAAMmkC,EAAG7mC,GACTnS,KAAKktE,MAAQA,CACf,CAOOiC,OAAAA,GACL,OACEnvE,KAAKmS,EAAE+7C,IAAI,KACXluD,KAAKmS,EAAE47C,GAAG,IAAIzN,EACZ,mEAAoE,OAM1E,CAEA8uB,gBAAAA,GAEE,MAAO,IADQpvE,KAAK4kE,QACD5kE,KAAKktE,MAC1B,ECzLF,MAAMmC,GAAK,CAETC,SAAU,EACVC,KAAM,EACNC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GAGPC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,SAAU,IACVC,SAAU,IACVC,YAAa,IACbC,QAAS,IACTC,SAAU,IACVC,UAAW,IACXC,UAAW,IAGXC,cAAe,IACfC,gBAAiB,IACjBC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,IACVC,QAAS,IACTC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,QAAS,IACTC,OAAQ,IACRC,OAAQ,IACRC,QAAS,IACTC,QAAS,IACTC,QAAS,IACTC,OAAQ,IACRC,QAAS,IACTC,QAAS,IAGTC,OAAQ,IACRC,UAAW,IACXC,SAAU,IACVC,QAAS,IACTC,WAAY,IACZC,SAAU,IACVC,WAAY,IACZC,QAAS,IAGTC,UAAW,IACXC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVC,eAAgB,IAChBC,aAAc,IACdC,aAAc,IAGdC,QAAS,IACTC,QAAS,IACTC,QAAS,IACTC,QAAS,IACTC,UAAW,IACXC,OAAQ,IACRC,OAAQ,IACRC,aAAc,IAEdC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,UAAW,IACXC,UAAW,IAEXC,WAAY,IACZC,UAAW,IACXC,YAAa,IACbC,kBAAmB,IACnBC,eAAgB,IAChBC,YAAa,IACbC,eAAgB,IAChBC,mBAAoB,IACpBC,sBAAuB,IACvBC,OAAQ,IACRC,OAAQ,IAERC,UAAW,IAGXC,aAAc,IACdC,QAAS,IACTC,UAAW,IACXC,WAAY,IACZC,WAAY,IACZC,iBAAkB,IAClBC,YAAa,IACbC,kBAAmB,IACnBC,iBAAkB,IAClBC,uBAAwB,IAGxaAAc,IACdC,gBAAiB,IACjBC,WAAY,IACZC,cAAe,IACfC,UAAW,IAEXC,iBAAkB,KAGpB,IAAK,MAAM54E,MAAQktE,GACjBA,GAAGA,GAAGltE,KAASA,GAGjB,YC7Mc,MAAO64E,GACnBC,OAUA,cAAOC,CAASC,GACd,MAAMF,EAAwB,GACxBG,EAASD,EAAIrkE,MAAM,KACzB,IAAInB,EAAI,EACR,KAAOA,EAAIylE,EAAO/zE,QAAQ,CACxB,MAAMg0E,EAAQD,EAAOzlE,GACrB,IAAI2lE,EACAC,EAQJ,GAPIF,EAAMtpE,WAAW,QAA+B,qBAAds9D,GAAGgM,KACvCC,EAASD,EACTE,EAAYlM,GAAGgM,IAKH,MAAVA,EACFE,EAAY,EACZN,EAAO3/E,KAAK,CACVkgF,GAAID,IAEN5lE,GAAQ,OACH,GAAc,OAAV0lE,EACTE,EAAYlM,GAAGM,WACfsL,EAAO3/E,KAAK,CACVkgF,GAAID,IAEN5lE,GAAQ,OACH,QAAe3Q,IAAXs2E,EAAsB,CAC/B,IAAIp8D,EAAMk8D,EAAOzlE,GACbuJ,EAAI7X,OAAS,IAAM,IACrB6X,EAAM,IAAMA,GAEd,MAAM7E,EAAM8gC,GAAQj8B,EAAK,OACzB,GAAIiD,GAAO9H,EAAK,SAAW6E,EACzB,MAAM,IAAIva,MAAM,gCAElB,MAAMuQ,EAAMmF,EAAIhT,OACZ6N,GAAO,GAAKA,EAAMm6D,GAAGG,aACvB+L,EAAYrmE,EACHA,EAAM5b,KAAKk3B,IAAI,EAAG,GAC3B+qD,EAAYlM,GAAGG,aACNt6D,EAAM5b,KAAKk3B,IAAI,EAAG,IAC3B+qD,EAAYlM,GAAGI,aACNv6D,EAAM5b,KAAKk3B,IAAI,EAAG,MAC3B+qD,EAAYlM,GAAGK,cAEjBuL,EAAO3/E,KAAK,CACVpB,KAAMmgB,EACNmhE,GAAID,IAEN5lE,GAAQ,CACV,MACE4lE,IAAclM,GAAGG,cACjB+L,IAAclM,GAAGI,cACjB8L,IAAclM,GAAGK,cAEjBuL,EAAO3/E,KAAK,CACVpB,KAAMihD,GAAQigC,EAAOzlE,EAAI,GAAI,OAC7B6lE,GAAID,IAEN5lE,GAAQ,IAERslE,EAAO3/E,KAAK,CACVkgF,GAAID,IAEN5lE,GAAQ,EAEZ,CACA,OAAO,IAAIqlE,GAAOC,EACpB,CAUA,cAAOprB,CAAS3wC,GACd,GAAmB,IAAfA,EAAI7X,OAAc,OAAO2zE,GAAOS,WAAW,IAC/C,GAAIv8D,EAAI7X,OAAS,IAAM,EAAG,MAAM,IAAI1C,MAAM,+FAC1C,IAAK,iBAAiBmJ,KAAKoR,GAAM,MAAM,IAAIva,MAAM,qDACjD,OAAOq2E,GAAOS,WAAWtgC,GAAQj8B,EAAK,OACxC,CAUA,iBAAOu8D,CAAYj2D,GACjBA,EAAM,IAAIA,GACV,MAAMy1D,EAAwB,GAExB9wC,EAAK,IAAI6yB,GAAOx3C,GACtB,MAAQ2kB,EAAG8yB,OAAO,CAChB,MAAMue,EAAKrxC,EAAG3a,YAEd,IAAIta,EAAM,EAENhb,EAAiB,GACrB,GAAIshF,EAAK,GAAKA,EAAKnM,GAAGG,aACpBt6D,EAAMsmE,EACNP,EAAO3/E,KAAK,CACVpB,KAAMiwC,EAAG3f,KAAKtV,GACdsmE,YAEG,GAAIA,IAAOnM,GAAGG,aAAc,CACjC,IACEt6D,EAAMi1B,EAAG3a,YACTt1B,EAAOiwC,EAAG3f,KAAKtV,EACjB,CAAE,MAAO6O,GACPomB,EAAG3f,MACL,CACAywD,EAAO3/E,KAAK,CACVpB,OACAshF,MAEJ,MAAO,GAAIA,IAAOnM,GAAGI,aAAc,CACjC,IACEv6D,EAAMi1B,EAAGza,eACTx1B,EAAOiwC,EAAG3f,KAAKtV,EACjB,CAAE,MAAO6O,GACPomB,EAAG3f,MACL,CACAywD,EAAO3/E,KAAK,CACVpB,OACAshF,MAEJ,MAAO,GAAIA,IAAOnM,GAAGK,aAAc,CACjC,IACEx6D,EAAMi1B,EAAGta,eACT31B,EAAOiwC,EAAG3f,KAAKtV,EACjB,CAAE,MAAO6O,GACPomB,EAAG3f,MACL,CACAywD,EAAO3/E,KAAK,CACVpB,OACAshF,MAEJ,MACEP,EAAO3/E,KAAK,CACVkgF,MAGN,CACA,OAAO,IAAIR,GAAOC,EACpB,CAOAx7E,WAAAA,GAAuC,IAA1Bw7E,EAAA3yE,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAwB,GACnCtI,KAAKi7E,OAASA,CAChB,CAOAS,KAAAA,GACE,IAAIz5D,EAAM,GACV,IAAK,IAAItM,EAAI,EAAGA,EAAI3V,KAAKi7E,OAAO5zE,OAAQsO,IAAK,CAC3C,MAAMgmE,EAAQ37E,KAAKi7E,OAAOtlE,GAC1BsM,GAAOjiB,KAAK47E,eAAeD,EAC7B,CAEA,OAAO15D,EAAI3U,MAAM,EACnB,CAOAwiD,KAAAA,GACE,OAAO3tC,GAAOniB,KAAKguE,WAAY,MACjC,CAOAA,QAAAA,GACE,MAAMH,EAAS,IAAI5R,GAEnB,IAAK,IAAItmD,EAAI,EAAGA,EAAI3V,KAAKi7E,OAAO5zE,OAAQsO,IAAK,CAC3C,MAAMgmE,EAAQ37E,KAAKi7E,OAAOtlE,GACpB6lE,EAAKG,EAAMH,GACjB3N,EAAOn8C,WAAW8pD,GACdG,EAAMzhF,OACJshF,EAAKnM,GAAGG,aACV3B,EAAO5lD,MAAM0zD,EAAMzhF,MACVshF,IAAOnM,GAAGG,cACnB3B,EAAOn8C,WAAWiqD,EAAMzhF,KAAKmN,QAC7BwmE,EAAO5lD,MAAM0zD,EAAMzhF,OACVshF,IAAOnM,GAAGI,cACnB5B,EAAOj8C,cAAc+pD,EAAMzhF,KAAKmN,QAChCwmE,EAAO5lD,MAAM0zD,EAAMzhF,OACVshF,IAAOnM,GAAGK,eACnB7B,EAAO77C,cAAc2pD,EAAMzhF,KAAKmN,QAChCwmE,EAAO5lD,MAAM0zD,EAAMzhF,OAGzB,CAEA,OAAO2zE,EAAO1yB,SAChB,CAQA0gC,WAAAA,CAAa70E,GAEX,OADAhH,KAAKi7E,OAASj7E,KAAKi7E,OAAO9tD,OAAOnmB,EAAOi0E,QACjCj7E,IACT,CAQA87E,WAAAA,CAAaN,GAEX,OADAx7E,KAAKi7E,OAAO3/E,KAAK,CAAEkgF,OACZx7E,IACT,CASA+7E,cAAAA,CAAgBpmE,EAAW6lE,GAEzB,OADAx7E,KAAKi7E,OAAOtlE,GAAK,CAAE6lE,MACZx7E,IACT,CAQAg8E,OAAAA,CAASxf,GACP,GAAIA,EAAG9O,KAAK,KAAO2hB,GAAGE,KACpBvvE,KAAKi7E,OAAO3/E,KAAK,CACfkgF,GAAInM,GAAGE,YAEJ,GAAoB,IAAhB/S,EAAG9O,MAAM,GAClB1tD,KAAKi7E,OAAO3/E,KAAK,CACfkgF,GAAInM,GAAGM,kBAEJ,GAAInT,EAAG9O,KAAK,IAAM,GAAK8O,EAAG9O,KAAK,KAAO,EAE3C1tD,KAAKi7E,OAAO3/E,KAAK,CACfkgF,GAAIhf,EAAG7Z,WAAa0sB,GAAGS,KAAO,QAE3B,CACL,MAAMn2D,EAAM6iD,EAAGrM,KAAK,UACpBnwD,KAAKi8E,SAAStiE,EAChB,CACA,OAAO3Z,IACT,CASAi8E,QAAAA,CAAUz2D,GACR,IAAIg2D,EACJ,GAAIh2D,EAAIne,OAAS,GAAKme,EAAIne,OAASgoE,GAAGG,aACpCgM,EAAKh2D,EAAIne,YACJ,GAAmB,IAAfme,EAAIne,OACbm0E,EAAKnM,GAAGE,UACH,GAAI/pD,EAAIne,OAAS/N,KAAKk3B,IAAI,EAAG,GAClCgrD,EAAKnM,GAAGG,kBACH,GAAIhqD,EAAIne,OAAS/N,KAAKk3B,IAAI,EAAG,IAClCgrD,EAAKnM,GAAGI,iBACH,MAAIjqD,EAAIne,OAAS/N,KAAKk3B,IAAI,EAAG,KAGlC,MAAM,IAAI7rB,MAAM,iCAFhB62E,EAAKnM,GAAGK,YAGV,CAKA,OAJA1vE,KAAKi7E,OAAO3/E,KAAK,CACfpB,KAAMsrB,EACNg2D,OAEKx7E,IACT,CAQAk8E,WAAAA,CAAa5qE,GAEX,OADAtR,KAAKg8E,QAAQ,IAAI17B,EAAUhvC,IACpBtR,IACT,CAOAm8E,oBAAAA,GACE,MAAMlB,EAAS,GACf,IAAK,IAAItlE,EAAI,EAAGA,EAAI3V,KAAKi7E,OAAO5zE,OAAQsO,IAClC3V,KAAKi7E,OAAOtlE,GAAG6lE,KAAOnM,GAAGsG,kBAC3BsF,EAAO3/E,KAAK0E,KAAKi7E,OAAOtlE,IAI5B,OADA3V,KAAKi7E,OAASA,EACPj7E,IACT,CASAo8E,aAAAA,CAAep1E,GACb,MAAM2S,EAAM3S,EAAO8oD,QACnB,IAAK,IAAIn6C,EAAI,EAAGA,EAAI3V,KAAKi7E,OAAO5zE,OAAQsO,IAAK,CAGvCgE,IAFY,IAAIqhE,GAAO,CAACh7E,KAAKi7E,OAAOtlE,KACnBm6C,SAEnB9vD,KAAKi7E,OAAO19C,OAAO5nB,EAAG,EAE1B,CACA,OAAO3V,IACT,CAOAq8E,UAAAA,GACE,IAAK,IAAI1mE,EAAI,EAAGA,EAAI3V,KAAKi7E,OAAO5zE,OAAQsO,IAAK,CAG3C,GAFc3V,KAAKi7E,OAAOtlE,GACF6lE,GACRnM,GAAGwB,MACjB,OAAO,CAEX,CACA,OAAO,CACT,CAOAyL,eAAAA,GACE,MAAM,IAAI33E,MAAM,kBAClB,CAOA43E,iBAAAA,GACE,MAAM,IAAI53E,MAAM,kBAClB,CASQi3E,cAAAA,CAAgBD,GACtB,MAAMH,EAAKG,EAAMH,GACjB,IAAIv5D,EAAM,GACV,GAA0B,qBAAf05D,EAAMzhF,KAAsB,CAErC+nB,EAAM,GAAGA,KADIotD,GAAGmM,IAElB,MACEv5D,EAAM,GAAGA,KAAO6tC,GAAM6rB,EAAMzhF,QAE9B,OAAO+nB,CACT,EChaY,MAAOu6D,WAAsBxB,GAMzCsB,eAAAA,GACE,OAAO,CACT,CAOAC,iBAAAA,GACE,OAAO,CACT,ECjBY,MAAOE,WAAwBzB,GAM3CsB,eAAAA,GACE,OAAO,CACT,CAOAC,iBAAAA,GACE,OAAO,CACT,ECZF,MAAMG,GAAuB,WACvBC,GAAsBrjF,KAAKk3B,IAAI,EAAG,IAAM,EACxCosD,IAAqB,EAuBb,MAAOC,GACnBzP,WACAC,kBACAwB,eACAd,cACAW,mBACAjB,YACAK,QACAJ,WACAoP,gBACAvP,cACAwB,SACAv1B,QACAujC,eACAC,kBACArpD,MACAspD,SACAC,QAiCAz9E,WAAAA,CAAa7F,GAaXoG,KAAKotE,WAAaxzE,EAAOwzE,WACzBptE,KAAKqtE,kBAAoBzzE,EAAOyzE,kBAChCrtE,KAAK6uE,eAAiBj1E,EAAOi1E,eAC7B7uE,KAAK+tE,cAAgBn0E,EAAOm0E,cAC5B/tE,KAAK0uE,mBAAqB90E,EAAO80E,mBACjC1uE,KAAKytE,YAAc7zE,EAAO6zE,YAC1BztE,KAAK8tE,QAAUl0E,EAAOk0E,QACtB9tE,KAAK0tE,WAAa9zE,EAAO8zE,WACzB1tE,KAAK88E,gBAAkBljF,EAAOkjF,gBAC9B98E,KAAKutE,cAAgB3zE,EAAO2zE,cAC5BvtE,KAAK+uE,SAAWn1E,EAAOm1E,SACvB/uE,KAAKy6B,OACP,CAEAA,KAAAA,GACEz6B,KAAKw5C,QAAU,kBACfx5C,KAAK+8E,eAAiB,EACtB/8E,KAAKg9E,kBAAoB,KACzBh9E,KAAK2zB,MAAQ,GACb3zB,KAAKi9E,SAAW,GAChBj9E,KAAKk9E,QAAU,EACjB,CAEAre,IAAAA,GAWE,IAAIse,EAPe,oBAAjBn9E,KAAKw5C,SACLx5C,KAAK+8E,gBAAkB/8E,KAAK88E,gBAAgB7B,OAAO5zE,SAEnDrH,KAAKw5C,QAAU,gBACfx5C,KAAK+8E,eAAiB,GAKtBI,EADmB,oBAAjBn9E,KAAKw5C,QACKx5C,KAAK88E,gBAAgB7B,OAAOj7E,KAAK+8E,gBAEjC/8E,KAAK+tE,cAAckN,OAAOj7E,KAAK+8E,gBAG7C,MAqJMK,EAA0BzjE,IAG9B,GAAmB,IAAfA,EAAItS,OACN,OAAO,EAtEesS,KACxB,GAAIA,EAAItS,OAAS,EAEf,OAAO,EAET,GAAIsS,EAAItS,OAAS,GAEf,OAAO,EAET,GAAe,KAAXsS,EAAI,GAEN,OAAO,EAET,GAAIA,EAAI,KAAOA,EAAItS,OAAS,EAE1B,OAAO,EAET,MAAMg2E,EAAQ1jE,EAAI,GAClB,GAAI,EAAI0jE,GAAS1jE,EAAItS,OAEnB,OAAO,EAET,MAAMi2E,EAAQ3jE,EAAI,EAAI0jE,GACtB,GAAIA,EAAQC,EAAQ,IAAM3jE,EAAItS,OAE5B,OAAO,EAGT,MAAMizC,EAAI3gC,EAAIrM,MAAM,GACpB,GAAmB,IAAfqM,EAAI,GAEN,OAAO,EAET,GAAc,IAAV0jE,EAEF,OAAO,EAET,GAAsB,KAAV,IAAP/iC,EAAE,IAEL,OAAO,EAET,GAAI+iC,EAAQ,GAAc,IAAT/iC,EAAE,IAAiC,KAAV,IAAPA,EAAE,IAEnC,OAAO,EAGT,MAAMhT,EAAI3tB,EAAIrM,MAAM,EAAI+vE,GACxB,OAA2B,IAAvB1jE,EAAI,EAAI0jE,EAAQ,IAIN,IAAVC,GAIkB,KAAV,IAAPh2C,EAAE,OAIHg2C,EAAQ,GAAc,IAATh2C,EAAE,IAAiC,KAAV,IAAPA,EAAE,IAI1B,EAUNi2C,CAAiB5jE,IACpB3Z,KAAKw9E,sBAAsB,oCAE7B,MAAM3V,EAAMoF,GAAqB+B,mBAAmBr1D,GAIpD,OAH8BkuD,EAAIsH,WAChCnvE,KAAKw9E,sBAAsB,0CAE6B,KAArD3V,EAAIqF,MAAQD,GAAqBwQ,kBACpCz9E,KAAKw9E,sBAAsB,2CACpB,EAGE,EAGPE,EAA0B/jE,IAC1BA,EAAItS,OAAS,IACfrH,KAAKw9E,sBAAsB,8DAEd,IAAX7jE,EAAI,GACa,KAAfA,EAAItS,QACNrH,KAAKw9E,sBAAsB,mDAER,IAAX7jE,EAAI,IAA0B,IAAXA,EAAI,GACd,KAAfA,EAAItS,QACNrH,KAAKw9E,sBAAsB,+CAG7Bx9E,KAAKw9E,sBAAsB,4CAEtB,GAGHG,EAAkBA,CACtB9V,EACAjC,EACAgJ,KAEA,MAAMgP,EAAW3Q,GAAqB9vC,OAAO,CAC3CiwC,WAAYptE,KAAKotE,WACjBC,kBAAmBrtE,KAAKqtE,kBACxBwB,eAAgB7uE,KAAK6uE,eACrBH,mBAAoB1uE,KAAK0uE,mBACzBjB,YAAaztE,KAAKytE,YAClBK,QAAS9tE,KAAK8tE,QACdJ,WAAY1tE,KAAK0tE,WACjBkB,YACArB,cAAevtE,KAAKutE,cACpBwB,SAAU/uE,KAAK+uE,SACf7B,MAAOrF,EAAIqF,QAEPr7D,EAAO,IAAIyuC,EAAU5rC,GAAakpE,IACxC,OAAOlZ,GAAO7yD,EAAMg2D,EAAKjC,EAAO,EAG5BiY,GAAqB79E,KAAKk9E,QAAQhiF,UAAS,GACjD,IAAIye,EAAemkE,EAAgBxhB,EAAgByhB,EAAgBC,EAAqBprE,EAAWhB,EAAcqsE,EAAkB3sE,EAAe4sE,EAAiBp/B,EAAc7oB,EAAckoD,EAAc3hB,EAAe4hB,EAAgBC,EAAgBC,EAAgBC,EAAkBC,EAAqB5P,EAAW6P,EAC1T5W,EAAKjC,EAAQjwD,EAAW+oE,EAAcC,EAAoBC,EAAcC,EAAeC,EAAoBC,EAC3GC,EAAiBC,EAAiBC,EAGtC,MAAMC,EAAgBhC,EAAU3B,GAzNNA,MAwO1B,GAd6B,qBAAlB2D,GACTn/E,KAAKw9E,sBAAsB,6CAA6Cx9E,KAAKw5C,YAG7EvwC,MAAMC,QAAQi0E,EAAUjjF,OACxBijF,EAAUjjF,KAAKmN,OAASq1E,IAExB18E,KAAKw9E,sBAAsB,0EAGzBK,KApOsBrC,EAoOgB2D,KAnO1B9P,GAAGwE,SACf2H,IAAOnM,GAAGyE,SACV0H,IAAOnM,GAAG6B,UACVsK,IAAOnM,GAAG8B,aACVqK,IAAOnM,GAAG0B,SAgOZ/wE,KAAKw9E,sBAAsB,sCAI3BK,GAAqBsB,GAAiB,GACtCA,GAAiB9P,GAAGK,aAlOEiM,KACtB,MAAMzhF,EAAOyhF,EAAMzhF,KACbshF,EAAKG,EAAMH,GACjB,OAAKvyE,MAAMC,QAAQhP,KAGC,IAAhBA,EAAKmN,OAEAm0E,IAAOnM,GAAGE,KACQ,IAAhBr1E,EAAKmN,QAAgBnN,EAAK,IAAM,GAAKA,EAAK,IAAM,GAElDshF,IAAOnM,GAAGS,MAAQ51E,EAAK,GAAK,GACV,IAAhBA,EAAKmN,QAA4B,MAAZnN,EAAK,GAE5BshF,IAAOnM,GAAGM,WACRz1E,EAAKmN,QAAU,GAEjBm0E,IAAOthF,EAAKmN,OACVnN,EAAKmN,QAAU,IAEjBm0E,IAAOnM,GAAGG,eACRt1E,EAAKmN,QAAU,QAEjBm0E,IAAOnM,GAAGI,aAER,EA2MgB2P,CAAejC,IACxCn9E,KAAKw9E,sBAAsB,uCAGxBv0E,MAAMC,QAAQi0E,EAAUjjF,MAG3B8F,KAAK2zB,MAAMr4B,KAAK6hF,EAAUjjF,MAF1B8F,KAAK2zB,MAAMr4B,KAAK,SAIb,GAAIuiF,GAAsBxO,GAAG2B,OAASmO,GAAiBA,GAAiB9P,GAAGgC,SAChF,OAAQ8N,GACN,KAAK9P,GAAGM,WACR,KAAKN,GAAGS,KACR,KAAKT,GAAGU,KACR,KAAKV,GAAGW,KACR,KAAKX,GAAGY,KACR,KAAKZ,GAAGa,KACR,KAAKb,GAAGc,KACR,KAAKd,GAAGe,KACR,KAAKf,GAAGgB,KACR,KAAKhB,GAAGiB,KACR,KAAKjB,GAAGkB,MACR,KAAKlB,GAAGmB,MACR,KAAKnB,GAAGoB,MACR,KAAKpB,GAAGqB,MACR,KAAKrB,GAAGsB,MACR,KAAKtB,GAAGuB,MACR,KAAKvB,GAAGwB,MACNj+D,EAAIusE,GAAiB9P,GAAGS,KAAO,GAC/Bn2D,EAAM,IAAI2mC,EAAU1tC,GAAGo+C,cACvBhxD,KAAK2zB,MAAMr4B,KAAKqe,GAChB,MAEF,KAAK01D,GAAGyB,OACR,KAAKzB,GAAG4G,QACR,KAAK5G,GAAG6G,QACR,KAAK7G,GAAG2G,QACR,KAAK3G,GAAG8G,QACR,KAAK9G,GAAG+G,QACR,KAAK/G,GAAGgH,QACR,KAAKhH,GAAGiH,QACR,KAAKjH,GAAGkH,QACR,KAAKlH,GAAGmH,QACR,KAAKnH,GAAGoH,SACR,KAAKpH,GAAGqH,SACR,KAAKrH,GAAGsH,SACR,KAAKtH,GAAGuH,SACR,KAAKvH,GAAGwH,SACR,KAAKxH,GAAGyH,SACR,KAAKzH,GAAG0H,SACR,KAAK1H,GAAG2H,SACR,KAAK3H,GAAG4H,SACR,KAAK5H,GAAG6H,SACR,KAAK7H,GAAG8H,SACR,KAAK9H,GAAG+H,SACR,KAAK/H,GAAGgI,SACR,KAAKhI,GAAGiI,SACR,KAAKjI,GAAGkI,SACR,KAAKlI,GAAGmI,SACR,KAAKnI,GAAGoI,SACR,KAAKpI,GAAGqI,SACR,KAAKrI,GAAGsI,SACR,KAAKtI,GAAGuI,SACR,KAAKvI,GAAGwI,SACR,KAAKxI,GAAGyI,SACR,KAAKzI,GAAG0I,SACR,KAAK1I,GAAG2I,SACR,KAAK3I,GAAG4I,SACR,KAAK5I,GAAG6I,SACR,KAAK7I,GAAG8I,SACR,KAAK9I,GAAG+I,SACR,KAAK/I,GAAGgJ,SACR,KAAKhJ,GAAGiJ,SACR,KAAKjJ,GAAGkJ,SACR,KAAKlJ,GAAGmJ,SACR,KAAKnJ,GAAGoJ,SACR,KAAKpJ,GAAGqJ,SACR,KAAKrJ,GAAGsJ,SACR,KAAKtJ,GAAGuJ,SACR,KAAKvJ,GAAGwJ,SACR,KAAKxJ,GAAGyJ,SACR,KAAKzJ,GAAG0J,SACR,KAAK1J,GAAG2J,SACR,KAAK3J,GAAG4J,SACR,KAAK5J,GAAG6J,SACR,KAAK7J,GAAG8J,SACR,KAAK9J,GAAG+J,SACR,KAAK/J,GAAGgK,SACR,KAAKhK,GAAGiK,SACR,KAAKjK,GAAGkK,SACR,KAAKlK,GAAGmK,SACR,KAAKnK,GAAGoK,SACR,KAAKpK,GAAGqK,SACR,KAAKrK,GAAGsK,SACR,KAAKtK,GAAGuK,SACR,KAAKvK,GAAGwK,SACR,KAAKxK,GAAGyK,SACR,KAAKzK,GAAG0K,SACR,KAAK1K,GAAG2K,SACR,KAAK3K,GAAG4K,SACR,KAAK5K,GAAG6K,SACR,KAAK7K,GAAG8K,SACR,KAAK9K,GAAG+K,SACR,KAAK/K,GAAGgL,SACR,KAAKhL,GAAGiL,SACR,KAAKjL,GAAGkL,SACR,KAAKlL,GAAGmL,SACR,KAAKnL,GAAGoL,SACN,MAEF,KAAKpL,GAAG2B,MACR,KAAK3B,GAAG4B,SACN+N,GAAS,EACLnB,IACE79E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,iFAE7B7jE,EAAM3Z,KAAKq/E,UAAU,GAErBL,EAASh/E,KAAKs/E,WAAW3lE,GACrBwlE,IAAkB9P,GAAG4B,WACvB+N,GAAUA,GAEZh/E,KAAK2zB,MAAM4rD,OAEbv/E,KAAKk9E,QAAQ5hF,KAAK0jF,GAClB,MAEF,KAAK3P,GAAG+B,QACsB,IAAxBpxE,KAAKk9E,QAAQ71E,QACfrH,KAAKw9E,sBAAsB,wCAE7Bx9E,KAAKk9E,QAAQl9E,KAAKk9E,QAAQ71E,OAAS,IAAMrH,KAAKk9E,QAAQl9E,KAAKk9E,QAAQ71E,OAAS,GAC5E,MAEF,KAAKgoE,GAAGgC,SACsB,IAAxBrxE,KAAKk9E,QAAQ71E,QACfrH,KAAKw9E,sBAAsB,yCAE7Bx9E,KAAKk9E,QAAQqC,MACb,MAEF,KAAKlQ,GAAGiC,UACFtxE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,4DAE7B7jE,EAAM3Z,KAAKq/E,UAAU,GACrBL,EAASh/E,KAAKs/E,WAAW3lE,GACrBqlE,EACFh/E,KAAK2zB,MAAM4rD,MAEXv/E,KAAKw9E,sBAAsB,wDAE7B,MAEF,KAAKnO,GAAGkC,UACe,oBAAjBvxE,KAAKw5C,QACPx5C,KAAK+8E,eAAiB/8E,KAAK88E,gBAAgB7B,OAAO5zE,OAElDrH,KAAK+8E,eAAiB/8E,KAAK+tE,cAAckN,OAAO5zE,OAElDrH,KAAKk9E,QAAU,GACf,MAEF,KAAK7N,GAAGmC,cACFxxE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,gEAE7Bx9E,KAAKi9E,SAAS3hF,KAAK0E,KAAK2zB,MAAM4rD,OAC9B,MAEF,KAAKlQ,GAAGoC,gBACFzxE,KAAKi9E,SAAS51E,OAAS,GACzBrH,KAAKw9E,sBAAsB,kEAE7Bx9E,KAAK2zB,MAAMr4B,KAAK0E,KAAKi9E,SAASsC,OAC9B,MAEF,KAAKlQ,GAAGqC,SACF1xE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,4DAE7Bx9E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MACX,MAEF,KAAKlQ,GAAGsC,QACF3xE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,2DAE7BM,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOt8D,KAAKq/E,UAAU,GACtBr/E,KAAK2zB,MAAMr4B,KAAK,IAAIwiF,IACpB99E,KAAK2zB,MAAMr4B,KAAK,IAAIghE,IACpB,MAEF,KAAK+S,GAAGuC,QACF5xE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,6DAE7BM,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOt8D,KAAKq/E,UAAU,GACtBtB,EAAO/9E,KAAKq/E,UAAU,GACtBr/E,KAAK2zB,MAAMr4B,KAAK,IAAIwiF,IACpB99E,KAAK2zB,MAAMr4B,KAAK,IAAIghE,IACpBt8D,KAAK2zB,MAAMr4B,KAAK,IAAIyiF,IACpB,MAEF,KAAK1O,GAAGwC,SACF7xE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,6DAE7BM,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOt8D,KAAKq/E,UAAU,GACtBr/E,KAAK2zB,MAAMr4B,KAAK,IAAIwiF,IACpB99E,KAAK2zB,MAAMr4B,KAAK,IAAIghE,IACpB,MAEF,KAAK+S,GAAGyC,QACF9xE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,2DAE7BQ,EAAUh+E,KAAK2zB,MAAM4J,OAAOv9B,KAAK2zB,MAAMtsB,OAAS,EAAG,GACnDrH,KAAK2zB,MAAMr4B,KAAK0iF,EAAQ,IACxBh+E,KAAK2zB,MAAMr4B,KAAK0iF,EAAQ,IACxB,MAEF,KAAK3O,GAAG0C,SACF/xE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,6DAE7BQ,EAAUh+E,KAAK2zB,MAAM4J,OAAOv9B,KAAK2zB,MAAMtsB,OAAS,EAAG,GACnDrH,KAAK2zB,MAAMr4B,KAAK0iF,EAAQ,IACxBh+E,KAAK2zB,MAAMr4B,KAAK0iF,EAAQ,IACxB,MAEF,KAAK3O,GAAG2C,SACFhyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,2DAE7B7jE,EAAM3Z,KAAKq/E,UAAU,GACrBL,EAASh/E,KAAKs/E,WAAW3lE,GACrBqlE,GACFh/E,KAAK2zB,MAAMr4B,KAAK,IAAIqe,IAEtB,MAEF,KAAK01D,GAAG4C,SACNt4D,EAAM,IAAI2mC,EAAUtgD,KAAK2zB,MAAMtsB,QAAQ2pD,cACvChxD,KAAK2zB,MAAMr4B,KAAKqe,GAChB,MAEF,KAAK01D,GAAG6C,QACFlyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,0DAE7Bx9E,KAAK2zB,MAAM4rD,MACX,MAEF,KAAKlQ,GAAG8C,OACFnyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,yDAE7Bx9E,KAAK2zB,MAAMr4B,KAAK,IAAI0E,KAAKq/E,UAAU,KACnC,MAEF,KAAKhQ,GAAG+C,OACFpyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,0DAE7Bx9E,KAAK2zB,MAAM4J,OAAOv9B,KAAK2zB,MAAMtsB,OAAS,EAAG,GACzC,MAEF,KAAKgoE,GAAGgD,QACFryE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,2DAE7Bx9E,KAAK2zB,MAAMr4B,KAAK,IAAI0E,KAAKq/E,UAAU,KACnC,MAEF,KAAKhQ,GAAGiD,QACR,KAAKjD,GAAGkD,QACFvyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sDAEnCxlE,EAAM3Z,KAAKq/E,UAAU,GACrB7iB,EAAKlc,EAAUsQ,cAAcj3C,EAAKijE,IAClChqE,EAAI4pD,EAAG7Z,WACP3iD,KAAK2zB,MAAM4rD,OACP3sE,EAAI,GAAKA,GAAK5S,KAAK2zB,MAAMtsB,SAC3BrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,2GAEnCxlE,EAAM3Z,KAAKq/E,UAAUzsE,EAAI,GACrBusE,IAAkB9P,GAAGkD,SACvBvyE,KAAK2zB,MAAM4J,OAAOv9B,KAAK2zB,MAAMtsB,OAASuL,EAAI,EAAG,GAE/C5S,KAAK2zB,MAAMr4B,KAAK,IAAIqe,IACpB,MAEF,KAAK01D,GAAGmD,OACFxyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,4DAE7B1+B,EAAK9+C,KAAKq/E,UAAU,GACpBppD,EAAKj2B,KAAKq/E,UAAU,GACpBlB,EAAKn+E,KAAKq/E,UAAU,GACpBr/E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAK4uB,EACpCj2B,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAK82E,EACpCn+E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAKy3C,EACpC,MAEF,KAAKuwB,GAAGoD,QACFzyE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,2DAE7B1+B,EAAK9+C,KAAKq/E,UAAU,GACpBppD,EAAKj2B,KAAKq/E,UAAU,GACpBr/E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAK4uB,EACpCj2B,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAKy3C,EACpC,MAEF,KAAKuwB,GAAGqD,QACF1yE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,2DAE7Bx9E,KAAK2zB,MAAM4J,OAAOv9B,KAAK2zB,MAAMtsB,OAAS,EAAG,EAAG,IAAIrH,KAAKq/E,UAAU,KAC/D,MAEF,KAAKhQ,GAAG6D,QACFlzE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,0DAE7BhhB,EAAK,IAAIlc,EAAUtgD,KAAKq/E,UAAU,GAAGh4E,QACrCrH,KAAK2zB,MAAMr4B,KAAKkhE,EAAGxL,eACnB,MAEF,KAAKqe,GAAG+D,OACR,KAAK/D,GAAGgE,MACR,KAAKhE,GAAGiE,OAWN,OAVItzE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,qDAEnCrB,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOt8D,KAAKq/E,UAAU,GAElBvB,EAAKz2E,SAAWi1D,EAAKj1D,QACvBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,4DAG3BA,GACN,KAAK9P,GAAG+D,OACN,IAAK,IAAIz9D,EAAI,EAAGA,EAAImoE,EAAKz2E,OAAQsO,IAC/BmoE,EAAKnoE,IAAM2mD,EAAK3mD,GAElB,MACF,KAAK05D,GAAGgE,MACN,IAAK,IAAI19D,EAAI,EAAGA,EAAImoE,EAAKz2E,OAAQsO,IAC/BmoE,EAAKnoE,IAAM2mD,EAAK3mD,GAElB,MACF,KAAK05D,GAAGiE,OACN,IAAK,IAAI39D,EAAI,EAAGA,EAAImoE,EAAKz2E,OAAQsO,IAC/BmoE,EAAKnoE,IAAM2mD,EAAK3mD,GAMtB3V,KAAK2zB,MAAM4rD,MACX,MAEF,KAAKlQ,GAAG8D,UACFnzE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,4DAE7B7jE,EAAM3Z,KAAKq/E,UAAU,GACrB,IAAK,IAAI1pE,EAAI,EAAGA,EAAIgE,EAAItS,OAAQsO,IAC9BgE,EAAIhE,IAAMgE,EAAIhE,GAEhB,MAEF,KAAK05D,GAAGmF,UACR,KAAKnF,GAAGoF,UAKN,GAJIz0E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sDAEnCrB,EAAO99E,KAAKq/E,UAAU,GACF,IAAhBvB,EAAKz2E,OACPrH,KAAK2zB,MAAM4rD,UACN,CASL,IAAIC,EARJpB,EAAM,IAAI99B,EAAUw9B,GACpBO,EAAM/9B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IACjDhqE,EAAIyrE,EAAI17B,WACJ/vC,EAAI,GACN5S,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,6DAEnCn/E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MAEPJ,IAAkB9P,GAAGmF,YACvBgL,EAAUpB,EAAI7yB,MAAM34C,IAElBusE,IAAkB9P,GAAGoF,YACvB+K,EAAUpB,EAAI3yB,MAAM74C,IAEtB,MAAM6sE,EAlkBQC,EAAC/lE,EAAezE,KACpC,MAAMtN,EAAI+R,EACV,KAAO/R,EAAEP,OAAS6N,GAChBtN,EAAE4oD,QAAQ,GAEZ,OAAO5oD,CAAC,EA6jBiB83E,CACjBF,EAAQrkC,UAAU7tC,OAAqB,EAAfwwE,EAAKz2E,QAC7By2E,EAAKz2E,QAEPrH,KAAK2zB,MAAMr4B,KAAKmkF,EAClB,CACA,MAEF,KAAKpQ,GAAGkE,SACR,KAAKlE,GAAGmE,eACFxzE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sDAEnCrB,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOt8D,KAAKq/E,UAAU,GACtBJ,EAASnvB,GAAMguB,KAAUhuB,GAAMwM,GAC/Bt8D,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAMr4B,KAAK2jF,EAAS,CAAC,GAAK,IAC3BE,IAAkB9P,GAAGmE,iBACnByL,EACFj/E,KAAK2zB,MAAM4rD,MAEXv/E,KAAKw9E,sBAAsB,iEAG/B,MAEF,KAAKnO,GAAGsE,QACR,KAAKtE,GAAGuE,QACR,KAAKvE,GAAG0E,UACR,KAAK1E,GAAG2E,OACR,KAAK3E,GAAG4E,OACR,KAAK5E,GAAG6E,aAMN,OALIl0E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sDAEnCxlE,EAAM3Z,KAAKq/E,UAAU,GACrB7iB,EAAKlc,EAAUsQ,cAAcj3C,EAAKijE,IAC1BuC,GACN,KAAK9P,GAAGsE,QACNnX,EAAKA,EAAG1Q,KAAK,GACb,MACF,KAAKujB,GAAGuE,QACNpX,EAAKA,EAAGzQ,KAAK,GACb,MACF,KAAKsjB,GAAG0E,UACNvX,EAAKA,EAAGxY,MACR,MACF,KAAKqrB,GAAG2E,OACFxX,EAAG9O,KAAK,GAAK,IACf8O,EAAKA,EAAGxY,OAEV,MACF,KAAKqrB,GAAG4E,OACNzX,EAAK,IAAIlc,EAA0B,IAAfkc,EAAG9O,KAAK,GAAY,EAAI,GAC5C,MACF,KAAK2hB,GAAG6E,aACN1X,EAAK,IAAIlc,EAA0B,IAAfkc,EAAG9O,KAAK,GAAY,EAAI,GAGhD1tD,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAMr4B,KAAKkhE,EAAGxL,eACnB,MAEF,KAAKqe,GAAG8E,OACR,KAAK9E,GAAG+E,OACR,KAAK/E,GAAGgF,OACR,KAAKhF,GAAGkF,OACR,KAAKlF,GAAGiF,OACR,KAAKjF,GAAGqF,WACR,KAAKrF,GAAGsF,UACR,KAAKtF,GAAGuF,YACR,KAAKvF,GAAGwF,kBACR,KAAKxF,GAAGyF,eACR,KAAKzF,GAAG0F,YACR,KAAK1F,GAAG2F,eACR,KAAK3F,GAAG4F,mBACR,KAAK5F,GAAG6F,sBACR,KAAK7F,GAAG8F,OACR,KAAK9F,GAAG+F,OAQN,OAPIp1E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sDAEnCf,EAAM99B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IACjDyB,EAAM/9B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IACjDpgB,EAAK,IAAIlc,EAAU,GAEX6+B,GACN,KAAK9P,GAAG8E,OACN3X,EAAK4hB,EAAIrnE,IAAIsnE,GACb,MACF,KAAKhP,GAAG+E,OACN5X,EAAK4hB,EAAI7rD,IAAI8rD,GACb,MACF,KAAKhP,GAAGgF,OACN7X,EAAK4hB,EAAIhvD,IAAIivD,GACb,MACF,KAAKhP,GAAGiF,OACc,IAAhB+J,EAAI3wB,KAAK,IACX1tD,KAAKw9E,sBAAsB,iCAE7BhhB,EAAK4hB,EAAI/xB,IAAIgyB,GACb,MACF,KAAKhP,GAAGkF,OACc,IAAhB8J,EAAI3wB,KAAK,IACX1tD,KAAKw9E,sBAAsB,iCAE7BhhB,EAAK4hB,EAAIz8B,IAAI08B,GACb,MACF,KAAKhP,GAAGqF,WACNlY,EAAK,IAAIlc,EACW,IAAhB89B,EAAI1wB,KAAK,IAA8B,IAAhB2wB,EAAI3wB,KAAK,GAAa,EAAI,GAErD,MACF,KAAK2hB,GAAGsF,UACNnY,EAAK,IAAIlc,EACW,IAAhB89B,EAAI1wB,KAAK,IAA8B,IAAhB2wB,EAAI3wB,KAAK,GAAa,EAAI,GAErD,MACF,KAAK2hB,GAAGuF,YAGR,KAAKvF,GAAGwF,kBACNrY,EAAK,IAAIlc,EAA4B,IAAjB89B,EAAIx9B,IAAIy9B,GAAc,EAAI,GAC9C,MACF,KAAKhP,GAAGyF,eACNtY,EAAK,IAAIlc,EAA4B,IAAjB89B,EAAIx9B,IAAIy9B,GAAc,EAAI,GAC9C,MACF,KAAKhP,GAAG0F,YACNvY,EAAK,IAAIlc,EAAW89B,EAAIx9B,IAAIy9B,GAAO,EAAK,EAAI,GAC5C,MACF,KAAKhP,GAAG2F,eACNxY,EAAK,IAAIlc,EAAW89B,EAAIx9B,IAAIy9B,GAAO,EAAK,EAAI,GAC5C,MACF,KAAKhP,GAAG4F,mBACNzY,EAAK,IAAIlc,EAAW89B,EAAIx9B,IAAIy9B,IAAQ,EAAK,EAAI,GAC7C,MACF,KAAKhP,GAAG6F,sBACN1Y,EAAK,IAAIlc,EAAW89B,EAAIx9B,IAAIy9B,IAAQ,EAAK,EAAI,GAC7C,MACF,KAAKhP,GAAG8F,OACN3Y,EAAM4hB,EAAIx9B,IAAIy9B,GAAO,EAAID,EAAMC,EAC/B,MACF,KAAKhP,GAAG+F,OACN5Y,EAAM4hB,EAAIx9B,IAAIy9B,GAAO,EAAID,EAAMC,EAGnCr+E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAMr4B,KAAKkhE,EAAGxL,eAEfmuB,IAAkB9P,GAAGwF,oBACnB70E,KAAKs/E,WAAWt/E,KAAKq/E,UAAU,IACjCr/E,KAAK2zB,MAAM4rD,MAEXv/E,KAAKw9E,sBAAsB,gEAG/B,MAEF,KAAKnO,GAAGgG,UACFr1E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,+DAE7BY,EAAM99B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IACjDyB,EAAM/9B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IACjD0B,EAAMh+B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IACjDoC,EAAUX,EAAIz9B,IAAIw9B,IAAQ,GAAOA,EAAIx9B,IAAI09B,GAAO,EAChDt+E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAMr4B,KAAK0jF,EAAS,CAAC,GAAK,IAC/B,MAEF,KAAK3P,GAAGiG,aACR,KAAKjG,GAAGkG,QACR,KAAKlG,GAAGmG,UACR,KAAKnG,GAAGoG,WACR,KAAKpG,GAAGqG,WACF11E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,qDAEnCxlE,EAAM3Z,KAAKq/E,UAAU,GACjBF,IAAkB9P,GAAGiG,aACvBmJ,EAAU/pE,GAAeiF,GAChBwlE,IAAkB9P,GAAGkG,QAC9BkJ,EAAU/pE,GAAUiF,GACXwlE,IAAkB9P,GAAGmG,UAC9BiJ,EAAU/pE,GAAYiF,GACbwlE,IAAkB9P,GAAGoG,WAC9BgJ,EAAU/pE,GAAaiF,GACdwlE,IAAkB9P,GAAGqG,aAC9B+I,EAAU/pE,GAAaiF,IAEzB3Z,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAMr4B,KAAKmjF,GAChB,MAEF,KAAKpP,GAAGsG,iBACN31E,KAAKg9E,kBAAoBh9E,KAAK+8E,eAC9B,MAEF,KAAK1N,GAAGuG,YACR,KAAKvG,GAAGwG,kBACF71E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sDAGnCZ,EAASv+E,KAAKq/E,UAAU,GACxBb,EAAYx+E,KAAKq/E,UAAU,GAGxBjC,EAAuBmB,IACvBb,EAAuBc,IAExBx+E,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,kEAMjCvQ,EADmB,oBAAjB5uE,KAAKw5C,QACK,IAAIwhC,GAAOh7E,KAAK88E,gBAAgB7B,OAAO3tE,MAAMtN,KAAKg9E,oBAElD,IAAIhC,GAAOh7E,KAAK+tE,cAAckN,OAAO3tE,MAAMtN,KAAKg9E,oBAI9DpO,EAAUwN,eAAc,IAAIpB,IAASiB,SAASsC,IAE9C,IACE1W,EAAMoF,GAAqB+B,mBAAmBuP,GAC9C3Y,EAASF,GAAUhI,QAAQ8gB,GAC3BU,EAAWvB,EAAgB9V,EAAKjC,EAAQgJ,EAC1C,CAAE,MAAO70E,GAEPmlF,GAAW,CACb,EAEKA,GAAYX,EAAOl3E,OAAS,GAC/BrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,+FAGnCn/E,KAAK2zB,MAAM4rD,MACXv/E,KAAK2zB,MAAM4rD,MAGXv/E,KAAK2zB,MAAMr4B,KAAK4jF,EAAW,CAAC,GAAK,IAC7BC,IAAkB9P,GAAGwG,oBACnBqJ,EACFl/E,KAAK2zB,MAAM4rD,MAEXv/E,KAAKw9E,sBAAsB,mEAG/B,MAEF,KAAKnO,GAAGyG,iBACR,KAAKzG,GAAG0G,uBAENpgE,EAAI,EACA3V,KAAK2zB,MAAMtsB,OAASsO,GACtB3V,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,mDAGnCR,EAAar+B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU1pE,GAAIinE,IAAoBj6B,YAExEg8B,EAAa,GAAKA,EAAahC,KACjC38E,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,yCAA+DxC,OAElGiC,IAASjpE,EACTA,GAAKgpE,EAMLE,EAAQF,EAAa,EAEjB3+E,KAAK2zB,MAAMtsB,OAASsO,GACtB3V,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,sFAGnCL,EAAax+B,EAAUsQ,cAAc5wD,KAAKq/E,UAAU1pE,GAAIinE,IAAoBj6B,YACxEm8B,EAAa,GAAKA,EAAaH,IACjC3+E,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,kFAEnCJ,IAASppE,EACTA,GAAKmpE,EACD9+E,KAAK2zB,MAAMtsB,OAASsO,GACtB3V,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,gGAKjCvQ,EADmB,oBAAjB5uE,KAAKw5C,QACK,IAAIwhC,GAAOh7E,KAAK88E,gBAAgB7B,OAAO3tE,MAAMtN,KAAKg9E,oBAElD,IAAIhC,GAAOh7E,KAAK+tE,cAAckN,OAAO3tE,MAAMtN,KAAKg9E,oBAI9D,IAAK,IAAIjlC,EAAI,EAAGA,EAAI+mC,EAAY/mC,IAC9BwmC,EAASv+E,KAAKq/E,UAAUN,EAAOhnC,GAC/B62B,EAAUwN,eAAc,IAAIpB,IAASiB,SAASsC,IAIhD,IADAW,GAAW,EACJA,GAAYJ,EAAa,GAAG,CAEjCP,EAASv+E,KAAKq/E,UAAUN,GAExBP,EAAYx+E,KAAKq/E,UAAUT,GAGxBxB,EAAuBmB,IACvBb,EAAuBc,IAExBx+E,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,kEAGnC,IACEtX,EAAMoF,GAAqB+B,mBAAmBuP,GAC9C3Y,EAASF,GAAUx9C,WAAW4nC,GAAM0uB,IACpCE,EAAMf,EAAgB9V,EAAKjC,EAAQgJ,EACrC,CAAE,MAAO70E,GAEP2kF,GAAM,CACR,CAEIA,IACFK,IACAD,KAEFF,IACAD,IAIIG,EAAaH,IACfO,GAAW,EAEf,CAGA,KAAOvpE,KAAM,IAERupE,IAAaL,GAAU7+E,KAAKq/E,UAAU,GAAGh4E,OAAS,GAEnDrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,6FAG/BN,EAAQ,GACVA,IAGF7+E,KAAK2zB,MAAM4rD,MASTv/E,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,iDAE/Bn/E,KAAKq/E,UAAU,GAAGh4E,OAAS,GAC7BrH,KAAKw9E,sBAAsB,GAAGnO,GAAG8P,iDAEnCn/E,KAAK2zB,MAAM4rD,MAEXv/E,KAAK2zB,MAAMr4B,KAAK4jF,EAAW,CAAC,GAAK,IAE7BC,IAAkB9P,GAAG0G,yBACnBmJ,EACFl/E,KAAK2zB,MAAM4rD,MAEXv/E,KAAKw9E,sBAAsB,+FAG/B,MAEF,KAAKnO,GAAGsD,OACF3yE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,0DAG7BM,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOt8D,KAAKq/E,UAAU,GAClBvB,EAAKz2E,OAASi1D,EAAKj1D,OAASq1E,IAC9B18E,KAAKw9E,sBAAsB,0EAE7Bx9E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAK,IAAIy2E,KAASxhB,GACjDt8D,KAAK2zB,MAAM4rD,MACX,MAEF,KAAKlQ,GAAGwD,SACF7yE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,4DAE7BM,EAAO99E,KAAKq/E,UAAU,GAGtBzsE,EAAI0tC,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IAAoBj6B,YAC/D/vC,EAAI,GAAKA,EAAIkrE,EAAKz2E,SACpBrH,KAAKw9E,sBAAsB,wIAM7BlhB,EAAO,IAAIwhB,GAGX99E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAKi1D,EAAKhvD,MAAM,EAAGsF,GAClD5S,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAKi1D,EAAKhvD,MAAMsF,GAC/C,MAEF,KAAKy8D,GAAG0D,WAuBN,GAtBI/yE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,8DAG7B5rE,EAAO0uC,EAAUsQ,cAAc5wD,KAAKq/E,UAAU,GAAIzC,IAAoBj6B,WAClE/wC,EAAO8qE,IACT18E,KAAKw9E,sBAAsB,0EAG7Bx9E,KAAK2zB,MAAM4rD,MACXtB,EAASj+E,KAAKq/E,UAAU,GAIxBpB,EAASzgB,GAAgBygB,GAErBA,EAAO52E,OAASuK,GAClB5R,KAAKw9E,sBAAsB,oJAKzBS,EAAO52E,SAAWuK,EAAM,CAC1B5R,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAK42E,EACpC,KACF,CAUA,IARAC,EAAU,EACND,EAAO52E,OAAS,IAClB62E,EAAsC,IAA5BD,EAAOA,EAAO52E,OAAS,GACjC42E,EAAOA,EAAO52E,OAAS,IAAM,KAG/BiK,EAAM,IAAIrI,MAAM2I,GAChBN,EAAIoE,KAAK,GACJ9C,EAAI,EAAGA,EAAIhB,EAAMgB,IACpBtB,EAAIsB,GAAKqrE,EAAOrrE,GAGlB,IADAA,EAAIqrE,EAAO52E,OAAS,EACbuL,IAAMhB,EAAO,GAClBN,EAAIsB,GAAK,EAGXtB,EAAIsB,GAAKsrE,EAETl+E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAKiK,EACpC,MAEF,KAAK+9D,GAAG4D,WACFjzE,KAAK2zB,MAAMtsB,OAAS,GACtBrH,KAAKw9E,sBAAsB,6DAG7BM,EAAO99E,KAAKq/E,UAAU,GACtB/iB,EAAOkB,GAAgBsgB,GAEvB99E,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAAS,GAAKi1D,EAxjCf,SAAC3iD,GAAwE,IAAzDm3C,EAAAxoD,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAqB2I,OAAO8/C,iBACrE,QAAIp3C,EAAItS,OAASypD,MAIbn3C,EAAItS,OAAS,GAOsB,KAAV,IAAtBsS,EAAIA,EAAItS,OAAS,MAMhBsS,EAAItS,QAAU,GAAsC,KAAV,IAAtBsS,EAAIA,EAAItS,OAAS,KAM/C,CAmiCWs4E,CAAmBrjB,IACtBt8D,KAAKw9E,sBAAsB,2DAE7B,MAEF,QACEx9E,KAAKw9E,sBAAsB,mBAKjCx9E,KAAK+8E,gBACP,CAaA/d,QAAAA,GAIE,IAHwCh/D,KAAK88E,gBAAgBT,cAC3Dr8E,KAAKw9E,sBAAsB,6EAG3Bx9E,KAAK6+D,SACgB,kBAAjB7+D,KAAKw5C,SAA+Bx5C,KAAK+8E,gBAAkB/8E,KAAK+tE,cAAckN,OAAO5zE,UAe3F,OAXIrH,KAAKk9E,QAAQ71E,OAAS,GACxBrH,KAAKw9E,sBAAsB,kEAGD,IAAtBx9E,KAAK2zB,MAAMtsB,QACbrH,KAAKw9E,sBAAsB,6FAG1Bx9E,KAAKs/E,WAAWt/E,KAAKq/E,UAAU,KAClCr/E,KAAKw9E,sBAAsB,kEAEtB,CACT,CAEQ6B,QAAAA,CAAU1pE,GAChB,OAAO3V,KAAK2zB,MAAM3zB,KAAK2zB,MAAMtsB,OAASsO,EACxC,CAEQ2pE,UAAAA,CAAYt1D,GAClB,IAAK,IAAIrU,EAAI,EAAGA,EAAIqU,EAAI3iB,OAAQsO,IAC9B,GAAe,IAAXqU,EAAIrU,GAEN,OAAIA,IAAMqU,EAAI3iB,OAAS,GAAgB,MAAX2iB,EAAIrU,GAMpC,OAAO,CACT,CAEQ6nE,qBAAAA,CAAuBv7D,GAC7B,MAAM,IAAItd,MAAM,4BAA4Bsd,qBAAuBjiB,KAAKotE,oCAAoCptE,KAAKqtE,+BAA+BrtE,KAAKw5C,6BAA6Bx5C,KAAK+8E,+BAA+B/8E,KAAK2zB,MAAMtsB,2BAA2BrH,KAAKi9E,SAAS51E,SAC5Q,iBCrxCY,MAAOu4E,GACnBC,YACAC,KAcA,cAAOjwB,CAAS3wC,GACd,OAAO0gE,GAAWnE,WAAWtgC,GAAQj8B,EAAK,OAC5C,CAEA,iBAAO6gE,CAAYC,GACjB,MAAMH,EAAcG,EAAO3iB,gBACrB4iB,EAAaD,EAAOxwD,YACpBswD,EAAO72E,MAAMg3E,GAAYvqE,KAAK,GAAGjQ,KAAI,IAAO,KAClD,IAAIy6E,EAAOlkE,EAAQmkE,EACnB,IAAK,IAAIC,EAAQ,EAAGA,EAAQH,EAAYG,IAAS,CAE/C,IADAD,EAAsBH,EAAO3iB,gBACtB8iB,GAAqB,CAC1BnkE,EAASgkE,EAAO3iB,gBAChB6iB,EAAQF,EAAOxwD,YACf,MAAM6wD,EAKF,CAAErkE,UACM,EAARkkE,EACFG,EAAKC,WAAY,GAEL,EAARJ,IACFG,EAAKtvE,MAAO,GAEdsvE,EAAKxuE,KAAOi+C,GAAMkwB,EAAOx1D,KAAK,IAAI0lC,YAEpC4vB,EAAKM,GAAO9kF,KAAK+kF,GACjBF,GACF,CACAL,EAAKM,GAAOG,MAAK,CAACvtE,EAAGpL,IAAMoL,EAAEgJ,OAASpU,EAAEoU,QAC1C,CACA,OAAO,IAAI4jE,GAAWC,EAAaC,EACrC,CASA,iBAAOrE,CAAY+E,GACjB,MAAMR,EAAS,IAAIhjB,GAAOwjB,GAC1B,OAAOZ,GAAWG,WAAWC,EAC/B,CAEAvgF,WAAAA,CAAaogF,EAAqBC,GAMhC9/E,KAAK6/E,YAAcA,EACnB7/E,KAAK8/E,KAAOA,EAGZ,MAAMW,EAAex3E,MAAMjJ,KAAK8/E,KAAKz4E,QAAQqO,KAAK,GAAGjQ,KAAI,IAAM,IAAIi7E,MAuBnE,IAAIC,EAtBJ3gF,KAAK8/E,KAAKr6E,KAAI,CAACm7E,EAAQpvE,KACrB,GAAsB,IAAlBovE,EAAOv5E,QAA2B,IAAXmK,EACzB,MAAM,IAAI7M,MAAM,0BAA0B6M,KAE5C,MAAMqvE,EAAsB,IAAIH,IAChCE,EAAOn7E,KAAI46E,IACT,GAAIQ,EAAoB1lF,IAAIklF,EAAKrkE,QAAS,MAAM,IAAIrX,MAAM,qBAAqB07E,EAAKrkE,sBAAsBxK,KAE1G,GADAqvE,EAAoB9pE,IAAIspE,EAAKrkE,QACd,IAAXxK,GACF,IAAK6uE,EAAKC,UACR,IAAK,IAAIhtE,EAAI,EAAGA,EAAItT,KAAK8/E,KAAKz4E,OAAQiM,IACpCmtE,EAAantE,GAAGyD,IAAIspE,EAAKrkE,QAAU1I,EAAI,QAI3C,IAAKmtE,EAAajvE,GAAQrW,IAAIklF,EAAKrkE,QACjC,MAAM,IAAIrX,MAAM,mBAAmB07E,EAAKrkE,sBAAsBxK,0BAA+BvI,MAAMsY,KAAKk/D,EAAajvE,IAAS7J,KAAK,QAEvI,GACA,IAKJ3H,KAAK8/E,KAAK,GAAGr6E,KAAI,CAAC46E,EAAM5uE,KAEtB,GADY,IAARA,IAAWkvE,EAAO3gF,KAAK8gF,YAAYT,EAAKxuE,OACxC8uE,IAAS3gF,KAAK8gF,YAAYT,EAAKxuE,MACjC,MAAM,IAAIlN,MAAM,mBAClB,GAEJ,CAOAqpE,QAAAA,GACE,MAAMH,EAAS,IAAI5R,GACnB4R,EAAOlR,eAAe38D,KAAK6/E,aAC3B,MAAMI,EAAajgF,KAAK8/E,KAAKz4E,OAC7BwmE,EAAOn8C,WAAWuuD,GAClB,IAAK,IAAIG,EAAQ,EAAGA,EAAQH,EAAYG,IAAS,CAC/C,MAAMW,EAAUx7E,OAAOxB,KAAK/D,KAAK8/E,KAAKM,IAAQ/4E,OAC9CwmE,EAAOlR,eAAeokB,GACtB,IAAK,MAAMV,KAAQrgF,KAAK8/E,KAAKM,GAAQ,CACnCvS,EAAOlR,eAAe0jB,EAAKrkE,QAC3B,IAAIkkE,EAAQ,EACRG,GAAMC,YACRJ,GAAS,GAEPG,GAAMtvE,OACRmvE,GAAS,GAEXrS,EAAOn8C,WAAWwuD,GACE,KAAP,EAARA,IACHrS,EAAO5lD,MAAMkzB,GAAQklC,EAAKxuE,KAAM,OAAOq+C,UAE3C,CACF,CACA,OAAO2d,EAAO1yB,SAChB,CAOA2U,KAAAA,GACE,OAAOA,GAAM9vD,KAAKguE,WACpB,CASA8S,WAAAA,CAAa/vE,GACS,kBAATA,IACTA,EAAO/Q,KAAK8/E,KAAK,GAAGkB,MAAKX,GAAQ30B,QAAQ20B,GAAMxuE,QAAOA,MAGxD,MAAMwU,EAAQrmB,KAAK8/E,KAAK,GAAGkB,MAAK7qE,GAAKA,EAAEtE,OAASd,IAAMiL,OACtD,GAAqB,kBAAVqK,EACT,MAAM,IAAI1hB,MAAM,yCAAyCoM,KAG3D,MAAMc,EAAQiY,GAAsBgmC,GAClCkK,GAAQ7e,GAAQrxB,EAAG,OAAOomC,WAC1BA,WACF,IAAI+wB,EAAclwE,EAClB,IAAK,IAAIS,EAAS,EAAGA,EAASxR,KAAK8/E,KAAKz4E,OAAQmK,IAAU,CACzCxR,KAAK8/E,KAAKtuE,GAAzB,MACMwK,EAASqK,GAAS7U,EAAS,EAC3B6uE,EAAOrgF,KAAKkhF,kBAAkB1vE,EAAQwK,GAC5C,GAAoB,kBAATqkE,EACT,MAAM,IAAI17E,MAAM,0BAA0B0hB,eAAmB7U,KAG7DyvE,EADEZ,EAAKC,UACOzuE,EAAKovE,EAAcA,GAEnBpvE,EADLmK,EAAS,IAAM,EACLqkE,EAAKxuE,KAAOovE,EAEZA,EAAcZ,EAAKxuE,KAE1C,CACA,OAAOovE,CACT,CAUAC,iBAAAA,CAAmB1vE,EAAgBwK,GACjC,MAAMnK,EAAQiY,GAAsBgmC,GAClCkK,GAAQ7e,GAAQrxB,EAAG,OAAOomC,WAC1BA,WAEF,IAAImwB,EAAmCrgF,KAAK8/E,KAAKtuE,GAAQwvE,MAAK7qE,GAAKA,EAAE6F,SAAWA,IAEhF,GAAIqkE,EAAM,OAAOA,EAEjB,GAAe,IAAX7uE,EAAc,OAElB,MAAM8B,EAAI9B,EAAS,EACb2E,EAAI6F,GAAU,EAEdmlE,EAAQnhF,KAAKkhF,kBAAkB5tE,EAAG6C,GACxC,IAAKgrE,IAAUA,EAAMtvE,KAAM,OAE3B,MAAMuvE,EAAQphF,KAAKkhF,kBAAkB5tE,EAAG6C,EAAI,GAC5C,IAAKirE,EAAO,OAEZ,IAAIC,EAOJ,OANuBA,EAAnBD,EAAMd,UAA2BzuE,EAAKsvE,EAAMtvE,KAAOsvE,EAAMtvE,MAA6BA,EAAKuvE,EAAMvvE,KAAOsvE,EAAMtvE,MAClHwuE,EAAO,CACLrkE,SACAnK,KAAMwvE,GAGDhB,CACT,CASA,YAAM3b,CAAQ3zD,EAAcuwE,GAC1B,MAAMX,EAAO3gF,KAAK8gF,YAAY/vE,GAE9B,aAAauwE,EAAaC,qBAAqBZ,EAAM3gF,KAAK6/E,YAC5D,CAQA2B,OAAAA,CAASC,GACP,GAAIzhF,KAAK6/E,cAAgB4B,EAAM5B,YAC7B,MAAM,IAAIl7E,MAAM,qEAIlB,GAFc3E,KAAK8gF,gBACLW,EAAMX,cAElB,MAAM,IAAIn8E,MAAM,6DAElB,MAAM+8E,EAAe,GACrB,IAAK,IAAIpuE,EAAI,EAAGA,EAAItT,KAAK8/E,KAAKz4E,OAAQiM,IAAK,CACzCouE,EAAapmF,KAAK,IAClB,IAAK,IAAI6a,EAAI,EAAGA,EAAInW,KAAK8/E,KAAKxsE,GAAGjM,OAAQ8O,IACvCurE,EAAapuE,GAAGhY,KAAK0E,KAAK8/E,KAAKxsE,GAAG6C,IAEpC,IAAK,IAAIA,EAAI,EAAGA,EAAIsrE,EAAM3B,KAAKxsE,GAAGjM,OAAQ8O,IACxC,GAAMurE,EAAapuE,GAAG0tE,MAAKX,GAAQA,EAAKrkE,SAAWylE,EAAM3B,KAAKxsE,GAAG6C,GAAG6F,UAIlE,GAAIylE,EAAM3B,KAAKxsE,GAAG6C,IAAIpF,KAAM,CACX2wE,EAAapuE,GAAG0tE,MAAKX,GAAQA,EAAKrkE,SAAWylE,EAAM3B,KAAKxsE,GAAG6C,GAAG6F,SACtEjL,MAAO,CAChB,OANA2wE,EAAapuE,GAAGhY,KAAKmmF,EAAM3B,KAAKxsE,GAAG6C,GASzC,CACAnW,KAAK8/E,KAAO4B,EACZ1hF,KAAK4tB,MACP,CAOAA,IAAAA,GACE,MAAM+zD,EAAYA,CAAC1oC,EAAWjmC,KACX,IAAbA,EAAE3L,QAAgB2L,EAAE1F,OAAO,GAAG,KAAO2rC,GAAKjmC,EAAE1X,KAAK29C,EAAG,EAGpD2oC,EAAuBA,CAACC,EAAuBzB,KACnD,IAAK,IAAIzqE,EAAIksE,EAAYx6E,OAAQsO,GAAK,EAAGA,IAAK,CAC5C,MAAMQ,EAAInW,KAAK8/E,KAAKM,GAAO0B,WAAUlvE,GAAKA,EAAEoJ,SAAW6lE,EAAYlsE,KAC/DQ,GAAK,GAAKnW,KAAK8/E,KAAKM,GAAO7iD,OAAOpnB,EAAG,EAC3C,GAGI4rE,EAAuBC,IAC3B,MAAMC,EAAiB,GACvB,IAAK,MAAMliC,KAAKiiC,EACdL,EAAU5hC,GAAK,EAAGkiC,GAEpB,OAAOA,CAAI,EAGb,IAAIC,EAA4B,GAC5BL,EAAwB,GAC5B,IAAK,IAAIvuE,EAAI,EAAGA,EAAItT,KAAK8/E,KAAKz4E,OAAQiM,IAEpCtT,KAAK8/E,KAAKxsE,GAAGitE,MAAK,CAACvtE,EAAGpL,IAAMoL,EAAEgJ,OAASpU,EAAEoU,SAE3C,IAAK,IAAI7F,EAAI,EAAGA,EAAInW,KAAK8/E,KAAK,GAAGz4E,OAAQ8O,IAAK,CAC5C,MAAMvD,EAAI5S,KAAK8/E,KAAK,GAAG3pE,GACvB,GAAIvD,EAAE7B,KAEJ4wE,EAAU/uE,EAAEoJ,QAAU,EAAGkmE,OACpB,CACL,MAAM70B,EAAQz6C,EAAEoJ,OAAS,IAAM,EACzBmmE,EAAOniF,KAAK8/E,KAAK,GAAG3pE,GAAKk3C,GAAS,EAAI,IACvC80B,EAAKpxE,MAER4wE,EAAUQ,EAAKnmE,OAAQ6lE,EAE3B,CACF,CACAD,EAAqBC,EAAa,GAClC,IAAK,IAAIvuE,EAAI,EAAGA,EAAItT,KAAK8/E,KAAKz4E,OAAQiM,IACpCuuE,EAAcK,EACdA,EAAkBH,EAAoBG,GACtCN,EAAqBC,EAAavuE,EAEtC,EClVI,MAAO8uE,GACmBC,MAA9B5iF,WAAAA,CAA8B4iF,GAAA,KAAAA,MAAAA,CAAqB,CAEnD,aAAMC,CAAS56E,EAAa66E,GAC1B,aAAa,IAAIvpF,SAAQ,CAACC,EAASC,KACjC,MAAMspF,EAAMxiF,KAAKqiF,MAAMC,QAAQ56E,EAAK66E,GAAiB9rE,IACnD,IAAIgsE,EAAO,GACXhsE,EAAIhc,GAAG,QAASkhF,IACd8G,GAAQ9G,CAAK,IAEfllE,EAAIhc,GAAG,OAAO,KACZ,MAAMioF,EAAKjsE,EAAIksE,YAAc,KAAOlsE,EAAIksE,YAAc,IAChDC,EAAYnsE,EAAIosE,QAAQ,gBACxB3oF,EAAOuoF,GAAQG,EAAU7wE,WAAW,oBAAsBhM,KAAKC,MAAMy8E,GAAQA,EACnFxpF,EAAQ,CACNyP,OAAQ+N,EAAIksE,WACZG,WAAYrsE,EAAIssE,cAChBL,KACAxoF,QACA,GACF,IAGJsoF,EAAI/nF,GAAG,SAAUN,IACfjB,EAAOiB,EAAM,IAGXooF,EAAeroF,MACjBsoF,EAAIv6D,MAAMliB,KAAKkB,UAAUs7E,EAAeroF,OAE1CsoF,EAAI9+D,KAAK,GAEb,ECzBI,MAAOs/D,GACmBC,MAA9BxjF,WAAAA,CAA8BwjF,GAAA,KAAAA,MAAAA,CAAe,CAE7C,aAAMX,CAAW56E,EAAaw7E,GAC5B,MAAMC,EAA6B,CACjCC,OAAQF,EAAQE,OAChBP,QAASK,EAAQL,QACjBJ,KAAM18E,KAAKkB,UAAUi8E,EAAQhpF,OAGzBuc,QAAYzW,KAAKijF,MAAMv7E,EAAKy7E,GAE5BjpF,EADYuc,EAAIosE,QAAQxnF,IAAI,gBACX0W,WAAW,0BAA4B0E,EAAIxE,aAAewE,EAAI3E,OAErF,MAAO,CACL4wE,GAAIjsE,EAAIisE,GACRh6E,OAAQ+N,EAAI/N,OACZo6E,WAAYrsE,EAAIqsE,WAChB5oF,KAAMA,EAEV,ECrCI,SAAUmpF,KACd,MAAMC,EAA2B,CAC/B,aAAMhB,GACJ,MAAM,IAAI39E,MAAM,8CAClB,GAGF,GAAsB,qBAAX3F,QAAkD,oBAAjBA,OAAOikF,MAEjD,OAAO,IAAID,GAAgBhkF,OAAOikF,OAC7B,GAAuB,qBAAZ7uE,QAUhB,OAAOkvE,EAPP,IACE,MAAMjB,EAAQjuE,QAAQ,SACtB,OAAO,IAAIguE,GAAiBC,EAC9B,CAAE,MAAOtoF,GACP,OAAOupF,CACT,CAIJ,CCRA,SAASC,KACP,MAAO,UAAUzzB,IAAMib,EAAAA,GAAAA,GAAO,MAChC,CAKc,MAAOyY,GACVC,IACAC,OACAC,aACAC,YACAC,cACAhB,QACQiB,WAiBjBrkF,WAAAA,CAAagkF,EAAaM,GAExB,GADA/jF,KAAKyjF,IAAMA,EACW,kBAAXM,EACT/jF,KAAK0jF,OAASK,EACd/jF,KAAK8jF,WAAaT,KAClBrjF,KAAK2jF,aAAeJ,KACpBvjF,KAAK6jF,mBAAgB7+E,EACrBhF,KAAK4jF,iBAAc5+E,MACd,CACL,MAAM,OAAE0+E,EAAM,aAAEC,EAAY,WAAEG,EAAU,cAAED,EAAa,YAAED,EAAW,QAAEf,GAAYkB,GAAU,CAAC,EAC7F/jF,KAAK0jF,OAASA,EACd1jF,KAAK8jF,WAAaA,GAAcT,KAChCrjF,KAAK2jF,aAAeA,GAAgBJ,KACpCvjF,KAAK6jF,cAAgBA,EACrB7jF,KAAK4jF,YAAcA,EACnB5jF,KAAK6iF,QAAUA,CACjB,CACF,CAQA,eAAMrlF,CAAWwmF,GACf,IAAIC,EACJ,IACEA,EAAQD,EAAGE,SACb,CAAE,MAAO/pF,GACP,GAAsB,2EAAlBA,EAAMkS,QAGR,MAAMlS,EAFN8pF,EAAQD,EAAGl0B,OAIf,CAEA,MAAMyyB,EAA2C,CAC/Ca,OAAQ,OACRP,QAAS7iF,KAAKmkF,iBACdjqF,KAAM,CAAE+pF,UAGV,IACE,MAAMG,QAAiBpkF,KAAK8jF,WAAWxB,QAAqB,GAAGtiF,KAAKyjF,YAAalB,GACjF,GAAI6B,EAAS1B,GAAI,CACf,MAAM,KAAE3xE,EAAI,UAAEszE,EAAS,SAAEC,EAAQ,aAAEC,GAAiBH,EAASlqF,KAC7D,IAAIsqF,EAAmC,CACrC97E,OAAQ,UACRqI,OACA1E,QAAS,GAAGi4E,KAAYD,KAK1B,OAHIE,IACFC,EAAaD,aAAeA,GAEvBC,CACT,CAAO,CACL,MAAMC,SAAYL,EAAS17E,OACrBswC,EAAsB,CAC1BtwC,OAAQ,QACR6a,KAAa,WAAPkhE,GAA0B,WAAPA,EAAkBL,EAAS17E,OAAOkF,WAAa,cACxE82E,YAAa,iBAEf,IAAI5+E,EAAIs+E,EAASlqF,KACjB,GAAiB,kBAAN4L,EACT,IACEA,EAAIC,KAAKC,MAAMo+E,EAASlqF,KAC1B,CAAE,MAAQ,CAWZ,MATiB,kBAAN4L,IACTkzC,EAAE2rC,KAAO7+E,EACa,kBAAXA,EAAEiL,OACXioC,EAAEjoC,KAAOjL,EAAEiL,MAEW,kBAAbjL,EAAEnM,SACXq/C,EAAE0rC,YAAc5+E,EAAEnM,SAGfq/C,CACT,CACF,CAAE,MAAO7+C,GACP,MAAO,CACLuO,OAAQ,QACR6a,KAAM,MACNmhE,YAAsC,kBAAlBvqF,EAAMkS,QACtBlS,EAAMkS,QACN,wBAER,CACF,CAEQ83E,cAAAA,GACN,MAAMtB,EAAkC,CACtC,eAAgB,mBAChB,iBAAkB7iF,KAAK2jF,cAezB,GAZI3jF,KAAK0jF,SACPb,EAAQ+B,cAAgB,UAAU5kF,KAAK0jF,UAGrC1jF,KAAK4jF,cACPf,EAAQ,iBAAmB7iF,KAAK4jF,aAG9B5jF,KAAK6jF,gBACPhB,EAAQ,mBAAqB7iF,KAAK6jF,eAGhC7jF,KAAK6iF,QACP,IAAK,MAAMx+E,KAAOrE,KAAK6iF,QACrBA,EAAQx+E,GAAOrE,KAAK6iF,QAAQx+E,GAIhC,OAAOw+E,CACT,ECvJY,MAAOgC,GACVtjF,QACAmiF,OACQD,IACAK,WAQjBrkF,WAAAA,GAAuF,IAA1E8B,EAAA+G,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmC,OAAQy7E,EAAAz7E,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAA6B,CAAC,EACpF,MAAM,OAAEo7E,EAAM,WAAEI,GAAeC,EAC/B/jF,KAAKuB,QAAUA,EACfvB,KAAKyjF,IAAM,uCAAuCliF,IAClDvB,KAAK8jF,WAAaA,GAAcT,KAChCrjF,KAAK0jF,OAASA,CAChB,CAEA,0BAAMnC,CAAsBZ,EAAcnvE,GACxC,MAAM+wE,EAAiB,CACrBa,OAAQ,MACRP,QAAS7iF,KAAK8kF,cAGVV,QAAiBpkF,KAAK8jF,WAAWxB,QAAiC,GAAGtiF,KAAKyjF,aAAajyE,WAAiB+wE,GAC9G,GAAI6B,EAAS1B,GAAI,CACf,MAAM,WAAEqC,GAAeX,EAASlqF,KAChC,OAAO6qF,IAAepE,CACxB,CAAO,GAAwB,MAApByD,EAAS17E,OAClB,OAAO,EAEP,MAAM,IAAI/D,MAAM,0CAA0C6M,0BAA+BzL,KAAKkB,UAAUm9E,EAASlqF,SAErH,CAEQ4qF,UAAAA,GACN,MAAMjC,EAAkC,CACtCmC,OAAQ,oBAOV,OAJIhlF,KAAK0jF,SACPb,EAAQ+B,cAAgB5kF,KAAK0jF,QAGxBb,CACT,EC5DK,MAAMoC,GAAa,WC6CZ,MAAOC,GACnBvhF,QACA6pE,OACAM,QACAiB,SACAoW,SACAC,WACQC,WAWR,eAAOC,CAAUC,EAAgBx0E,GAC/B,MAAMivE,EAAS,IAAIhjB,GAAOuoB,IACpB,aAAEC,EAAY,MAAEC,GAAUP,GAAYQ,cAAc1F,GAGpD2F,EAAQpgF,OAAOxB,KAAKyhF,GACpBI,EAAWD,EAAMA,EAAMt+E,OAAS,GAChCw+E,EAAa90E,GAAQ60E,EAE3B,IAAKJ,EAAaK,GAChB,MAAM,IAAIlhF,MAAM,yBAAyBkhF,6BAI3C,MAAMC,EAAmBjmF,IACvB,GAA6B,kBAAlBA,EAAIkmF,UAAwB,CACrC,MAAMjG,EAAO2F,EAAM5lF,EAAIkmF,WACvB,GAAoB,kBAATjG,EACT,MAAM,IAAIn7E,MAAM,4CAElB9E,EAAImkF,GAAGoB,WAAatF,CACtB,MACE,IAAK,IAAInqE,EAAI,EAAGA,EAAI9V,EAAImkF,GAAGxW,OAAOnmE,OAAQsO,IAAK,CAC7C,MAAMue,EAAQr0B,EAAImkF,GAAGxW,OAAO73D,GACtBqwE,EAAYR,EAAatxD,EAAMk5C,YACrC,GAAyB,kBAAd4Y,EACT,MAAM,IAAIrhF,MAAM,sCAAsCuvB,EAAMk5C,cAE9Dl5C,EAAMo6C,kBAAoB0X,EAAUhC,GACpC8B,EAAgBE,EAClB,CACF,EAKF,OAFAF,EAAgBN,EAAaK,IAEtBL,EAAaK,GAAY7B,EAClC,CAWA,qBAAOiC,CAAgBV,GACrB,MAAMvF,EAAS,IAAIhjB,GAAOuoB,GAEpB1pB,EAASmkB,EAAOnwD,eACtB,GAAe,WAAXgsC,EACF,MAAM,IAAIl3D,MAAM,6DAA6Dk3D,EAAOjuD,SAAS,QAI/F,MAAMs4E,EAAmBlG,EAAOx1D,KAAK,IAC/B27D,EAAcr2B,GAAMo2B,GAGpBE,EAAa,IAAIppB,GAAOgjB,EAAOx1D,SAC/B,aAAEg7D,EAAY,MAAEC,GAAUP,GAAYQ,cAAcU,GAG1D,IAAKZ,EAAaW,GAChB,MAAM,IAAIxhF,MAAM,iCAAiCwhF,oCAInD,MAAME,EAAa,IAAI3F,IACjB4F,EAAwBv1E,IAC5B,GAAIs1E,EAAWlrF,IAAI4V,GACjB,OAEFs1E,EAAWtvE,IAAIhG,GACf,MAAMizE,EAAKwB,EAAaz0E,GAAMizE,GAC9B,IAAK,MAAM9vD,KAAS8vD,EAAGxW,OAAQ,CAC7B,MAAM+Y,EAAYryD,EAAMk5C,WACxB,IAAKoY,EAAae,GAChB,MAAM,IAAI5hF,MAAM,+BAA+B4hF,qCAEjDD,EAAqBC,EACvB,GAGFD,EAAqBH,GAGrB,IAAK,MAAMp1E,KAAQy0E,EACjB,IAAKa,EAAWlrF,IAAI4V,GAClB,MAAM,IAAIpM,MAAM,mCAAmCoM,gCAKvD,MAAM+0E,EAAmBjmF,IACvB,GAA6B,kBAAlBA,EAAIkmF,UAAwB,CACrC,MAAMjG,EAAO2F,EAAM5lF,EAAIkmF,WACvB,GAAoB,kBAATjG,EACT,MAAM,IAAIn7E,MAAM,4CAElB9E,EAAImkF,GAAGoB,WAAatF,CACtB,MACE,IAAK,IAAInqE,EAAI,EAAGA,EAAI9V,EAAImkF,GAAGxW,OAAOnmE,OAAQsO,IAAK,CAC7C,MAAMue,EAAQr0B,EAAImkF,GAAGxW,OAAO73D,GACtBqwE,EAAYR,EAAatxD,EAAMk5C,YACrC,GAAyB,kBAAd4Y,EACT,MAAM,IAAIrhF,MAAM,sCAAsCuvB,EAAMk5C,cAE9Dl5C,EAAMo6C,kBAAoB0X,EAAUhC,GACpC8B,EAAgBE,EAClB,CACF,EAKF,OAFAF,EAAgBN,EAAaW,IAEtBX,EAAaW,GAAanC,EACnC,CAQQ,oBAAO0B,CAAe1F,GAE5B,MAAMr8E,EAAUq8E,EAAOnwD,eACvB,GAAIlsB,IAAYshF,GACd,MAAM,IAAItgF,MAAM,kCAAkCsgF,gBAAwBthF,MAI5E,MAAM6iF,EAAgBxG,EAAO3iB,gBACvBooB,EAAQ,GACd,IAAK,IAAI9vE,EAAI,EAAGA,EAAI6wE,EAAe7wE,IACjC8vE,EAAMnqF,KAAKskF,GAAWG,WAAWC,IAKnC,MAAMyG,EAAuBzG,EAAO3iB,gBAC9BmoB,EAAwE,CAAC,EAC/E,IAAK,IAAI7vE,EAAI,EAAGA,EAAI8wE,EAAsB9wE,IAAK,CAC7C,MAAMquE,EAAKkB,GAAYnF,WAAWC,GAC5BngF,EAA+C,CAAEmkF,MACjDjzE,EAAOizE,EAAG18E,GAAG,OACHokD,QAAQs0B,EAAOxwD,eAE7B3vB,EAAIkmF,UAAY/F,EAAO3iB,iBAEzBmoB,EAAaz0E,GAAQlR,CACvB,CAEA,MAAO,CAAE2lF,eAAcC,QACzB,CAOA,aAAOiB,CAAQC,GACb,MAAMx8C,EAAK,IAAI6yB,GAAO2pB,GAChBhjF,EAAUwmC,EAAGta,eACnB,GAA0B,iBAAtBigC,GAAM3lB,EAAG3f,KAAK,IAAwB,MAAM,IAAI7lB,MAAM,qBAC1D,MAAMiiF,EAAez8C,EAAGkzB,gBAClBmQ,EAA6B,GACnC,IAAK,IAAI73D,EAAI,EAAGA,EAAIixE,EAAcjxE,IAAK,CACrC,MAAMy3D,EAAatd,GAAM3lB,EAAG+yB,YAAY,KAClCmQ,EAAoBljC,EAAGta,eACvBg3D,EAAe18C,EAAGkzB,gBAClBypB,EAAY38C,EAAG3f,KAAKq8D,GACpB/J,EAAkBL,GAAgBhB,WAAWqL,GAC7CxZ,EAAWnjC,EAAGta,eACd7sB,EAAWmnC,EAAGizB,iBAAiBza,WAC/BokC,EAAsB58C,EAAGkzB,gBACzB2pB,EAAmB78C,EAAG3f,KAAKu8D,GAC3BhZ,EAAgByO,GAAcf,WAAWuL,GACzC1Y,EAAoB,IAAI4W,GAAY,KAAM,GAAI,GAAI,MACxD5W,EAAkBR,QAAU7kE,MAAMokE,EAAoB,GAAG33D,KAAK,MAC9D44D,EAAkBR,QAAQT,GAAqB,CAC7CrqE,WACA+qE,iBAEFP,EAAOlyE,KAAK,CACVgzE,oBACAlB,aACAC,oBACAyP,kBACAxP,YAEJ,CACA,MAAM2Z,EAAgB98C,EAAGkzB,gBACnByQ,EAA+B,GACrC,IAAK,IAAIn4D,EAAI,EAAGA,EAAIsxE,EAAetxE,IAAK,CACtC,MAAM3S,EAAWmnC,EAAGizB,iBAAiBza,WAC/BkkC,EAAe18C,EAAGkzB,gBAClBypB,EAAY38C,EAAG3f,KAAKq8D,GACpB9Y,EAAgByO,GAAcf,WAAWqL,GAC/ChZ,EAAQxyE,KAAK,CACX0H,WACA+qE,iBAEJ,CACA,MAAMgB,EAAW5kC,EAAGta,eACpB,OAAO,IAAIq1D,GAAYvhF,EAAS6pE,EAAQM,EAASiB,EACnD,CAiBA,yBAAOmY,CAAoB1hE,GAIzB,MAAM2kB,EAAK,IAAI6yB,GAAOx3C,GAChBgoD,EAAiE,GACjEM,EAAmE,GAEzE3jC,EAAGr1B,KAAO,EACV,MAAM8xE,EAAez8C,EAAGkzB,gBACxB,IAAK,IAAI1nD,EAAI,EAAGA,EAAIixE,EAAcjxE,IAAK,CACrCw0B,EAAGr1B,KAAO,GACV,MAAM+xE,EAAe18C,EAAGkzB,gBACxBmQ,EAAOlyE,KAAK,CAAE6rF,IAAKxxE,EAAGqG,OAAQmuB,EAAGr1B,IAAKzN,OAAQw/E,IAC9C18C,EAAGr1B,KAAO+xE,EAAe,CAC3B,CACA,MAAMI,EAAgB98C,EAAGkzB,gBACzB,IAAK,IAAI1nD,EAAI,EAAGA,EAAIsxE,EAAetxE,IAAK,CACtCw0B,EAAGr1B,KAAO,EACV,MAAM+xE,EAAe18C,EAAGkzB,gBACxByQ,EAAQxyE,KAAK,CAAE0V,KAAM2E,EAAGqG,OAAQmuB,EAAGr1B,IAAKzN,OAAQw/E,IAChD18C,EAAGr1B,KAAO+xE,CACZ,CACA,MAAO,CAAErZ,SAAQM,UACnB,CAEA,iBAAOiS,CAAY51C,GACjB,MAAMxmC,EAAUwmC,EAAGta,eACb+2D,EAAez8C,EAAGkzB,gBAClBmQ,EAA6B,GACnC,IAAK,IAAI73D,EAAI,EAAGA,EAAIixE,EAAcjxE,IAAK,CACrC,MAAMy3D,EAAatd,GAAM3lB,EAAG+yB,YAAY,KAClCmQ,EAAoBljC,EAAGta,eACvBg3D,EAAe18C,EAAGkzB,gBAClBypB,EAAY38C,EAAG3f,KAAKq8D,GACpB/J,EAAkBL,GAAgBhB,WAAWqL,GAC7CxZ,EAAWnjC,EAAGta,eACpB29C,EAAOlyE,KAAK,CACV8xE,aACAC,oBACAyP,kBACAxP,YAEJ,CACA,MAAM2Z,EAAgB98C,EAAGkzB,gBACnByQ,EAA+B,GACrC,IAAK,IAAIn4D,EAAI,EAAGA,EAAIsxE,EAAetxE,IAAK,CACtC,MAAM3S,EAAWmnC,EAAGizB,iBAAiBza,WAC/BkkC,EAAe18C,EAAGkzB,gBAClBypB,EAAY38C,EAAG3f,KAAKq8D,GACpB9Y,EAAgByO,GAAcf,WAAWqL,GAC/ChZ,EAAQxyE,KAAK,CACX0H,WACA+qE,iBAEJ,CACA,MAAMgB,EAAW5kC,EAAGta,eACpB,OAAO,IAAIq1D,GAAYvhF,EAAS6pE,EAAQM,EAASiB,EACnD,CASA,iBAAO0M,CAAYj2D,GACjB,MAAM2kB,EAAK,IAAI6yB,GAAOx3C,GACtB,OAAO0/D,GAAYnF,WAAW51C,EAChC,CASA,cAAO0lB,CAAS3wC,GACd,OAAOgmE,GAAYzJ,WAAWtgC,GAAQj8B,EAAK,OAC7C,CASA,gBAAOkoE,CAAWloE,GAChB,OAAOgmE,GAAYwB,OAAOvrC,GAAQj8B,EAAK,OACzC,CAaA,kBAAOmoE,CAAanoE,EAAanO,GAC/B,OAAOm0E,GAAYI,SAASnqC,GAAQj8B,EAAK,OAAQnO,EACnD,CAEAtR,WAAAA,GAMyB,IALvBkE,EAAA2E,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAkB,EAClBklE,EAAAllE,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAA6B,GAC7BwlE,EAAAxlE,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAA+B,GAC/BymE,EAAAzmE,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,EACnB68E,EAAA78E,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAgC,CAAC,EACjC88E,EAAuB98E,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAEvBhF,KAAK2D,QAAUA,EACf3D,KAAKwtE,OAASA,EACdxtE,KAAK8tE,QAAUA,EACf9tE,KAAK+uE,SAAWA,EAChB/uE,KAAKmlF,SAAWA,EAChBnlF,KAAKolF,WAAaA,CACpB,CAQAkC,QAAAA,CAAUpzD,GACR,GAC8B,qBAArBA,EAAMk5C,YACsB,qBAA5Bl5C,EAAMo6C,kBAEb,MAAM,IAAI3pE,MAAM,8IAGY,qBAAnBuvB,EAAMo5C,WACfp5C,EAAMo5C,SAAW,YAEnBttE,KAAKqlF,gBAAargF,EAClBhF,KAAKwtE,OAAOlyE,KAAK44B,EACnB,CAOAqzD,SAAAA,CAAWzzE,GACT9T,KAAKqlF,gBAAargF,EAClBhF,KAAK8tE,QAAQxyE,KAAKwY,EACpB,CAOA0zE,cAAAA,CAAgBrC,GACdnlF,KAAKmlF,SAAW,IACXnlF,KAAKmlF,YACLA,EAEP,CAaA,SAAMsC,CAAKC,GAAgF,IAAhDC,EAAAr/E,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAyC,QAKlF,GAJAtI,KAAKqlF,gBAAargF,EACQ,qBAAf0iF,IACTA,EAAa,IAAIE,GAAAA,EAAoB,KAEb,kBAAfF,EAAyB,CAClC,MAAMG,EAAOH,EACbA,EAAa,CACXI,WAAY/uF,SAAY8uF,EAE5B,CACA,MAAMJ,QAAYC,EAAWI,WAAW9nF,MAExC,IAAI+nF,EAAS,EACb,IAAK,MAAM7zD,KAASl0B,KAAKwtE,OAAQ,CAC/B,GAAuC,kBAA5Bt5C,EAAMo6C,kBACf,MAAM,IAAI3pE,MAAM,0EAElBojF,GAAU7zD,EAAMo6C,kBAAkBR,QAAQ55C,EAAMm5C,mBAAmBrqE,QACrE,CACA+kF,GAAUN,EACV,IAAIO,EAAc,EAClB,IAAK,MAAMj0E,KAAO/T,KAAK8tE,QAChB/5D,EAAIg0E,OAGPC,IAFAD,GAAUh0E,EAAI/Q,SAMlB,GAAI+kF,GAAUC,EAGZ,IAAK,IAAIryE,EAAI,EAAGA,EAAI3V,KAAK8tE,QAAQzmE,OAAQsO,IACnC3V,KAAK8tE,QAAQn4D,GAAGoyE,SAClB/nF,KAAK8tE,QAAQvwC,OAAO5nB,EAAG,GACvBA,SANN,CAaA,GAA2B,WAAvBgyE,EAEF,MAAM,IAAIhjF,MAAM,uBACX,GAA2B,UAAvBgjF,EAAgC,CACzC,MAAMM,EAAY3uF,KAAK4nB,MAAM6mE,EAASC,GACtC,IAAK,MAAMj0E,KAAO/T,KAAK8tE,QACjB/5D,EAAIg0E,SACNh0E,EAAI/Q,SAAWilF,EAGrB,CAbA,CAcF,CAOAC,MAAAA,GACE,IAAIC,EAAU,EACd,IAAK,MAAMj0D,KAASl0B,KAAKwtE,OAAQ,CAC/B,GAAuC,kBAA5Bt5C,EAAMo6C,kBACf,MAAM,IAAI3pE,MAAM,sFAElBwjF,GAAWj0D,EAAMo6C,kBAAkBR,QAAQ55C,EAAMm5C,mBAAmBrqE,QACtE,CACA,IAAIolF,EAAW,EACf,IAAK,MAAMt0E,KAAU9T,KAAK8tE,QACxBsa,GAAYt0E,EAAO9Q,UAAY,EAEjC,OAAOmlF,EAAUC,CACnB,CAKA,UAAMhiB,GACJpmE,KAAKqlF,gBAAargF,EAClB,IAAK,MAAM+O,KAAO/T,KAAK8tE,QACrB,GAA4B,qBAAjB/5D,EAAI/Q,SACb,MAAI+Q,EAAIg0E,OACA,IAAIpjF,MAAM,qJAEV,IAAIA,MAAM,gHAItB,MAAM0jF,QAAyBrvF,QAAQgP,IAAIhI,KAAKwtE,OAAO/nE,KAAI1M,MAAO4sB,EAAGhQ,IACb,kBAA3C3V,KAAKwtE,OAAO73D,GAAG2yE,8BACXtoF,KAAKwtE,OAAO73D,GAAG2yE,wBAAwBliB,KAAKpmE,KAAM2V,SAElD3c,QAAQC,aAAQ+L,MAGjC,IAAK,IAAI2Q,EAAI,EAAGQ,EAAInW,KAAKwtE,OAAOnmE,OAAQsO,EAAIQ,EAAGR,IACS,kBAA3C3V,KAAKwtE,OAAO73D,GAAG2yE,0BACxBtoF,KAAKwtE,OAAO73D,GAAGmnE,gBAAkBuL,EAAiB1yE,GAGxD,CAQA,eAAMnY,GAA0D,IAA/C+qF,EAAAjgF,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GCpkBV,IAAIk7E,GAAI,wBDqkBb,aAAa+E,EAAY/qF,UAAUwC,KACrC,CAOAguE,QAAAA,GACE,MAAMH,EAAS,IAAI5R,GACnB4R,EAAO77C,cAAchyB,KAAK2D,SAC1BkqE,EAAOlR,eAAe38D,KAAKwtE,OAAOnmE,QAClC,IAAK,MAAMsO,KAAK3V,KAAKwtE,OAAQ,CACC,qBAAjB73D,EAAEy3D,WACXS,EAAO5lD,MAAMtS,EAAE24D,kBAAkBz8D,QAEjCg8D,EAAOxR,aAAalhB,GAAQxlC,EAAEy3D,WAAY,QAE5CS,EAAO77C,cAAcrc,EAAE03D,mBACvB,MAAMyZ,EAAYnxE,EAAEmnE,gBAAgB9O,WACpCH,EAAOlR,eAAemqB,EAAUz/E,QAChCwmE,EAAO5lD,MAAM6+D,GACbjZ,EAAO77C,cAAcrc,EAAE23D,SACzB,CACAO,EAAOlR,eAAe38D,KAAK8tE,QAAQzmE,QACnC,IAAK,MAAM04C,KAAK//C,KAAK8tE,QAAS,CAC5BD,EAAOnR,cAAc3c,EAAE/8C,UACvB,MAAM8jF,EAAY/mC,EAAEguB,cAAcC,WAClCH,EAAOlR,eAAemqB,EAAUz/E,QAChCwmE,EAAO5lD,MAAM6+D,EACf,CAEA,OADAjZ,EAAO77C,cAAchyB,KAAK+uE,UACnBlB,EAAO1yB,SAChB,CAOAqtC,IAAAA,GACE,MAAM3a,EAAS,IAAI5R,GACnB4R,EAAO77C,cAAchyB,KAAK2D,SAC1BkqE,EAAO5lD,MAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAC7B4lD,EAAOlR,eAAe38D,KAAKwtE,OAAOnmE,QAClC,IAAK,MAAMsO,KAAK3V,KAAKwtE,OAAQ,CAC3B,GAAmC,qBAAxB73D,EAAE24D,kBACX,MAAM,IAAI3pE,MAAM,0EAEU,qBAAjBgR,EAAEy3D,WACXS,EAAO5lD,MAAMtS,EAAE24D,kBAAkBz8D,QAEjCg8D,EAAO5lD,MAAMkzB,GAAQxlC,EAAEy3D,WAAY,OAAOld,WAE5C2d,EAAO77C,cAAcrc,EAAE03D,mBACvB,MAAMyZ,EAAYnxE,EAAEmnE,gBAAgB9O,WACpCH,EAAOlR,eAAemqB,EAAUz/E,QAChCwmE,EAAO5lD,MAAM6+D,GACbjZ,EAAO77C,cAAcrc,EAAE23D,UACvBO,EAAOnR,cAAc/mD,EAAE24D,kBAAkBR,QAAQn4D,EAAE03D,mBAAmBrqE,UACtE,MAAMgkF,EAAmBrxE,EAAE24D,kBAAkBR,QAAQn4D,EAAE03D,mBAAmBU,cAAcC,WACxFH,EAAOlR,eAAeqqB,EAAiB3/E,QACvCwmE,EAAO5lD,MAAM++D,EACf,CACAnZ,EAAOlR,eAAe38D,KAAK8tE,QAAQzmE,QACnC,IAAK,MAAM04C,KAAK//C,KAAK8tE,QAAS,CAC5BD,EAAOnR,cAAc3c,EAAE/8C,UACvB,MAAM8jF,EAAY/mC,EAAEguB,cAAcC,WAClCH,EAAOlR,eAAemqB,EAAUz/E,QAChCwmE,EAAO5lD,MAAM6+D,EACf,CAEA,OADAjZ,EAAO77C,cAAchyB,KAAK+uE,UACnBlB,EAAO1yB,SAChB,CAOA+oC,OAAAA,GACE,OAAOp0B,GAAM9vD,KAAKwoF,OACpB,CAOA14B,KAAAA,GACE,OAAOA,GAAM9vD,KAAKguE,WACpB,CAOAya,SAAAA,GACE,OAAO34B,GAAM9vD,KAAK0oF,SACpB,CAOAC,eAAAA,GACE,OAAO74B,GAAM9vD,KAAK4oF,eACpB,CAQA/2E,IAAAA,CAAMioB,GACJ,IAAIjoB,EAOJ,OANI7R,KAAKqlF,WACPxzE,EAAO7R,KAAKqlF,YAEZxzE,EAAOmoD,GAAQh6D,KAAKguE,YACpBhuE,KAAKqlF,WAAaxzE,GAER,QAARioB,EACKg2B,GAAMj+C,GAERA,CACT,CAqBAvK,EAAAA,CAAIwyB,GACF,MAAMxyB,EAAK,IAAItH,KAAK6R,QAEpB,OADAvK,EAAG4oD,UACS,QAARp2B,EACKg2B,GAAMxoD,GAERA,CACT,CAWA,YAAMo9D,GAEe,IADnB4c,EAAAh5E,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GE9uBK,IAAIu8E,GF+uBTgE,EAAmBvgF,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAEnB,MAAM8jF,EAAgB,IAAIpI,IACpBqI,EAAyB,CAAC/oF,MAEhC,KAAO+oF,EAAQ1hF,OAAS,GAAG,CACzB,MAAM28E,EAAK+E,EAAQ1nE,QACbtQ,EAAOizE,EAAG18E,GAAG,OACnB,GAAIwhF,EAAc3tF,IAAI4V,GACpB,SAIF,GAA6B,kBAAlBizE,EAAGoB,WAAyB,CACrC,GAAqB,iBAAjB9D,EAAiC,CACnCwH,EAAc/xE,IAAIhG,GAClB,QACF,CAME,SALyBizE,EAAGoB,WAAW1gB,OACrC3zD,EACAuwE,GAGc,CACdwH,EAAc/xE,IAAIhG,GAClB,QACF,CAEJ,CAGA,GAAwB,qBAAb83E,EAA0B,CACnC,MAAMG,EAAO9D,GAAYwB,OAAO1C,EAAGwE,QAInC,UAHOQ,EAAKlb,QAAQ,GAAG9qE,SACvBgmF,EAAKlb,QAAQ,GAAGia,QAAS,QACnBiB,EAAKvB,IAAIoB,GACX7E,EAAGkE,SAAWc,EAAKd,SACrB,MAAM,IAAIvjF,MAAM,+CAA+CoM,oDAEnE,CAIA,IAAIk4E,EAAa,EACjB,IAAK,IAAItzE,EAAI,EAAGA,EAAIquE,EAAGxW,OAAOnmE,OAAQsO,IAAK,CACzC,MAAMue,EAAQ8vD,EAAGxW,OAAO73D,GACxB,GAAuC,kBAA5Bue,EAAMo6C,kBACf,MAAM,IAAI3pE,MAAM,kDAAkDgR,oBAAoB5E,qMAExF,GAAqC,kBAA1BmjB,EAAM4oD,gBACf,MAAM,IAAIn4E,MAAM,kDAAkDgR,oBAAoB5E,6KAExF,MAAMm4E,EAAeh1D,EAAMo6C,kBAAkBR,QAAQ55C,EAAMm5C,mBAC3D4b,GAAcC,EAAalmF,SAE3B,MAAMmmF,EAAaj1D,EAAMo6C,kBAAkBhnE,GAAG,OACzCwhF,EAAc3tF,IAAIguF,IACrBJ,EAAQztF,KAAK44B,EAAMo6C,mBAGrB,MAAMb,EAAcuW,EAAGxW,OAAO/xE,QAAO,CAAC+lB,EAAG/P,IAAQA,IAAQkE,IACzB,qBAArBue,EAAMk5C,aACfl5C,EAAMk5C,WAAa+b,GAkBrB,IAfc,IAAItM,GAAM,CACtBzP,WAAYl5C,EAAMk5C,WAClBC,kBAAmBn5C,EAAMm5C,kBACzBU,cAAemb,EAAanb,cAC5Bc,eAAgBqa,EAAalmF,SAC7B0rE,mBAAoBsV,EAAGrgF,QACvB8pE,cACAqP,gBAAiB5oD,EAAM4oD,gBACvBvP,cAAer5C,EAAMo5C,SACrBI,WAAY/3D,EACZm4D,QAASkW,EAAGlW,QACZiB,SAAUiV,EAAGjV,WAEU/P,WAGvB,OAAO,CAEX,CAGA,IAAIoqB,EAAc,EAClB,IAAK,MAAMr1E,KAAOiwE,EAAGlW,QAAS,CAC5B,GAA4B,kBAAjB/5D,EAAI/Q,SACb,MAAM,IAAI2B,MAAM,4EAElBykF,GAAer1E,EAAI/Q,QACrB,CAEA,GAAIomF,EAAcH,EAChB,OAAO,EAGTH,EAAc/xE,IAAIhG,EACpB,CAEA,OAAO,CACT,CAOA23E,MAAAA,GACE,MAAM7a,EAAS,IAAI5R,GACnB4R,EAAO77C,cAAc,YACrB,MAAMyzD,EAAsB,GACtB4D,EAAsD,GAGtDC,EAAqBtF,IACzB,MAAMnkF,EAA+C,CAAEmkF,MACjDuF,EAAoC,kBAAlBvF,EAAGoB,WAC3B,GAAImE,EAAU,CACZ,IAAIC,GAAQ,EAEZ,IAAK,IAAI7zE,EAAI,EAAGA,EAAI8vE,EAAMp+E,OAAQsO,IAAK,CACrC,GAAI8vE,EAAM9vE,KAAOquE,EAAGoB,WAAY,CAC9BvlF,EAAIkmF,UAAYpwE,EAChB6zE,GAAQ,EACR,KACF,CACA,GAAI/D,EAAM9vE,GAAGkqE,cAAgBmE,EAAGoB,WAAWvF,YAAa,CAItD,GAFc4F,EAAM9vE,GAAGmrE,gBACTkD,EAAGoB,WAAWtE,cACP,CAEnB2E,EAAM9vE,GAAG6rE,QAAQwC,EAAGoB,YACpBvlF,EAAIkmF,UAAYpwE,EAChB6zE,GAAQ,EACR,KACF,CACF,CACF,CAEKA,IACH3pF,EAAIkmF,UAAYN,EAAMp+E,OACtBo+E,EAAMnqF,KAAK0oF,EAAGoB,YAElB,CAKA,GAJkBiE,EAAII,MAAK9jE,GAAKA,EAAEq+D,GAAG18E,GAAG,SAAW08E,EAAG18E,GAAG,UAEvD+hF,EAAI74B,QAAQ3wD,IAET0pF,EACH,IAAK,IAAI5zE,EAAI,EAAGA,EAAIquE,EAAGxW,OAAOnmE,OAAQsO,IAAK,CACzC,MAAMue,EAAQ8vD,EAAGxW,OAAO73D,GACxB,GAAuC,kBAA5Bue,EAAMo6C,kBACf,MAAM,IAAI3pE,MAAM,6CAElB2kF,EAAkBp1D,EAAMo6C,kBAC1B,CACF,EAGFgb,EAAkBtpF,MAElB6tE,EAAOlR,eAAe8oB,EAAMp+E,QAC5B,IAAK,MAAMO,KAAK69E,EACd5X,EAAO5lD,MAAMrgB,EAAEomE,YAEjBH,EAAOlR,eAAe0sB,EAAIhiF,QAC1B,IAAK,MAAM2G,KAAKq7E,EACdxb,EAAO5lD,MAAMja,EAAEg2E,GAAGhW,YACS,kBAAhBhgE,EAAE+3E,WACXlY,EAAOn8C,WAAW,GAClBm8C,EAAOlR,eAAe3uD,EAAE+3E,YAExBlY,EAAOn8C,WAAW,GAGtB,OAAOm8C,EAAO1yB,SAChB,CAUAytC,YAAAA,GACE,MAAM/a,EAAS,IAAI5R,GAEnB4R,EAAO77C,cAAc,UAErB67C,EAAO5lD,MAAMjoB,KAAKsH,MAElB,MAAMoiF,EAAW1pF,KAAK0oF,SAEtB,OADA7a,EAAO5lD,MAAMyhE,GACN7b,EAAO1yB,SAChB,EGv4BI,SAAUwuC,GAAqB3wC,GACnC,MAAoB,YAAbA,EAAEtwC,MACX,CC0CA,MCvFMmzD,GAAS,4BAQF+tB,GAAaC,IACxB,MAAM9sB,EAAK,IAAId,GACfc,EAAGJ,eAAed,IAClBkB,EAAG90C,MAAMkzB,GAAQ0gB,GAAQ,SACzBkB,EAAGJ,eAAektB,EAAWxiF,QAC7B01D,EAAG90C,MAAM4hE,GACT,MAAMlwE,EAAMojD,EAAG5hB,UAEf,OADgBzmC,GAAaiF,EACf,EAWHysD,GAAO,SAAC/5D,EAAmBg+D,GAAiF,IAAzDhvC,EAAA/yB,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAyB,SACvF,MAAMwhF,EAAUF,GAAUv9E,GACpBw7D,EAAMkiB,GAAW,IAAIzpC,EAAUwpC,GAAUzf,GAAY,GAC3D,GAAa,QAAThvC,EACF,OAAOwsC,EAET,MAAMv0D,EAAI,IAAIgtC,EAAUwpC,GAClB9wC,EAAI6uB,EAAIlC,wBAAwB0E,EAAWkC,cAAej5D,GAChE,OAAOu0D,EAAI7C,UAAUhsB,GAAG,EAAM,SAChC,EAUa0rB,GAASA,CAACr4D,EAAmBw7D,EAAgBpC,KACxD,MAAMqkB,EAAUF,GAAUv9E,GAC1B,OAAO09E,GAAa,IAAIzpC,EAAUwpC,GAAUjiB,EAAKpC,EAAO,ECtC5C,MAAOukB,GACnBC,gBACAC,MACAC,kBACAC,WACAC,UACAC,QACA7kB,OACA8kB,UAAY,CACV9kB,OAAQ,SACR6kB,QAAS,UAcX7qF,WAAAA,CACEwqF,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7kB,GAEAzlE,KAAKiqF,gBAAkBA,EACvBjqF,KAAKkqF,MAAQA,EACblqF,KAAKmqF,kBAAoBA,EACzBnqF,KAAKoqF,WAAaA,EAClBpqF,KAAKqqF,UAAYA,EACjBrqF,KAAKsqF,QAAUA,EACftqF,KAAKylE,OAASA,CAChB,CAOOsG,UAAAA,GAQL,OAPA/rE,KAAKiqF,gBAAkBjqF,KAAKuqF,UAAUD,QACtCtqF,KAAKkqF,MAAQ,EACblqF,KAAKmqF,kBAAoB,CAAC,EAAG,EAAG,EAAG,GACnCnqF,KAAKoqF,WAAa,EAClBpqF,KAAKqqF,WAAYtf,EAAAA,GAAAA,GAAO,IACxB/qE,KAAKsqF,QAAUxe,GAAWC,aAC1B/rE,KAAKylE,OAASzlE,KAAKsqF,QAAQ/d,cACpBvsE,IACT,CAQO,iBAAO+rE,GACZ,OAAO,IAAI/rE,MAAO+rE,YACpB,CAQO,iBAAO7jD,CAAYjG,GACxB,OAAO,IAAIjiB,MAAOkoB,WAAWjG,EAC/B,CAQOiG,UAAAA,CAAYjG,GACjB,MAAMiqD,EAAUpQ,GAAgB75C,GAChC,OAAOjiB,KAAKy7E,WAAW,IAAIvP,EAAQrQ,UAAWqQ,EAAQhyE,MACxD,CAQO,eAAOswF,CAAUt3E,GACtB,OAAO,IAAIlT,MAAOwqF,SAASt3E,EAC7B,CAQOs3E,QAAAA,CAAUt3E,GACf,GAAIA,EAAM7L,OAAS,GACjB,MAAM,IAAI1C,MAAM,sCAElB,GAAIuO,EAAM7L,OAAS,GACjB,MAAM,IAAI1C,MAAM,gDAElB,MAAMkN,EAAiB6C,GAAgBymC,GAAQ,eAAgB,QAASjoC,GAUxE,OARAlT,KAAKkqF,MAAQ,EACblqF,KAAKmqF,kBAAoB,CAAC,EAAG,EAAG,EAAG,GACnCnqF,KAAKoqF,WAAa,EAClBpqF,KAAKqqF,UAAYx4E,EAAKvE,MAAM,GAAI,IAChCtN,KAAKiqF,gBAAkBjqF,KAAKuqF,UAAUD,QACtCtqF,KAAKsqF,QAAU,IAAIxe,GAAWj6D,EAAKvE,MAAM,EAAG,KAC5CtN,KAAKylE,OAASzlE,KAAKsqF,QAAQ/d,cAEpBvsE,IACT,CAQO,iBAAOy7E,CAAY9hE,GACxB,OAAO,IAAI3Z,MAAOy7E,WAAW9hE,EAC/B,CAQO8hE,UAAAA,CAAY9hE,GAEjB,GAAmB,KAAfA,EAAItS,OACN,MAAM,IAAI1C,MAAM,+BAElB,MAAMq7E,EAAS,IAAIhjB,GAAOrjD,GAE1B3Z,KAAKiqF,gBAAkBjK,EAAOjwD,eAC9B/vB,KAAKkqF,MAAQlK,EAAOxwD,YACpBxvB,KAAKmqF,kBAAoBnK,EAAOx1D,KAAK,GACrCxqB,KAAKoqF,WAAapK,EAAOjwD,eACzB/vB,KAAKqqF,UAAYrK,EAAOx1D,KAAK,IAC7B,MAAMigE,EAAWzK,EAAOx1D,KAAK,IAEvBkgE,EAAY1qF,KAAKiqF,kBAAoBjqF,KAAKuqF,UAAUD,QACpDK,EAAW3qF,KAAKiqF,kBAAoBjqF,KAAKuqF,UAAU9kB,OAEzD,GAAIilB,GAA6B,IAAhBD,EAAS,GACxBzqF,KAAKsqF,QAAU,IAAIxe,GAAW2e,EAASn9E,MAAM,EAAG,KAChDtN,KAAKylE,OAASzlE,KAAKsqF,QAAQ/d,kBACtB,KAAIoe,GAA6B,IAAhBF,EAAS,IAA+B,IAAhBA,EAAS,GAGvD,MAAM,IAAI9lF,MAAM,eAFhB3E,KAAKylE,OAASC,GAAUx9C,WAAW4nC,GAAM26B,GAG3C,CAEA,OAAOzqF,IACT,CAOO4N,QAAAA,GACL,MAAM4X,EAAMxlB,KAAKguE,WACjB,OAAOpS,GAAcp2C,EAAK,GAC5B,CAQOolE,MAAAA,CAAQ9K,GACb,GAAa,MAATA,EACF,OAAO9/E,KAGT,MAAMjG,EAAI+lF,EAAKhpE,MAAM,KAGrB,IAAI+zE,EAAY7qF,KAChB,IAAK,MAAM2V,KAAK5b,EAAG,CACjB,MAAMwa,EAAIxa,EAAE4b,GAEZ,GAAU,MAANA,EAAW,CACb,GAAU,MAANpB,EACF,MAAM,IAAI5P,MAAM,gBAElB,QACF,CAEA,GAAI8gB,SAASlR,EAAEoZ,QAAQ,IAAK,IAAK,IAAI/f,aAAe2G,EAAEoZ,QAAQ,IAAK,IACjE,MAAM,IAAIhpB,MAAM,gBAGlB,MAAMmmF,EAAav2E,EAAElN,OAAS,GAAyB,MAApBkN,EAAEA,EAAElN,OAAS,GAChD,IAAI+iF,EAAuE,WAA1D3kE,SAASqlE,EAAav2E,EAAEjH,MAAM,EAAGiH,EAAElN,OAAS,GAAKkN,EAAG,IAEjEu2E,IACFV,GAAc,YAGhBS,EAAQA,EAAMzgB,YAAYggB,EAC5B,CAEA,OAAOS,CACT,CAQOzgB,WAAAA,CAAaz0D,GAClB,GAAiB,kBAANA,EACT,MAAM,IAAIhR,MAAM,sBAGlB,MAAMomF,EAAgB,GACtBA,EAAIzvF,KAAMqa,GAAK,GAAM,KACrBo1E,EAAIzvF,KAAMqa,GAAK,GAAM,KACrBo1E,EAAIzvF,KAAMqa,GAAK,EAAK,KACpBo1E,EAAIzvF,KAAS,IAAJqa,GACT,MAAMq1E,EAAK,IAAID,GAETD,EAAkC,KAAhB,WAAJn1E,GAEd+0E,EAAY1qF,KAAKiqF,kBAAoBjqF,KAAKuqF,UAAUD,QAE1D,GAAIQ,KAAgB9qF,KAAKsqF,UAAYI,GACnC,MAAM,IAAI/lF,MAAM,wDAGlB,IAAIypB,EAAM,KACV,GAAIpuB,KAAKsqF,QAAS,CAChB,IAAIpwF,EAAO,KAGTA,EADE4wF,EACK,CAAC,KAAM9qF,KAAKsqF,QAAQnvC,QAAQ,KAAM,OAAQ6vC,GAE1C,IAAIhrF,KAAKylE,OAAOtjD,QAAO,MAAsB6oE,GAGtD,MAAMn5E,EAAO6C,GAAgB1U,KAAKqqF,UAAWnwF,GACvC+wF,EAAK,IAAI3qC,EAAUzuC,EAAKvE,MAAM,EAAG,KACjC49E,EAAKr5E,EAAKvE,MAAM,GAAI,IAGpByqC,EAAIkzC,EAAGl0E,IAAI/W,KAAKsqF,SAAS3oC,KAAI,IAAI6Q,IAAQ5/C,GAE/Cwb,EAAM,IAAI47D,GACV57D,EAAIi8D,UAAYa,EAEhB98D,EAAIk8D,QAAU,IAAIxe,GAAW/zB,EAAEoD,WAC/B/sB,EAAIq3C,OAASr3C,EAAIk8D,QAAQ/d,aAC3B,KAAO,CACL,MAAMryE,EAAO,IAAI8F,KAAKylE,OAAOtjD,QAAO,MAAsB6oE,GACpDn5E,EAAO6C,GAAgB1U,KAAKqqF,UAAWnwF,GACvC+wF,EAAK,IAAI3qC,EAAUzuC,EAAKvE,MAAM,EAAG,KACjC49E,EAAKr5E,EAAKvE,MAAM,GAAI,IAGpB69E,GAAM,IAAI34B,IAAQ1mB,EAAE1c,IAAI67D,GACxBG,EAAOprF,KAAKylE,OACZ/yB,EAAKy4C,EAAIp0E,IAAIq0E,GACbC,EAAS,IAAI3lB,GAAUhzB,EAAG/sB,EAAG+sB,EAAGxlB,GAEtCkB,EAAM,IAAI47D,GACV57D,EAAIi8D,UAAYa,EAEhB98D,EAAIq3C,OAAS4lB,CACf,CAEAj9D,EAAIg8D,WAAaz0E,EACjB,MAAM21E,EAAa52E,GAAa1U,KAAKylE,OAAOtjD,QAAO,IAKnD,OAJAiM,EAAI+7D,kBAAoBmB,EAAWh+E,MAAM,EAAG,GAC5C8gB,EAAI67D,gBAAkBjqF,KAAKiqF,gBAC3B77D,EAAI87D,MAAQlqF,KAAKkqF,MAAQ,EAElB97D,CACT,CAOOm9D,QAAAA,GACL,MAAMV,EAAQ,IAAIb,GAAGhqF,KAAKiqF,gBAAiBjqF,KAAKkqF,MAAOlqF,KAAKmqF,kBAAmBnqF,KAAKoqF,WAAYpqF,KAAKqqF,UAAWrqF,KAAKsqF,QAAStqF,KAAKylE,QAGnI,OAFAolB,EAAMZ,gBAAkBjqF,KAAKuqF,UAAU9kB,OACvColB,EAAMP,aAAUtlF,EACT6lF,CACT,CAOO7c,QAAAA,GACL,MAAM0c,EAAY1qF,KAAKiqF,kBAAoBjqF,KAAKuqF,UAAUD,QACpDK,EAAW3qF,KAAKiqF,kBAAoBjqF,KAAKuqF,UAAU9kB,OACzD,GAAIilB,EACF,OAAO,IAAIzuB,IACR/pC,cAAclyB,KAAKiqF,iBACnBv4D,WAAW1xB,KAAKkqF,OAChBjiE,MAAMjoB,KAAKmqF,mBACXj4D,cAAclyB,KAAKoqF,YACnBniE,MAAMjoB,KAAKqqF,WACX34D,WAAW,GACXzJ,MAAMjoB,KAAKsqF,QAAQnvC,QAAQ,KAAM,KACjCA,UACE,GAAIwvC,EACT,OAAO,IAAI1uB,IACR/pC,cAAclyB,KAAKiqF,iBACnBv4D,WAAW1xB,KAAKkqF,OAChBjiE,MAAMjoB,KAAKmqF,mBACXj4D,cAAclyB,KAAKoqF,YACnBniE,MAAMjoB,KAAKqqF,WACXpiE,MAAMjoB,KAAKylE,OAAOtjD,QAAO,IACzBg5B,UAEH,MAAM,IAAIx2C,MAAM,sCAEpB,CAOO+lF,SAAAA,GACL,OAAO1qF,KAAKiqF,kBAAoBjqF,KAAKuqF,UAAUD,OACjD,ECtWF,SAASj0D,GAAKhyB,GAGZ,IAAIuc,EAAK4qE,EAAQC,EAFZzrF,KAAK0rF,QAAQ,GAAG,GAAG,IAAI1rF,KAAK8/D,cAGjC,MAAMxnC,EAAOt4B,KAAK0rF,QAAQ,GAAG,GACvBC,EAAW3rF,KAAK0rF,QAAQ,GACxBE,EAASvnF,EAAIgD,OACnB,IAAIwkF,EAAO,EAEX,GAAe,IAAXD,GAA2B,IAAXA,GAA2B,IAAXA,EAClC,MAAM,IAAIjnF,MAAM,wBAGlB3E,KAAKqT,KAAO,CAACm4E,EAASnnF,EAAIiJ,MAAM,GAAIm+E,EAAS,IAG7C,IAAK,IAAI91E,EAAIi2E,EAAQj2E,EAAI,EAAIi2E,EAAS,GAAIj2E,IACxCiL,EAAM4qE,EAAO71E,EAAI,IAGbA,EAAIi2E,IAAW,GAAiB,IAAXA,GAAgBj2E,EAAIi2E,IAAW,KACtDhrE,EAAM0X,EAAK1X,IAAQ,KAAO,GAAK0X,EAAK1X,GAAO,GAAK,MAAQ,GAAK0X,EAAK1X,GAAO,EAAI,MAAQ,EAAI0X,EAAW,IAAN1X,GAG1FjL,EAAIi2E,IAAW,IACjBhrE,EAAMA,GAAO,EAAIA,IAAQ,GAAKirE,GAAQ,GACtCA,EAAOA,GAAQ,EAAkB,KAAbA,GAAQ,KAIhCL,EAAO71E,GAAK61E,EAAO71E,EAAIi2E,GAAUhrE,EAInC,IAAK,IAAIgK,EAAI,EAAGjV,EAAGiV,IAAKjV,IACtBiL,EAAM4qE,EAAW,EAAJ5gE,EAAQjV,EAAIA,EAAI,GAE3B81E,EAAO7gE,GADLjV,GAAK,GAAKiV,EAAI,EACJhK,EAEA+qE,EAAS,GAAGrzD,EAAK1X,IAAQ,KACnC+qE,EAAS,GAAGrzD,EAAK1X,GAAO,GAAK,MAC7B+qE,EAAS,GAAGrzD,EAAK1X,GAAO,EAAI,MAC5B+qE,EAAS,GAAGrzD,EAAW,IAAN1X,GAGzB,CAEAyV,GAAI5O,UAAY,CAOd7oB,QAAS,SAAU1E,GAAQ,OAAO8F,KAAK8rF,OAAO5xF,EAAM,EAAG,EAOvD4E,QAAS,SAAU5E,GAAQ,OAAO8F,KAAK8rF,OAAO5xF,EAAM,EAAG,EAcvDwxF,QAAS,CACP,CAAC,IAAIt0E,YAAY,KAAM,IAAIA,YAAY,KAAM,IAAIA,YAAY,KAAM,IAAIA,YAAY,KAAM,IAAIA,YAAY,MACzG,CAAC,IAAIA,YAAY,KAAM,IAAIA,YAAY,KAAM,IAAIA,YAAY,KAAM,IAAIA,YAAY,KAAM,IAAIA,YAAY,OAI3G0oD,YAAa,WACX,MAAMisB,EAAW/rF,KAAK0rF,QAAQ,GAAUC,EAAW3rF,KAAK0rF,QAAQ,GAC1DpzD,EAAOyzD,EAAS,GAAUC,EAAUL,EAAS,GACnD,IAAIh2E,EAAOgQ,EAAOsmE,EAAM,MAAMnmF,EAAI,IAAImN,WAAW,KAAYi5E,EAAK,IAAIj5E,WAAW,KAAM,IAAIgjB,EAAQC,EAAQC,EAAQhkB,EAAOg6E,EAAUC,EAGpI,IAAKz2E,EAAI,EAAGA,EAAI,IAAKA,IACnBu2E,GAAIpmF,EAAE6P,GAAKA,GAAK,EAAe,KAAVA,GAAK,IAAYA,GAAKA,EAG7C,IAAKgQ,EAAIsmE,EAAO,GAAI3zD,EAAK3S,GAAIA,GAAKsQ,GAAM,EAAGg2D,EAAOC,EAAGD,IAAS,EAY5D,IAVA95E,EAAI85E,EAAOA,GAAQ,EAAIA,GAAQ,EAAIA,GAAQ,EAAIA,GAAQ,EACvD95E,EAAIA,GAAK,EAAQ,IAAJA,EAAU,GACvBmmB,EAAK3S,GAAKxT,EACV65E,EAAQ75E,GAAKwT,EAGbwQ,EAAKrwB,EAAEowB,EAAKpwB,EAAEmwB,EAAKnwB,EAAE6f,KACrBymE,EAAY,SAALj2D,EAAsB,MAALD,EAAoB,IAALD,EAAiB,SAAJtQ,EACpDwmE,EAAc,IAAPrmF,EAAEqM,GAAiB,SAAJA,EAEjBwD,EAAI,EAAGA,EAAI,EAAGA,IACjBo2E,EAASp2E,GAAGgQ,GAAKwmE,EAAOA,GAAQ,GAAKA,IAAS,EAC9CR,EAASh2E,GAAGxD,GAAKi6E,EAAOA,GAAQ,GAAKA,IAAS,CAGpD,EASAN,OAAQ,SAAU53D,EAAOjK,GACvB,GAAqB,IAAjBiK,EAAM7sB,OACR,MAAM,IAAI1C,MAAM,0BAGlB,MAAMN,EAAMrE,KAAKqT,KAAK4W,GAEtB,IAII87B,EAAQhgB,EAAQ+9B,EAJhB9wD,EAAIkhB,EAAM,GAAK7vB,EAAI,GACnBuD,EAAIssB,EAAMjK,EAAM,EAAI,GAAK5lB,EAAI,GAC7BkQ,EAAI2f,EAAM,GAAK7vB,EAAI,GACnByB,EAAIouB,EAAMjK,EAAM,EAAI,GAAK5lB,EAAI,GAGjC,MAAMgoF,EAAehoF,EAAIgD,OAAS,EAAI,EACtC,IAAIsO,EACA22E,EAAS,EACb,MAAMv4E,EAAM,IAAIqD,YAAY,GAC1Byd,EAAQ70B,KAAK0rF,QAAQzhE,GAGjB0N,EAAK9C,EAAM,GACX+C,EAAK/C,EAAM,GACXgD,EAAKhD,EAAM,GACXiD,EAAKjD,EAAM,GACXyD,EAAOzD,EAAM,GAGnB,IAAKlf,EAAI,EAAGA,EAAI02E,EAAc12E,IAC5BowC,EAAKpuB,EAAG3kB,IAAM,IAAM4kB,EAAGhwB,GAAK,GAAK,KAAOiwB,EAAGtjB,GAAK,EAAI,KAAOujB,EAAO,IAAJhyB,GAAWzB,EAAIioF,GAC7EvmD,EAAKpO,EAAG/vB,IAAM,IAAMgwB,EAAGrjB,GAAK,GAAK,KAAOsjB,EAAG/xB,GAAK,EAAI,KAAOgyB,EAAO,IAAJ9kB,GAAW3O,EAAIioF,EAAS,GACtFxoB,EAAKnsC,EAAGpjB,IAAM,IAAMqjB,EAAG9xB,GAAK,GAAK,KAAO+xB,EAAG7kB,GAAK,EAAI,KAAO8kB,EAAO,IAAJlwB,GAAWvD,EAAIioF,EAAS,GACtFxmF,EAAI6xB,EAAG7xB,IAAM,IAAM8xB,EAAG5kB,GAAK,GAAK,KAAO6kB,EAAGjwB,GAAK,EAAI,KAAOkwB,EAAO,IAAJvjB,GAAWlQ,EAAIioF,EAAS,GACrFA,GAAU,EACVt5E,EAAI+yC,EAAIn+C,EAAIm+B,EAAIxxB,EAAIuvD,EAItB,IAAKnuD,EAAI,EAAGA,EAAI,EAAGA,IACjB5B,EAAIkW,EAAM,GAAKtU,EAAIA,GACjB2iB,EAAKtlB,IAAM,KAAO,GAClBslB,EAAK1wB,GAAK,GAAK,MAAQ,GACvB0wB,EAAK/jB,GAAK,EAAI,MAAQ,EACtB+jB,EAAS,IAAJxyB,GACLzB,EAAIioF,KACNvmC,EAAK/yC,EAAGA,EAAIpL,EAAGA,EAAI2M,EAAGA,EAAIzO,EAAGA,EAAIigD,EAGnC,OAAOhyC,CACT,iDC7KF,MAAMw4E,EACJC,MACA/sF,WAAAA,GACE,MAAMgtF,EAASA,KACb,MAAM,IAAI9nF,MAAM,sEAAsE,EAExF,GAAoB,kBAAT9K,KAELA,KAAKyf,QAAUzf,KAAKyf,OAAOyH,gBAC7B/gB,KAAKwsF,MAAQ55E,IACX,MAAMyH,EAAM,IAAIpH,WAAWL,GAG3B,OADA/Y,KAAKyf,OAAOyH,gBAAgB1G,GACrB,IAAIA,EAAI,EAGjBra,KAAKwsF,MAAQC,OAGf,IAEE,MAAMnzE,EAASlF,QAAQ,UACW,oBAAvBkF,EAAO0H,cAChBhhB,KAAKwsF,MAAQ55E,GAAK,IAAI0G,EAAO0H,YAAYpO,IAE7C,CAAE,MAAO7Y,GACPiG,KAAKwsF,MAAQC,CACf,CAEJ,CAEAxmB,QAAAA,CAAU/wD,GACR,OAAOlV,KAAKwsF,MAAMt3E,EACpB,EAGF,IAAIw3E,EAAmB,KAavB,QAAgBx3E,IACH,MAAPw3E,IACFA,EAAM,IAAIH,GAELG,EAAIzmB,SAAS/wD,kDC9CR,MAAO0yE,EAKnB/xE,MAOApW,WAAAA,CAAaoW,GACX7V,KAAK6V,MAAQA,CACf,CAQA,gBAAMiyE,CAAY9D,GAChB,MAAM2I,EAAiBh3E,GACjBA,EAAI,GAAK,GACJ,EACEA,EAAI,MACN,EACEA,EAAI,IACN,EAEA,EAIX,IAAI/D,EAAO,EACXA,GAAQ+6E,EAAc3I,EAAGxW,OAAOnmE,QAChC,IAAK,IAAIsO,EAAI,EAAGA,EAAIquE,EAAGxW,OAAOnmE,OAAQsO,IAAK,CACzC,MAAMue,EAAQ8vD,EAAGxW,OAAO73D,GAExB,IAAIkxE,EACJ,GAFAj1E,GAAQ,GAE6B,kBAA1BsiB,EAAM4oD,gBACf+J,EAAe3yD,EAAM4oD,gBAAgB9O,WAAW3mE,WAC3C,IAA6C,kBAAlC6sB,EAAMo0D,wBAGtB,MAAM,IAAI3jF,MAAM,wGAFhBkiF,QAAqB3yD,EAAMo0D,wBAAwBsE,eAAe5I,EAAIruE,EAGxE,CACA/D,GAAQ+6E,EAAc9F,GACtBj1E,GAAQi1E,CACV,CACAj1E,GAAQ+6E,EAAc3I,EAAGlW,QAAQzmE,QACjC,IAAK,MAAM0M,KAAOiwE,EAAGlW,QAAS,CAC5Bl8D,GAAQ,EACR,MAAMvK,EAAS0M,EAAIg6D,cAAcC,WAAW3mE,OAC5CuK,GAAQ+6E,EAActlF,GACtBuK,GAAQvK,CACV,CACAuK,GAAQ,EAGR,OADYtY,KAAK4lC,KAAMttB,EAAO,IAAQ5R,KAAK6V,MAE7C,2DCnEa,SAAS0mC,EAAK7gD,EAAImxF,GAC/B,OAAO,WACL,OAAOnxF,EAAG4wB,MAAMugE,EAASvkF,UAC3B,CACF,sJCAA,MAAOsF,SAAQA,GAAIrI,OAAOkiB,WACpB,eAAC7N,GAAkBrU,OAEnBunF,GAAUC,EAGbxnF,OAAOsH,OAAO,MAHQmgF,IACrB,MAAM/qE,EAAMrU,EAAS2S,KAAKysE,GAC1B,OAAOD,EAAM9qE,KAAS8qE,EAAM9qE,GAAOA,EAAI3U,MAAM,GAAI,GAAG+b,cAAc,GAFvD,IAAC0jE,EAKhB,MAAME,EAAcn0F,IAClBA,EAAOA,EAAKuwB,cACJ2jE,GAAUF,EAAOE,KAAWl0F,GAGhCo0F,EAAap0F,GAAQk0F,UAAgBA,IAAUl0F,GAS/C,QAACoQ,GAAWD,MASZkkF,EAAcD,EAAW,aAqB/B,MAAME,EAAgBH,EAAW,eA2BjC,MAAMI,EAAWH,EAAW,UAQtBI,EAAaJ,EAAW,YASxBK,EAAWL,EAAW,UAStBM,EAAYR,GAAoB,OAAVA,GAAmC,kBAAVA,EAiB/CS,EAAiBzjE,IACrB,GAAoB,WAAhB8iE,EAAO9iE,GACT,OAAO,EAGT,MAAMvC,EAAY7N,EAAeoQ,GACjC,OAAsB,OAAdvC,GAAsBA,IAAcliB,OAAOkiB,WAAkD,OAArCliB,OAAOqU,eAAe6N,OAA0BL,OAAOsmE,eAAe1jE,MAAU5C,OAAO+xB,YAAYnvB,EAAI,EAUnK2jE,EAASV,EAAW,QASpBW,EAASX,EAAW,QASpBY,EAASZ,EAAW,QASpBa,EAAab,EAAW,YAsCxBc,EAAoBd,EAAW,oBAE9Be,EAAkBC,EAAWC,EAAYC,GAAa,CAAC,iBAAkB,UAAW,WAAY,WAAW1oF,IAAIwnF,GA2BtH,SAAStxF,EAAQkE,EAAKnE,GAA+B,IAM/Cia,EACAQ,GAPoB,WAACi4E,GAAa,GAAM9lF,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEhD,GAAY,OAARzI,GAA+B,qBAARA,EAa3B,GALmB,kBAARA,IAETA,EAAM,CAACA,IAGLqJ,EAAQrJ,GAEV,IAAK8V,EAAI,EAAGQ,EAAItW,EAAIwH,OAAQsO,EAAIQ,EAAGR,IACjCja,EAAG6kB,KAAK,KAAM1gB,EAAI8V,GAAIA,EAAG9V,OAEtB,CAEL,MAAMkE,EAAOqqF,EAAa7oF,OAAO8oF,oBAAoBxuF,GAAO0F,OAAOxB,KAAKlE,GAClEqV,EAAMnR,EAAKsD,OACjB,IAAIhD,EAEJ,IAAKsR,EAAI,EAAGA,EAAIT,EAAKS,IACnBtR,EAAMN,EAAK4R,GACXja,EAAG6kB,KAAK,KAAM1gB,EAAIwE,GAAMA,EAAKxE,EAEjC,CACF,CAEA,SAASyuF,EAAQzuF,EAAKwE,GACpBA,EAAMA,EAAIglB,cACV,MAAMtlB,EAAOwB,OAAOxB,KAAKlE,GACzB,IACIwT,EADAsC,EAAI5R,EAAKsD,OAEb,KAAOsO,KAAM,GAEX,GADAtC,EAAOtP,EAAK4R,GACRtR,IAAQgP,EAAKgW,cACf,OAAOhW,EAGX,OAAO,IACT,CAEA,MAAMk7E,EAEsB,qBAAfl1E,WAAmCA,WACvB,qBAATxf,KAAuBA,KAA0B,qBAAXmF,OAAyBA,OAASyM,OAGlF+iF,EAAoBh1C,IAAa2zC,EAAY3zC,IAAYA,IAAY+0C,EAoD3E,MA8HME,GAAgBC,EAKG,qBAAfz7E,YAA8B2G,EAAe3G,YAH9C+5E,GACE0B,GAAc1B,aAAiB0B,GAHrB,IAACA,EAetB,MAiCMC,EAAa1B,EAAW,mBAWxB3uD,EAAiB,CAACt9B,IAAA,IAAC,eAACs9B,GAAet9B,EAAA,MAAK,CAACnB,EAAK+uF,IAAStwD,EAAe/d,KAAK1gB,EAAK+uF,EAAK,EAApE,CAAsErpF,OAAOkiB,WAS9FonE,EAAW5B,EAAW,UAEtB6B,EAAoBA,CAACjvF,EAAKkvF,KAC9B,MAAMC,EAAczpF,OAAO0pF,0BAA0BpvF,GAC/CqvF,EAAqB,CAAC,EAE5BvzF,EAAQqzF,GAAa,CAACG,EAAYhtF,KAChC,IAAIisB,GAC2C,KAA1CA,EAAM2gE,EAAQI,EAAYhtF,EAAMtC,MACnCqvF,EAAmB/sF,GAAQisB,GAAO+gE,EACpC,IAGF5pF,OAAO6pF,iBAAiBvvF,EAAKqvF,EAAmB,EAsD5CG,EAAQ,6BAERC,EAAQ,aAERC,EAAW,CACfD,QACAD,QACAG,YAAaH,EAAQA,EAAMI,cAAgBH,GAwB7C,MA+BMI,EAAYzC,EAAW,iBAQvB0C,EAAgB,EAAEC,EAAuBC,KAC7C,OAAID,EACKE,aAGFD,GAAyBxU,EAW7B,SAAS/hF,KAAKC,WAXsBw2F,EAWV,GAV3BxB,EAAQz0F,iBAAiB,WAAW4L,IAAoB,IAAnB,OAACsD,EAAM,KAAE9O,GAAKwL,EAC7CsD,IAAWulF,GAAWr0F,IAASmhF,GACjC0U,EAAU1oF,QAAU0oF,EAAU1uE,OAAV0uE,EACtB,IACC,GAEKhwE,IACNgwE,EAAUz0F,KAAKykB,GACfwuE,EAAQyB,YAAY3U,EAAO,IAAI,GAECt7D,GAAOo2B,WAAWp2B,GAXxB,IAAEs7D,EAAO0U,CAYxC,EAjBqB,CAkBI,oBAAjBD,aACPxC,EAAWiB,EAAQyB,cAGfC,EAAiC,qBAAnBC,eAClBA,eAAe3zC,KAAKgyC,GAAgC,qBAAZj5E,GAA2BA,EAAQ4K,UAAYyvE,EAIzF,GACEzmF,UACAkkF,gBACAtmE,SAlpBF,SAAkBkD,GAChB,OAAe,OAARA,IAAiBmjE,EAAYnjE,IAA4B,OAApBA,EAAIvqB,cAAyB0tF,EAAYnjE,EAAIvqB,cACpF6tF,EAAWtjE,EAAIvqB,YAAYqnB,WAAakD,EAAIvqB,YAAYqnB,SAASkD,EACxE,EAgpBEmmE,WApgBkBnD,IAClB,IAAIoD,EACJ,OAAOpD,IACgB,oBAAbqD,UAA2BrD,aAAiBqD,UAClD/C,EAAWN,EAAMsD,UACY,cAA1BF,EAAOtD,EAAOE,KAEL,WAAToD,GAAqB9C,EAAWN,EAAMp/E,WAAkC,sBAArBo/E,EAAMp/E,YAG/D,EA2fD2iF,kBA9nBF,SAA2BvmE,GACzB,IAAI7pB,EAMJ,OAJEA,EAD0B,qBAAhBgoB,aAAiCA,YAAYC,OAC9CD,YAAYC,OAAO4B,GAElBA,GAASA,EAAIjV,QAAYq4E,EAAcpjE,EAAIjV,QAEhD5U,CACT,EAunBEktF,WACAE,WACAiD,UA9kBgBxD,IAAmB,IAAVA,IAA4B,IAAVA,EA+kB3CQ,WACAC,gBACAO,mBACAC,YACAC,aACAC,YACAhB,cACAQ,SACAC,SACAC,SACAgB,WACAvB,aACAmD,SA9hBgBzmE,GAAQwjE,EAASxjE,IAAQsjE,EAAWtjE,EAAI0mE,MA+hBxD3C,oBACAU,eACAX,aACAnyF,UACAg1F,MAhaF,SAASA,IACP,MAAM,SAACC,GAAYpC,EAAiBxuF,OAASA,MAAQ,CAAC,EAChDG,EAAS,CAAC,EACV0wF,EAAcA,CAAC7mE,EAAK3lB,KACxB,MAAMysF,EAAYF,GAAYtC,EAAQnuF,EAAQkE,IAAQA,EAClDopF,EAActtF,EAAO2wF,KAAerD,EAAczjE,GACpD7pB,EAAO2wF,GAAaH,EAAMxwF,EAAO2wF,GAAY9mE,GACpCyjE,EAAczjE,GACvB7pB,EAAO2wF,GAAaH,EAAM,CAAC,EAAG3mE,GACrB9gB,EAAQ8gB,GACjB7pB,EAAO2wF,GAAa9mE,EAAI1c,QAExBnN,EAAO2wF,GAAa9mE,CACtB,EAGF,IAAK,IAAIrU,EAAI,EAAGQ,EAAI7N,UAAUjB,OAAQsO,EAAIQ,EAAGR,IAC3CrN,UAAUqN,IAAMha,EAAQ2M,UAAUqN,GAAIk7E,GAExC,OAAO1wF,CACT,EA6YEm2B,OAjYa,SAACtjB,EAAGpL,EAAGilF,GAA8B,IAArB,WAACuB,GAAW9lF,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAE,CAAC,EAQ5C,OAPA3M,EAAQiM,GAAG,CAACoiB,EAAK3lB,KACXwoF,GAAWS,EAAWtjE,GACxBhX,EAAE3O,GAAOk4C,EAAKvyB,EAAK6iE,GAEnB75E,EAAE3O,GAAO2lB,CACX,GACC,CAACokE,eACGp7E,CACT,EAyXE4a,KA7fY3L,GAAQA,EAAI2L,KACxB3L,EAAI2L,OAAS3L,EAAI0L,QAAQ,qCAAsC,IA6f/DojE,SAjXgB/+E,IACc,QAA1BA,EAAQ2N,WAAW,KACrB3N,EAAUA,EAAQ1E,MAAM,IAEnB0E,GA8WPg/E,SAlWeA,CAACvxF,EAAawxF,EAAkBv4C,EAAOs2C,KACtDvvF,EAAYgoB,UAAYliB,OAAOsH,OAAOokF,EAAiBxpE,UAAWunE,GAClEvvF,EAAYgoB,UAAUhoB,YAAcA,EACpC8F,OAAOoe,eAAelkB,EAAa,QAAS,CAC1CoW,MAAOo7E,EAAiBxpE,YAE1BixB,GAASnzC,OAAOib,OAAO/gB,EAAYgoB,UAAWixB,EAAM,EA6VpDw4C,aAjVmBA,CAAClL,EAAWmL,EAAS11F,EAAQ21F,KAChD,IAAI14C,EACA/iC,EACAi5E,EACJ,MAAMyC,EAAS,CAAC,EAIhB,GAFAF,EAAUA,GAAW,CAAC,EAEL,MAAbnL,EAAmB,OAAOmL,EAE9B,EAAG,CAGD,IAFAz4C,EAAQnzC,OAAO8oF,oBAAoBrI,GACnCrwE,EAAI+iC,EAAMrxC,OACHsO,KAAM,GACXi5E,EAAOl2C,EAAM/iC,GACPy7E,IAAcA,EAAWxC,EAAM5I,EAAWmL,IAAcE,EAAOzC,KACnEuC,EAAQvC,GAAQ5I,EAAU4I,GAC1ByC,EAAOzC,IAAQ,GAGnB5I,GAAuB,IAAXvqF,GAAoBme,EAAeosE,EACjD,OAASA,KAAevqF,GAAUA,EAAOuqF,EAAWmL,KAAanL,IAAczgF,OAAOkiB,WAEtF,OAAO0pE,CAAO,EA2TdrE,SACAG,aACAqE,SAjTeA,CAACrvE,EAAKsvE,EAAc1uC,KACnC5gC,EAAMsI,OAAOtI,SACIjd,IAAb69C,GAA0BA,EAAW5gC,EAAI5a,UAC3Cw7C,EAAW5gC,EAAI5a,QAEjBw7C,GAAY0uC,EAAalqF,OACzB,MAAMmqF,EAAYvvE,EAAIuB,QAAQ+tE,EAAc1uC,GAC5C,OAAsB,IAAf2uC,GAAoBA,IAAc3uC,CAAQ,EA2SjD1H,QAhSe6xC,IACf,IAAKA,EAAO,OAAO,KACnB,GAAI9jF,EAAQ8jF,GAAQ,OAAOA,EAC3B,IAAIr3E,EAAIq3E,EAAM3lF,OACd,IAAKkmF,EAAS53E,GAAI,OAAO,KACzB,MAAM0E,EAAM,IAAIpR,MAAM0M,GACtB,KAAOA,KAAM,GACX0E,EAAI1E,GAAKq3E,EAAMr3E,GAEjB,OAAO0E,CAAG,EAwRVo3E,aA7PmBA,CAAC5xF,EAAKnE,KACzB,MAEMy9C,GAFYt5C,GAAOA,EAAIunB,OAAO+xB,WAET54B,KAAK1gB,GAEhC,IAAIM,EAEJ,MAAQA,EAASg5C,EAASoB,UAAYp6C,EAAOq6C,MAAM,CACjD,MAAMk3C,EAAOvxF,EAAO0V,MACpBna,EAAG6kB,KAAK1gB,EAAK6xF,EAAK,GAAIA,EAAK,GAC7B,GAoPAC,SAzOeA,CAACC,EAAQ3vE,KACxB,IAAI4vE,EACJ,MAAMx3E,EAAM,GAEZ,KAAwC,QAAhCw3E,EAAUD,EAAOE,KAAK7vE,KAC5B5H,EAAI/e,KAAKu2F,GAGX,OAAOx3E,CAAG,EAkOVs0E,aACArwD,eAAc,EACdyzD,WAAYzzD,EACZwwD,oBACAkD,cAzLqBnyF,IACrBivF,EAAkBjvF,GAAK,CAACsvF,EAAYhtF,KAElC,GAAImrF,EAAWztF,KAA6D,IAArD,CAAC,YAAa,SAAU,UAAU2jB,QAAQrhB,GAC/D,OAAO,EAGT,MAAM0T,EAAQhW,EAAIsC,GAEbmrF,EAAWz3E,KAEhBs5E,EAAWviE,YAAa,EAEpB,aAAcuiE,EAChBA,EAAW17D,UAAW,EAInB07D,EAAW/zF,MACd+zF,EAAW/zF,IAAM,KACf,MAAMuJ,MAAM,qCAAwCxC,EAAO,IAAK,GAEpE,GACA,EAmKF8vF,YAhKkBA,CAACC,EAAeC,KAClC,MAAMtyF,EAAM,CAAC,EAEPuyF,EAAU/3E,IACdA,EAAI1e,SAAQka,IACVhW,EAAIgW,IAAS,CAAI,GACjB,EAKJ,OAFA3M,EAAQgpF,GAAiBE,EAAOF,GAAiBE,EAAO7nE,OAAO2nE,GAAep7E,MAAMq7E,IAE7EtyF,CAAG,EAsJVwyF,YAlOkBpwE,GACXA,EAAIoH,cAAcsE,QAAQ,yBAC/B,SAAkB7D,EAAGi6C,EAAIpE,GACvB,OAAOoE,EAAG0rB,cAAgB9vB,CAC5B,IA+NF3oB,KApJWA,OAqJXs7C,eAnJqBA,CAACz8E,EAAO08E,IACb,MAAT18E,GAAiB5E,OAAOgd,SAASpY,GAASA,GAASA,EAAQ08E,EAmJlEjE,UACA7iF,OAAQ8iF,EACRC,mBACAe,WACAiD,eA1IqB,WAAgD,IAA/C5gF,EAAItJ,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAG,GAAIssB,EAAQtsB,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAGinF,EAASC,YACjDvtE,EAAM,GACV,MAAM,OAAC5a,GAAUutB,EACjB,KAAOhjB,KACLqQ,GAAO2S,EAASt7B,KAAKC,SAAW8N,EAAO,GAGzC,OAAO4a,CACT,EAmIEwwE,oBA1HF,SAA6BzF,GAC3B,SAAUA,GAASM,EAAWN,EAAMsD,SAAyC,aAA9BtD,EAAM5lE,OAAOsmE,cAA+BV,EAAM5lE,OAAO+xB,UAC1G,EAyHEu5C,aAvHoB7yF,IACpB,MAAM8zB,EAAQ,IAAI1qB,MAAM,IAElB0pF,EAAQA,CAAC3pF,EAAQ2M,KAErB,GAAI63E,EAASxkF,GAAS,CACpB,GAAI2qB,EAAMnQ,QAAQxa,IAAW,EAC3B,OAGF,KAAK,WAAYA,GAAS,CACxB2qB,EAAMhe,GAAK3M,EACX,MAAMD,EAASG,EAAQF,GAAU,GAAK,CAAC,EASvC,OAPArN,EAAQqN,GAAQ,CAAC6M,EAAOxR,KACtB,MAAMuuF,EAAeD,EAAM98E,EAAOF,EAAI,IACrCw3E,EAAYyF,KAAkB7pF,EAAO1E,GAAOuuF,EAAa,IAG5Dj/D,EAAMhe,QAAK3Q,EAEJ+D,CACT,CACF,CAEA,OAAOC,CAAM,EAGf,OAAO2pF,EAAM9yF,EAAK,EAAE,EA4FpB6vF,YACAmD,WAxFkB7F,GAClBA,IAAUQ,EAASR,IAAUM,EAAWN,KAAWM,EAAWN,EAAMryC,OAAS2yC,EAAWN,EAAM8F,OAwF9FhD,aAAcH,EACdM,QCvuBF,SAAS8C,EAAW1mF,EAASkX,EAAMwgE,EAAQzB,EAAS8B,GAClDz/E,MAAM4b,KAAKvgB,MAEP2E,MAAMquF,kBACRruF,MAAMquF,kBAAkBhzF,KAAMA,KAAKP,aAEnCO,KAAK2zB,OAAS,IAAIhvB,OAASgvB,MAG7B3zB,KAAKqM,QAAUA,EACfrM,KAAKmC,KAAO,aACZohB,IAASvjB,KAAKujB,KAAOA,GACrBwgE,IAAW/jF,KAAK+jF,OAASA,GACzBzB,IAAYtiF,KAAKsiF,QAAUA,GACvB8B,IACFpkF,KAAKokF,SAAWA,EAChBpkF,KAAK0I,OAAS07E,EAAS17E,OAAS07E,EAAS17E,OAAS,KAEtD,CAEAuqF,EAAMjC,SAAS+B,EAAYpuF,MAAO,CAChCupB,OAAQ,WACN,MAAO,CAEL7hB,QAASrM,KAAKqM,QACdlK,KAAMnC,KAAKmC,KAEXuiF,YAAa1kF,KAAK0kF,YAClB/xE,OAAQ3S,KAAK2S,OAEbugF,SAAUlzF,KAAKkzF,SACfC,WAAYnzF,KAAKmzF,WACjBC,aAAcpzF,KAAKozF,aACnBz/D,MAAO3zB,KAAK2zB,MAEZowD,OAAQkP,EAAMP,aAAa1yF,KAAK+jF,QAChCxgE,KAAMvjB,KAAKujB,KACX7a,OAAQ1I,KAAK0I,OAEjB,IAGF,MAAM+e,EAAYsrE,EAAWtrE,UACvBunE,EAAc,CAAC,EAErB,CACE,uBACA,iBACA,eACA,YACA,cACA,4BACA,iBACA,mBACA,kBACA,eACA,kBACA,mBAEArzF,SAAQ4nB,IACRyrE,EAAYzrE,GAAQ,CAAC1N,MAAO0N,EAAK,IAGnChe,OAAO6pF,iBAAiB2D,EAAY/D,GACpCzpF,OAAOoe,eAAe8D,EAAW,eAAgB,CAAC5R,OAAO,IAGzDk9E,EAAWxxE,KAAO,CAACpnB,EAAOopB,EAAMwgE,EAAQzB,EAAS8B,EAAUiP,KACzD,MAAMC,EAAa/tF,OAAOsH,OAAO4a,GAgBjC,OAdAwrE,EAAM/B,aAAa/2F,EAAOm5F,GAAY,SAAgBzzF,GACpD,OAAOA,IAAQ8E,MAAM8iB,SACvB,IAAGmnE,GACe,iBAATA,IAGTmE,EAAWxyE,KAAK+yE,EAAYn5F,EAAMkS,QAASkX,EAAMwgE,EAAQzB,EAAS8B,GAElEkP,EAAWC,MAAQp5F,EAEnBm5F,EAAWnxF,KAAOhI,EAAMgI,KAExBkxF,GAAe9tF,OAAOib,OAAO8yE,EAAYD,GAElCC,CAAU,EAGnB,2BCxFA,SAASE,EAAYxG,GACnB,OAAOiG,EAAMxF,cAAcT,IAAUiG,EAAM/pF,QAAQ8jF,EACrD,CASA,SAASyG,EAAepvF,GACtB,OAAO4uF,EAAM3B,SAASjtF,EAAK,MAAQA,EAAIiJ,MAAM,GAAI,GAAKjJ,CACxD,CAWA,SAASqvF,EAAU5T,EAAMz7E,EAAKsvF,GAC5B,OAAK7T,EACEA,EAAK3yD,OAAO9oB,GAAKoB,KAAI,SAAc41E,EAAO1lE,GAG/C,OADA0lE,EAAQoY,EAAepY,IACfsY,GAAQh+E,EAAI,IAAM0lE,EAAQ,IAAMA,CAC1C,IAAG1zE,KAAKgsF,EAAO,IAAM,IALHtvF,CAMpB,CAaA,MAAMuvF,GAAaX,EAAM/B,aAAa+B,EAAO,CAAC,EAAG,MAAM,SAAgBrE,GACrE,MAAO,WAAW9gF,KAAK8gF,EACzB,IA8JA,SArIA,SAAoB/uF,EAAKg0F,EAAU3Q,GACjC,IAAK+P,EAAMzF,SAAS3tF,GAClB,MAAM,IAAIknB,UAAU,4BAItB8sE,EAAWA,GAAY,IAAyBxD,SAYhD,MAAMyD,GATN5Q,EAAU+P,EAAM/B,aAAahO,EAAS,CACpC4Q,YAAY,EACZH,MAAM,EACNI,SAAS,IACR,GAAO,SAAiBC,EAAQhrF,GAEjC,OAAQiqF,EAAM9F,YAAYnkF,EAAOgrF,GACnC,KAE2BF,WAErBG,EAAU/Q,EAAQ+Q,SAAWC,EAC7BP,EAAOzQ,EAAQyQ,KACfI,EAAU7Q,EAAQ6Q,QAElBI,GADQjR,EAAQkR,MAAwB,qBAATA,MAAwBA,OACpCnB,EAAMR,oBAAoBoB,GAEnD,IAAKZ,EAAM3F,WAAW2G,GACpB,MAAM,IAAIltE,UAAU,8BAGtB,SAASstE,EAAax+E,GACpB,GAAc,OAAVA,EAAgB,MAAO,GAE3B,GAAIo9E,EAAMtF,OAAO93E,GACf,OAAOA,EAAMy+E,cAGf,IAAKH,GAAWlB,EAAMpF,OAAOh4E,GAC3B,MAAM,IAAIk9E,EAAW,gDAGvB,OAAIE,EAAM7F,cAAcv3E,IAAUo9E,EAAMxE,aAAa54E,GAC5Cs+E,GAA2B,oBAATC,KAAsB,IAAIA,KAAK,CAACv+E,IAAU+Q,EAAOrF,KAAK1L,GAG1EA,CACT,CAYA,SAASq+E,EAAer+E,EAAOxR,EAAKy7E,GAClC,IAAIzlE,EAAMxE,EAEV,GAAIA,IAAUiqE,GAAyB,kBAAVjqE,EAC3B,GAAIo9E,EAAM3B,SAASjtF,EAAK,MAEtBA,EAAMyvF,EAAazvF,EAAMA,EAAIiJ,MAAM,GAAI,GAEvCuI,EAAQ9P,KAAKkB,UAAU4O,QAClB,GACJo9E,EAAM/pF,QAAQ2M,IAnGvB,SAAqBwE,GACnB,OAAO44E,EAAM/pF,QAAQmR,KAASA,EAAIovE,KAAK+J,EACzC,CAiGiCe,CAAY1+E,KACnCo9E,EAAMnF,WAAWj4E,IAAUo9E,EAAM3B,SAASjtF,EAAK,SAAWgW,EAAM44E,EAAM93C,QAAQtlC,IAYhF,OATAxR,EAAMovF,EAAepvF,GAErBgW,EAAI1e,SAAQ,SAAcsuC,EAAI5jB,IAC1B4sE,EAAM9F,YAAYljD,IAAc,OAAPA,GAAgB4pD,EAASvD,QAEtC,IAAZyD,EAAmBL,EAAU,CAACrvF,GAAMgiB,EAAOstE,GAAqB,OAAZI,EAAmB1vF,EAAMA,EAAM,KACnFgwF,EAAapqD,GAEjB,KACO,EAIX,QAAIupD,EAAY39E,KAIhBg+E,EAASvD,OAAOoD,EAAU5T,EAAMz7E,EAAKsvF,GAAOU,EAAax+E,KAElD,EACT,CAEA,MAAM8d,EAAQ,GAER6gE,EAAiBjvF,OAAOib,OAAOozE,GAAY,CAC/CM,iBACAG,eACAb,gBAyBF,IAAKP,EAAMzF,SAAS3tF,GAClB,MAAM,IAAIknB,UAAU,0BAKtB,OA5BA,SAAS0tE,EAAM5+E,EAAOiqE,GACpB,IAAImT,EAAM9F,YAAYt3E,GAAtB,CAEA,IAA8B,IAA1B8d,EAAMnQ,QAAQ3N,GAChB,MAAMlR,MAAM,kCAAoCm7E,EAAKn4E,KAAK,MAG5DgsB,EAAMr4B,KAAKua,GAEXo9E,EAAMt3F,QAAQka,GAAO,SAAco0B,EAAI5lC,IAKtB,OAJE4uF,EAAM9F,YAAYljD,IAAc,OAAPA,IAAgBgqD,EAAQ1zE,KAChEszE,EAAU5pD,EAAIgpD,EAAM5F,SAAShpF,GAAOA,EAAIupB,OAASvpB,EAAKy7E,EAAM0U,KAI5DC,EAAMxqD,EAAI61C,EAAOA,EAAK3yD,OAAO9oB,GAAO,CAACA,GAEzC,IAEAsvB,EAAM4rD,KAlB8B,CAmBtC,CAMAkV,CAAM50F,GAECg0F,CACT,EC5MA,SAAS1xE,GAAOF,GACd,MAAMyyE,EAAU,CACd,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,MAAO,IACP,MAAO,MAET,OAAO10D,mBAAmB/d,GAAK0L,QAAQ,oBAAoB,SAAkBjH,GAC3E,OAAOguE,EAAQhuE,EACjB,GACF,CAUA,SAASiuE,GAAqB/6F,EAAQspF,GACpCljF,KAAK40F,OAAS,GAEdh7F,GAAUi7F,GAAWj7F,EAAQoG,KAAMkjF,EACrC,CAEA,MAAMz7D,GAAYktE,GAAqBltE,UAEvCA,GAAU6oE,OAAS,SAAgBnuF,EAAM0T,GACvC7V,KAAK40F,OAAOt5F,KAAK,CAAC6G,EAAM0T,GAC1B,EAEA4R,GAAU7Z,SAAW,SAAkB8wB,GACrC,MAAMo2D,EAAUp2D,EAAU,SAAS7oB,GACjC,OAAO6oB,EAAQne,KAAKvgB,KAAM6V,EAAOsM,GACnC,EAAIA,GAEJ,OAAOniB,KAAK40F,OAAOnvF,KAAI,SAAcisF,GACnC,OAAOoD,EAAQpD,EAAK,IAAM,IAAMoD,EAAQpD,EAAK,GAC/C,GAAG,IAAI/pF,KAAK,IACd,EAEA,YC5CA,SAASwa,GAAO6H,GACd,OAAOgW,mBAAmBhW,GACxB2D,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,IACrB,CAWe,SAASonE,GAASrtF,EAAK9N,EAAQspF,GAE5C,IAAKtpF,EACH,OAAO8N,EAGT,MAAMotF,EAAU5R,GAAWA,EAAQ/gE,QAAUA,GAEvC6yE,EAAc9R,GAAWA,EAAQ+R,UAEvC,IAAIC,EAUJ,GAPEA,EADEF,EACiBA,EAAYp7F,EAAQspF,GAEpB+P,EAAMlF,kBAAkBn0F,GACzCA,EAAOgU,WACP,IAAI+mF,GAAqB/6F,EAAQspF,GAASt1E,SAASknF,GAGnDI,EAAkB,CACpB,MAAMC,EAAgBztF,EAAI8b,QAAQ,MAEX,IAAnB2xE,IACFztF,EAAMA,EAAI4F,MAAM,EAAG6nF,IAErBztF,KAA8B,IAAtBA,EAAI8b,QAAQ,KAAc,IAAM,KAAO0xE,CACjD,CAEA,OAAOxtF,CACT,CCQA,SAlEA,MACEjI,WAAAA,GACEO,KAAKo1F,SAAW,EAClB,CAUAC,GAAAA,CAAIC,EAAWC,EAAUrS,GAOvB,OANAljF,KAAKo1F,SAAS95F,KAAK,CACjBg6F,YACAC,WACAC,cAAatS,GAAUA,EAAQsS,YAC/BC,QAASvS,EAAUA,EAAQuS,QAAU,OAEhCz1F,KAAKo1F,SAAS/tF,OAAS,CAChC,CASAquF,KAAAA,CAAMpuF,GACAtH,KAAKo1F,SAAS9tF,KAChBtH,KAAKo1F,SAAS9tF,GAAM,KAExB,CAOAjH,KAAAA,GACML,KAAKo1F,WACPp1F,KAAKo1F,SAAW,GAEpB,CAYAz5F,OAAAA,CAAQD,GACNu3F,EAAMt3F,QAAQqE,KAAKo1F,UAAU,SAAwB9hF,GACzC,OAANA,GACF5X,EAAG4X,EAEP,GACF,GCjEF,IACEqiF,mBAAmB,EACnBC,mBAAmB,EACnBC,qBAAqB,GCDvB,IACEC,WAAW,EACXC,QAAS,CACPC,gBCJsC,qBAApBA,gBAAkCA,gBAAkBrB,GDKtEtE,SEN+B,qBAAbA,SAA2BA,SAAW,KFOxD+D,KGP2B,qBAATA,KAAuBA,KAAO,MHSlD6B,UAAW,CAAC,OAAQ,QAAS,OAAQ,OAAQ,MAAO,SIXhDC,GAAkC,qBAAXl3F,QAA8C,qBAAbm3F,SAExDC,GAAkC,kBAAdC,WAA0BA,gBAAarxF,EAmB3DsxF,GAAwBJ,MAC1BE,IAAc,CAAC,cAAe,eAAgB,MAAM5yE,QAAQ4yE,GAAWG,SAAW,GAWhFC,GAE2B,qBAAtBC,mBAEP58F,gBAAgB48F,mBACc,oBAAvB58F,KAAK68F,cAIVtlF,GAAS8kF,IAAiBl3F,OAAO23F,SAASC,MAAQ,mBCvCxD,OACK3D,KACA4D,ICyFL,SA9CA,SAAwBhD,GACtB,SAASiD,EAAUhX,EAAMjqE,EAAO9M,EAAQsd,GACtC,IAAIlkB,EAAO29E,EAAKz5D,KAEhB,GAAa,cAATlkB,EAAsB,OAAO,EAEjC,MAAM40F,EAAe9lF,OAAOgd,UAAU9rB,GAChC60F,EAAS3wE,GAASy5D,EAAKz4E,OAG7B,GAFAlF,GAAQA,GAAQ8wF,EAAM/pF,QAAQH,GAAUA,EAAO1B,OAASlF,EAEpD60F,EAOF,OANI/D,EAAMlB,WAAWhpF,EAAQ5G,GAC3B4G,EAAO5G,GAAQ,CAAC4G,EAAO5G,GAAO0T,GAE9B9M,EAAO5G,GAAQ0T,GAGTkhF,EAGLhuF,EAAO5G,IAAU8wF,EAAMzF,SAASzkF,EAAO5G,MAC1C4G,EAAO5G,GAAQ,IASjB,OANe20F,EAAUhX,EAAMjqE,EAAO9M,EAAO5G,GAAOkkB,IAEtC4sE,EAAM/pF,QAAQH,EAAO5G,MACjC4G,EAAO5G,GA/Cb,SAAuBkY,GACrB,MAAMxa,EAAM,CAAC,EACPkE,EAAOwB,OAAOxB,KAAKsW,GACzB,IAAI1E,EACJ,MAAMT,EAAMnR,EAAKsD,OACjB,IAAIhD,EACJ,IAAKsR,EAAI,EAAGA,EAAIT,EAAKS,IACnBtR,EAAMN,EAAK4R,GACX9V,EAAIwE,GAAOgW,EAAIhW,GAEjB,OAAOxE,CACT,CAoCqBo3F,CAAcluF,EAAO5G,MAG9B40F,CACV,CAEA,GAAI9D,EAAM9C,WAAW0D,IAAaZ,EAAM3F,WAAWuG,EAASruF,SAAU,CACpE,MAAM3F,EAAM,CAAC,EAMb,OAJAozF,EAAMxB,aAAaoC,GAAU,CAAC1xF,EAAM0T,KAClCihF,EA1EN,SAAuB30F,GAKrB,OAAO8wF,EAAMtB,SAAS,gBAAiBxvF,GAAMsD,KAAIihB,GAC3B,OAAbA,EAAM,GAAc,GAAKA,EAAM,IAAMA,EAAM,IAEtD,CAkEgBwwE,CAAc/0F,GAAO0T,EAAOhW,EAAK,EAAE,IAGxCA,CACT,CAEA,OAAO,IACT,ECzDA,MAAMwgB,GAAW,CAEf82E,aAAcC,GAEdC,QAAS,CAAC,MAAO,OAAQ,SAEzBC,iBAAkB,CAAC,SAA0Bp9F,EAAM2oF,GACjD,MAAM0U,EAAc1U,EAAQ2U,kBAAoB,GAC1CC,EAAqBF,EAAY/zE,QAAQ,qBAAuB,EAChEk0E,EAAkBzE,EAAMzF,SAAStzF,GAEnCw9F,GAAmBzE,EAAMtE,WAAWz0F,KACtCA,EAAO,IAAIm2F,SAASn2F,IAKtB,GAFmB+4F,EAAM9C,WAAWj2F,GAGlC,OAAOu9F,EAAqB1xF,KAAKkB,UAAU0wF,GAAez9F,IAASA,EAGrE,GAAI+4F,EAAM7F,cAAclzF,IACtB+4F,EAAMnsE,SAAS5sB,IACf+4F,EAAMxC,SAASv2F,IACf+4F,EAAMrF,OAAO1zF,IACb+4F,EAAMpF,OAAO3zF,IACb+4F,EAAMjF,iBAAiB9zF,GAEvB,OAAOA,EAET,GAAI+4F,EAAM1C,kBAAkBr2F,GAC1B,OAAOA,EAAK6a,OAEd,GAAIk+E,EAAMlF,kBAAkB7zF,GAE1B,OADA2oF,EAAQ+U,eAAe,mDAAmD,GACnE19F,EAAK0T,WAGd,IAAIkgF,EAEJ,GAAI4J,EAAiB,CACnB,GAAIH,EAAY/zE,QAAQ,sCAAwC,EAC9D,OCvEO,SAA0BtpB,EAAMgpF,GAC7C,OAAO2R,GAAW36F,EAAM,IAAI28F,GAASd,QAAQC,gBAAmBzwF,OAAOib,OAAO,CAC5EyzE,QAAS,SAASp+E,EAAOxR,EAAKy7E,EAAM+X,GAClC,OAAIhB,GAASiB,QAAU7E,EAAMnsE,SAASjR,IACpC7V,KAAKswF,OAAOjsF,EAAKwR,EAAMjI,SAAS,YACzB,GAGFiqF,EAAQ3D,eAAe5nE,MAAMtsB,KAAMsI,UAC5C,GACC46E,GACL,CD4De6U,CAAiB79F,EAAM8F,KAAKg4F,gBAAgBpqF,WAGrD,IAAKkgF,EAAamF,EAAMnF,WAAW5zF,KAAUq9F,EAAY/zE,QAAQ,wBAA0B,EAAG,CAC5F,MAAMy0E,EAAYj4F,KAAKm3C,KAAOn3C,KAAKm3C,IAAIk5C,SAEvC,OAAOwE,GACL/G,EAAa,CAAC,UAAW5zF,GAAQA,EACjC+9F,GAAa,IAAIA,EACjBj4F,KAAKg4F,eAET,CACF,CAEA,OAAIN,GAAmBD,GACrB5U,EAAQ+U,eAAe,oBAAoB,GAxEjD,SAAyBM,EAAUC,EAAQz5D,GACzC,GAAIu0D,EAAM5F,SAAS6K,GACjB,IAEE,OADCC,GAAUpyF,KAAKC,OAAOkyF,GAChBjF,EAAMrlE,KAAKsqE,EACpB,CAAE,MAAOn+F,GACP,GAAe,gBAAXA,EAAEoI,KACJ,MAAMpI,CAEV,CAGF,OAAQ2kC,GAAW34B,KAAKkB,WAAWixF,EACrC,CA4DaE,CAAgBl+F,IAGlBA,CACT,GAEAm+F,kBAAmB,CAAC,SAA2Bn+F,GAC7C,MAAMi9F,EAAen3F,KAAKm3F,cAAgB92E,GAAS82E,aAC7CvB,EAAoBuB,GAAgBA,EAAavB,kBACjD0C,EAAsC,SAAtBt4F,KAAKu4F,aAE3B,GAAItF,EAAM/E,WAAWh0F,IAAS+4F,EAAMjF,iBAAiB9zF,GACnD,OAAOA,EAGT,GAAIA,GAAQ+4F,EAAM5F,SAASnzF,KAAW07F,IAAsB51F,KAAKu4F,cAAiBD,GAAgB,CAChG,MACME,IADoBrB,GAAgBA,EAAaxB,oBACP2C,EAEhD,IACE,OAAOvyF,KAAKC,MAAM9L,EACpB,CAAE,MAAOH,GACP,GAAIy+F,EAAmB,CACrB,GAAe,gBAAXz+F,EAAEoI,KACJ,MAAM4wF,EAAWxxE,KAAKxnB,EAAGg5F,EAAW0F,iBAAkBz4F,KAAM,KAAMA,KAAKokF,UAEzE,MAAMrqF,CACR,CACF,CACF,CAEA,OAAOG,CACT,GAMAy8C,QAAS,EAET+hD,eAAgB,aAChBC,eAAgB,eAEhBC,kBAAmB,EACnBC,eAAgB,EAEhB1hD,IAAK,CACHk5C,SAAUwG,GAASd,QAAQ1F,SAC3B+D,KAAMyC,GAASd,QAAQ3B,MAGzB0E,eAAgB,SAAwBpwF,GACtC,OAAOA,GAAU,KAAOA,EAAS,GACnC,EAEAm6E,QAAS,CACPkW,OAAQ,CACN,OAAU,oCACV,oBAAgB/zF,KAKtBiuF,EAAMt3F,QAAQ,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,UAAWynF,IAChE/iE,GAASwiE,QAAQO,GAAU,CAAC,CAAC,IAG/B,YE1JM4V,GAAoB/F,EAAMhB,YAAY,CAC1C,MAAO,gBAAiB,iBAAkB,eAAgB,OAC1D,UAAW,OAAQ,OAAQ,oBAAqB,sBAChD,gBAAiB,WAAY,eAAgB,sBAC7C,UAAW,cAAe,eCLtBgH,GAAa7xE,OAAO,aAE1B,SAAS8xE,GAAgBC,GACvB,OAAOA,GAAU5uE,OAAO4uE,GAAQvrE,OAAOvE,aACzC,CAEA,SAAS+vE,GAAevjF,GACtB,OAAc,IAAVA,GAA4B,MAATA,EACdA,EAGFo9E,EAAM/pF,QAAQ2M,GAASA,EAAMpQ,IAAI2zF,IAAkB7uE,OAAO1U,EACnE,CAgBA,SAASwjF,GAAiB7/C,EAAS3jC,EAAOsjF,EAAQ19F,EAAQ69F,GACxD,OAAIrG,EAAM3F,WAAW7xF,GACZA,EAAO8kB,KAAKvgB,KAAM6V,EAAOsjF,IAG9BG,IACFzjF,EAAQsjF,GAGLlG,EAAM5F,SAASx3E,GAEhBo9E,EAAM5F,SAAS5xF,IACiB,IAA3Boa,EAAM2N,QAAQ/nB,GAGnBw3F,EAAMpE,SAASpzF,GACVA,EAAOqS,KAAK+H,QADrB,OANA,EASF,CAsBA,MAAM0jF,GACJ95F,WAAAA,CAAYojF,GACVA,GAAW7iF,KAAK5E,IAAIynF,EACtB,CAEAznF,GAAAA,CAAI+9F,EAAQK,EAAgBC,GAC1B,MAAM5/F,EAAOmG,KAEb,SAAS05F,EAAUC,EAAQC,EAASC,GAClC,MAAMC,EAAUZ,GAAgBU,GAEhC,IAAKE,EACH,MAAM,IAAIn1F,MAAM,0CAGlB,MAAMN,EAAM4uF,EAAM3E,QAAQz0F,EAAMigG,KAE5Bz1F,QAAqBW,IAAdnL,EAAKwK,KAAmC,IAAbw1F,QAAmC70F,IAAb60F,IAAwC,IAAdhgG,EAAKwK,MACzFxK,EAAKwK,GAAOu1F,GAAWR,GAAeO,GAE1C,CAEA,MAAMI,EAAaA,CAAClX,EAASgX,IAC3B5G,EAAMt3F,QAAQknF,GAAS,CAAC8W,EAAQC,IAAYF,EAAUC,EAAQC,EAASC,KAEzE,GAAI5G,EAAMxF,cAAc0L,IAAWA,aAAkBn5F,KAAKP,YACxDs6F,EAAWZ,EAAQK,QACd,GAAGvG,EAAM5F,SAAS8L,KAAYA,EAASA,EAAOvrE,UArEtB,iCAAiC9f,KAqEmBqrF,EArEVvrE,QAsEvEmsE,ED1EN,CAAeC,IACb,MAAMhvE,EAAS,CAAC,EAChB,IAAI3mB,EACA2lB,EACArU,EAsBJ,OApBAqkF,GAAcA,EAAWljF,MAAM,MAAMnb,SAAQ,SAAgBs+F,GAC3DtkF,EAAIskF,EAAKz2E,QAAQ,KACjBnf,EAAM41F,EAAKC,UAAU,EAAGvkF,GAAGiY,OAAOvE,cAClCW,EAAMiwE,EAAKC,UAAUvkF,EAAI,GAAGiY,QAEvBvpB,GAAQ2mB,EAAO3mB,IAAQ20F,GAAkB30F,KAIlC,eAARA,EACE2mB,EAAO3mB,GACT2mB,EAAO3mB,GAAK/I,KAAK0uB,GAEjBgB,EAAO3mB,GAAO,CAAC2lB,GAGjBgB,EAAO3mB,GAAO2mB,EAAO3mB,GAAO2mB,EAAO3mB,GAAO,KAAO2lB,EAAMA,EAE3D,IAEOgB,CACR,EC+CgBmvE,CAAahB,GAASK,QAC5B,GAAIvG,EAAM9E,UAAUgL,GACzB,IAAK,MAAO90F,EAAKwR,KAAUsjF,EAAO3zF,UAChCk0F,EAAU7jF,EAAOxR,EAAKo1F,QAGd,MAAVN,GAAkBO,EAAUF,EAAgBL,EAAQM,GAGtD,OAAOz5F,IACT,CAEA3E,GAAAA,CAAI89F,EAAQhB,GAGV,GAFAgB,EAASD,GAAgBC,GAEb,CACV,MAAM90F,EAAM4uF,EAAM3E,QAAQtuF,KAAMm5F,GAEhC,GAAI90F,EAAK,CACP,MAAMwR,EAAQ7V,KAAKqE,GAEnB,IAAK8zF,EACH,OAAOtiF,EAGT,IAAe,IAAXsiF,EACF,OA5GV,SAAqBl2E,GACnB,MAAMm5D,EAAS71E,OAAOsH,OAAO,MACvButF,EAAW,mCACjB,IAAI1zE,EAEJ,KAAQA,EAAQ0zE,EAAStI,KAAK7vE,IAC5Bm5D,EAAO10D,EAAM,IAAMA,EAAM,GAG3B,OAAO00D,CACT,CAkGiBif,CAAYxkF,GAGrB,GAAIo9E,EAAM3F,WAAW6K,GACnB,OAAOA,EAAO53E,KAAKvgB,KAAM6V,EAAOxR,GAGlC,GAAI4uF,EAAMpE,SAASsJ,GACjB,OAAOA,EAAOrG,KAAKj8E,GAGrB,MAAM,IAAIkR,UAAU,yCACtB,CACF,CACF,CAEA5rB,GAAAA,CAAIg+F,EAAQmB,GAGV,GAFAnB,EAASD,GAAgBC,GAEb,CACV,MAAM90F,EAAM4uF,EAAM3E,QAAQtuF,KAAMm5F,GAEhC,SAAU90F,QAAqBW,IAAdhF,KAAKqE,IAAwBi2F,IAAWjB,GAAiBr5F,EAAMA,KAAKqE,GAAMA,EAAKi2F,GAClG,CAEA,OAAO,CACT,CAEAC,OAAOpB,EAAQmB,GACb,MAAMzgG,EAAOmG,KACb,IAAIw6F,GAAU,EAEd,SAASC,EAAab,GAGpB,GAFAA,EAAUV,GAAgBU,GAEb,CACX,MAAMv1F,EAAM4uF,EAAM3E,QAAQz0F,EAAM+/F,IAE5Bv1F,GAASi2F,IAAWjB,GAAiBx/F,EAAMA,EAAKwK,GAAMA,EAAKi2F,YACtDzgG,EAAKwK,GAEZm2F,GAAU,EAEd,CACF,CAQA,OANIvH,EAAM/pF,QAAQiwF,GAChBA,EAAOx9F,QAAQ8+F,GAEfA,EAAatB,GAGRqB,CACT,CAEAn6F,KAAAA,CAAMi6F,GACJ,MAAMv2F,EAAOwB,OAAOxB,KAAK/D,MACzB,IAAI2V,EAAI5R,EAAKsD,OACTmzF,GAAU,EAEd,KAAO7kF,KAAK,CACV,MAAMtR,EAAMN,EAAK4R,GACb2kF,IAAWjB,GAAiBr5F,EAAMA,KAAKqE,GAAMA,EAAKi2F,GAAS,YACtDt6F,KAAKqE,GACZm2F,GAAU,EAEd,CAEA,OAAOA,CACT,CAEAp1E,SAAAA,CAAU+X,GACR,MAAMtjC,EAAOmG,KACP6iF,EAAU,CAAC,EAsBjB,OApBAoQ,EAAMt3F,QAAQqE,MAAM,CAAC6V,EAAOsjF,KAC1B,MAAM90F,EAAM4uF,EAAM3E,QAAQzL,EAASsW,GAEnC,GAAI90F,EAGF,OAFAxK,EAAKwK,GAAO+0F,GAAevjF,eACpBhc,EAAKs/F,GAId,MAAMuB,EAAav9D,EA9JzB,SAAsBg8D,GACpB,OAAOA,EAAOvrE,OACXvE,cAAcsE,QAAQ,mBAAmB,CAACurB,EAAGr5B,EAAMoC,IAC3CpC,EAAK4vE,cAAgBxtE,GAElC,CAyJkC04E,CAAaxB,GAAU5uE,OAAO4uE,GAAQvrE,OAE9D8sE,IAAevB,UACVt/F,EAAKs/F,GAGdt/F,EAAK6gG,GAActB,GAAevjF,GAElCgtE,EAAQ6X,IAAc,CAAI,IAGrB16F,IACT,CAEAmtB,MAAAA,GAAmB,QAAAha,EAAA7K,UAAAjB,OAATuzF,EAAO,IAAA3xF,MAAAkK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPunF,EAAOvnF,GAAA/K,UAAA+K,GACf,OAAOrT,KAAKP,YAAY0tB,OAAOntB,QAAS46F,EAC1C,CAEA1sE,MAAAA,CAAO2sE,GACL,MAAMh7F,EAAM0F,OAAOsH,OAAO,MAM1B,OAJAomF,EAAMt3F,QAAQqE,MAAM,CAAC6V,EAAOsjF,KACjB,MAATtjF,IAA2B,IAAVA,IAAoBhW,EAAIs5F,GAAU0B,GAAa5H,EAAM/pF,QAAQ2M,GAASA,EAAMlO,KAAK,MAAQkO,EAAM,IAG3GhW,CACT,CAEA,CAACunB,OAAO+xB,YACN,OAAO5zC,OAAOC,QAAQxF,KAAKkuB,UAAU9G,OAAO+xB,WAC9C,CAEAvrC,QAAAA,GACE,OAAOrI,OAAOC,QAAQxF,KAAKkuB,UAAUzoB,KAAIzE,IAAA,IAAEm4F,EAAQtjF,GAAM7U,EAAA,OAAKm4F,EAAS,KAAOtjF,CAAK,IAAElO,KAAK,KAC5F,CAEA,IAAKyf,OAAOsmE,eACV,MAAO,cACT,CAEA,WAAOnsE,CAAKyrE,GACV,OAAOA,aAAiBhtF,KAAOgtF,EAAQ,IAAIhtF,KAAKgtF,EAClD,CAEA,aAAO7/D,CAAOgD,GACZ,MAAM2qE,EAAW,IAAI96F,KAAKmwB,GAAO,QAAA4qE,EAAAzyF,UAAAjB,OADXuzF,EAAO,IAAA3xF,MAAA8xF,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPJ,EAAOI,EAAA,GAAA1yF,UAAA0yF,GAK7B,OAFAJ,EAAQj/F,SAASoN,GAAW+xF,EAAS1/F,IAAI2N,KAElC+xF,CACT,CAEA,eAAOG,CAAS9B,GACd,MAIM+B,GAJYl7F,KAAKi5F,IAAej5F,KAAKi5F,IAAc,CACvDiC,UAAW,CAAC,IAGcA,UACtBzzE,EAAYznB,KAAKynB,UAEvB,SAAS0zE,EAAevB,GACtB,MAAME,EAAUZ,GAAgBU,GAE3BsB,EAAUpB,MAtNrB,SAAwBj6F,EAAKs5F,GAC3B,MAAMiC,EAAenI,EAAMZ,YAAY,IAAM8G,GAE7C,CAAC,MAAO,MAAO,OAAOx9F,SAAQ0/F,IAC5B91F,OAAOoe,eAAe9jB,EAAKw7F,EAAaD,EAAc,CACpDvlF,MAAO,SAASylF,EAAMC,EAAMC,GAC1B,OAAOx7F,KAAKq7F,GAAY96E,KAAKvgB,KAAMm5F,EAAQmC,EAAMC,EAAMC,EACzD,EACA9nE,cAAc,GACd,GAEN,CA4MQ+nE,CAAeh0E,EAAWmyE,GAC1BsB,EAAUpB,IAAW,EAEzB,CAIA,OAFA7G,EAAM/pF,QAAQiwF,GAAUA,EAAOx9F,QAAQw/F,GAAkBA,EAAehC,GAEjEn5F,IACT,EAGFu5F,GAAa0B,SAAS,CAAC,eAAgB,iBAAkB,SAAU,kBAAmB,aAAc,kBAGpGhI,EAAMnE,kBAAkByK,GAAa9xE,WAAW,CAAA/hB,EAAUrB,KAAQ,IAAjB,MAACwR,GAAMnQ,EAClDg2F,EAASr3F,EAAI,GAAGorF,cAAgBprF,EAAIiJ,MAAM,GAC9C,MAAO,CACLjS,IAAKA,IAAMwa,EACXza,GAAAA,CAAIugG,GACF37F,KAAK07F,GAAUC,CACjB,EACD,IAGH1I,EAAMjB,cAAcuH,IAEpB,YC/Re,SAASqC,GAAcC,EAAKzX,GACzC,MAAML,EAAS/jF,MAAQqgB,GACjBm5B,EAAU4qC,GAAYL,EACtBlB,EAAU0W,GAAah4E,KAAKi4B,EAAQqpC,SAC1C,IAAI3oF,EAAOs/C,EAAQt/C,KAQnB,OANA+4F,EAAMt3F,QAAQkgG,GAAK,SAAmBngG,GACpCxB,EAAOwB,EAAG6kB,KAAKwjE,EAAQ7pF,EAAM2oF,EAAQz9D,YAAag/D,EAAWA,EAAS17E,YAAS1D,EACjF,IAEA69E,EAAQz9D,YAEDlrB,CACT,CCzBe,SAAS4hG,GAASjmF,GAC/B,SAAUA,IAASA,EAAMkmF,WAC3B,CCUA,SAASC,GAAc3vF,EAAS03E,EAAQzB,GAEtCyQ,EAAWxyE,KAAKvgB,KAAiB,MAAXqM,EAAkB,WAAaA,EAAS0mF,EAAWkJ,aAAclY,EAAQzB,GAC/FtiF,KAAKmC,KAAO,eACd,CAEA8wF,EAAMjC,SAASgL,GAAejJ,EAAY,CACxCgJ,YAAY,IAGd,YCXe,SAASG,GAAOjjG,EAASC,EAAQkrF,GAC9C,MAAM0U,EAAiB1U,EAASL,OAAO+U,eAClC1U,EAAS17E,QAAWowF,IAAkBA,EAAe1U,EAAS17E,QAGjExP,EAAO,IAAI65F,EACT,mCAAqC3O,EAAS17E,OAC9C,CAACqqF,EAAWoJ,gBAAiBpJ,EAAW0F,kBAAkBn/F,KAAK4nB,MAAMkjE,EAAS17E,OAAS,KAAO,GAC9F07E,EAASL,OACTK,EAAS9B,QACT8B,IAPFnrF,EAAQmrF,EAUZ,CC4BA,SA9CA,SAAqBgY,EAAcpoF,GACjCooF,EAAeA,GAAgB,GAC/B,MAAMlpF,EAAQ,IAAIjK,MAAMmzF,GAClBC,EAAa,IAAIpzF,MAAMmzF,GAC7B,IAEIE,EAFAC,EAAO,EACPC,EAAO,EAKX,OAFAxoF,OAAchP,IAARgP,EAAoBA,EAAM,IAEzB,SAAcyoF,GACnB,MAAMpjG,EAAMD,KAAKC,MAEXqjG,EAAYL,EAAWG,GAExBF,IACHA,EAAgBjjG,GAGlB6Z,EAAMqpF,GAAQE,EACdJ,EAAWE,GAAQljG,EAEnB,IAAIsc,EAAI6mF,EACJG,EAAa,EAEjB,KAAOhnF,IAAM4mF,GACXI,GAAczpF,EAAMyC,KACpBA,GAAQymF,EASV,GANAG,GAAQA,EAAO,GAAKH,EAEhBG,IAASC,IACXA,GAAQA,EAAO,GAAKJ,GAGlB/iG,EAAMijG,EAAgBtoF,EACxB,OAGF,MAAM4oF,EAASF,GAAarjG,EAAMqjG,EAElC,OAAOE,EAAStjG,KAAKo+B,MAAmB,IAAbilE,EAAoBC,QAAU53F,CAC3D,CACF,ECTA,SArCA,SAAkBtJ,EAAImhG,GACpB,IAEIC,EACAC,EAHAC,EAAY,EACZnyB,EAAY,IAAOgyB,EAIvB,MAAMI,EAAS,SAAChmD,GAA2B,IAArB59C,EAAGiP,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAGlP,KAAKC,MAC/B2jG,EAAY3jG,EACZyjG,EAAW,KACPC,IACF3mD,aAAa2mD,GACbA,EAAQ,MAEVrhG,EAAG4wB,MAAM,KAAM2qB,EACjB,EAoBA,MAAO,CAlBW,WAChB,MAAM59C,EAAMD,KAAKC,MACXujG,EAASvjG,EAAM2jG,EAAU,QAAA7pF,EAAA7K,UAAAjB,OAFX4vC,EAAI,IAAAhuC,MAAAkK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ4jC,EAAI5jC,GAAA/K,UAAA+K,GAGnBupF,GAAU/xB,EACboyB,EAAOhmD,EAAM59C,IAEbyjG,EAAW7lD,EACN8lD,IACHA,EAAQ5mD,YAAW,KACjB4mD,EAAQ,KACRE,EAAOH,EAAS,GACfjyB,EAAY+xB,IAGrB,EAEcM,IAAMJ,GAAYG,EAAOH,GAGzC,ECrCaK,GAAuB,SAACC,EAAUC,GAA+B,IAAbR,EAAIv0F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAG,EAClEg1F,EAAgB,EACpB,MAAMC,EAAeC,GAAY,GAAI,KAErC,OAAOC,IAAS1jG,IACd,MAAM2jG,EAAS3jG,EAAE2jG,OACXh8C,EAAQ3nD,EAAE4jG,iBAAmB5jG,EAAE2nD,WAAQ18C,EACvC44F,EAAgBF,EAASJ,EACzBO,EAAON,EAAaK,GAG1BN,EAAgBI,EAchBN,EAZa,CACXM,SACAh8C,QACAo8C,SAAUp8C,EAASg8C,EAASh8C,OAAS18C,EACrCkO,MAAO0qF,EACPC,KAAMA,QAAc74F,EACpB+4F,UAAWF,GAAQn8C,GAVLg8C,GAAUh8C,GAUeA,EAAQg8C,GAAUG,OAAO74F,EAChE5F,MAAOrF,EACP4jG,iBAA2B,MAATj8C,EAClB,CAAC27C,EAAmB,WAAa,WAAW,GAGhC,GACbR,EACL,EAEamB,GAAyBA,CAACt8C,EAAOu8C,KAC5C,MAAMN,EAA4B,MAATj8C,EAEzB,MAAO,CAAEg8C,GAAWO,EAAU,GAAG,CAC/BN,mBACAj8C,QACAg8C,WACEO,EAAU,GAAG,EAGNC,GAAkBxiG,GAAO,mBAAAyX,EAAA7K,UAAAjB,OAAI4vC,EAAI,IAAAhuC,MAAAkK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ4jC,EAAI5jC,GAAA/K,UAAA+K,GAAA,OAAK4/E,EAAMhD,MAAK,IAAMv0F,KAAMu7C,IAAM,ECtChF,GAAe4/C,GAASP,sBAIrB,WACC,MAAM6H,EAAOtH,GAASR,WAAa,kBAAkBvoF,KAAK+oF,GAASR,UAAU+H,WACvEC,EAAiBlI,SAAS95C,cAAc,KAC9C,IAAIiiD,EAQJ,SAASC,EAAW72F,GAClB,IAAIkvF,EAAOlvF,EAWX,OATIy2F,IAEFE,EAAeG,aAAa,OAAQ5H,GACpCA,EAAOyH,EAAezH,MAGxByH,EAAeG,aAAa,OAAQ5H,GAG7B,CACLA,KAAMyH,EAAezH,KACrB6H,SAAUJ,EAAeI,SAAWJ,EAAeI,SAAS9wE,QAAQ,KAAM,IAAM,GAChF+wE,KAAML,EAAeK,KACrBC,OAAQN,EAAeM,OAASN,EAAeM,OAAOhxE,QAAQ,MAAO,IAAM,GAC3E9b,KAAMwsF,EAAexsF,KAAOwsF,EAAexsF,KAAK8b,QAAQ,KAAM,IAAM,GACpEixE,SAAUP,EAAeO,SACzBC,KAAMR,EAAeQ,KACrBC,SAAiD,MAAtCT,EAAeS,SAAS19D,OAAO,GACxCi9D,EAAeS,SACf,IAAMT,EAAeS,SAE3B,CAUA,OARAR,EAAYC,EAAWv/F,OAAO23F,SAASC,MAQhC,SAAyBmI,GAC9B,MAAM/zE,EAAUioE,EAAM5F,SAAS0R,GAAeR,EAAWQ,GAAcA,EACvE,OAAQ/zE,EAAOyzE,WAAaH,EAAUG,UAClCzzE,EAAO0zE,OAASJ,EAAUI,IAChC,CACF,CAlDC,GAsDQ,WACL,OAAO,CACT,EC9DJ,GAAe7H,GAASP,sBAGtB,CACEruE,KAAAA,CAAM9lB,EAAM0T,EAAOmpF,EAASlf,EAAMmf,EAAQC,GACxC,MAAMC,EAAS,CAACh9F,EAAO,IAAM69B,mBAAmBnqB,IAEhDo9E,EAAM1F,SAASyR,IAAYG,EAAO7jG,KAAK,WAAa,IAAIlC,KAAK4lG,GAASI,eAEtEnM,EAAM5F,SAASvN,IAASqf,EAAO7jG,KAAK,QAAUwkF,GAE9CmT,EAAM5F,SAAS4R,IAAWE,EAAO7jG,KAAK,UAAY2jG,IAEvC,IAAXC,GAAmBC,EAAO7jG,KAAK,UAE/B66F,SAASgJ,OAASA,EAAOx3F,KAAK,KAChC,EAEA6iB,IAAAA,CAAKroB,GACH,MAAMukB,EAAQyvE,SAASgJ,OAAOz4E,MAAM,IAAI24E,OAAO,aAAel9F,EAAO,cACrE,OAAQukB,EAAQkZ,mBAAmBlZ,EAAM,IAAM,IACjD,EAEAtmB,MAAAA,CAAO+B,GACLnC,KAAKioB,MAAM9lB,EAAM,GAAI/I,KAAKC,MAAQ,MACpC,GAMF,CACE4uB,KAAAA,GAAS,EACTuC,KAAIA,IACK,KAETpqB,MAAAA,GAAU,GCxBC,SAASk/F,GAAcC,EAASC,GAC7C,OAAID,ICHG,8BAA8BzxF,KDGP0xF,GENjB,SAAqBD,EAASE,GAC3C,OAAOA,EACHF,EAAQ5xE,QAAQ,SAAU,IAAM,IAAM8xE,EAAY9xE,QAAQ,OAAQ,IAClE4xE,CACN,CFGWG,CAAYH,EAASC,GAEvBA,CACT,CGfA,MAAMG,GAAmB3S,GAAUA,aAAiBuM,GAAe,IAAKvM,GAAUA,EAWnE,SAAS4S,GAAYC,EAASC,GAE3CA,EAAUA,GAAW,CAAC,EACtB,MAAM/b,EAAS,CAAC,EAEhB,SAASgc,EAAeh3F,EAAQC,EAAQ4nF,GACtC,OAAIqC,EAAMxF,cAAc1kF,IAAWkqF,EAAMxF,cAAczkF,GAC9CiqF,EAAMtC,MAAMpwE,KAAK,CAACqwE,YAAW7nF,EAAQC,GACnCiqF,EAAMxF,cAAczkF,GACtBiqF,EAAMtC,MAAM,CAAC,EAAG3nF,GACdiqF,EAAM/pF,QAAQF,GAChBA,EAAOsE,QAETtE,CACT,CAGA,SAASg3F,EAAoBhtF,EAAGpL,EAAGgpF,GACjC,OAAKqC,EAAM9F,YAAYvlF,GAEXqrF,EAAM9F,YAAYn6E,QAAvB,EACE+sF,OAAe/6F,EAAWgO,EAAG49E,GAF7BmP,EAAe/sF,EAAGpL,EAAGgpF,EAIhC,CAGA,SAASqP,EAAiBjtF,EAAGpL,GAC3B,IAAKqrF,EAAM9F,YAAYvlF,GACrB,OAAOm4F,OAAe/6F,EAAW4C,EAErC,CAGA,SAASs4F,EAAiBltF,EAAGpL,GAC3B,OAAKqrF,EAAM9F,YAAYvlF,GAEXqrF,EAAM9F,YAAYn6E,QAAvB,EACE+sF,OAAe/6F,EAAWgO,GAF1B+sF,OAAe/6F,EAAW4C,EAIrC,CAGA,SAASu4F,EAAgBntF,EAAGpL,EAAGgnF,GAC7B,OAAIA,KAAQkR,EACHC,EAAe/sF,EAAGpL,GAChBgnF,KAAQiR,EACVE,OAAe/6F,EAAWgO,QAD5B,CAGT,CAEA,MAAMotF,EAAW,CACf14F,IAAKu4F,EACL7c,OAAQ6c,EACR/lG,KAAM+lG,EACNV,QAASW,EACT5I,iBAAkB4I,EAClB7H,kBAAmB6H,EACnBG,iBAAkBH,EAClBvpD,QAASupD,EACTI,eAAgBJ,EAChBK,gBAAiBL,EACjBM,cAAeN,EACf7I,QAAS6I,EACT3H,aAAc2H,EACdxH,eAAgBwH,EAChBvH,eAAgBuH,EAChBO,iBAAkBP,EAClBQ,mBAAoBR,EACpBS,WAAYT,EACZtH,iBAAkBsH,EAClBrH,cAAeqH,EACfU,eAAgBV,EAChBW,UAAWX,EACXY,UAAWZ,EACXa,WAAYb,EACZc,YAAad,EACbe,WAAYf,EACZgB,iBAAkBhB,EAClBpH,eAAgBqH,EAChBtd,QAASA,CAAC7vE,EAAGpL,IAAMo4F,EAAoBL,GAAgB3sF,GAAI2sF,GAAgB/3F,IAAI,IASjF,OANAqrF,EAAMt3F,QAAQ4J,OAAOxB,KAAKwB,OAAOib,OAAO,CAAC,EAAGq/E,EAASC,KAAW,SAA4BlR,GAC1F,MAAM+B,EAAQyP,EAASxR,IAASoR,EAC1BmB,EAAcxQ,EAAMkP,EAAQjR,GAAOkR,EAAQlR,GAAOA,GACvDqE,EAAM9F,YAAYgU,IAAgBxQ,IAAUwP,IAAqBpc,EAAO6K,GAAQuS,EACnF,IAEOpd,CACT,CChGA,SAAgBA,IACd,MAAMqd,EAAYxB,GAAY,CAAC,EAAG7b,GAElC,IAaIwT,GAbA,KAACr9F,EAAI,cAAEsmG,EAAa,eAAE7H,EAAc,eAAED,EAAc,QAAE7V,EAAO,KAAEwe,GAAQD,EAe3E,GAbAA,EAAUve,QAAUA,EAAU0W,GAAah4E,KAAKshE,GAEhDue,EAAU15F,IAAMqtF,GAASuK,GAAc8B,EAAU7B,QAAS6B,EAAU15F,KAAMq8E,EAAOnqF,OAAQmqF,EAAOsc,kBAG5FgB,GACFxe,EAAQznF,IAAI,gBAAiB,SAC3BkmG,MAAMD,EAAKE,UAAY,IAAM,KAAOF,EAAKl0F,SAAW4yB,SAASC,mBAAmBqhE,EAAKl0F,WAAa,MAMlG8lF,EAAM9C,WAAWj2F,GACnB,GAAI28F,GAASP,uBAAyBO,GAASL,+BAC7C3T,EAAQ+U,oBAAe5yF,QAClB,IAAiD,KAA5CuyF,EAAc1U,EAAQ2U,kBAA6B,CAE7D,MAAO1+F,KAASsiF,GAAUmc,EAAcA,EAAYzgF,MAAM,KAAKrR,KAAI41E,GAASA,EAAMztD,SAAQnyB,OAAOiwD,SAAW,GAC5Gm3B,EAAQ+U,eAAe,CAAC9+F,GAAQ,yBAA0BsiF,GAAQzzE,KAAK,MACzE,CAOF,GAAIkvF,GAASP,wBACXkK,GAAiBvN,EAAM3F,WAAWkT,KAAmBA,EAAgBA,EAAcY,IAE/EZ,IAAoC,IAAlBA,GAA2BgB,GAAgBJ,EAAU15F,MAAO,CAEhF,MAAM+5F,EAAY9I,GAAkBD,GAAkBgJ,GAAQl3E,KAAKkuE,GAE/D+I,GACF5e,EAAQznF,IAAIu9F,EAAgB8I,EAEhC,CAGF,OAAOL,CACR,EC1CD,GAFwD,qBAAnBO,gBAEG,SAAU5d,GAChD,OAAO,IAAI/qF,SAAQ,SAA4BC,EAASC,GACtD,MAAM0oG,EAAUC,GAAc9d,GAC9B,IAAI+d,EAAcF,EAAQ1nG,KAC1B,MAAMiqF,EAAiBoV,GAAah4E,KAAKqgF,EAAQ/e,SAASz9D,YAC1D,IACI28E,EACAC,EAAiBC,EACjBC,EAAaC,GAHb,aAAC5J,EAAY,iBAAEkI,EAAgB,mBAAEC,GAAsBkB,EAK3D,SAASpnD,IACP0nD,GAAeA,IACfC,GAAiBA,IAEjBP,EAAQZ,aAAeY,EAAQZ,YAAYoB,YAAYL,GAEvDH,EAAQS,QAAUT,EAAQS,OAAOC,oBAAoB,QAASP,EAChE,CAEA,IAAIzf,EAAU,IAAIqf,eAOlB,SAASY,IACP,IAAKjgB,EACH,OAGF,MAAMkgB,EAAkBjJ,GAAah4E,KACnC,0BAA2B+gE,GAAWA,EAAQmgB,yBAahDvG,IAAO,SAAkBrmF,GACvB5c,EAAQ4c,GACR2kC,GACF,IAAG,SAAiBz2B,GAClB7qB,EAAO6qB,GACPy2B,GACF,GAfiB,CACftgD,KAHoBq+F,GAAiC,SAAjBA,GAA4C,SAAjBA,EACxCjW,EAAQ8B,SAA/B9B,EAAQogB,aAGRh6F,OAAQ45E,EAAQ55E,OAChBo6E,WAAYR,EAAQQ,WACpBD,QAAS2f,EACTze,SACAzB,YAYFA,EAAU,IACZ,CAlCAA,EAAQqgB,KAAKf,EAAQxe,OAAOqM,cAAemS,EAAQl6F,KAAK,GAGxD46E,EAAQ3rC,QAAUirD,EAAQjrD,QAiCtB,cAAe2rC,EAEjBA,EAAQigB,UAAYA,EAGpBjgB,EAAQsgB,mBAAqB,WACtBtgB,GAAkC,IAAvBA,EAAQugB,aAQD,IAAnBvgB,EAAQ55E,QAAkB45E,EAAQwgB,aAAwD,IAAzCxgB,EAAQwgB,YAAYt/E,QAAQ,WAKjF2yB,WAAWosD,EACb,EAIFjgB,EAAQygB,QAAU,WACXzgB,IAILppF,EAAO,IAAI65F,EAAW,kBAAmBA,EAAWiQ,aAAcjf,EAAQzB,IAG1EA,EAAU,KACZ,EAGAA,EAAQ2gB,QAAU,WAGhB/pG,EAAO,IAAI65F,EAAW,gBAAiBA,EAAWmQ,YAAanf,EAAQzB,IAGvEA,EAAU,IACZ,EAGAA,EAAQ6gB,UAAY,WAClB,IAAIC,EAAsBxB,EAAQjrD,QAAU,cAAgBirD,EAAQjrD,QAAU,cAAgB,mBAC9F,MAAMwgD,EAAeyK,EAAQzK,cAAgBC,GACzCwK,EAAQwB,sBACVA,EAAsBxB,EAAQwB,qBAEhClqG,EAAO,IAAI65F,EACTqQ,EACAjM,EAAatB,oBAAsB9C,EAAWsQ,UAAYtQ,EAAWiQ,aACrEjf,EACAzB,IAGFA,EAAU,IACZ,OAGgBt9E,IAAhB88F,GAA6B3d,EAAeyT,eAAe,MAGvD,qBAAsBtV,GACxB2Q,EAAMt3F,QAAQwoF,EAAej2D,UAAU,SAA0BlE,EAAK3lB,GACpEi+E,EAAQghB,iBAAiBj/F,EAAK2lB,EAChC,IAIGipE,EAAM9F,YAAYyU,EAAQrB,mBAC7Bje,EAAQie,kBAAoBqB,EAAQrB,iBAIlChI,GAAiC,SAAjBA,IAClBjW,EAAQiW,aAAeqJ,EAAQrJ,cAI7BmI,KACAuB,EAAmBE,GAAiBhF,GAAqBuD,GAAoB,GAC/Epe,EAAQxoF,iBAAiB,WAAYmoG,IAInCxB,GAAoBne,EAAQihB,UAC5BvB,EAAiBE,GAAe/E,GAAqBsD,GAEvDne,EAAQihB,OAAOzpG,iBAAiB,WAAYkoG,GAE5C1f,EAAQihB,OAAOzpG,iBAAiB,UAAWooG,KAGzCN,EAAQZ,aAAeY,EAAQS,UAGjCN,EAAayB,IACNlhB,IAGLppF,GAAQsqG,GAAUA,EAAO1qG,KAAO,IAAIkjG,GAAc,KAAMjY,EAAQzB,GAAWkhB,GAC3ElhB,EAAQmhB,QACRnhB,EAAU,KAAI,EAGhBsf,EAAQZ,aAAeY,EAAQZ,YAAY0C,UAAU3B,GACjDH,EAAQS,SACVT,EAAQS,OAAOsB,QAAU5B,IAAeH,EAAQS,OAAOvoG,iBAAiB,QAASioG,KAIrF,MAAMtD,ECvLK,SAAuB/2F,GACpC,MAAMgf,EAAQ,4BAA4BorE,KAAKpqF,GAC/C,OAAOgf,GAASA,EAAM,IAAM,EAC9B,CDoLqBk9E,CAAchC,EAAQl6F,KAEnC+2F,IAAsD,IAA1C5H,GAASZ,UAAUzyE,QAAQi7E,GACzCvlG,EAAO,IAAI65F,EAAW,wBAA0B0L,EAAW,IAAK1L,EAAWoJ,gBAAiBpY,IAM9FzB,EAAQuhB,KAAK/B,GAAe,KAC9B,GACF,EErJA,GA3CuBgC,CAACC,EAASptD,KAC/B,MAAM,OAACtvC,GAAW08F,EAAUA,EAAUA,EAAQtoG,OAAOiwD,SAAW,GAEhE,GAAI/U,GAAWtvC,EAAQ,CACrB,IAEIs8F,EAFAK,EAAa,IAAIC,gBAIrB,MAAMlB,EAAU,SAAUmB,GACxB,IAAKP,EAAS,CACZA,GAAU,EACVvB,IACA,MAAMr+E,EAAMmgF,aAAkBv/F,MAAQu/F,EAASlkG,KAAKkkG,OACpDF,EAAWP,MAAM1/E,aAAegvE,EAAahvE,EAAM,IAAIi4E,GAAcj4E,aAAepf,MAAQof,EAAI1X,QAAU0X,GAC5G,CACF,EAEA,IAAIg5E,EAAQpmD,GAAWR,YAAW,KAChC4mD,EAAQ,KACRgG,EAAQ,IAAIhQ,EAAW,WAAWp8C,mBAA0Bo8C,EAAWsQ,WAAW,GACjF1sD,GAEH,MAAMyrD,EAAcA,KACd2B,IACFhH,GAAS3mD,aAAa2mD,GACtBA,EAAQ,KACRgH,EAAQpoG,SAAQ0mG,IACdA,EAAOD,YAAcC,EAAOD,YAAYW,GAAWV,EAAOC,oBAAoB,QAASS,EAAQ,IAEjGgB,EAAU,KACZ,EAGFA,EAAQpoG,SAAS0mG,GAAWA,EAAOvoG,iBAAiB,QAASipG,KAE7D,MAAM,OAACV,GAAU2B,EAIjB,OAFA3B,EAAOD,YAAc,IAAMnP,EAAMhD,KAAKmS,GAE/BC,CACT,GC3CW8B,GAAc,UAAWxoB,EAAOyoB,GAC3C,IAAIlvF,EAAMymE,EAAM16D,WAEhB,IAAKmjF,GAAalvF,EAAMkvF,EAEtB,kBADMzoB,GAIR,IACIj4D,EADA5O,EAAM,EAGV,KAAOA,EAAMI,GACXwO,EAAM5O,EAAMsvF,QACNzoB,EAAMruE,MAAMwH,EAAK4O,GACvB5O,EAAM4O,CAEV,EAQM2gF,GAAatrG,gBAAiBurG,GAClC,GAAIA,EAAOl9E,OAAOm9E,eAEhB,kBADOD,GAIT,MAAMtkB,EAASskB,EAAOE,YACtB,IACE,OAAS,CACP,MAAM,KAAChqD,EAAI,MAAE3kC,SAAemqE,EAAOx1D,OACnC,GAAIgwB,EACF,YAEI3kC,CACR,CACF,CAAE,cACMmqE,EAAOwjB,QACf,CACF,EAEaiB,GAAcA,CAACH,EAAQF,EAAWM,EAAYC,KACzD,MAAMxrD,EA3BiBpgD,gBAAiB6rG,EAAUR,GAClD,UAAW,MAAMzoB,KAAS0oB,GAAWO,SAC5BT,GAAYxoB,EAAOyoB,EAE9B,CAuBmBS,CAAUP,EAAQF,GAEnC,IACI5pD,EADAtnC,EAAQ,EAER4xF,EAAa/qG,IACVygD,IACHA,GAAO,EACPmqD,GAAYA,EAAS5qG,GACvB,EAGF,OAAO,IAAIgrG,eAAe,CACxB,UAAMC,CAAKhB,GACT,IACE,MAAM,KAACxpD,EAAI,MAAE3kC,SAAesjC,EAASoB,OAErC,GAAIC,EAGF,OAFDsqD,SACCd,EAAWiB,QAIb,IAAI/vF,EAAMW,EAAMoL,WAChB,GAAIyjF,EAAY,CACd,IAAIQ,EAAchyF,GAASgC,EAC3BwvF,EAAWQ,EACb,CACAlB,EAAWmB,QAAQ,IAAIlyF,WAAW4C,GACpC,CAAE,MAAOkO,GAEP,MADA+gF,EAAU/gF,GACJA,CACR,CACF,EACAy/E,OAAOU,IACLY,EAAUZ,GACH/qD,EAASisD,WAEjB,CACDC,cAAe,GACf,EC3EEC,GAAoC,oBAAVriB,OAA2C,oBAAZsiB,SAA8C,oBAAbC,SAC1FC,GAA4BH,IAA8C,oBAAnBP,eAGvDW,GAAaJ,KAA4C,oBAAhBpjF,aACzCwc,GAA0C,IAAIxc,YAAjCD,GAAQyc,GAAQvc,OAAOF,IACtClpB,SAAe,IAAIka,iBAAiB,IAAIuyF,SAASvjF,GAAK0jF,gBADtD,IAAEjnE,GAIN,MAAM5wB,GAAO,SAACpS,GACZ,IAAI,QAAAyX,EAAA7K,UAAAjB,OADe4vC,EAAI,IAAAhuC,MAAAkK,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ4jC,EAAI5jC,EAAA,GAAA/K,UAAA+K,GAErB,QAAS3X,KAAMu7C,EACjB,CAAE,MAAOl9C,GACP,OAAO,CACT,CACF,EAEM6rG,GAAwBH,IAA6B33F,IAAK,KAC9D,IAAI+3F,GAAiB,EAErB,MAAMC,EAAiB,IAAIP,QAAQ1O,GAASzlF,OAAQ,CAClDqxE,KAAM,IAAIsiB,eACV3hB,OAAQ,OACR,UAAI2iB,GAEF,OADAF,GAAiB,EACV,MACT,IACChjB,QAAQ1nF,IAAI,gBAEf,OAAO0qG,IAAmBC,CAAc,IAKpCE,GAAyBP,IAC7B33F,IAAK,IAAMmlF,EAAMjF,iBAAiB,IAAIwX,SAAS,IAAI/iB,QAG/CwjB,GAAY,CAChB3B,OAAQ0B,IAA0B,CAAEvvF,GAAQA,EAAIgsE,OAG7B,IAAEhsE,GAAvB6uF,KAAuB7uF,GAOpB,IAAI+uF,SANL,CAAC,OAAQ,cAAe,OAAQ,WAAY,UAAU7pG,SAAQ7C,KAC3DmtG,GAAUntG,KAAUmtG,GAAUntG,GAAQm6F,EAAM3F,WAAW72E,GAAI3d,IAAU2d,GAAQA,EAAI3d,KAChF,CAAC0oB,EAAGuiE,KACF,MAAM,IAAIgP,EAAW,kBAAkBj6F,sBAA0Bi6F,EAAWmT,gBAAiBniB,EAAO,EACpG,KAIR,MA8BMoiB,GAAoBptG,MAAO8pF,EAASJ,KACxC,MAAMp7E,EAAS4rF,EAAMX,eAAezP,EAAQujB,oBAE5C,OAAiB,MAAV/+F,EAjCatO,WACpB,GAAY,MAAR0pF,EACF,OAAO,EAGT,GAAGwQ,EAAMpF,OAAOpL,GACd,OAAOA,EAAK7wE,KAGd,GAAGqhF,EAAMR,oBAAoBhQ,GAAO,CAClC,MAAM4jB,EAAW,IAAId,QAAQ1O,GAASzlF,OAAQ,CAC5CgyE,OAAQ,OACRX,SAEF,aAAc4jB,EAASV,eAAe1kF,UACxC,CAEA,OAAGgyE,EAAM1C,kBAAkB9N,IAASwQ,EAAM7F,cAAc3K,GAC/CA,EAAKxhE,YAGXgyE,EAAMlF,kBAAkBtL,KACzBA,GAAc,IAGbwQ,EAAM5F,SAAS5K,UACFijB,GAAWjjB,IAAOxhE,gBADlC,EAEA,EAMwBqlF,CAAc7jB,GAAQp7E,CAAM,ECxFhDk/F,GAAgB,CACpBC,KCNF,KDOEC,IAAKC,GACLzjB,MDwFaqiB,IAAoB,OAACvsG,IAClC,IAAI,IACF2O,EAAG,OACH07E,EAAM,KACNlpF,EAAI,OACJmoG,EAAM,YACNrB,EAAW,QACXrqD,EAAO,mBACP+pD,EAAkB,iBAClBD,EAAgB,aAChBlI,EAAY,QACZ1V,EAAO,gBACP0d,EAAkB,cAAa,aAC/Bpd,GACE0e,GAAc9d,GAElBwU,EAAeA,GAAgBA,EAAe,IAAIlvE,cAAgB,OAElE,IAEIi5D,EAFAqkB,EAAiB7C,GAAe,CAACzB,EAAQrB,GAAeA,EAAY4F,iBAAkBjwD,GAI1F,MAAMyrD,EAAcuE,GAAkBA,EAAevE,aAAe,MAChEuE,EAAevE,aAClB,GAED,IAAIyE,EAEJ,IACE,GACEpG,GAAoBmF,IAAoC,QAAXxiB,GAA+B,SAAXA,GACG,KAAnEyjB,QAA6BV,GAAkBtjB,EAAS3oF,IACzD,CACA,IAMI4sG,EANAT,EAAW,IAAId,QAAQ79F,EAAK,CAC9B07E,OAAQ,OACRX,KAAMvoF,EACN6rG,OAAQ,SASV,GAJI9S,EAAM9C,WAAWj2F,KAAU4sG,EAAoBT,EAASxjB,QAAQxnF,IAAI,kBACtEwnF,EAAQ+U,eAAekP,GAGrBT,EAAS5jB,KAAM,CACjB,MAAOiiB,EAAYxH,GAASc,GAC1B6I,EACA1J,GAAqBe,GAAeuC,KAGtCvmG,EAAOuqG,GAAY4B,EAAS5jB,KA1GT,MA0GmCiiB,EAAYxH,EACpE,CACF,CAEKjK,EAAM5F,SAASkT,KAClBA,EAAkBA,EAAkB,UAAY,QAKlD,MAAMwG,EAAyB,gBAAiBxB,QAAQ99E,UACxD66D,EAAU,IAAIijB,QAAQ79F,EAAK,IACtBy7E,EACHkf,OAAQsE,EACRvjB,OAAQA,EAAOqM,cACf5M,QAASA,EAAQz9D,YAAY8I,SAC7Bu0D,KAAMvoF,EACN6rG,OAAQ,OACRiB,YAAaD,EAAyBxG,OAAkBv7F,IAG1D,IAAIo/E,QAAiBnB,MAAMX,GAE3B,MAAM2kB,EAAmBjB,KAA4C,WAAjBzN,GAA8C,aAAjBA,GAEjF,GAAIyN,KAA2BtF,GAAuBuG,GAAoB7E,GAAe,CACvF,MAAMlf,EAAU,CAAC,EAEjB,CAAC,SAAU,aAAc,WAAWvnF,SAAQizF,IAC1C1L,EAAQ0L,GAAQxK,EAASwK,EAAK,IAGhC,MAAMsY,EAAwBjU,EAAMX,eAAelO,EAASvB,QAAQxnF,IAAI,oBAEjEqpG,EAAYxH,GAASwD,GAAsB1C,GAChDkJ,EACA/J,GAAqBe,GAAewC,IAAqB,KACtD,GAELtc,EAAW,IAAIohB,SACbf,GAAYrgB,EAAS3B,KAlJF,MAkJ4BiiB,GAAY,KACzDxH,GAASA,IACTkF,GAAeA,GAAa,IAE9Blf,EAEJ,CAEAqV,EAAeA,GAAgB,OAE/B,IAAI4O,QAAqBlB,GAAUhT,EAAM3E,QAAQ2X,GAAW1N,IAAiB,QAAQnU,EAAUL,GAI/F,OAFCkjB,GAAoB7E,GAAeA,UAEvB,IAAIppG,SAAQ,CAACC,EAASC,KACjCgjG,GAAOjjG,EAASC,EAAQ,CACtBgB,KAAMitG,EACNtkB,QAAS0W,GAAah4E,KAAK6iE,EAASvB,SACpCn6E,OAAQ07E,EAAS17E,OACjBo6E,WAAYsB,EAAStB,WACrBiB,SACAzB,WACA,GAEN,CAAE,MAAOv+D,GAGP,GAFAq+E,GAAeA,IAEXr+E,GAAoB,cAAbA,EAAI5hB,MAAwB,SAAS2L,KAAKiW,EAAI1X,SACvD,MAAM9G,OAAOib,OACX,IAAIuyE,EAAW,gBAAiBA,EAAWmQ,YAAanf,EAAQzB,GAChE,CACEiR,MAAOxvE,EAAIwvE,OAASxvE,IAK1B,MAAMgvE,EAAWxxE,KAAKwC,EAAKA,GAAOA,EAAIR,KAAMwgE,EAAQzB,EACtD,CACD,ICtND2Q,EAAMt3F,QAAQ4qG,IAAe,CAAC7qG,EAAIma,KAChC,GAAIna,EAAI,CACN,IACE6J,OAAOoe,eAAejoB,EAAI,OAAQ,CAACma,SACrC,CAAE,MAAO9b,GACP,CAEFwL,OAAOoe,eAAejoB,EAAI,cAAe,CAACma,SAC5C,KAGF,MAAMuxF,GAAgBlD,GAAW,KAAKA,IAEhCmD,GAAoBhQ,GAAYpE,EAAM3F,WAAW+J,IAAwB,OAAZA,IAAgC,IAAZA,EAEvF,GACeiQ,IACXA,EAAWrU,EAAM/pF,QAAQo+F,GAAYA,EAAW,CAACA,GAEjD,MAAM,OAACjgG,GAAUigG,EACjB,IAAIC,EACAlQ,EAEJ,MAAMmQ,EAAkB,CAAC,EAEzB,IAAK,IAAI7xF,EAAI,EAAGA,EAAItO,EAAQsO,IAAK,CAE/B,IAAIrO,EAIJ,GALAigG,EAAgBD,EAAS3xF,GAGzB0hF,EAAUkQ,GAELF,GAAiBE,KACpBlQ,EAAUkP,IAAej/F,EAAKijB,OAAOg9E,IAAgBl+E,oBAErCrkB,IAAZqyF,GACF,MAAM,IAAItE,EAAW,oBAAoBzrF,MAI7C,GAAI+vF,EACF,MAGFmQ,EAAgBlgG,GAAM,IAAMqO,GAAK0hF,CACnC,CAEA,IAAKA,EAAS,CAEZ,MAAMoQ,EAAUliG,OAAOC,QAAQgiG,GAC5B/hG,KAAIzE,IAAA,IAAEsG,EAAIiP,GAAMvV,EAAA,MAAK,WAAWsG,OACpB,IAAViP,EAAkB,sCAAwC,gCAAgC,IAG/F,IAAIpE,EAAI9K,EACLogG,EAAQpgG,OAAS,EAAI,YAAcogG,EAAQhiG,IAAI2hG,IAAcz/F,KAAK,MAAQ,IAAMy/F,GAAaK,EAAQ,IACtG,0BAEF,MAAM,IAAI1U,EACR,wDAA0D5gF,EAC1D,kBAEJ,CAEA,OAAOklF,CAAO,EE3DlB,SAASqQ,GAA6B3jB,GAKpC,GAJIA,EAAOid,aACTjd,EAAOid,YAAY2G,mBAGjB5jB,EAAOse,QAAUte,EAAOse,OAAOsB,QACjC,MAAM,IAAI3H,GAAc,KAAMjY,EAElC,CASe,SAAS6jB,GAAgB7jB,GACtC2jB,GAA6B3jB,GAE7BA,EAAOlB,QAAU0W,GAAah4E,KAAKwiE,EAAOlB,SAG1CkB,EAAO7pF,KAAO0hG,GAAcr7E,KAC1BwjE,EACAA,EAAOuT,mBAGgD,IAArD,CAAC,OAAQ,MAAO,SAAS9zE,QAAQugE,EAAOX,SAC1CW,EAAOlB,QAAQ+U,eAAe,qCAAqC,GAKrE,OAFgB0P,GAAoBvjB,EAAOsT,SAAWh3E,GAASg3E,QAExDA,CAAQtT,GAAQppC,MAAK,SAA6BypC,GAYvD,OAXAsjB,GAA6B3jB,GAG7BK,EAASlqF,KAAO0hG,GAAcr7E,KAC5BwjE,EACAA,EAAOsU,kBACPjU,GAGFA,EAASvB,QAAU0W,GAAah4E,KAAK6iE,EAASvB,SAEvCuB,CACT,IAAG,SAA4B8f,GAe7B,OAdKpI,GAASoI,KACZwD,GAA6B3jB,GAGzBmgB,GAAUA,EAAO9f,WACnB8f,EAAO9f,SAASlqF,KAAO0hG,GAAcr7E,KACnCwjE,EACAA,EAAOsU,kBACP6L,EAAO9f,UAET8f,EAAO9f,SAASvB,QAAU0W,GAAah4E,KAAK2iF,EAAO9f,SAASvB,WAIzD7pF,QAAQE,OAAOgrG,EACxB,GACF,CChFO,MAAM2D,GAAU,QCKjBC,GAAa,CAAC,EAGpB,CAAC,SAAU,UAAW,SAAU,WAAY,SAAU,UAAUnsG,SAAQ,CAAC7C,EAAM6c,KAC7EmyF,GAAWhvG,GAAQ,SAAmBk0F,GACpC,cAAcA,IAAUl0F,GAAQ,KAAO6c,EAAI,EAAI,KAAO,KAAO7c,CAC/D,CAAC,IAGH,MAAMivG,GAAqB,CAAC,EAW5BD,GAAW3Q,aAAe,SAAsB6Q,EAAWrkG,EAAS0I,GAClE,SAAS47F,EAAcC,EAAKjoD,GAC1B,MAAO,uCAAoDioD,EAAM,IAAOjoD,GAAQ5zC,EAAU,KAAOA,EAAU,GAC7G,CAGA,MAAO,CAACwJ,EAAOqyF,EAAKpuF,KAClB,IAAkB,IAAdkuF,EACF,MAAM,IAAIjV,EACRkV,EAAcC,EAAK,qBAAuBvkG,EAAU,OAASA,EAAU,KACvEovF,EAAWoV,gBAef,OAXIxkG,IAAYokG,GAAmBG,KACjCH,GAAmBG,IAAO,EAE1B3sG,QAAQ+Q,KACN27F,EACEC,EACA,+BAAiCvkG,EAAU,8CAK1CqkG,GAAYA,EAAUnyF,EAAOqyF,EAAKpuF,EAAY,CAEzD,EAmCA,UACEsuF,cAxBF,SAAuBllB,EAASmlB,EAAQC,GACtC,GAAuB,kBAAZplB,EACT,MAAM,IAAI6P,EAAW,4BAA6BA,EAAWwV,sBAE/D,MAAMxkG,EAAOwB,OAAOxB,KAAKm/E,GACzB,IAAIvtE,EAAI5R,EAAKsD,OACb,KAAOsO,KAAM,GAAG,CACd,MAAMuyF,EAAMnkG,EAAK4R,GACXqyF,EAAYK,EAAOH,GACzB,GAAIF,EAAJ,CACE,MAAMnyF,EAAQqtE,EAAQglB,GAChB/nG,OAAmB6E,IAAV6Q,GAAuBmyF,EAAUnyF,EAAOqyF,EAAKhlB,GAC5D,IAAe,IAAX/iF,EACF,MAAM,IAAI4yF,EAAW,UAAYmV,EAAM,YAAc/nG,EAAQ4yF,EAAWwV,qBAG5E,MACA,IAAqB,IAAjBD,EACF,MAAM,IAAIvV,EAAW,kBAAoBmV,EAAKnV,EAAWyV,eAE7D,CACF,EAIEV,eC9EIA,GAAaE,GAAUF,WAS7B,MAAMW,GACJhpG,WAAAA,CAAYipG,GACV1oG,KAAKqgB,SAAWqoF,EAChB1oG,KAAK2oG,aAAe,CAClBrmB,QAAS,IAAIsmB,GACbxkB,SAAU,IAAIwkB,GAElB,CAUA,aAAMtmB,CAAQumB,EAAa9kB,GACzB,IACE,aAAa/jF,KAAKqmG,SAASwC,EAAa9kB,EAC1C,CAAE,MAAOhgE,GACP,GAAIA,aAAepf,MAAO,CACxB,IAAImkG,EAEJnkG,MAAMquF,kBAAoBruF,MAAMquF,kBAAkB8V,EAAQ,CAAC,GAAMA,EAAQ,IAAInkG,MAG7E,MAAMgvB,EAAQm1E,EAAMn1E,MAAQm1E,EAAMn1E,MAAMhG,QAAQ,QAAS,IAAM,GAC/D,IACO5J,EAAI4P,MAGEA,IAAUpJ,OAAOxG,EAAI4P,OAAO29D,SAAS39D,EAAMhG,QAAQ,YAAa,OACzE5J,EAAI4P,OAAS,KAAOA,GAHpB5P,EAAI4P,MAAQA,CAKhB,CAAE,MAAO55B,GACP,CAEJ,CAEA,MAAMgqB,CACR,CACF,CAEAsiF,QAAAA,CAASwC,EAAa9kB,GAGO,kBAAhB8kB,GACT9kB,EAASA,GAAU,CAAC,GACbr8E,IAAMmhG,EAEb9kB,EAAS8kB,GAAe,CAAC,EAG3B9kB,EAAS6b,GAAY5/F,KAAKqgB,SAAU0jE,GAEpC,MAAM,aAACoT,EAAY,iBAAEkJ,EAAgB,QAAExd,GAAWkB,OAE7B/+E,IAAjBmyF,GACF6Q,GAAUI,cAAcjR,EAAc,CACpCxB,kBAAmBmS,GAAW3Q,aAAa2Q,GAAWiB,SACtDnT,kBAAmBkS,GAAW3Q,aAAa2Q,GAAWiB,SACtDlT,oBAAqBiS,GAAW3Q,aAAa2Q,GAAWiB,WACvD,GAGmB,MAApB1I,IACEpN,EAAM3F,WAAW+S,GACnBtc,EAAOsc,iBAAmB,CACxBpL,UAAWoL,GAGb2H,GAAUI,cAAc/H,EAAkB,CACxCl+E,OAAQ2lF,GAAWkB,SACnB/T,UAAW6S,GAAWkB,WACrB,IAKPjlB,EAAOX,QAAUW,EAAOX,QAAUpjF,KAAKqgB,SAAS+iE,QAAU,OAAO/5D,cAGjE,IAAI4/E,EAAiBpmB,GAAWoQ,EAAMtC,MACpC9N,EAAQkW,OACRlW,EAAQkB,EAAOX,SAGjBP,GAAWoQ,EAAMt3F,QACf,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,QAAS,WACjDynF,WACQP,EAAQO,EAAO,IAI1BW,EAAOlB,QAAU0W,GAAapsE,OAAO87E,EAAgBpmB,GAGrD,MAAMqmB,EAA0B,GAChC,IAAIC,GAAiC,EACrCnpG,KAAK2oG,aAAarmB,QAAQ3mF,SAAQ,SAAoCytG,GACjC,oBAAxBA,EAAY3T,UAA0D,IAAhC2T,EAAY3T,QAAQ1R,KAIrEolB,EAAiCA,GAAkCC,EAAY5T,YAE/E0T,EAAwB14C,QAAQ44C,EAAY9T,UAAW8T,EAAY7T,UACrE,IAEA,MAAM8T,EAA2B,GAKjC,IAAIC,EAJJtpG,KAAK2oG,aAAavkB,SAASzoF,SAAQ,SAAkCytG,GACnEC,EAAyB/tG,KAAK8tG,EAAY9T,UAAW8T,EAAY7T,SACnE,IAGA,IACIrgF,EADAS,EAAI,EAGR,IAAKwzF,EAAgC,CACnC,MAAMI,EAAQ,CAAC3B,GAAgBrrD,KAAKv8C,WAAOgF,GAO3C,IANAukG,EAAM/4C,QAAQlkC,MAAMi9E,EAAOL,GAC3BK,EAAMjuG,KAAKgxB,MAAMi9E,EAAOF,GACxBn0F,EAAMq0F,EAAMliG,OAEZiiG,EAAUtwG,QAAQC,QAAQ8qF,GAEnBpuE,EAAIT,GACTo0F,EAAUA,EAAQ3uD,KAAK4uD,EAAM5zF,KAAM4zF,EAAM5zF,MAG3C,OAAO2zF,CACT,CAEAp0F,EAAMg0F,EAAwB7hG,OAE9B,IAAI+5F,EAAYrd,EAIhB,IAFApuE,EAAI,EAEGA,EAAIT,GAAK,CACd,MAAMs0F,EAAcN,EAAwBvzF,KACtC8zF,EAAaP,EAAwBvzF,KAC3C,IACEyrF,EAAYoI,EAAYpI,EAC1B,CAAE,MAAOjnG,GACPsvG,EAAWlpF,KAAKvgB,KAAM7F,GACtB,KACF,CACF,CAEA,IACEmvG,EAAU1B,GAAgBrnF,KAAKvgB,KAAMohG,EACvC,CAAE,MAAOjnG,GACP,OAAOnB,QAAQE,OAAOiB,EACxB,CAKA,IAHAwb,EAAI,EACJT,EAAMm0F,EAAyBhiG,OAExBsO,EAAIT,GACTo0F,EAAUA,EAAQ3uD,KAAK0uD,EAAyB1zF,KAAM0zF,EAAyB1zF,MAGjF,OAAO2zF,CACT,CAEAI,MAAAA,CAAO3lB,GAGL,OAAOgR,GADUuK,IADjBvb,EAAS6b,GAAY5/F,KAAKqgB,SAAU0jE,IACEwb,QAASxb,EAAOr8E,KAC5Bq8E,EAAOnqF,OAAQmqF,EAAOsc,iBAClD,EAIFpN,EAAMt3F,QAAQ,CAAC,SAAU,MAAO,OAAQ,YAAY,SAA6BynF,GAE/EqlB,GAAMhhF,UAAU27D,GAAU,SAAS17E,EAAKq8E,GACtC,OAAO/jF,KAAKsiF,QAAQsd,GAAY7b,GAAU,CAAC,EAAG,CAC5CX,SACA17E,MACAxN,MAAO6pF,GAAU,CAAC,GAAG7pF,OAEzB,CACF,IAEA+4F,EAAMt3F,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+BynF,GAGrE,SAASumB,EAAmBC,GAC1B,OAAO,SAAoBliG,EAAKxN,EAAM6pF,GACpC,OAAO/jF,KAAKsiF,QAAQsd,GAAY7b,GAAU,CAAC,EAAG,CAC5CX,SACAP,QAAS+mB,EAAS,CAChB,eAAgB,uBACd,CAAC,EACLliG,MACAxN,SAEJ,CACF,CAEAuuG,GAAMhhF,UAAU27D,GAAUumB,IAE1BlB,GAAMhhF,UAAU27D,EAAS,QAAUumB,GAAmB,EACxD,IAEA,YCxNA,MAAME,GACJpqG,WAAAA,CAAYqqG,GACV,GAAwB,oBAAbA,EACT,MAAM,IAAI/iF,UAAU,gCAGtB,IAAIgjF,EAEJ/pG,KAAKspG,QAAU,IAAItwG,SAAQ,SAAyBC,GAClD8wG,EAAiB9wG,CACnB,IAEA,MAAMoiF,EAAQr7E,KAGdA,KAAKspG,QAAQ3uD,MAAK6oD,IAChB,IAAKnoB,EAAM2uB,WAAY,OAEvB,IAAIr0F,EAAI0lE,EAAM2uB,WAAW3iG,OAEzB,KAAOsO,KAAM,GACX0lE,EAAM2uB,WAAWr0F,GAAG6tF,GAEtBnoB,EAAM2uB,WAAa,IAAI,IAIzBhqG,KAAKspG,QAAQ3uD,KAAOsvD,IAClB,IAAIC,EAEJ,MAAMZ,EAAU,IAAItwG,SAAQC,IAC1BoiF,EAAMqoB,UAAUzqG,GAChBixG,EAAWjxG,CAAO,IACjB0hD,KAAKsvD,GAMR,OAJAX,EAAQ9F,OAAS,WACfnoB,EAAM+mB,YAAY8H,EACpB,EAEOZ,CAAO,EAGhBQ,GAAS,SAAgBz9F,EAAS03E,EAAQzB,GACpCjH,EAAM6oB,SAKV7oB,EAAM6oB,OAAS,IAAIlI,GAAc3vF,EAAS03E,EAAQzB,GAClDynB,EAAe1uB,EAAM6oB,QACvB,GACF,CAKAyD,gBAAAA,GACE,GAAI3nG,KAAKkkG,OACP,MAAMlkG,KAAKkkG,MAEf,CAMAR,SAAAA,CAAUtG,GACJp9F,KAAKkkG,OACP9G,EAASp9F,KAAKkkG,QAIZlkG,KAAKgqG,WACPhqG,KAAKgqG,WAAW1uG,KAAK8hG,GAErBp9F,KAAKgqG,WAAa,CAAC5M,EAEvB,CAMAgF,WAAAA,CAAYhF,GACV,IAAKp9F,KAAKgqG,WACR,OAEF,MAAM3jF,EAAQrmB,KAAKgqG,WAAWxmF,QAAQ45E,IACvB,IAAX/2E,GACFrmB,KAAKgqG,WAAWzsE,OAAOlX,EAAO,EAElC,CAEAugF,aAAAA,GACE,MAAM5C,EAAa,IAAIC,gBAEjBR,EAAS1/E,IACbigF,EAAWP,MAAM1/E,EAAI,EAOvB,OAJA/jB,KAAK0jG,UAAUD,GAEfO,EAAW3B,OAAOD,YAAc,IAAMpiG,KAAKoiG,YAAYqB,GAEhDO,EAAW3B,MACpB,CAMA,aAAOr5F,GACL,IAAIw6F,EAIJ,MAAO,CACLnoB,MAJY,IAAIwuB,IAAY,SAAkBt1F,GAC9CivF,EAASjvF,CACX,IAGEivF,SAEJ,EAGF,YCtIA,MAAM2G,GAAiB,CACrBC,SAAU,IACVC,mBAAoB,IACpBC,WAAY,IACZC,WAAY,IACZC,GAAI,IACJC,QAAS,IACTC,SAAU,IACVC,4BAA6B,IAC7BC,UAAW,IACXC,aAAc,IACdC,eAAgB,IAChBC,YAAa,IACbC,gBAAiB,IACjBC,OAAQ,IACRC,gBAAiB,IACjBC,iBAAkB,IAClBC,MAAO,IACPC,SAAU,IACVC,YAAa,IACbC,SAAU,IACVC,OAAQ,IACRC,kBAAmB,IACnBC,kBAAmB,IACnBC,WAAY,IACZC,aAAc,IACdC,gBAAiB,IACjBC,UAAW,IACXC,SAAU,IACVC,iBAAkB,IAClBC,cAAe,IACfC,4BAA6B,IAC7BC,eAAgB,IAChBC,SAAU,IACVC,KAAM,IACNC,eAAgB,IAChBC,mBAAoB,IACpBC,gBAAiB,IACjBC,WAAY,IACZC,qBAAsB,IACtBC,oBAAqB,IACrBC,kBAAmB,IACnBC,UAAW,IACXC,mBAAoB,IACpBC,oBAAqB,IACrBC,OAAQ,IACRC,iBAAkB,IAClBC,SAAU,IACVC,gBAAiB,IACjBC,qBAAsB,IACtBC,gBAAiB,IACjBC,4BAA6B,IAC7BC,2BAA4B,IAC5BC,oBAAqB,IACrBC,eAAgB,IAChBC,WAAY,IACZC,mBAAoB,IACpBC,eAAgB,IAChBC,wBAAyB,IACzBC,sBAAuB,IACvBC,oBAAqB,IACrBC,aAAc,IACdC,YAAa,IACbC,8BAA+B,KAGjC3oG,OAAOC,QAAQ2kG,IAAgBxuG,SAAQqF,IAAkB,IAAhBqD,EAAKwR,GAAM7U,EAClDmpG,GAAet0F,GAASxR,CAAG,IAG7B,YCxBA,MAAMuC,GAnBN,SAASunG,EAAeC,GACtB,MAAM50D,EAAU,IAAIivD,GAAM2F,GACpB16F,EAAW6oC,EAAKksD,GAAMhhF,UAAU66D,QAAS9oC,GAa/C,OAVAy5C,EAAM38D,OAAO5iB,EAAU+0F,GAAMhhF,UAAW+xB,EAAS,CAAC40C,YAAY,IAG9D6E,EAAM38D,OAAO5iB,EAAU8lC,EAAS,KAAM,CAAC40C,YAAY,IAGnD16E,EAAS7G,OAAS,SAAgB67F,GAChC,OAAOyF,EAAevO,GAAYwO,EAAe1F,GACnD,EAEOh1F,CACT,CAGcy6F,CAAe9tF,IAG7BzZ,GAAM6hG,MAAQA,GAGd7hG,GAAMo1F,cAAgBA,GACtBp1F,GAAMijG,YAAcA,GACpBjjG,GAAMk1F,SAAWA,GACjBl1F,GAAMihG,QAAUA,GAChBjhG,GAAMiuF,WAAaA,GAGnBjuF,GAAMmsF,WAAaA,EAGnBnsF,GAAMynG,OAASznG,GAAMo1F,cAGrBp1F,GAAMoB,IAAM,SAAasmG,GACvB,OAAOt1G,QAAQgP,IAAIsmG,EACrB,EAEA1nG,GAAM2nG,OC9CS,SAAgBvzG,GAC7B,OAAO,SAAcqf,GACnB,OAAOrf,EAASsxB,MAAM,KAAMjS,EAC9B,CACF,ED6CAzT,GAAM4nG,aE7DS,SAAsBC,GACnC,OAAOxb,EAAMzF,SAASihB,KAAsC,IAAzBA,EAAQD,YAC7C,EF8DA5nG,GAAMg5F,YAAcA,GAEpBh5F,GAAM2yF,aAAeA,GAErB3yF,GAAM8nG,WAAa1hB,GAAS2K,GAAe1E,EAAMtE,WAAW3B,GAAS,IAAIqD,SAASrD,GAASA,GAE3FpmF,GAAM+nG,WAAarH,GAEnB1gG,GAAMujG,eAAiBA,GAEvBvjG,GAAMkW,QAAUlW,GAGhB,yMGxFA,MAAMgoG,EAAgBA,CAACC,EAAQC,IAAiBA,EAAarlB,MAAMl1E,GAAMs6F,aAAkBt6F,IAE3F,IAAIw6F,EACAC,EAqBJ,MAAMC,EAAqB,IAAIC,QACzBC,EAAiB,IAAID,QACrBE,EAAwB,IAAIF,QAgDlC,IAAIG,EAAgB,CAChBh0G,GAAAA,CAAI0N,EAAQ6lF,EAAM0gB,GACd,GAAIvmG,aAAkBwmG,eAAgB,CAElC,GAAa,SAAT3gB,EACA,OAAOqgB,EAAmB5zG,IAAI0N,GAElC,GAAa,UAAT6lF,EACA,OAAO0gB,EAASE,iBAAiB,QAC3BxqG,EACAsqG,EAASG,YAAYH,EAASE,iBAAiB,GAE7D,CAEA,OAAOE,EAAK3mG,EAAO6lF,GACvB,EACAxzF,IAAGA,CAAC2N,EAAQ6lF,EAAM/4E,KACd9M,EAAO6lF,GAAQ/4E,GACR,GAEX1a,IAAGA,CAAC4N,EAAQ6lF,IACJ7lF,aAAkBwmG,iBACR,SAAT3gB,GAA4B,UAATA,IAGjBA,KAAQ7lF,GAGvB,SAAS4mG,EAAa30G,GAClBq0G,EAAgBr0G,EAASq0G,EAC7B,CACA,SAASO,EAAaC,GAQlB,OAhGQb,IACHA,EAAuB,CACpBc,UAAUroF,UAAUsoF,QACpBD,UAAUroF,UAAUuoF,SACpBF,UAAUroF,UAAUwoF,sBA4FE/0G,SAAS20G,GAC5B,WAAmB,QAAA18F,EAAA7K,UAAAjB,OAAN4vC,EAAI,IAAAhuC,MAAAkK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ4jC,EAAI5jC,GAAA/K,UAAA+K,GAIpB,OADAw8F,EAAKvjF,MAAM4jF,EAAOlwG,MAAOi3C,GAClBy4D,EAAK1vG,KAAKsiF,QACrB,EAEG,WAAmB,QAAAyY,EAAAzyF,UAAAjB,OAAN4vC,EAAI,IAAAhuC,MAAA8xF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/jD,EAAI+jD,GAAA1yF,UAAA0yF,GAGpB,OAAO0U,EAAKG,EAAKvjF,MAAM4jF,EAAOlwG,MAAOi3C,GACzC,CACJ,CACA,SAASk5D,EAAuBt6F,GAC5B,MAAqB,oBAAVA,EACA+5F,EAAa/5F,IAGpBA,aAAiB05F,gBAnFzB,SAAwCvrB,GAEpC,GAAIirB,EAAmB9zG,IAAI6oF,GACvB,OACJ,MAAMxpC,EAAO,IAAIxhD,SAAQ,CAACC,EAASC,KAC/B,MAAMk3G,EAAWA,KACbpsB,EAAGse,oBAAoB,WAAY+N,GACnCrsB,EAAGse,oBAAoB,QAASnoG,GAChC6pF,EAAGse,oBAAoB,QAASnoG,EAAM,EAEpCk2G,EAAWA,KACbp3G,IACAm3G,GAAU,EAERj2G,EAAQA,KACVjB,EAAO8qF,EAAG7pF,OAAS,IAAIm2G,aAAa,aAAc,eAClDF,GAAU,EAEdpsB,EAAGlqF,iBAAiB,WAAYu2G,GAChCrsB,EAAGlqF,iBAAiB,QAASK,GAC7B6pF,EAAGlqF,iBAAiB,QAASK,EAAM,IAGvC80G,EAAmB7zG,IAAI4oF,EAAIxpC,EAC/B,CA4DQ+1D,CAA+B16F,GAC/B+4F,EAAc/4F,EAhIVk5F,IACHA,EAAoB,CACjByB,YACAC,eACAC,SACAZ,UACAP,kBA2HG,IAAIoB,MAAM96F,EAAOw5F,GAErBx5F,EACX,CACA,SAAS65F,EAAK75F,GAGV,GAAIA,aAAiB+6F,WACjB,OApHR,SAA0BtuB,GACtB,MAAMgnB,EAAU,IAAItwG,SAAQ,CAACC,EAASC,KAClC,MAAMk3G,EAAWA,KACb9tB,EAAQggB,oBAAoB,UAAWroG,GACvCqoF,EAAQggB,oBAAoB,QAASnoG,EAAM,EAEzCF,EAAUA,KACZhB,EAAQy2G,EAAKptB,EAAQniF,SACrBiwG,GAAU,EAERj2G,EAAQA,KACVjB,EAAOopF,EAAQnoF,OACfi2G,GAAU,EAEd9tB,EAAQxoF,iBAAiB,UAAWG,GACpCqoF,EAAQxoF,iBAAiB,QAASK,EAAM,IAK5C,OADAi1G,EAAsBh0G,IAAIkuG,EAAShnB,GAC5BgnB,CACX,CA+FeuH,CAAiBh7F,GAG5B,GAAIs5F,EAAeh0G,IAAI0a,GACnB,OAAOs5F,EAAe9zG,IAAIwa,GAC9B,MAAMi7F,EAAWX,EAAuBt6F,GAOxC,OAJIi7F,IAAaj7F,IACbs5F,EAAe/zG,IAAIya,EAAOi7F,GAC1B1B,EAAsBh0G,IAAI01G,EAAUj7F,IAEjCi7F,CACX,CACA,MAAMZ,EAAUr6F,GAAUu5F,EAAsB/zG,IAAIwa,GASpD,SAASk7F,EAAO5uG,EAAMwB,GAA0D,IAAjD,QAAEqtG,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAY7oG,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzE,MAAMg6E,EAAU8uB,UAAUzO,KAAKxgG,EAAMwB,GAC/B0tG,EAAc3B,EAAKptB,GAoBzB,OAnBI2uB,GACA3uB,EAAQxoF,iBAAiB,iBAAkBsF,IACvC6xG,EAAQvB,EAAKptB,EAAQniF,QAASf,EAAMkyG,WAAYlyG,EAAMmyG,WAAY7B,EAAKptB,EAAQkvB,aAAcpyG,EAAM,IAGvG4xG,GACA1uB,EAAQxoF,iBAAiB,WAAYsF,GAAU4xG,EAE/C5xG,EAAMkyG,WAAYlyG,EAAMmyG,WAAYnyG,KAExCiyG,EACK12D,MAAM82D,IACHN,GACAM,EAAG33G,iBAAiB,SAAS,IAAMq3G,MACnCD,GACAO,EAAG33G,iBAAiB,iBAAkBsF,GAAU8xG,EAAS9xG,EAAMkyG,WAAYlyG,EAAMmyG,WAAYnyG,IACjG,IAEC0zF,OAAM,SACJue,CACX,CAgBA,MAAMK,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAI92G,IAC1B,SAAS+2G,EAAU9oG,EAAQ6lF,GACvB,KAAM7lF,aAAkBynG,cAClB5hB,KAAQ7lF,GACM,kBAAT6lF,EACP,OAEJ,GAAIgjB,EAAcv2G,IAAIuzF,GAClB,OAAOgjB,EAAcv2G,IAAIuzF,GAC7B,MAAMkjB,EAAiBljB,EAAKjhE,QAAQ,aAAc,IAC5CokF,EAAWnjB,IAASkjB,EACpBE,EAAUL,EAAaz2G,SAAS42G,GACtC,KAEEA,KAAmBC,EAAWrB,SAAWD,gBAAgBhpF,aACrDuqF,IAAWN,EAAYx2G,SAAS42G,GAClC,OAEJ,MAAM1uB,EAASrqF,eAAgBk5G,GAE3B,MAAMjuB,EAAKhkF,KAAKwxG,YAAYS,EAAWD,EAAU,YAAc,YAC/D,IAAIjpG,EAASi7E,EAAGkuB,MAAM,QAAAC,EAAA7pG,UAAAjB,OAHmB4vC,EAAI,IAAAhuC,MAAAkpG,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJn7D,EAAIm7D,EAAA,GAAA9pG,UAAA8pG,GAW7C,OAPIL,IACAhpG,EAASA,EAAOsd,MAAM4wB,EAAK51B,iBAMjBroB,QAAQgP,IAAI,CACtBe,EAAO+oG,MAAmB76D,GAC1B+6D,GAAWhuB,EAAGxpC,QACd,EACR,EAEA,OADAo3D,EAAcx2G,IAAIwzF,EAAMxL,GACjBA,CACX,CACAusB,GAAc0C,IAAQ,IACfA,EACHh3G,IAAKA,CAAC0N,EAAQ6lF,EAAM0gB,IAAauC,EAAU9oG,EAAQ6lF,IAASyjB,EAASh3G,IAAI0N,EAAQ6lF,EAAM0gB,GACvFn0G,IAAKA,CAAC4N,EAAQ6lF,MAAWijB,EAAU9oG,EAAQ6lF,IAASyjB,EAASl3G,IAAI4N,EAAQ6lF,OAG7E,MAAM0jB,EAAqB,CAAC,WAAY,qBAAsB,WACxDC,EAAY,CAAC,EACbC,EAAiB,IAAItD,QACrBuD,EAAmC,IAAIvD,QACvCwD,EAAsB,CACxBr3G,GAAAA,CAAI0N,EAAQ6lF,GACR,IAAK0jB,EAAmBp3G,SAAS0zF,GAC7B,OAAO7lF,EAAO6lF,GAClB,IAAI+jB,EAAaJ,EAAU3jB,GAM3B,OALK+jB,IACDA,EAAaJ,EAAU3jB,GAAQ,WAC3B4jB,EAAep3G,IAAI4E,KAAMyyG,EAAiCp3G,IAAI2E,MAAM4uF,MAAMtmF,WAC9E,GAEGqqG,CACX,GAEJ55G,eAAgB65G,IAEZ,IAAIC,EAAS7yG,KAIb,GAHM6yG,aAAkB/C,YACpB+C,QAAeA,EAAOC,cAAWxqG,aAEhCuqG,EACD,OAEJ,MAAME,EAAgB,IAAIpC,MAAMkC,EAAQH,GAIxC,IAHAD,EAAiCr3G,IAAI23G,EAAeF,GAEpDzD,EAAsBh0G,IAAI23G,EAAe7C,EAAO2C,IACzCA,SACGE,EAENF,QAAgBL,EAAen3G,IAAI03G,IAAkBF,EAAO7C,YAC5DwC,EAAejY,OAAOwY,EAE9B,CACA,SAASC,EAAejqG,EAAQ6lF,GAC5B,OAASA,IAASxnE,OAAOm9E,eACrBqK,EAAc7lG,EAAQ,CAAC2nG,SAAUD,eAAgBX,aACvC,YAATlhB,GAAsBggB,EAAc7lG,EAAQ,CAAC2nG,SAAUD,gBAChE,CACAd,GAAc0C,IAAQ,IACfA,EACHh3G,IAAGA,CAAC0N,EAAQ6lF,EAAM0gB,IACV0D,EAAejqG,EAAQ6lF,GAChBgkB,EACJP,EAASh3G,IAAI0N,EAAQ6lF,EAAM0gB,GAEtCn0G,IAAGA,CAAC4N,EAAQ6lF,IACDokB,EAAejqG,EAAQ6lF,IAASyjB,EAASl3G,IAAI4N,EAAQ6lF,WCtSxDz2C,EAAAnqC,eCHI,SAAA89B,EAAa35B,GAA+C,IAA/BS,EAAAtK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,EAAG0K,EAAA1K,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,cAASqN,EAAAoqC,EAAA/G,EAAAzkC,EAAA+F,EACnF,OAA6B,OAAzB3E,EAAAxD,EAAO8oE,OAAO,EAAIroE,SAAA,EAAlB+C,EAA2B6lE,KAAMxtE,EAAAA,GAAGmkE,SAAA,OACpCpyB,EAAA5tC,EAAO8oE,OAAO,EAAIroE,SAAA,EAAlBmtC,EAA2By7B,KAAMxtE,EAAAA,GAAGynE,YACO,KAAlB,OAAzBz8B,EAAA7mC,EAAO8oE,OAAO,EAAIroE,KAAlB,OAAyBomC,EAAzBA,EAA2B9+C,WAAA,EAA3B8+C,EAAiC3xC,UACR,OAAzBkN,EAAApC,EAAO8oE,OAAO,EAAIroE,SAAA,EAAlB2B,EAA2BinE,KAAMxtE,EAAAA,GAAGwlE,iBAAA,OACpCl5D,EAAAnI,EAAO8oE,OAAO,EAAIroE,SAAA,EAAlB0H,EAA2BkhE,KAAMxtE,EAAAA,GAAG4nE,YAJe,GAKhD77E,EAAAA,GAAAA,cAAoBoY,EAAO8oE,OAAO,EAAIroE,GAAQ1Y,KAAkB,WAAX8Y,EAAuB,CAAC,GAAK,CAAC,KAC5F,EDJYhF,EAAAmqC,IAAAA,EAKX,KAJCnqC,EAAAilG,UAAA,cACAjlG,EAAAA,EAAAklG,QAAA,aACAllG,EAAAA,EAAAmlG,YAAA,iBACAnlG,EAAAA,EAAAolG,UAAA,eESF,SAEgBlmF,EAAiBlf,EAAsBmE,GACrDnE,EAAOgkB,cAAc7f,EAAOX,QAC5BxD,EAAOia,MAAMluB,EAAAA,GAAAA,QAAcoY,EAAON,KAAM,QACxC7D,EAAOgkB,cAAc7f,EAAOxO,SAC5BqK,EAAOia,MAAMluB,EAAAA,GAAAA,QAAcoY,EAAOkhG,SAAU,OAAOnjD,WACnDliD,EAAOia,MAAMluB,EAAAA,GAAAA,QAAcoY,EAAO4yE,WAAY,OAAO70B,WACrDliD,EAAOgkB,cAAc7f,EAAOmhG,MAC5BtlG,EAAOia,MAAMluB,EAAAA,GAAAA,QAAcoY,EAAOiU,KAAM,QACxCpY,EAAOgkB,cAAc7f,EAAOd,MAC9B,CAEM,SAAUsU,EAAsB3X,GACpC,MAAO,CACLwD,OAAQxD,EAAO6hB,eACfhe,KAAM9X,EAAAA,GAAAA,MAAYiU,EAAOwc,KAAK,KAC9B7mB,QAASqK,EAAO6hB,eAChBwjF,SAAUt5G,EAAAA,GAAAA,MAAYiU,EAAOwc,KAAK,IAAI0lC,WACtC60B,WAAYhrF,EAAAA,GAAAA,MAAYiU,EAAOwc,KAAK,IAAI0lC,WACxCojD,KAAMtlG,EAAO6hB,eACbzJ,KAAMrsB,EAAAA,GAAAA,MAAYiU,EAAOwc,KAAK,IAC9BnZ,MAAOrD,EAAO6hB,eAElB,CC3Ca,MAAA/F,EACXrqB,WAAAA,GAAqD,IAAlCuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAASlP,KAAKC,MAAcU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAM,GAAE,KAApCkJ,YAAA,OAA4BC,SAAA,EAA5B,KAAMD,OAANxD,EAA4B,KAAGyD,IAAH1X,CAAY,EC0CvD,MCpCOg+C,EAQXt4C,WAAAA,CACSuO,GAAmE,IAAhDjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAkB,GAAW6J,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,GAAE,KAArEpO,UAAA,EAAmB,KAAAq5G,YAAA,EAA6B,KAAAC,UAAA,EAAhD,KAAIt5G,KAAJ8T,EAAmB,KAAMulG,OAANx5G,EAA6B,KAAIy5G,KAAJrhG,CAA0B,ECJzE,IAAAm1B,EAgBAyS,EC1BAn+B,ECAA8nB,ECWA/nB,GHDZ,SAAY3N,GAEVA,EAAAA,EAAAylG,QAAA,aAEAzlG,EAAAA,EAAA0lG,WAAA,gBAEA1lG,EAAAA,EAAA2lG,QAAA,aAEA3lG,EAAAA,EAAA4lG,KAAA,SACD,CATD,CAAYtsE,IAAAA,EASX,KAOD,SAAYt5B,GAEVA,EAAAA,EAAA6lG,MAAA,WAEA7lG,EAAAA,EAAA8lG,OAAA,YAEA9lG,EAAAA,EAAA+lG,eAAA,mBACD,CAPD,CAAYh6D,IAAAA,EAOX,KAQqB,MAAAt+B,EAapBhc,WAAAA,GAG4B,IAFnBuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,IAAIo4E,IACb3mF,EAAAuO,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EACAmN,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,UAAS,KAF5B0rG,YAAA,OACAC,eAAA,EACA,KAAA1yG,aAAA,EAfT,KAAA2yG,IAAM,QACN/xG,KAAO,GAYE,KAAM6xG,OAANhmG,EACA,KAASimG,UAATl6G,EACA,KAAOwH,QAAP4Q,CACL,CAWJ,WAAAnM,CAAYgI,EAAmBjU,GAAcuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAag/B,EAAUqsE,OAEpE,CAQA,aAAAQ,CAAcnmG,GAEd,CASA,UAAAomG,CAAWpmG,EAAoBjU,GAC7B,OACF,EAOA,aAAAd,CAAc+U,EAAoBjU,GAElC,GCrGF,SAAYiU,GACVA,EAAAA,EAAAqmG,QAAA,YACArmG,EAAAA,EAAAsmG,OAAA,YACAtmG,EAAAA,EAAAumG,WAAA,gBACAvmG,EAAAA,EAAAwmG,SAAA,cACAxmG,EAAAA,EAAAolG,UAAA,eACAplG,EAAAA,EAAAymG,UAAA,cACD,CAPD,CAAY74F,IAAAA,EAOX,WGRYu+B,EAIX16C,WAAAA,CAAYuO,EAA8CmE,GACxD,GAAI,KAJNpB,UAAA,EAAI,KACJC,UAAA,OAAI,IAGEmB,EAEF,GADAnS,KAAKgR,KAAOmB,EACiB,iBAAlBnE,EACThO,KAAK+Q,KAAO/C,MACH,KAAA/E,MAAMC,QAAQ8E,GAGvB,MAAU,IAAArJ,MAAM,oBAFhB3E,KAAK+Q,KAAOhX,EAAAA,GAAAA,MAAYiU,EAG1B,MACS,GAAA/E,MAAMC,QAAQ8E,GAAiB,CACxC,MAAMmE,EAAS,IAAIpY,EAAAA,GAAAA,OAAaiU,GAChChO,KAAK+Q,KAAOhX,EAAAA,GAAAA,MAAYoY,EAAOqY,KAAK,IAAI0lC,WACxClwD,KAAKgR,KAAOmB,EAAO0e,aACrB,MAAW,GAAyB,iBAAlB7iB,EAA4B,CAC5C,MAAOjU,EAAMoY,GAAQnE,EAAe8I,MAAM,KAC1C9W,KAAK+Q,KAAOhX,EACZiG,KAAKgR,KAAOyU,SAAStT,EACvB,KAAO,IAA6B,iBAAlBnE,EAIhB,MAAU,IAAArJ,MAAM,oBAHhB3E,KAAK+Q,KAAO/C,EAAe+C,KAC3B/Q,KAAKgR,KAAOhD,EAAegD,IAG7B,CACF,CAEApD,QAAAA,GACE,MAAO,GAAG5N,KAAK+Q,QAAQ/Q,KAAKgR,MAC9B,CAEAg9D,QAAAA,GACE,MAAMhgE,EAAS,IAAIjU,EAAAA,GAAAA,OAGnB,OAFAiU,EAAOia,MAAMluB,EAAAA,GAAAA,QAAciG,KAAK+Q,KAAM,OAAOm/C,WAC7CliD,EAAOgkB,cAAchyB,KAAKgR,MACnBhD,EAAOmtC,SAChB,CAEAu5D,UAAAA,GACE,MAAM1mG,EAAS,IAAIjU,EAAAA,GAAAA,OAGnB,OAFAiU,EAAOia,MAAMluB,EAAAA,GAAAA,QAAciG,KAAK+Q,KAAM,QACtC/C,EAAOkkB,cAAclyB,KAAKgR,MACnBhD,EAAOmtC,SAChB,CAEAjtB,MAAAA,GACE,OAAOluB,KAAK4N,UACd,GFjDF,SAAYI,GACVA,EAAA2mG,IAAA,MACA3mG,EAAA4mG,KAAA,MACD,CAHD,CAAYlxE,IAAAA,EAGX,WAEY0W,EASX36C,WAAAA,CACSuO,EACAjU,EACAoY,EACAS,EACAI,GAJA,KAAAkhG,SAAA,EACA,KAAA5sG,QAAA,OACAuO,WAAA,OACA3E,WAAA,OACA2jG,kBAAA,EAJA,KAAGX,IAAHlmG,EACA,KAAE1G,GAAFvN,EACA,KAAK8b,MAAL1D,EACA,KAAKjB,MAAL0B,EACA,KAAYiiG,aAAZ7hG,CACL,CAEJ8hG,UAAAA,GACE,OAAO16D,EAAU26D,cAAc/0G,KAAKk0G,IAAKl0G,KAAKsH,GAAItH,KAAK6V,MACzD,CAEA,oBAAAk/F,CAAqB/mG,EAAajU,EAAaoY,GAC7C,IAAIS,EAAM5E,EAOV,OANIjU,IACF6Y,GAAO,IAAI7Y,IACPoY,IACFS,GAAO,IAAIT,MAGRS,CACT,GCxBF,SAAY5E,GACVA,EAAAA,EAAAgnG,WAAA,eACAhnG,EAAAA,EAAAinG,QAAA,aACAjnG,EAAAA,EAAA0lG,WAAA,gBACA1lG,EAAAA,EAAAknG,UAAA,cACD,CALD,CAAYv5F,IAAAA,EAKX,WAKYH,EAmDX/b,WAAAA,CACSuO,EACAjU,EACAoY,EACAS,GACY,IAAZI,EAAA1K,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,IAAIwhB,EAJZ,KAAAhjB,cAAA,OACA9D,cAAA,OACAgE,YAAA,OACA0B,YAAA,EACA,KAAA6I,WAAA,OApDTJ,MAAgB,GAKhB,KAAAjX,KAAqC,CAAC,EAAD,KAOrCgX,WAAA,EAAK,KAKLqiG,OAAmB,QAKnB4B,KAAiB,GAAE,KAKnBC,KAAiB,QAKjB5B,KAAiB,GAKjB,KAAA6B,UAAY,EAWH,KAAQvuG,SAARkH,EACA,KAAQhL,SAARjJ,EACA,KAAMiN,OAANmL,EACA,KAAMzJ,OAANkK,EACA,KAAKrB,MAALyB,CACL,QE1EOokB,EAAY33B,WAAAA,GACN,KAAA8zG,OAAkB,CAAE,EAG9B94G,EAAAA,CAAGuT,EAAejU,GAMvB,MALkC,iBAAvBiG,KAAKuzG,OAAOvlG,KACrBhO,KAAKuzG,OAAOvlG,GAAS,IAGvBhO,KAAKuzG,OAAOvlG,GAAO1S,KAAKvB,GACjB,IAAMiG,KAAKtF,eAAesT,EAAOjU,EAC1C,CAEOW,cAAAA,CAAesT,EAAejU,GACnC,GAAkC,iBAAnB,KAACw5G,OAAOvlG,GACrB,OAGF,MAAMmE,EAAcnS,KAAKuzG,OAAOvlG,GAAOwV,QAAQzpB,GAC3CoY,GAAO,GACTnS,KAAKuzG,OAAOvlG,GAAOuvB,OAAOprB,EAAK,EAEnC,CAEOqlC,kBAAAA,GACLjyC,OAAOxB,KAAK/D,KAAKuzG,QAAQ53G,SAASqS,GAChChO,KAAKuzG,OAAOvlG,GAAOuvB,OAAO,EAAGv9B,KAAKuzG,OAAOvlG,GAAO3G,SAEpD,CAEO1M,IAAAA,CAAKqT,GAAkB,QAAAmF,EAAA7K,UAAAjB,OAAAtN,EAAA,IAAAkP,MAAAkK,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAtZ,EAAAsZ,EAAA,GAAA/K,UAAA+K,GACM,iBAAvBrT,KAAKuzG,OAAOvlG,IAIvB,IAAIhO,KAAKuzG,OAAOvlG,IAAQrS,SAASqS,GAAaA,EAASse,MAAMtsB,KAAMjG,IACrE,CAEOK,IAAAA,CAAK4T,EAAejU,GAAA,IAAA2M,EAAA,KACzB,MAAMyL,EAAqBnS,KAAKvF,GAAGuT,GAAO,WAAI,QAAA+sF,EAAAzyF,UAAAjB,OAAA2G,EAAA,IAAA/E,MAAA8xF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAhtF,EAAAgtF,GAAA1yF,UAAA0yF,GAC5C7oF,IACApY,EAASuyB,MAAM5lB,EAAMsH,EACvB,IAEA,OAAOmE,CACT,ECPW,MAAA8lB,EAEXx4B,WAAAA,CACSuO,EACAjU,GAGY,IAFZoY,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,IAAI8uB,EACpBxkB,EAAAtK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GACO0K,EAAA1K,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAAY,KAJZ0D,cAAA,OACAspG,YAAA,EACA,KAAA/B,YAAA,OAEA7P,eAAA,OAND6R,cAAA,EAEC,KAAQvpG,SAARgC,EACA,KAAMsnG,OAANv7G,EACA,KAAMw5G,OAANphG,EAEA,KAASuxF,UAAT1wF,EAEHJ,GAAW5S,KAAKo0G,MACtB,CAEA,aAAA19F,GAAa,IAAA1I,EAAAjU,EAAAoY,EACPnS,KAAKu1G,UAAU51D,cAAc3/C,KAAKu1G,gBAEhB,OAAtBvnG,EAAMhO,KAAKs1G,OAAOE,WAAA,EAAZxnG,EAAkB0I,iBAClB,OAAN3c,EAAMiG,KAAKs1G,OAAOG,aAAA,EAAZ17G,EAAoB2c,iBACJ,OAAtBvE,EAAMnS,KAAKs1G,OAAOI,WAAA,EAAZvjG,EAAkBuE,WAExB1W,KAAKuzG,OAAO54G,KACV,YACA,6CAGFqF,KAAKuzG,OAAO/7D,oBACd,CAEA,eAAAh6C,CACEwQ,GAEU,IAENgF,EAHJjZ,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,GACTsK,EAAAtK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAeA,OATE0K,EAHGhF,EAAGo3E,WAGC,CACL18E,OAAQ,UACRqI,KAAM/C,EAAG1G,GAAG,OACZ+E,QAAS,eALOipG,OAAOI,KAAMl4G,UAAUwQ,IAQvCmE,EAAAA,EAAAA,IAAoBa,UAAA,KACXsiG,OAAOE,KAAMG,OAAO3nG,EAAIjU,EAAQ6Y,EAAU00B,EAAUssE,KAAOtsE,EAAUqsE,SAAA,GAE3E3gG,CAET,CAEA,UAAAohG,GAAU,IAAApmG,EAAAjU,EAAAoY,EACR,WAAMnS,KAAKs1G,OAAOG,OAAQrB,MAAA,GAC1Bp0G,KAAKuzG,OAAO54G,KAAK,6BACjBqT,EAAMhO,KAAKgM,SAAS/G,cAAA,EAAd+I,EAAuB4nG,SAAS,YAAI77G,EAAI,KAACu7G,OAAOE,WAAA,EAAZz7G,EAAkBi6G,SAAU,MACtE,MAAMphG,QAAiB5S,KAAKs1G,OAAOE,KAAM91G,QAAQm2G,SAAS,YAG1D,GADAt6G,QAAQgL,IAAI,iBAAkBqM,IACzBA,EAAU,KAAAI,EACb,MAAMhF,EAA0C,CAAE,EAClD,IAAIjU,EAAW,EACf,IAAK,MAAMoY,KAAWnS,KAAKs1G,OAAOE,KAAMM,SAAU,CAChD91G,KAAKuzG,OAAO54G,KAAK,YAAa,CAACu5G,IAAK/hG,EAAQ+hG,IAAK/xG,KAAMgQ,EAAQhQ,OAC/D,MAAMyQ,QAAcT,EAAQiiG,KAAKp0G,KAAKs1G,OAAOE,KAAOxnG,GACpDjU,EAAWT,KAAKo0B,IAAI3zB,EAAU6Y,EAChC,OACsB,OAAtBI,EAAMhT,KAAKs1G,OAAOE,WAAA,EAAZxiG,EAAkBsjC,MAAM/wC,OAAOm5C,OAAO1wC,WAClC,KAACsnG,OAAOE,KAAM91G,QAAQk6C,SAAS,WAAY7/C,EAAS6T,YAC9D5N,KAAKuzG,OAAO54G,KAAK,aACnB,CAGoB,IAAAgb,EAAhB3V,KAAK0jG,YACc,OAArB/tF,EAAA3V,KAAKgM,SAAS/G,UAAd0Q,EAAuB+tF,WAAU3qG,eAAOiV,EAAOjU,GAC7C,OAAQiU,GACN,IAAK,KACH,MAAMA,EAAYjI,KAAKC,MAAMjM,GAC7BoY,EAAKmjG,OAAOE,KAAMl/D,MAAM,CAAC,CACvBvlC,KAAM/C,EAAU+C,KAChBS,OAAQP,OAAOjD,EAAUwD,QACzBC,IAAKR,OAAOjD,EAAUyD,KAAO,GAC7Bq8D,QAAS9/D,EAAU+nG,KACnB/sG,OAAQ,OACRgtG,UAAW1uE,EAAUqsE,WAEvB,MACF,IAAK,QACHxhG,EAAKmjG,OAAOG,OAAQrB,MAAA,GAG1B,KAEFp0G,KAAKs1G,OAAOG,OAAQrB,MAAA,GACpBp0G,KAAKs1G,OAAOI,KAAMO,eAClBj2G,KAAKs1G,OAAOE,KAAMS,qBACZj2G,KAAKs1G,OAAOE,KAAMU,aACpBl2G,KAAKu1G,UAAU51D,cAAc3/C,KAAKu1G,UACtCv1G,KAAKu1G,SAAW71D,aACd,IAAM1/C,KAAKs1G,OAAOE,KAAMU,cACxB,KAEFl2G,KAAKs1G,OAAOE,KAAMW,eAClBn2G,KAAKuzG,OAAO94G,GAAG,qBAAqB1B,iBAClCoZ,EAAKmjG,OAAOE,KAAMW,cACpB,GACF,CAEA,YAAAxX,CACE3wF,GAGA,IAFAjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAOo7B,EAAQkxE,KACfziG,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,IACRsK,EAAAtK,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAEA,OAAW,KAACswG,OAAOE,KAAM7W,OAAO3wF,EAAQjU,EAAMoY,EAAOS,EACvD,CAEA,YAAAwjG,CAAapoG,GACX,OAAOhO,KAAKs1G,OAAOE,KAAM91G,QAAQrE,IAAI2S,EACvC,CAEA,aAAAqoG,CAAcroG,GACZ,OAAOhO,KAAKs1G,OAAOE,KAAM91G,QAAQ42G,QAAQtoG,EAC3C,CAEA,WAAAuoG,CACEvoG,GACa,IAAbjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAEA,OAAOtI,KAAKs1G,OAAOI,KAAMc,OAAOxoG,EAAMjU,EACxC,CAEA,kBAAA08G,GAA2B,IAARzoG,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,IACzB,OAAOtI,KAAKs1G,OAAOE,KAAM91G,QAAQg3G,gBAAgB1oG,EACnD,CAEA,aAAA2oG,CAAc3oG,GACZ,OAAOhO,KAAKs1G,OAAOE,KAAMG,OAAO3nG,EAAI,GAAIs5B,EAAUmsE,SAAA,EACpD,CAEA,oBAAAmD,GACE,OAAO52G,KAAKs1G,OAAOG,OAAQ/1G,QAAQm3G,WACrC,CAEA,cAAAC,CAAe9oG,GACb,OAAOhO,KAAKs1G,OAAOG,OAAQ/1G,QAAQq3G,YAAY/oG,EACjD,CAEA,iBAAAgpG,GACE,OAAOh3G,KAAKgM,SAASypG,OAAQuB,aAC/B,CAEA,iBAAAC,CAAkBjpG,GAAY,IAAAmE,EAC5B,MAAMS,QAAY5S,KAAKs1G,OAAOI,KAAMh2G,QAAQrE,IAAI2S,GAChD,IAAK4E,EAAK,OACV,MAAMI,EAAS,IAAIjZ,EAAAA,GAAAA,OAUnB,OATAiZ,EAAOyf,UAAUxhB,OAAO2B,EAAIlK,SAC5BsK,EAAOgf,cAAcpf,EAAIrB,MAAMC,QAC/BwB,EAAO0pD,cAAczrD,OAAO2B,EAAIrB,MAAME,MACtCuB,EAAO2pD,eAAe/pD,EAAIskG,MAAM7vG,QAChC2L,EAAOiV,MAAMrV,EAAIskG,OACjBlkG,EAAO2pD,gBAAe,OAAAxqD,EAAAS,EAAIukG,YAAA,EAAJhlG,EAAW9K,SAAU,GACvCuL,EAAIukG,OACNnkG,EAAOiV,MAAMrV,EAAIukG,OAEZnkG,EAAOmoC,SAChB,CAEA,qBAAAi8D,GACE,aAAiB,KAAC9B,OAAOG,OAAQ/1G,QAAQ23G,WAC3C,CAEA,mBAAAC,CAAoBtpG,GAClB,MAAMmE,EAAS,IAAIpY,EAAAA,GAAAA,OAAaiU,GAChC,IAAI4E,EAAyB,GAC7B,KAAOT,EAAO2C,IAAM9G,EAAK3G,QACvBuL,EAAQtX,KAAKqqB,EAAsBxT,UAAA,KAE1BmjG,OAAOG,OAAQ/1G,QAAQ63G,QAAQ3kG,EAC5C,CAEA,qBAAA4kG,CAAsBxpG,EAAcmE,GAClC,MAAMS,EAAS,IAAI7Y,EAAAA,GAAAA,OAAaoY,GAC1Ba,EAASJ,EAAO8d,WAChB/a,EAAS/C,EAAOid,eAChBkwB,EAAMntC,EAAOwqD,iBACnB,IAAIpkB,EAAMpmC,EAAOyqD,gBACjB,MAAM9oD,EAAW,CACfxD,KAAA/C,EACAtF,OAAQsK,EACRzB,MAAO,CAAEC,OAAAmE,EAAQlE,IAAKvJ,OAAO63C,EAAI4C,aACjCu0D,MAAOtkG,EAAO4X,KAAKwuB,IAErBA,EAAMpmC,EAAOyqD,gBACTrkB,IAAKzkC,EAAI4iG,MAAQvkG,EAAO4X,KAAKwuB,UACvB,KAACs8D,OAAOI,KAAMh2G,QAAQ+3G,IAAIljG,EACtC,CAEA,mBAAAmjG,GACE,OAAO13G,KAAKs1G,OAAOE,KAAM91G,QAAQg4G,eACnC,CAEA,uBAAAC,CAAwB3pG,SAChBhO,KAAKs1G,OAAOE,KAAMl/D,MAAMtoC,GAC9B,IAAIjU,EAAa,EACjB,IAAK,MAAMoY,KAAOnE,EACZmE,EAAIX,OAASzX,GAAcoY,EAAIX,OAAS,MAC1CzX,EAAaoY,EAAIX,QAGrB,IAAK,MAAMxD,KAAA,KAAcsnG,OAAOE,KAAMxB,aAC9Bh0G,KAAKs1G,OAAOE,KAAM91G,QAAQk6C,SAC9B,QAAQ5rC,IACRjU,EAAW6T,kBAGL,KAAC0nG,OAAOE,KAAM91G,QAAQk6C,SAC9B,WACA7/C,EAAW6T,WAEf,EC7OF,MAAMqsC,EAAO,CACX29D,QAAS,kCACTC,QAAS,iDAGEv9D,EAKX76C,WAAAA,CACSuO,EACAjU,GADA,KAAAwH,aAAA,EACA,KAAAu2G,eAAA,OAJFC,iBAAA,EAGE,KAAOx2G,QAAPyM,EACA,KAAS8pG,UAAT/9G,CAEL,CAEJ,cAAA67G,CAAe5nG,GAQb,WAPmBi1E,MAAM,GAAGhpC,EAAKj6C,KAAKuB,oBAAoBvB,KAAK83G,YAAa,CAC1E10B,OAAQ,MACRP,QAAS,CACP,eAAgB,oBAElBJ,KAAM18E,KAAKkB,UAAU+G,MAEb00E,GAAI,MAAU,IAAA/9E,MAAM,6BAChC,CAEA,eAAAnH,CACEwQ,GAEAzS,QAAQgL,IAAI,eAAgByH,EAAG1G,GAAG,OAAQ0G,EAAG8hD,SAC7C,MAAM/1D,EAAM,GAAGkgD,EAAKj6C,KAAKuB,iBAEnB4Q,QAAa8wE,MAAMlpF,EAAK,CAC5BqpF,OAAQ,OACRP,QAAS,CACP,eAAgB,4BAElBJ,KAAM77D,EAAOrF,KAAKvT,EAAGggE,cAEjBp7D,QAAcT,EAAKF,OACzB,OAAoB,MAAhBE,EAAKzJ,OACA,CACLA,OAAQ,QACR6a,KAAMpR,EAAKzJ,OAAOkF,WAClB82E,YAAa9xE,EAAKzY,OAGf,CACLuO,OAAQ,UACRqI,KAAM6B,EAAK7B,KACX1E,QAAS,qCAEb,CAEA,YAAA3D,CAAasF,GACX,MAAMjU,QAAakpF,MAAM,GAAGhpC,EAAKj6C,KAAKuB,kBAAkByM,WACxD,OAAQjU,EAAK2O,QACX,KAAK,IACH,MAAO,CACLA,OAAQyvC,EAAgBi7D,UACxB+D,MAAO,IAAIvwF,EAAOrF,WAAWxnB,EAAK4rG,iBAEtC,KAAQ,IACN,MAAO,CAAEj9F,OAAQyvC,EAAgB+6D,SACnC,QACE,OAEN,CAEA,cAAA8E,CAAehqG,GACb,MAAMmE,QAAa8wE,MAAM,GAAGhpC,EAAKj6C,KAAKuB,kBAAkByM,KAExD,GADAzS,QAAQgL,IAAI,WAAYyH,GACJ,MAAhBmE,EAAKzJ,OACP,MAAU,IAAA/D,MAAM,GAAGwN,EAAKzJ,+BAA+BsF,KACzD,MAAM4E,QAAaT,EAAKwzF,cAClB3yF,EAAS,IAAIjZ,EAAAA,GAAAA,OAAa,IAAI6sB,EAAOrF,KAAK3O,KAChD,IAAI+C,EAAM3C,EAAOqqD,gBACjB,MAAMtd,EAAM,CACVm3D,MAAOlkG,EAAOwX,KAAK7U,IAIrB,OAFAA,EAAM3C,EAAOqqD,gBACT1nD,IAAKoqC,EAAIo3D,MAAQnkG,EAAOwX,KAAK7U,IAC1BoqC,CACT,CAEA,gBAAAk4D,CAAiBjqG,GACf,MAAMjU,QAAakpF,MAAM,GAAGhpC,EAAKj6C,KAAKuB,kBAAkByM,WAExD,GADAzS,QAAQgL,IAAI,WAAYyH,GACJ,MAAhBjU,EAAK2O,OAAgB,OACzB,MAAMyJ,QAAcpY,EAAK4rG,cACzB,MAAO,IAAI/+E,EAAOrF,KAAKpP,GACzB,CAEA,eAAA+lG,CAAgBlqG,GAA4B,IAARjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,IAI1C,aAHmB26E,MACjB,GAAGhpC,EAAKj6C,KAAKuB,2BAA2ByM,WAAoBjU,MAElDkY,MACd,CAEA,iBAAA+kG,GACE,MAAMhpG,QAAai1E,MAAM,GAAGhpC,EAAKj6C,KAAKuB,0BACtC,IAAKyM,EAAK00E,GAAI,MAAM,IAAI/9E,MAAM,4BAC9B,OAAOqJ,EAAKiE,MACd,CAEA,WAAA1J,GAAsB,IAAVyF,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GACV,MAAMvO,QAAakpF,MACjB,GAAGhpC,EAAKj6C,KAAKuB,oBAAoBvB,KAAK83G,0CAA0C9pG,EAAU,gBAAkB,MAE9G,aAAejU,EAAKkY,QAAyB,EAC/C,CAEA,YAAAmkG,CAAapoG,GACX,MAAMjU,QAAakpF,MACjB,GAAGhpC,EAAKj6C,KAAKuB,mBAAmByM,EAASJ,8BAE3C,OAAO7T,EAAK2oF,GAAM3oF,EAAKkY,YAAA,CACzB,CAEA,aAAAokG,CAAcroG,GACZ,MAAMjU,QAAakpF,MAAM,GAAGhpC,EAAKj6C,KAAKuB,6CAA8C,CAClF6hF,OAAQ,OACRP,QAAS,CACP,eAAgB,oBAElBJ,KAAM18E,KAAKkB,UAAU+G,KAEvB,OAAOjU,EAAK2oF,UAAY3oF,EAAKkY,QAAqBxM,KAAIuI,GAAKA,IAAK,EAClE,CAEA,qBAAApF,CAAsBoF,GACpB,MAAMjU,QAAakpF,MAAM,GAAGhpC,EAAKj6C,KAAKuB,2BAA2ByM,KACjE,OAAOjU,EAAK2oF,GAAM3oF,EAAKkY,YAAA,CACzB,CAEA,mBAAAkmG,CAAoBnqG,GAClB,MAAMjU,QAAakpF,MACjB,GAAGhpC,EAAKj6C,KAAKuB,+BAA+ByM,EAASJ,cAEvD,OAAO7T,EAAK2oF,GAAM3oF,EAAKkY,YAAA,CACzB,CAEA,wBAAAmmG,CAAyBpqG,GACvB,IAAKA,EAAU3G,OAAQ,MAAO,GAC9B,MAAMtN,QAAakpF,MAAM,GAAGhpC,EAAKj6C,KAAKuB,gCAAiC,CACrE6hF,OAAQ,OACRP,QAAS,CACP,eAAgB,oBAElBJ,KAAM18E,KAAKkB,UAAU+G,KAEvB,OAAOjU,EAAK2oF,SAAY3oF,EAAKkY,OAAuB,EAEtD,CAEA,wBAAAomG,CAAyBrqG,GAAgB,IAAAjU,EACvC,MAAOoY,EAAMS,GAAQ5E,EAAS8I,MAAM,KAC9B9D,QAAaiwE,MAAM,GAAGhpC,EAAKj6C,KAAKuB,kBAAkB4Q,WACxD,GAAKa,EAAK0vE,GAGV,OAAkC,OAAlC3oF,SAFqBiZ,EAAKf,QAEZujG,KAAK/vF,SAAS7S,MAAY,OAAN7Y,EAA3BA,EAA6BG,OAA7B,OAAiCH,EAAjCA,EAAmC2X,WAAA,EAAnC3X,EAAyC4X,IAClD,CAEA2mG,UAAAA,GACE,QAASt4G,KAAK+3G,WAChB,CAEArU,SAAAA,CAAU11F,GACJhO,KAAK+3G,aAAa/3G,KAAK+3G,YAAY9S,QACvC,MAAMlrG,EAAY,QAAQiG,KAAK83G,YAE/B93G,KAAK+3G,YAAc,IAAIQ,YAAY,GAAGt+D,EAAKj6C,KAAKuB,mBADjC,CAACxH,EAAW,SAC+C0L,KAAIuI,GAAK,SAASA,MAAKrG,KAAK,QACtG3H,KAAK+3G,YAAYj+G,iBAAiBC,GAAYoY,IAC5C5W,QAAQgL,IAAIxM,EAAWoY,EAAEjY,MACzB8T,EAAG,KAAMmE,EAAEjY,KAAI,IAEjB8F,KAAK+3G,YAAYj+G,iBAAiB,SAAUC,IAC1CwB,QAAQgL,IAAI,QAASxM,EAAEG,MACvB8T,EAAG,QAASjU,EAAEG,KAAA,IAEhB8F,KAAK+3G,YAAYS,UAAaxqG,IAC5BzS,QAAQgL,IAAI,UAAWyH,EAAE9T,KAC3B,CACF,CAEAkoG,WAAAA,GACMpiG,KAAK+3G,cACP/3G,KAAK+3G,YAAY9S,QACjBjlG,KAAK+3G,iBAAA,EAET,CAEA,gBAAA7B,GAA8C,IAA7BloG,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAO,EAAGvO,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAM,EAAG6J,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAClC,MAAMsK,QAAaqwE,MACjB,GAAGhpC,EAAKj6C,KAAKuB,oBAAoBvB,KAAK83G,aAAa9pG,WAAcjU,SAAaoY,KAEhF,IAAKS,EAAK8vE,GAAI,MAAM,IAAI/9E,MAAM,2BAE9B,aADmBiO,EAAKX,QACZxM,KAAKuI,IACZA,EAAIyqG,MAAQ,OACbzqG,EAAIyqG,MAAQ,GAEPzqG,IAEX,EC7NW,MAAA0qG,EACX,+MAEWh9F,EACX,ilDCPF,MAAMkP,EAAShE,EAAOrF,KAAKm3F,EAAY,OACjC38F,EAAS6K,EAAOrF,KAAKxnB,EAAAA,GAAAA,QAAc2hB,EAAY,QAExC,MAAA8F,EACX/hB,WAAAA,GAA2B,IAARuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,EAAC,KAATqwG,WAAA,OAAKA,MAAL3qG,CAAa,EAGrB,MAAAqsC,WAAoB5+B,EAAOhc,WAAAA,GAAA,SAAA6I,WAAA,KACtC4rG,IAAM,OAAM,KACZ/xG,KAAO,OAAO,CACd,WAAA6D,CACEgI,EACAmE,GAAY,IAAAa,EAAA2C,EAEZ,MAAMoqC,EAAM/xC,EAAIwnG,KAAKrjG,GACf6mC,EAASpyB,EAAOrF,KAAKw+B,EAAI/4C,QACzBuN,EAAYykC,EAAOx1B,QAAQoH,GACjC,IAAmB,IAAfrW,EAAkB,OACtB,MAAM+F,EAAY0+B,EAAOx1B,QAAQzH,EAAQxH,EAAYqW,EAAOvjB,QAC5D,IAAmB,IAAfiT,EAAkB,OACtB,MAAMxU,EAAa8M,EAAAA,GAAO6oE,WACxBxyE,MAAMsY,KAAKy3B,EAAO3jC,SAASd,EAAYqW,EAAOvjB,OAAQiT,KAExD,GAA0C,KAAlB,OAApBtH,EAAAlN,EAAWm1E,OAAO,KAAQ,OAANjoE,EAApBA,EAAsB9Y,WAAA,EAAtB8Y,EAA4B3L,SAAiB,OAADsO,EAAC7P,EAAWm1E,OAAO,MAAlBtlE,EAAsBzb,KACrE,OACF,MAAMoZ,EAAQmS,SACZmB,EAAOrF,KAAKzb,EAAWm1E,OAAO,GAAI/gF,MAAOg2D,UAAUtiD,SAAS,OAC5D,IAGFmyC,EAAI7uC,MAAQnX,EAAAA,GAAAA,cAAoB+L,EAAWm1E,OAAO,GAAG/gF,KAAuB,WAAhB8F,KAAKuB,QAAuB,CAAC,GAAK,CAAC,MAC/F,MAAM4U,EAAkB,GAKxB,OAJI4pC,EAAI7uC,OAASlR,KAAKg0G,OAAO74G,IAAI4kD,EAAI7uC,SACnCiF,EAAO7a,KAAK,CAAEgM,GAAI,QAASuO,MAAOvC,EAAM1F,WAAW6T,SAAS,EAAG,OAC/DtL,EAAO7a,KAAK,CAAEgM,GAAI,UAAWuO,MAAOkqC,EAAI7uC,SAE/B,IAAA6mC,EAAU,IAAIv2B,EAAKlO,GAAQ6C,EACxC,CAEA,aAAAg+F,CAAcnmG,GACZ,MAAMjU,EAAWiU,EAAI4qG,OAAOjoD,QAAO,CAAC3iD,EAAKjU,IAClCA,EAAOG,KAAK8F,KAAKk0G,KACflmG,GAAOjU,EAAOmX,OAASlR,KAAKg0G,OAAO74G,IAAIpB,EAAOmX,OACnDnX,EAAOiJ,SACP,IAHiCgL,GAIlC,IACGmE,EAAUnE,EAAIwnG,KAAK7kD,QAAO,CAAC3iD,EAAKjU,IAC/BA,EAAIG,KAAK8F,KAAKk0G,KACZlmG,GAAOjU,EAAImX,OAASlR,KAAKg0G,OAAO74G,IAAIpB,EAAImX,OAC7CnX,EAAIiJ,SACJ,IAH8BgL,GAI/B,IACG4E,EAAU3B,OAAOkB,EAAUpY,GAC7B6Y,IACF5E,EAAI6qG,QAAQ74G,KAAKk0G,KAAO,CACtB4E,OAAQlmG,GAGd,EC3DW,MAAAioC,WAAsBp/B,EAAOhc,WAAAA,GAAA,SAAA6I,WAAA,KACxC4rG,IAAM,OAAM,KACZ/xG,KAAO,MAAM,CAEb,UAAAiyG,CAAWpmG,EAAoBjU,GAAuC,IAAAoY,EACpE,MAAMS,EAAS,IAAI0nC,EAAet6C,KAAKuB,SAAS,OAAA4Q,EAAAnE,EAAShC,SAAS/G,cAAA,EAAlBkN,EAA2B2lG,YAAa,IAClF9kG,QAAcJ,EAAOrK,OAAA,GAC3B,IAAIoN,EAAW,EACfpa,QAAQgL,IAAI,UAAWyM,EAAM3L,OAAQ,aAAc,IAAI2G,EAASgmG,SAChE,IAAIj0D,EAA4B,GAChC,IAAK,MAAM5tC,KAAKa,EAAO,KAAAgmC,EACrB,MAAMpmC,EAAW,IAAIunC,EAAShoC,EAAErL,UAC1BkM,EAAM,IAAIwI,EAAI5I,EAAU1K,OAAOiK,EAAEnP,UAAW,GAAI,GAEtD,GADAgQ,EAAI9B,MAAgB,OAAX8nC,EAAG7mC,EAAE6hG,aAAA,EAAFh7D,EAAUgoC,MAAKjnF,GAAKiU,EAASgmG,OAAO74G,IAAIpB,KAChDiZ,EAAI9B,MAAO,KAAAqD,EAAA+F,EAAAxU,EAAAwN,EAAA6C,EAIb,GAHInD,EAAIhQ,SAAW,KAAa,OAAPuR,EAACpC,EAAEjY,QAAFqa,EAAQ/B,QAChCQ,EAAI9Y,KAAW6+G,KAAI,IAAIhhE,EAAU/kC,EAAI9B,MAAO,CAAC,CAAE5J,GAAI,UAAWuO,MAAO7C,EAAI9B,UAEjE,OAANoJ,EAAAnI,EAAEjY,OAAFogB,EAAQlJ,SAAiB,OAAPtL,EAACqM,EAAEjY,OAAU,OAAN4L,EAANA,EAAQ4L,OAAU,OAAN5L,EAAZA,EAAc6L,QAAd7L,EAAoBhN,KAAKiZ,WAAW,uBAAuB,KAAA85B,EAAAsM,EAChF,MAAMnqC,EAAiB,CACrBlH,SAAUqL,EAAEjY,KAAKkX,OAAOtK,SACxBuK,MAAO,EACP5L,IAAK0M,EAAEjY,KAAKkX,OAAO3L,IACnBiM,KAAM,CACJC,KAAM,CACJ7Y,MAAmB,OAAb+yC,EAAA15B,EAAEjY,KAAKkX,aAAA,EAAPy6B,EAAe/yC,OAAQ,GAC7B8Y,KAAM,EACNC,KAAM,GACNG,QAAS,MAIf+tC,EAAgBzkD,KAAK6W,EAAErL,UAEvB,MAAM/M,EAAU,IAAIg+C,EAAU/pC,EAAQ,IAClCA,EAAOlH,UACT/M,EAAQw5G,OAAOj4G,KAAK,CAAEgM,GAAI,WAAYuO,MAAO7H,EAAOlH,WAEvC,OAAfqxC,EAAInqC,EAAO0D,OAAU,OAANymC,EAAXA,EAAaxmC,OAAbwmC,EAAmBr/C,MACrBiB,EAAQw5G,OAAOj4G,KAAK,CAAEgM,GAAI,OAAQuO,MAAO7H,EAAO0D,KAAKC,KAAK7Y,OAE5Dka,EAAI9Y,KAAakX,OAAIrX,CACvB,CAC+B,IAArB,OAANuZ,EAAAnB,EAAEjY,OAAF,OAAMoZ,EAANA,EAAQ0lG,cAAA,EAAR1lG,EAAiB5K,UACnBsK,EAAI9Y,KAAWmY,KAAI,IAAI0lC,EAAU5lC,EAAEjY,KAAK8+G,QAAS,KAEzC,OAAV7iG,EAAIhE,EAAEjY,OAAFic,EAAQ3D,OACVQ,EAAI9Y,KAAWsY,KAAI,IAAIulC,EAAU,IAAIv2B,EAAKrP,EAAEjY,KAAKsY,KAAKmmG,OAAQ,CAC5D,CAAErxG,GAAI,QAASuO,MAAO1D,EAAEjY,KAAKsY,KAAKmmG,MAAM/qG,WAAW6T,SAAS,EAAG,MAC/D,CAAEna,GAAI,UAAWuO,MAAO7C,EAAI9B,UAG5B3L,OAAOxB,KAAKiP,EAAI9Y,MAAMmN,OAAS,SAC3B2G,EAAStO,QAAQ+3G,IAAIzkG,EAE/B,MACEzX,QAAQgL,IAAI,eAAgB4L,EAAE6hG,QAEhC,IAAIloE,EAAS/xC,EAAY6Y,EAAS7B,MAC7B+6B,EAWHA,EAAOgiC,QAASxyE,KAAKsX,EAAS5B,OAV9B86B,EAAS,CACP/6B,KAAM6B,EAAS7B,KACfS,OAAQW,EAAEX,QAAU,EACpBxI,OAAQ,OACRyI,IAAKU,EAAEV,KAAO,EACdukG,UAAW1uE,EAAUqsE,QACrB7lC,QAAS,CAACl7D,EAAS5B,OAErBjX,EAAY6Y,EAAS7B,MAAQ+6B,GAI3B35B,EAAEX,OAAS,MACbmE,EAAWrc,KAAKo0B,IAAI/X,EAAqB,IAAXxD,EAAEX,OAAsBW,EAAEV,KAE5D,CACA,GAAIsuC,EAAgB14C,OAAS,EAAG,CAC9B,MAAM2G,QAAkB4E,EAAOwlG,mBAAmBr4D,GAClD,IAAK,MAAM5tC,KAAYnE,EAAW,CAChC,MAAOA,EAAM4E,GAAQT,EAASrL,SAASgQ,MAAM,KAC7C,IAAI9D,EAASjZ,EAAYiU,GACpBgF,EAWHA,EAAO86D,QAASxyE,KAAKmqB,SAAS7S,KAV9BI,EAAS,CACPjC,KAAM/C,EACNwD,OAAQW,EAASX,OACjBC,IAAKR,OAAOkB,EAASV,KACrBukG,UAAW1uE,EAAUosE,WACrB5lC,QAAS,CAACroD,SAAS7S,IACnB5J,OAAQ,YAEVjP,EAAYiU,GAAQgF,EAIxB,CACF,CACA,MAAM84B,QAAgBl5B,EAAOsjG,cAAgB,GAC7C,IAAK,MAAMloG,KAAQ89B,EAAS,CAC1B,IAAI35B,EAASpY,EAAYiU,EAAK+C,MACzBoB,EAWHA,EAAO27D,QAAU,IAAI,IAAI4S,IAAI,IAAIvuE,EAAO27D,SAAW,MAAO9/D,EAAK+nG,MAAQ,OAVvE5jG,EAAS,CACPpB,KAAM/C,EAAK+C,KACXS,OAAQxD,EAAKwD,OACbC,IAAKR,OAAOjD,EAAKyD,KACjBukG,UAAW1uE,EAAUqsE,QACrB7lC,QAAS9/D,EAAK+nG,KACd/sG,OAAQ,WAEVjP,EAAYiU,EAAK+C,MAAQoB,EAI7B,CACA,OAAOwD,CACT,WAAAmG,GAAA9N,GAAA,IAAAjU,EAAAoY,EAAAS,EAAAI,EAAA,0BAAAoU,SAAAjV,EAAAiV,OAAAm9E,cAAA3xF,EAAAwU,OAAA+xB,UAAAnmC,KAAA,IAAAb,GAAA,OAAApY,EAAAiU,EAAAmE,IAAA,OAAApY,EAAAwmB,KAAAvS,GAAA,GAAA4E,GAAA,OAAA7Y,EAAAiU,EAAA4E,IAAA,WAAAonC,GAAAjgD,EAAAwmB,KAAAvS,IAAAmE,EAAA,kBAAAS,EAAA,uBAAAmU,UAAA,yCAAAizB,GAAAhsC,GAAA,SAAAjU,EAAAiU,GAAA,GAAAzI,OAAAyI,KAAAA,EAAA,OAAAhV,QAAAE,OAAA,IAAA6tB,UAAA/Y,EAAA,2BAAAjU,EAAAiU,EAAAwsC,KAAA,OAAAxhD,QAAAC,QAAA+U,EAAA6H,OAAA8kC,MAAA,SAAA3sC,GAAA,OAAA6H,MAAA7H,EAAAwsC,KAAAzgD,EAAA,WAAAigD,GAAA,SAAAhsC,GAAA,KAAAmE,EAAAnE,EAAA,KAAA4E,EAAA5E,EAAAusC,IAAA,EAAAP,GAAAvyB,UAAA,CAAAtV,EAAA,KAAAS,EAAA,KAAA2nC,KAAA,kBAAAxgD,EAAA,KAAA6Y,EAAA0Z,MAAA,KAAAna,EAAA7J,WAAA,EAAA88F,OAAA,SAAAp3F,GAAA,IAAAmE,EAAA,KAAAA,EAAAizF,OAAA,gBAAAjzF,EAAAnZ,QAAAC,QAAA,CAAA4c,MAAA7H,EAAAwsC,MAAA,IAAAzgD,EAAAoY,EAAAma,MAAA,KAAAna,EAAA7J,WAAA,EAAA2wG,MAAA,SAAAjrG,GAAA,IAAAmE,EAAA,KAAAA,EAAAizF,OAAA,gBAAAjzF,EAAAnZ,QAAAE,OAAA8U,GAAAjU,EAAAoY,EAAAma,MAAA,KAAAna,EAAA7J,WAAA,OAAA0xC,GAAAhsC,EAAA,UAAAy5B,KAAA,OAAAA,GAAAliC,OAAAib,OAAAjb,OAAAib,OAAA+7B,OAAA,SAAAvuC,GAAA,QAAAjU,EAAA,EAAAA,EAAAuO,UAAAjB,OAAAtN,IAAA,KAAAoY,EAAA7J,UAAAvO,GAAA,QAAA6Y,KAAAT,GAAA,IAAAmsB,eAAA/d,KAAApO,EAAAS,KAAA5E,EAAA4E,GAAAT,EAAAS,GAAA,QAAA5E,CAAA,EAAAy5B,GAAAnb,MAAA,KAAAhkB,UAAA,CChHW,MACP6iC,GAAQ4U,EAAAA,GAAG73B,WADO,mHAGZ,IAAAwf,IAAZ,SAAY15B,GACVA,EAAAA,EAAAkrG,SAAA,aACAlrG,EAAAA,EAAAmrG,QAAA,aACAnrG,EAAAA,EAAAorG,MAAA,UACD,CAJD,CAAY1xE,KAAAA,GAIX,KAEY,MAAAuD,GAAKxrC,WAAAA,GAAA,KAChBiJ,OAAS,EAAC,KACHb,KAAO,GAAE,KACT2zE,GAAK,GACL,KAAA9oE,IAAM,QACN3K,IAAM,EAAC,KACPm8F,YAAA,EAAM,KACNmV,YAAc,EAAE,CAEvB,eAAAtpD,CAAgB/hD,GACd,MAAMjU,EAAQ,IAAIkxC,GAKlB,OAJA1lC,OAAOib,OAAOzmB,EAAK0tC,GACd,GAAAz5B,EACH,CAAA0E,IAAKxK,OAAO8F,EAAI0E,QAEX3Y,CACT,EAGW,MAAAwuE,WAAqB9sD,EAKhChc,WAAAA,GAG4B,IAFnBuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,IAAIo4E,IACb3mF,EAAAuO,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EACAmN,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,UAE1B,GAAIvO,IAAcggD,EAAU85D,MAC1B,MAAU,IAAAlvG,MAAM,6BAElBkQ,MAAM7G,EAAQjU,EAAWoY,GAAS,KAP3B6hG,YAAA,OACAC,eAAA,OACA1yG,aAAA,OAPT2yG,IAAM,QAAO,KACb/xG,KAAO,SAEP,KAAAvG,cAAA,EAES,KAAMo4G,OAANhmG,EACA,KAASimG,UAATl6G,EACA,KAAOwH,QAAP4Q,EAMPnS,KAAKpE,SAAW,IAAI0+C,EAAenoC,EACrC,CAGA,WAAAnM,CAAYgI,EAAmBmE,GAAA,IAAYS,EAAAI,EACzC,MAAM2C,EAAM3H,EAAIwnG,KAAKrjG,GACrB,GAAK,OAADS,EAAC+C,EAAIzb,KAAKwX,QAATkB,EAAe1Y,KAAM,OAC1B,GAAsC,wBAAlC,OAAA8Y,EAAA2C,EAAIzb,KAAKwX,WAAA,EAATsB,EAAe9Y,KAAKyX,KAAK7Y,MAA+B,OAC5D,IAAIinD,EACJ,IAAI,IAAA/G,EACF+G,EAAQ9U,GAAM8kB,SAAShqD,KAAKC,MAAMjM,EAAAA,GAAAA,OAAM,OAAMi/C,EAACrjC,EAAIzb,KAAKwX,WAAA,EAATsnC,EAAe9+C,KAAKyX,KAAKK,WACxE,MAAMhE,EAAO,IAAI+pC,EAAUgI,GACrB5tC,EAAMjK,OAAO63C,EAAMrtC,KACzB,GAAIP,GAAO,IAAMA,EAAM,GAAK,GAAK,EAAG,OACpC,OAAQ4tC,EAAMy7B,IACZ,IAAK,SACH,GAAIz7B,EAAMh4C,IAAe,OACzB,MACF,IAAK,OACL,IAAK,WACL,IAAK,OACH,MACF,QACE,OAEJ,IAAKg4C,EAAMl4C,KACT,OAMF,OAJAk4C,EAAMs5D,YAAc5wC,GAAkB1oB,EAAMl4C,MACxC8N,EAAIzE,OAASlR,KAAKg0G,OAAO74G,IAAIwa,EAAIzE,QACnClD,EAAKulG,OAAOj4G,KAAK,CAAEgM,GAAI,OAAQuO,MAAOkqC,EAAMl4C,OAEvCmG,CACT,CAAE,MAAOA,GACP,MACF,CACF,CAEA,aAAAmmG,CAAcnmG,GACZ,GAAGhO,KAAKi0G,WAAal6D,EAAU85D,MAAO,OACtC,MAAM95G,EAAS,IAAIe,IACnB,IAAIqX,EACAS,EAAU,EACd,IAAK,MAAMI,KAAShF,EAAI4qG,OAAQ,CAC9B,MAAM5qG,EAAQgF,EAAM9Y,KAAKgS,MACzB,GAAK8B,GACoB,GAArBA,EAAM9T,KAAKwO,QAAe1I,KAAKi0G,YAAcl6D,EAAU+5D,OAAQ,CACjE,MAAMn+F,QAAmB,KAAC/Z,SAASu8G,cAAcnlG,EAAMlM,UACnD6O,IACF5b,EAAOqB,IAAI4S,EAAM9T,KAAK2N,KAAM8N,GAC5B3H,EAAM9T,KAAKwO,OAASiN,EAAOjN,OAC3BsF,EAAM9T,KAAK6N,IAAM4N,EAAO5N,IACnBoK,IAAOA,EAAQnE,EAAM9T,MACtBiY,EAAMtK,MAAQ8N,EAAO9N,MAAQmL,EAAM9B,OAASlR,KAAKg0G,OAAO74G,IAAI6X,EAAM9B,SACpE0B,GAAW3B,OAAO0E,EAAOjD,MAG/B,CACF,CACA,IAAK,MAAMsmC,KAAOhrC,EAAIwnG,KAAM,KAAAxiG,EAAA2C,EAAAoqC,EAC1B,MAAM/xC,EAAQgrC,EAAI9+C,KAAKgS,MAClB8B,IACAmE,IAAOA,EAAQnE,EAAM9T,OACjB,MAAL8T,GAAW,OAANgF,EAALhF,EAAO9T,WAAA,EAAP8Y,EAAanL,QAAQ,OAAJ8N,EAAIxD,QAAA,EAAAwD,EAAO9N,OAAQmxC,EAAI9nC,OAASlR,KAAKg0G,OAAO74G,IAAI69C,EAAI9nC,SACvE0B,GAAW3B,OAAOjD,EAAM9T,KAAKwY,MAEtB,MAAL1E,GAAA,OAAK+xC,EAAL/xC,EAAO9T,OAAP6lD,EAAal4C,MAAQ9N,EAAOoB,IAAI6S,EAAM9T,KAAK2N,QAC7CmG,EAAM9T,KAAK6N,IAAMhO,EAAOsB,IAAI2S,EAAM9T,KAAK2N,MAAOE,KAElD,CACGoK,IACDnE,EAAI6qG,QAAQ74G,KAAKk0G,KAAO,CACtB5sG,GAAI6K,EAAMtK,KACVixG,OAAQlmG,EAAUtZ,KAAKk3B,IAAI,GAAIre,EAAMpK,KAAO,IAGlD,EAGc,SAAA0gE,GAAkBz6D,GAChC,MAAMmE,EAAO6mC,EAAAA,GAAAA,OAAYhrC,GACnB4E,EAAS,IAAI7Y,EAAAA,GAAAA,OAAaoY,GAChC,IAAIa,EAAO,SAAQJ,EAAOmd,gBAAkB,GAG5C,OAFAnd,EAAOkC,IAAM,GACb9B,GAAQ,KAAIJ,EAAOmd,gBAAkB,GAC9Bob,GAAMy/C,OAAO53E,GAAMyyD,OAAO0E,WACnC,OC9HamvC,GAaX75G,WAAAA,CAAYuO,GAZZ,KAAAtF,OAASg/B,GAAYyxE,QAAO,KACrB7xG,QAAA,EACA,KAAAk0E,GAAK,QACL9oE,IAAM,GAAE,KACR3K,IAAM,EACN,KAAAD,SAAA,OACA1F,UAAA,EAAI,KACJm3G,YAAA,EAAM,KACNC,cAAA,EACA,KAAAtV,YAAA,EACA,KAAAmV,YAAc,GAGnBr5G,KAAKsH,GAAK0G,EAAM1G,IAAM,GACtB/B,OAAOib,OAAOxgB,KAAMgO,EAEtB,CAEA,eAAA+hD,CAAgB/hD,GAQd,OANc,IAAIsrG,GAAK7xE,GAAC,CAAC,EAEpBz5B,EACH,CAAA0E,IAAKxK,OAAO8F,EAAI0E,KAChB3K,IAAK0d,SAASzX,EAAIjG,KAAO,OAG7B,QAGW0xG,WAAqBh+F,EAKhChc,WAAAA,GAG4B,IAFnBuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,IAAIo4E,IACb3mF,EAAAuO,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EACAmN,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,UAE1BuM,MAAM7G,EAAQjU,EAAWoY,GAAS,KAJ3B6hG,YAAA,OACAC,eAAA,EACA,KAAA1yG,aAAA,EAPT,KAAA2yG,IAAM,QAAO,KACb/xG,KAAO,SAEP,KAAAvG,cAAA,EAES,KAAMo4G,OAANhmG,EACA,KAASimG,UAATl6G,EACA,KAAOwH,QAAP4Q,EAGPnS,KAAKpE,SAAW,IAAI0+C,EAAenoC,EACrC,CAEA,WAAAnM,CAAYgI,EAAmBmE,GAAY,IAAAS,EAAAI,EACzC,MAAM2C,EAAM3H,EAAIwnG,KAAKrjG,GACrB,GAAkB,OAAdS,EAAC+C,EAAIzb,KAAKwX,QAATkB,EAAe1Y,KAAM,OAC1B,GAAsC,wBAArB,OAAb8Y,EAAA2C,EAAIzb,KAAKwX,WAAA,EAATsB,EAAe9Y,KAAKyX,KAAK7Y,MAA+B,OAC5D,IAAIinD,EACJ,IAAI,IAAA/G,EACF+G,EAAQu5D,GAAMvpD,SAAShqD,KAAKC,MAAMjM,EAAAA,GAAAA,OAAa,OAADi/C,EAACrjC,EAAIzb,KAAKwX,WAAA,EAATsnC,EAAe9+C,KAAKyX,KAAKK,UAC1E,CAAE,MAAOhE,GACP,MACF,CACA,MAAMuG,EAAO,IAAIwjC,EAAUgI,GAC3B,KAAIA,EAAMrtC,KAAO,IAAMqtC,EAAMrtC,IAAM,GAAK,GAAK,GAA7C,CACA,OAAQqtC,EAAMy7B,IACZ,IAAK,cACH,GAAIz7B,EAAMh4C,IAAM,GAAI,OACpBg4C,EAAMz4C,GAAKqO,EAAI7O,SAAS8G,WACxBmyC,EAAMw5D,OAASx5D,EAAMrtC,IACrBqtC,EAAMr3C,OAASg/B,GAAY0xE,MAC3B,MACF,IAAK,WACL,IAAK,OACH,MACF,QACE,OAEJ,GAAKr5D,EAAMz4C,GAYX,OATAy4C,EAAMs5D,YAAc5wC,GAAkB9yD,EAAI7O,SAAS4tG,cAC/C/+F,EAAIzE,OAASlR,KAAKg0G,OAAO74G,IAAIwa,EAAIzE,SACnCqD,EAAKg/F,OAAOj4G,KAAK,CAAEgM,GAAI,UAAWuO,MAAOF,EAAIzE,QAC7CqD,EAAKg/F,OAAOj4G,KAAK,CAAEgM,GAAI,KAAMuO,MAAOkqC,EAAMz4C,KACtCy4C,EAAMy5D,UACRjlG,EAAKg/F,OAAOj4G,KAAK,CAAEgM,GAAI,WAAYuO,MAAOkqC,EAAMy5D,YAI7CjlG,CAzBP,CA0BF,CAEA,aAAA4/F,CAAcnmG,GACZ,GAAIhO,KAAKi0G,WAAal6D,EAAU85D,MAAO,OACvC,MAAM95G,EAAoC,CAAC,EACrCoY,EAAoC,CAAC,EAC3C,IAAIS,EACAI,EAAiB,EACjB2C,GAAA,EACJ,IAAK,MAAMpB,KAASvG,EAAI4qG,OAAQ,CAC9B,MAAMt+F,EAAQ/F,EAAMra,KAAKuY,MACzB,GAAK6H,EAcL,GAJK1H,IAAcA,EAAe0H,EAAMpgB,MACpCogB,EAAMpgB,KAAKoN,IAAMsL,EAAatL,IAAMiN,EAAMrD,OAASlR,KAAKg0G,OAAO74G,IAAIoZ,EAAMrD,SAC3E8B,GAAkB/B,OAAOqJ,EAAMpgB,KAAKwY,MAElC4H,EAAMpgB,KAAKwO,QAAUg/B,GAAYyxE,QAAS,CAC5C,IAAK,MAAMp/G,KAAOiU,EAAIwnG,KAAM,KAAAz1D,EAAA/G,EAC1B,MAAMhrC,EAAW,OAAH+xC,EAAGhmD,EAAIG,WAAA,EAAJ6lD,EAAUttC,OACf,MAARzE,GAAA,OAAQgrC,EAARhrC,EAAU9T,WAAA,EAAV8+C,EAAgB1xC,KAAMgT,EAAMpgB,KAAKoN,KACnC0G,EAAS9T,KAAKwO,OAASg/B,GAAYyxE,QACnCnrG,EAAS9T,KAAK4N,IAAMwS,EAAMpgB,KAAK4N,IAC/BkG,EAAS9T,KAAKkI,KAAOkY,EAAMpgB,KAAKkI,KAChC4L,EAAS9T,KAAK6N,IAAMuS,EAAMpgB,KAAK6N,IAEnC,CACA4N,GAAA,CACF,MAAW2E,EAAMpgB,KAAKwO,QAAUg/B,GAAY0xE,QACrCjnG,EAASmI,EAAMpgB,KAAKoN,MACvB6K,EAASmI,EAAMpgB,KAAKoN,IAAM,IAE5B6K,EAASmI,EAAMpgB,KAAKoN,IAAIhM,KAAKiZ,GAC7Bxa,EAAQugB,EAAMpgB,KAAMoN,KACjBvN,EAAQugB,EAAMpgB,KAAMoN,KAAO,IAAMgT,EAAMpgB,KAAKwY,IAEnD,CACA,MAAM6B,EAAqC,CAAC,EACtC+F,EAAoC,CAAC,EAC3C,IAAK,MAAM3E,KAAO3H,EAAIwnG,KAAM,KAAA1vG,EAAAwN,EAC1B,MAAMtF,EAAgB,OAAXlI,EAAG6P,EAAIzb,WAAA,EAAJ4L,EAAU2M,MACxB,IAAKzE,IAAU,CAAC,WAAY,QAAQ9S,SAAS8S,EAAM9T,KAAKshF,IAAK,SAC7D,IAAIz7B,EACJ,IAAK,MAAMhmD,KAASoY,EAASnE,EAAM9T,KAAKoN,KAAO,GAC7Cy4C,EAAQhmD,EAAMG,KAAKuY,MAAMvY,KACzB8T,EAAMwlG,KAAKl4G,KAAKvB,EAAM+M,WAEnB/M,EAAQiU,EAAM9T,KAAKoN,KAAO,IAAM0G,EAAM9T,KAAKwY,MAC9C4H,EAAQtM,EAAM9T,KAAKoN,IAAM,uBAEtBsL,IAAcA,EAAe5E,EAAM9T,MACpC8T,EAAM9T,KAAKoN,KAAM,OAAJgM,EAAIV,QAAA,EAAAU,EAAchM,KAAMqO,EAAIzE,OAASlR,KAAKg0G,OAAO74G,IAAIwa,EAAIzE,SACxE8B,GAAkB/B,OAAOjD,EAAM9T,KAAKwY,MAGlCqtC,IACF/xC,EAAM9T,KAAK4N,IAAMi4C,EAAMj4C,IACvBkG,EAAM9T,KAAKkI,KAAO29C,EAAM39C,KACxB4L,EAAM9T,KAAKs/G,SAAWz5D,EAAMy5D,SAC5BxrG,EAAM9T,KAAKq/G,OAASx5D,EAAMw5D,OAC1BvrG,EAAM9T,KAAK6N,IAAMg4C,EAAMh4C,KAGpBwM,EAAUvG,EAAM9T,KAAKoN,MACxBiN,EAAUvG,EAAM9T,KAAKoN,IAAM,IAE7BiN,EAAUvG,EAAM9T,KAAKoN,IAAIhM,KAAKqa,GAC9B5b,EAAQiU,EAAM9T,KAAKoN,KAChBvN,EAAQiU,EAAM9T,KAAKoN,KAAO,IAAMY,OAAO8F,EAAM9T,KAAKwY,IACvD,CAEA,IAAKiD,EACH,IAAK,MAAO3H,EAAIjU,KAASwL,OAAOC,QAAQ+O,GAAY,CAClD,MAAMpC,EAASmI,EAAQtM,GACvB,IAAK,MAAMA,KAAOjU,EAChBiU,EAAI9T,KAAKuY,MAAMvY,KAAKwO,OAASyJ,EACzBu1B,GAAYwxE,QACZxxE,GAAY0xE,MAChBprG,EAAI9T,KAAKuY,MAAMvY,KAAKgqG,OAAS/xF,CAEjC,CAEES,IACF5E,EAAI6qG,QAAQ74G,KAAKk0G,KAAO,CACtB5sG,GAAIsL,EAAa9K,IACjBgxG,OAAQ9lG,EAAiB1Z,KAAKk3B,IAAI,GAAI5d,EAAa7K,KAAO,GAC1D3F,KAAMwQ,EAAaxQ,MAGzB,ECtLW,MAAAqiF,WAAoBhpE,EAAOhc,WAAAA,GAAA,SAAA6I,WACtC,KAAA4rG,IAAM,YACN/xG,KAAO,OAAO,CAEd,WAAA6D,CAAYgI,EAAmBjU,GAC7B,MAAMoY,EAAMnE,EAAIwnG,KAAKz7G,GAEf6Y,EAAUk5B,EADD99B,EAAIg2E,GAAGlW,QAAQ/zE,GAAMg0E,cACC,EAAG/tE,KAAKuB,SAC7C,GAAI4Q,EAAInP,SAAW,GAAI,OACvB,MAAMgQ,EAAkB,GACxB,OAAIJ,GAAW5S,KAAKg0G,OAAO74G,IAAIyX,IAC7BT,EAAIjB,MAAQ0B,EACZI,EAAO1X,KAAK,CAAEgM,GAAI,UAAWuO,MAAOjD,IAC7B,IAAImlC,EAAU5lC,EAAIjB,MAAO8B,SAAA,CAEpC,CAEA,aAAAmhG,CAAcnmG,GACZ,IAAIjU,EAAUiU,EAAI4qG,OAAOjoD,QAAO,CAAC3iD,EAAKjU,IAC/BA,EAAOG,KAAK8F,KAAKk0G,KACflmG,GAAOjU,EAAOmX,OAASlR,KAAKg0G,OAAO74G,IAAIpB,EAAOmX,OACnDnX,EAAOiJ,SACP,IAHiCgL,GAIlC,IACCmE,EAASnE,EAAIwnG,KAAK7kD,QAAO,CAAC3iD,EAAKjU,IAC5BA,EAAIG,KAAK8F,KAAKk0G,KACZlmG,GAAOjU,EAAImX,OAASlR,KAAKg0G,OAAO74G,IAAIpB,EAAImX,OAC7CnX,EAAIiJ,SACJ,IAH8BgL,GAI/B,IACH,MAAM4E,EAAU3B,OAAOkB,EAASpY,GAC5B6Y,IACF5E,EAAI6qG,QAAQ74G,KAAKk0G,KAAO,CACtB4E,OAAQlmG,GAGd,ECpCI,MAAO8mG,WAAmBj+F,EAAOhc,WAAAA,GAAA,SAAA6I,WACrC,KAAA4rG,IAAM,MAAK,KACX/xG,KAAO,KAAK,CAEZ,WAAA6D,CAAYmM,EAAmBS,GAC7B,MAAMI,EAASb,EAAI6xE,GAAGlW,QAAQl7D,GAAMm7D,cAEpC,IAAIp4D,EAAS,EACToqC,EAAS,EACb,IAAK,IAAI5tC,EAAIwD,EAAS,EAAGxD,EAAIa,EAAOioE,OAAO5zE,OAAQ8K,IAAK,KAAA6mC,EAAAzkC,EACtD,MAAM3B,EAAQI,EAAOioE,OAAO9oE,GAC5B,GAAKwD,GAAU/C,EAAM4oE,KAAOxtE,EAAAA,GAAGujE,WAExB,IAAK57D,GAAiC,KAAb,OAAVqjC,EAAApmC,EAAM1Y,WAAA,EAAN8+C,EAAY3xC,SAAkC,MAAlBuL,EAAM1Y,KAAK,GAC3D,cAFAyb,EAASxD,EAKX,GAlBmB,uCAkBfpY,EAAAA,GAAAA,QAA+B,OAAlBwa,EAAAvB,EAAOioE,SAAS9oE,SAAA,EAAhBoC,EAAoBra,OAAQ,IAA7C,CAGA6lD,IAAW5tC,EACX,KAFA,CAGF,CACA,IAAK4tC,EAAQ,OACb,MAAMzlC,EAAMo/F,GAAWC,SAAS3mG,EAAQ+sC,GACxC,OAAKzlC,EACM,IAAAy9B,EAAUz9B,QAAA,CACvB,CAEA,eAAAq/F,CAAgBxnG,EAAgBS,GAAA,IAAcI,EAC5C,GAAwD,QAApDjZ,EAAAA,GAAAA,QAAa,OAAAiZ,EAAAb,EAAO8oE,OAAOroE,SAAA,EAAdI,EAAuB9Y,OAAQ,IAC9C,OAEF,MAAMyb,EAA8B,CAAC,EACrC,IAAK,IAAI3C,EAAIJ,EAAO,EAAGI,EAAIb,EAAO8oE,OAAO5zE,OAAQ2L,GAAK,EAAG,KAAA+sC,EAAA/G,EACvD,MAAMpmC,EAAQT,EAAO8oE,OAAOjoE,GAC5B,GAAIJ,EAAM4oE,KAAOxtE,EAAAA,GAAGujE,WAAoC,WAAtBxxB,EAAAntC,EAAM1Y,WAAA,EAAN6lD,EAAY14C,SAAiC,MAAlBuL,EAAM1Y,KAAK,GAAc,MACtF,MAAMqa,EAAMxa,EAAAA,GAAAA,OAAa6Y,EAAM1Y,MAAQ,IACjCogB,EAAQvgB,EAAAA,GAAAA,QAA+B,OAAlBi/C,EAAA7mC,EAAO8oE,OAAOjoE,EAAE,WAAhBgmC,EAAoB9+C,OAAQ,IAErDyb,EAAIpB,GADK,eAAPA,EACSxO,KAAKC,MAAMsU,GAEXA,CAEf,CACA,OAAO3E,CACT,QC7BWikG,WAA2Bn+F,EAAOhc,WAAAA,GAAA,SAAA6I,WAAA,KAC7C4rG,IAAM,OAAM,KACZ/xG,KAAO,cAAc,CAErB,WAAA6D,CACEmM,EACAa,GAAY,IAAA2C,EAAAoqC,EAEZ,MAAMxrC,EAAMpC,EAAIqjG,KAAKxiG,GACrB,GAAoB,IAAhBuB,EAAIvR,SAAgB,OACxB,MAAMsX,EAASnI,EAAI6xE,GAAGlW,QAAQ96D,GAAM+6D,cACpC,IAAIjoE,EACJ,IAAK,IAAIqM,EAAI,EAAGA,EAAImI,EAAO2gE,OAAO5zE,OAAQ8K,IAAK,KAAAmB,EAC7C,MAAMV,EAAQ0H,EAAO2gE,OAAO9oE,GAE1BA,GAAK,GACkB,KAAvB,OAAAmB,EAAAV,EAAM1Y,WAAA,EAANoZ,EAAYjM,SACgB,OAA5BtN,EAAAA,GAAAA,OAAa6Y,EAAM1Y,OACnBogB,EAAO2gE,OAAO9oE,EAAI,GAAGqpE,IAAMxtE,EAAAA,GAAGgjE,OAC9B12D,EAAO2gE,OAAO9oE,EAAI,GAAGqpE,IAAMxtE,EAAAA,GAAGshE,WAE9BxpE,EAAUqM,EAAI,EAElB,CACA,QAAI,IAAArM,EAAuB,OAEtByO,EAAIrD,QAAOqD,EAAIrD,MAAQ46B,EAAaxxB,EAAQ,EAAGta,KAAKuB,UACzD,MAAM4U,EAAO,CACXxE,KAAM,CAAEE,KAAM,GAAID,KAAM,EAAG9Y,KAAM,IACjC+gH,OAAQ,CAAC,GAGX,IAAK,IAAI7mG,EAAIlN,EAASkN,EAAIsH,EAAO2gE,OAAO5zE,OAAQ2L,GAAK,EAAG,KAAA64B,EAAAsM,EACtD,MAAMryC,EAAQwU,EAAO2gE,OAAOjoE,GAC5B,GAAIlN,EAAM01E,IAAMxtE,EAAAA,GAAGqjE,SAAU,KAAAp4B,EACtB1kC,EAAIrD,QAAOqD,EAAIrD,MAAQ46B,EAAaxxB,EAAQtH,EAAI,EAAGhT,KAAKuB,UACxDgT,EAAIrD,QAAA,OAAS+nC,EAAA3+B,EAAO2gE,OAAOjoE,EAAI,WAAlBimC,EAAsBuiC,KAAMxtE,EAAAA,GAAG2nE,mBAC/CphE,EAAIrD,MAAQ46B,EAAaxxB,EAAQtH,EAAI,IAEvC,KACF,CACA,GAAIlN,EAAM01E,GAAKxtE,EAAAA,GAAG6iE,MAAO,OACzB,MAAMv9D,EAAQgH,EAAO2gE,OAAOjoE,EAAI,GAChC,GAAIM,EAAMkoE,GAAKxtE,EAAAA,GAAG0hE,aAAc,OAEhC,GAAc,OAAV7jC,EAAA/lC,EAAM5L,OAAN2xC,EAAYxkC,OAA0E,CACxF,MAAM2G,EAAM0rG,GAAWC,SAAS/mG,EAAAA,GAAO6oE,WAAWnoE,EAAMpZ,MAAQ,IAAK,GACjE8T,IACFuG,EAAIra,KAAUuL,IAAI,IAAIsyC,EAAU/pC,IAYlC,QACF,CAGA,IAAIkrC,EAAU,EAMd,OALIpzC,EAAM01E,GAAKxtE,EAAAA,GAAG0hE,cAAgB5pE,EAAM01E,IAAMxtE,EAAAA,GAAG6iE,MAC/C33B,EAAUpzC,EAAM01E,GAAK,GACZ,OAAJrjC,EAAIryC,EAAM5L,OAANi+C,EAAY9wC,SACrB6xC,EAAUpzC,EAAM5L,KAAK,IAEfg/C,GACN,KAAM,EAEJ,GADA/iC,EAAKxE,KAAMC,MAAiB,OAAV+D,EAAArC,EAAMpZ,WAAA,EAANyb,EAAYtO,SAAU,EACnC,OAAD04C,EAACzsC,EAAMpZ,QAAN6lD,EAAY14C,OAAQ,MACzB8O,EAAKxE,KAAME,KAAO9X,EAAAA,GAAAA,SAAei/C,EAAAA,GAAAA,OAAY1lC,EAAMpZ,OACnDic,EAAKxE,KAAMK,QAAUsB,EAAMpZ,KAC3B,MACF,KAAM,EACJic,EAAKxE,KAAM7Y,KAAO8tB,EAAOrF,KAAKjO,EAAMpZ,MAAQ,IAAI0T,WAChD,MACF,KAAM,EACJ,IAAK0F,EAAMpZ,MAA6B,IAArBoZ,EAAMpZ,KAAKmN,OAAc,MAC5C,IACE,MAAM2G,EAAS,IAAImsC,EAAS7mC,EAAMpZ,MAClC,IACGiY,EAAIymG,OAAO53B,MACTjnF,GAAMA,EAAE+M,SAAS8G,YAAcI,EAAOJ,aAGzC,SACFuI,EAAK2jG,OAAS9rG,EAAOJ,UACvB,CAAE,MAAAI,GACAzS,QAAQgL,IAAI,gCACd,CACA,MACF,QACO4P,EAAK0jG,SAAQ1jG,EAAK0jG,OAAS,CAAC,GACjC1jG,EAAK0jG,OAAO3gE,EAAQtrC,YAClB0F,EAAMpZ,MAAQ0sB,EAAOrF,KAAKjO,EAAMpZ,MAAM0T,SAAS,UAEvD,CAEA,MAAMsrC,EAAkB,GAIxB,OAHI3kC,EAAIrD,OAASlR,KAAKg0G,OAAO74G,IAAIoZ,EAAIrD,QACnCgoC,EAAO59C,KAAK,CAAEgM,GAAI,UAAWuO,MAAOtB,EAAIrD,QAAA,IAE/B6mC,EAAU5hC,EAAM+iC,EAC7B,EC/GF,MAAMxD,GAAU,OASH,MAAAqkE,WAAsBt+F,EAKjChc,WAAAA,GAG4B,IAFnBuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,IAAIo4E,IACb3mF,EAAAuO,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EACAmN,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,UAE1BuM,MAAM7G,EAAQjU,EAAWoY,GAAS,KAJ3B6hG,YAAA,OACAC,eAAA,OACA1yG,aAAA,EAPT,KAAA2yG,IAAM,SAAQ,KACd/xG,KAAO,eACP63G,YAAA,EAGS,KAAMhG,OAANhmG,EACA,KAASimG,UAATl6G,EACA,KAAOwH,QAAP4Q,EAGPnS,KAAKg6G,OAAS,IAAI1/D,EAAenoC,EACnC,CAEA,WAAAnM,CAAYgI,EAAmBjU,GAAcuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAYg/B,EAAUqsE,QAAO,IAAA/gG,EAAAI,EAAA2C,EAAAoqC,EAAA/G,EACxE,MAAMzkC,EAAMvG,EAAIwnG,KAAKz7G,GACrB,GAAoB,IAAhBwa,EAAIvR,UAAkBgL,EAAIuD,MAAMC,OAASkkC,IAA8C,8BAAnC9iC,EAAA2B,EAAIra,KAAKwX,OAAA,OAAIkB,EAAbA,EAAe1Y,OAAf,OAAmB0Y,EAAnBA,EAAqBjB,WAAA,EAArBiB,EAA2B9Z,MAA8B,OAC7Gyb,EAAIrD,QACNqD,EAAIrD,MAAQ46B,EAAa99B,EAAIg2E,GAAGlW,QAAQ/zE,GAAMg0E,cAAe,EAAG/tE,KAAKuB,UAEvE,IAAI+Y,EAAS,GACb,IAAK,IAAInI,EAAI,EAAGA,EAAIpY,EAAMoY,IACxBmI,GAAUtM,EAAIwnG,KAAKrjG,GAAGnP,SAExB,IAAI8C,EAAS,GACTwN,EAAiB,CACnBxM,SAAU,GACV4K,KAAM,OAAFsB,EAAEuB,EAAIra,KAAKwX,WAAA,EAATsB,EAAe9Y,KACrBmX,MAAO,EACPa,MAAA,OAAKyD,EAAEpB,EAAIra,KAAKgY,YAAA,EAATyD,EAAgBzb,MAEzB,MAAMic,EAAmB,GAEzB,IAAK,MAAMpc,KAASiU,EAAI4qG,OAAOl6D,SAAU,CAEvC,GADAvoC,EAAK7a,KAAKvB,EAAM+M,UACZhB,GAAUwU,GAA4B,IAAlBvgB,EAAMiJ,UAAkBjJ,EAAMwX,MAAMC,QAAUkkC,GAAS,KAAA7J,EAEhDsM,EAAzB,OAAJtM,EAAI9xC,EAAMG,KAAKkX,SAAXy6B,EAAmB3xC,OACrBoZ,EAAMm0B,GACD,GAAA1tC,EAAMG,KAAKkX,OAAOlX,MAEnB,OAAJi+C,EAAI7kC,IAAA6kC,EAAQ9mC,OACViC,EAAOjC,SAGX,KACF,CAEA,GADAvL,GAAU/L,EAAMiJ,SACZ8C,EAASwU,EAAQ,CACnBhH,EAAOxM,SAAWyN,EAAIzN,SAAS8G,WAC/B,KACF,CACF,CACA,MAAMqrC,EAAkB,OAKqBC,EAAAhsB,EAJ7C5Z,EAAO7N,IAAGgiC,GACL,GAAAn0B,EAAO7N,KAAO,CAAC,GACf,OAAAs6C,EAAAxrC,EAAIra,KAAKuL,UAAA,EAATs6C,EAAc7lD,OAAQ,CAAC,GAExBqa,EAAIrD,OAASlR,KAAKg0G,OAAO74G,IAAIoZ,EAAIrD,SACnC+nC,EAAO39C,KAAK,CAAEgM,GAAI,WAAYuO,OAAsB,OAAfqjC,EAAA5lC,EAAOxM,eAAA,EAAPoyC,EAAiBtrC,aAAc,KACrD,OAAfsf,EAAI5Z,EAAO5B,OAAU,OAANwb,EAAXA,EAAavb,OAAbub,EAAmBp0B,MACrBmgD,EAAO39C,KAAK,CAAEgM,GAAI,OAAQuO,MAAOvC,EAAO5B,KAAKC,KAAK7Y,QAGtD,MAAM6sB,EAAA,OAAIqzB,EAAG1lC,EAAO5B,WAAA,EAAPsnC,EAAarnC,KAI1B,OAHIgU,GAAQA,EAAK/T,MAAQ+T,EAAK/T,KAAO,OACnC+T,EAAK3T,QAAU,QAEN+lC,EAAUzkC,EAAQ2lC,EAAQ9iC,EACvC,CAEA,aAAAg+F,CAAcnmG,GACZ,IAEIjU,EAFAoY,EAAU,EACVS,GAAA,EAEAI,EAAK,GACT,IAAK,MAAMgmC,KAAShrC,EAAI4qG,OACtB,GAAI5/D,EAAM9+C,KAAK8F,KAAKk0G,KAAM,CACxB,IAAIlmG,EAASgrC,EAAM9+C,KAAK8F,KAAKk0G,KAAKh6G,KACe,IAAAyb,EAGaoqC,EAH1D/G,EAAM9nC,OAASlR,KAAKg0G,OAAO74G,IAAI69C,EAAM9nC,SACvC0B,GAAA,EACAT,KACKpY,GAAc,MAANiU,GAAY,OAAN2H,EAAN3H,EAAQ0D,OAAU,OAANiE,EAAZA,EAAchE,OAAdgE,EAAoB7c,KAAKiZ,WAAW,YAC/ChY,EAAO,MAAAiU,OAAA,EAAAA,EAAQlH,SACfkM,GAAA,OAAK+sC,EAAA/xC,EAAOvI,UAAA,EAAPs6C,EAAY59C,OAAQ,IAG/B,CAEF,IAAK,MAAM6Q,KAAOhF,EAAIwnG,KACpB,GAAIxiG,EAAI9Y,KAAK8F,KAAKk0G,MACZlhG,EAAI9B,OAASlR,KAAKg0G,OAAO74G,IAAI6X,EAAI9B,OAAQ,KAAA8nC,EAAAzkC,EAC3C3B,GAAA,EACAT,IACA,IAAInE,EAAwB,OAAlBgrC,EAAGhmC,EAAI9Y,KAAKkX,aAAA,EAAT4nC,EAAiB9+C,MACzBH,GAAc,MAANiU,GAAY,OAANuG,EAANvG,EAAQ0D,OAAU,OAAN6C,EAAZA,EAAc5C,OAAd4C,EAAoBzb,KAAKiZ,WAAW,YAC/ChY,EAAa,MAANiU,OAAA,EAAAA,EAAQlH,SAEnB,CAGA8L,IACF5E,EAAI6qG,QAAQ74G,KAAKk0G,KAAO,CACtB5sG,GAAA0L,EACA8lG,OAAQ3mG,EACR/P,KAAArI,GAGN,CAEA,aAAAd,CAAc+U,EAAoBjU,GAChC,GAAIiG,KAAKi0G,YAAcl6D,EAAU+5D,OAAQ,OACzC,MAAM3hG,QAAgBnE,EAAS2wF,OAAO,IAAIvkD,EAAUp6C,KAAKk0G,IAAK,WAAY,YAAK,GAAkBxwE,EAAQixE,IAAK,KAExG/hG,EAAuC,CAAC,EACxCI,EAAkB,IAAI0tE,IAC5B,IAAK,MAAM3mF,KAAOoY,EAAQqjG,KAAM,CAC9B,MAAMrjG,EAAapY,EAAIG,KAAKkX,OAC5Be,EAAWohG,OAAA,MAASphG,OAAA,EAAAA,EAAYohG,OAAO93G,QAAOuS,GAAa,YAARA,EAAE1G,KACrD,MAAM0xC,EAAS,MAAA7mC,OAAA,EAAAA,EAAYjY,KAC3B,GAAI,MAAC8+C,IAAAA,EAAQlyC,SAAU,KAAA6O,EACrB,MAAMpB,QAAmB,KAACylG,OAAO5D,OAAOr8G,EAAI+M,UAAA,IACRi5C,EAApC,GAAI,MAAAxrC,GAAA,OAAMoB,EAANpB,EAAQra,OAAR,OAAYyb,EAAZA,EAAcvE,SAAduE,EAAsB7O,SAExB,GADAkyC,EAAOlyC,SAAiB,MAANyN,GAAY,OAANwrC,EAANxrC,EAAQra,OAAA,OAAI6lD,EAAZA,EAAc3uC,aAAA,EAAd2uC,EAAsBj5C,SACpC9G,KAAKi0G,WAAal6D,EAAU85D,MAAO,CACrC,MAAMjhG,QAAa5S,KAAKg6G,OAAO3B,mBAAmBr/D,EAAOlyC,UACzDkyC,EAAOtnC,KAAO,CAACC,KAAAiB,GACfomC,EAAOvzC,IAAM8O,EAAOra,KAAKkX,OAAO3L,IAChCuzC,EAAO3nC,OAASkD,EAAOra,KAAKkX,OAAOC,OAAS,GAAK,EACjDc,EAAWohG,OAAOj4G,KAAK,CAAEgM,GAAI,WAAYuO,MAAOmjC,EAAOlyC,iBACjDkH,EAAStO,QAAQ+3G,IAAI19G,EAC7B,MAAO,GAAIiG,KAAKi0G,WAAal6D,EAAUg6D,eAAgB,CACrD,IAAI/lG,EAAS4E,EAAY7Y,EAAI+M,SAASiK,MACtCiC,EAAgB+D,IAAIiiC,EAAOlyC,UACtBkH,EAYHA,EAAO8/D,QAASxyE,KAAKvB,EAAI+M,SAASkK,OAXlChD,EAAS,CACP+C,KAAMhX,EAAI+M,SAASiK,KACnBS,OAAQzX,EAAIwX,MAAMC,OAClBC,IAAKR,OAAOlX,EAAIwX,MAAME,KACtBukG,UAAW1uE,EAAUqsE,QACrB7lC,QAAS,CAAC/zE,EAAI+M,SAASkK,MACvBhI,OAAQ,SACRixG,WAAA,GAEFrnG,EAAY7Y,EAAI+M,SAASiK,MAAQ/C,EAIrC,CAEJ,CACF,CACA,GAAIhO,KAAKi0G,WAAal6D,EAAUg6D,eAAgB,CAC9C,MAAMh6G,QAAA,KAAuBigH,OAAO5B,mBAAmB,IAAIplG,IAC3D,IAAK,MAAMhF,KAAYjU,EAAW,CAChC,MAAOA,EAAMoY,GAAQnE,EAASlH,SAASgQ,MAAM,KAC7C,IAAI9D,EAASJ,EAAY7Y,GACpBiZ,EAYHA,EAAO86D,QAASxyE,KAAKmqB,SAAStT,KAX9Ba,EAAS,CACPjC,KAAMhX,EACNyX,OAAQxD,EAASwD,OACjBC,IAAKR,OAAOjD,EAASyD,KACrBukG,UAAW1uE,EAAUqsE,QACrB7lC,QAAS,CAACroD,SAAStT,IACnBnJ,OAAQ,WACRixG,WAAA,GAEFrnG,EAAY7Y,GAAQiZ,EAIxB,CACA,MAAMb,EAAU5M,OAAOm5C,OAAO9rC,GAC1BT,EAAQ9K,OAAS,SACb2G,EAASsoC,MAAMnkC,EAEzB,CACF,QChMW+nG,WAAqBz+F,EAAOhc,WAAAA,GAAA,SAAA6I,WAAA,KACvC4rG,IAAM,QAAO,KACb/xG,KAAO,OAAO,CAEd,WAAA6D,CAAYmM,EAAmBa,GAAA,IAAY2C,EAEzC,GAAI,OAADA,EADSxD,EAAIqjG,KAAKxiG,GACb9Y,QAAJyb,EAAUjE,KAAM,OACpB,MAAMquC,EAAS5tC,EAAI6xE,GAAGlW,QAAQ96D,GAAM+6D,cACpC,IAAIz6D,EAAS,EACT6C,EAAkB,GACtB,IAAK,IAAIR,EAAIrC,EAAS,EAAGqC,EAAIoqC,EAAOk7B,OAAO5zE,OAAQsO,IAAK,KAAAk2B,EAAAsM,EAAArM,EAAAmN,EAAAC,EAAAhsB,EACtD,MAAMvH,EAAQo6B,EAAOk7B,OAAOtlE,GAC5B,IAAKrC,GAAUqS,EAAM61D,KAAOxtE,EAAAA,GAAGujE,UAAW,CACxCj+D,EAASqC,EACT,QACF,CAAW,IAACrC,GAAiC,KAAvB,OAAAu4B,EAAAlmB,EAAMzrB,WAAA,EAAN2xC,EAAYxkC,SAAkC,MAAlBse,EAAMzrB,KAAK,GAC3D,SAGF,GAAqD,UAAjDH,EAAAA,GAAAA,QAAa,OAAAo+C,EAAA4H,EAAOk7B,SAAStlE,SAAA,EAAhBwiC,EAAoBj+C,OAAQ,IAC3C,SAGF,MAAM4vB,EAAUnU,EAAI,EACd/N,EAAe,CACnB81B,UAAA,OAAWoO,EAAAiU,EAAOk7B,SAAStlE,KAAhBm2B,EAAoB5xC,KAAOH,EAAAA,GAAAA,OAAagmD,EAAOk7B,OAAOtlE,GAAGzb,MAAS,GAC7EyL,QAAS,OAAAszC,EAAA8G,EAAOk7B,SAAStlE,KAAhBsjC,EAAoB/+C,KAAOH,EAAAA,GAAAA,OAAagmD,EAAOk7B,OAAOtlE,GAAGzb,MAAS,GAC3EkY,WAA6B,OAAlB8mC,EAAA6G,EAAOk7B,SAAStlE,SAAA,EAAhBujC,EAAoBh/C,OAAQ,GACvCitF,IAAK,OAAAj6D,EAAA6yB,EAAOk7B,SAAStlE,KAAhBuX,EAAoBhzB,KAAOurB,SAAS1rB,EAAAA,GAAAA,OAAagmD,EAAOk7B,OAAOtlE,GAAGzb,QAAW,EAClFigH,OAAA,IAEgB,GAAdvyG,EAAMu/E,MAAWv/E,EAAMu/E,IAAMn0E,GACjC,MAAM+kC,EAAK,IAAIh+C,EAAAA,GAAAA,OACfg+C,EAAG9vB,MAAMluB,EAAAA,GAAAA,QAAcoY,EAAIymG,OAAOhxG,EAAMu/E,KAAKrgF,SAASiK,KAAM,QAC5DgnC,EAAG/lB,cAAc7f,EAAIymG,OAAOhxG,EAAMu/E,KAAKrgF,SAASkK,MAChD,MAAMs2B,EAAY0R,EAAAA,GAAAA,OAAYjB,EAAGoD,WAC3BpB,EAAa,IAAInnC,EAAAA,GACvBmnC,EAAWkhC,OAASl7B,EAAOk7B,OAAO3tE,MAAM,EAAGwc,GAC3C,MAAMlO,EAAao9B,EAAAA,GAAAA,OAAYe,EAAWi0B,YACpCtqC,EAAUsV,EAAAA,GAAAA,OAAY1R,EAAUna,OAAOvR,IAEvCD,EAAYpH,EAAAA,GAAUiwD,YAAY58D,EAAMwK,WAC9C,IAAIqJ,EACJ,IAAK,IAAIzN,EAAW,EAAGA,EAAW,EAAGA,IACnC,IACEyN,EAAYE,EAAUwpD,iBAAiBn3D,EAAU,IAAIsM,EAAAA,GAAUxU,EAAAA,GAAAA,UAAc49B,KACvD59B,EAAAA,GAAAA,OAAW49B,EAAS/nB,EAAWF,IAChCA,EAAU0uD,cAAgBviE,EAAMjC,UACnDiC,EAAMuyG,OAAA,EAEV,CAAE,MAAOnsG,GAAG,CAIdmI,EAAO7a,KAAKsM,EACd,CACA,OAAKuO,EAAO9O,OAAA,IAED0wC,EACT5hC,QAAA,CAEJ,ECtEF,MAAMikG,GAASxzF,EAAOrF,KACpB,+MACA,OAEI84F,GAASzzF,EAAOrF,KACpB,+3CACA,aAGW4sC,GACX1uD,WAAAA,GAEiB,IADRuO,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,GACnBvO,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,GAAE,KADVgK,YAAA,OACAC,WAAA,EADA,KAAMD,OAANtE,EACA,KAAKuE,MAALxY,CACL,EAGA,MAAOugH,WAAuB7+F,EAAOhc,WAAAA,GAAA,SAAA6I,WACzC,KAAA4rG,IAAM,OACN,KAAA/xG,KAAO,UAAU,CAEjB,WAAA6D,CACEgI,EACAmE,GAAY,IAAAa,EAEZ,MAAM2C,EAAM3H,EAAIwnG,KAAKrjG,GACf4tC,EAASn5B,EAAOrF,KAAK5L,EAAI3O,QACzBgyC,EAAY+G,EAAOv8B,QAAQ42F,IACjC,IAAmB,IAAfphE,EAAkB,OACtB,MAAMzkC,EAAYwrC,EAAOv8B,QAAQ62F,GAAQrhE,EAAYohE,GAAO/yG,QAC5D,IAAmB,IAAfkN,EAAkB,OACtB,MAAMzO,EAAa8M,EAAAA,GAAO6oE,WACxBxyE,MAAMsY,KAAKw+B,EAAO1qC,SAAS2jC,EAAYohE,GAAO/yG,OAAQkN,KAElDjB,EAAU,IAAI66C,GACpB,IAAKroD,EAAWm1E,OAAO,GAAI/gF,OAAS4L,EAAWm1E,OAAO,GAAI/gF,KAAM,OAChEoZ,EAAQhB,OAASxM,EAAWm1E,OAAO,GAAI/gF,KACvCoZ,EAAQf,MAAQrK,OACdoS,EAAAA,GAAUs2C,cAAc9qD,EAAWm1E,OAAO,GAAI/gF,KAAMoT,MAAM,EAAG,IAAIM,YAEnE+H,EAAIzE,OACkB,OAApB8B,EAAAlN,EAAWm1E,OAAO,WAAlBjoE,EAAsB9Y,OACtBH,EAAAA,GAAAA,cAAoBkP,MAAMsY,KAAKzb,EAAWm1E,OAAO,GAAI/gF,MAAwB,WAAhB8F,KAAKuB,QAAuB,CAAC,GAAK,CAAC,MAClG,MAAM4U,EAAkB,GAOxB,OANIR,EAAIzE,OAASlR,KAAKg0G,OAAO74G,IAAIwa,EAAIzE,QACnCiF,EAAO7a,KAAK,CACVgM,GAAI,QACJuO,MAAOvC,EAAQf,MAAM3E,SAAS,IAAI6T,SAAS,GAAI,OAG5C,IAAIs2B,EAAUzkC,EAAS6C,EAChC,CAEA,aAAAg+F,CAAcnmG,GACZ,IAAK,MAAOmE,EAAKS,KAAU5E,EAAI4qG,OAAOpzG,UAAW,CACtB,IAAAzL,EAAzB,GAAG6Y,EAAM1Y,KAAK8F,KAAKk0G,KAWjB,YARElmG,EAAI6qG,QAAQ74G,KAAKk0G,KADhBttF,EAAOrF,MAAK,OAAAxnB,EAAAiU,EAAIg2E,GAAGxW,OAAOr7D,GAAK2qE,sBAAA,EAAnB/iF,EAAoCi0E,aAAc,IAAI9yE,SAASm/G,IACpD,CACtBvB,OAAQ,GAGc,CACtBA,OAAQ,GAKhB,CACA,IAAK,MAAM/+G,KAAOiU,EAAIwnG,KACpB,GAAGz7G,EAAIG,KAAK8F,KAAKk0G,KAIf,YAHAlmG,EAAI6qG,QAAQ74G,KAAKk0G,KAAO,CACtB4E,QAAS,GAKjB,QChEWyB,GACX96G,WAAAA,CAA2BuO,GAA6B,KAA7ByjG,QAAA,OAAEA,GAAFzjG,CAAgC,CAE3D,iBAAAssB,CAAkBtsB,GAChB,MAAMjU,QAAW8xC,EACf,UAAU79B,IAjBS,EAmBnB,CACEijG,OAAAA,CAAQjjG,GACNA,EAAGwsG,kBAAkB,SAAU,CAAEC,QAAS,WAAYC,YACpD,OACA,OAEJ,IAIJ,OAAO,IAAIH,GAAgBxgH,EAC7B,CAEA,aAAA2c,GACE1W,KAAKyxG,GAAGxM,OACV,CAEA,SAAAwS,CAAUzpG,SACE,KAACyjG,GAAGgG,IAAI,SAAUzpG,EAC9B,CAEA,aAAAupG,CAAcvpG,GACZ,IAAKA,EAAO3G,OAAQ,OACpB,MAAMtN,EAAIiG,KAAKyxG,GAAGD,YAAY,SAAU,aACxC,IAAK,MAAMr/F,KAASnE,EAClBjU,EAAEm4G,MAAMuF,IAAItlG,SAERpY,EAAEygD,IACV,CAEA,eAAAmgE,CAAgB3sG,GACd,OAAW,KAACyjG,GAAGmJ,aAAa,SAAU,OAAQ5sG,GAAM8kF,OAAM,QAC5D,CAEA,iBAAAikB,CAAkB/oG,GAChB,OAAOhO,KAAKyxG,GAAGp2G,IAAI,SAAU2S,GAAQ8kF,OAAM,QAC7C,CAEA,eAAA+jB,GACE,MACM7oG,SADWhO,KAAKyxG,IACTD,YAAY,SAAU,YAC7Bz3G,QAAeiU,EAAEkkG,MAAMY,WAAW,KAAM,QACxC3gG,EAAc,MAANpY,OAAA,EAAAA,EAAQ8b,MAEtB,aADM7H,EAAEwsC,KACDroC,CACT,CAEA,YAAA0oG,GACE,OAAO76G,KAAKyxG,GAAGoJ,OAAO,SACxB,CAEA,eAAAxD,GACE,IAAIrpG,EAAS,IAAIjU,EAAAA,GAAAA,OACjB,MAAMoY,EAAInS,KAAKyxG,GAAGD,YAAY,SAAU,YACxC,IAAI5+F,EAAsB,GACtBI,EAAQ,EACR2C,EACF,mEAAmE,IAAAoqC,EAAA/G,GAAA,EAAAzkC,GAAA,MACrE,QAA4C+F,EAA5CxU,EAAAgW,GAA2B3J,EAAE+/F,MAAMU,WAAS55D,IAAA1+B,QAAAxU,EAAAy0C,QAAAC,KAAAxB,GAAA,EAAE,CAA7B,MAAA7mC,EAAMmI,EAAAzE,MAAA,CACrB,MAAMkqC,EAAS5tC,EAAO0D,MACtBkqC,EAAOszD,SAAW19F,EAClBA,EAAWoqC,EAAOluC,KAClBqb,EAAiBlf,EAAQmE,EAAO0D,OAChB,OAAV7C,IACJJ,EAAQtX,KAAK0S,EAAOmtC,WACpBntC,EAAS,IAAIjU,EAAAA,GAAAA,OACbiZ,EAAQ,EACT,CACH,CAAC,OAAAhF,GAAAuG,GAAA,EAAAwrC,EAAA/xC,CAAA,aAAAgrC,GAAA,MAAAlzC,EAAAs/F,cAAAt/F,EAAAs/F,QAAA,YAAA7wF,EAAA,MAAAwrC,CACD,EAIA,aAJM5tC,EAAEqoC,KACJxnC,GACFJ,EAAQtX,KAAK0S,EAAOmtC,WAEfvoC,CACT,EC3DU,IAAAm7C,IAAZ,SAAY//C,GACVA,EAAAA,EAAAilG,UAAA,cACAjlG,EAAAA,EAAA8sG,QAAA,aACA9sG,EAAAA,EAAAmlG,YAAA,iBACAnlG,EAAAA,EAAAolG,UAAA,eACAplG,EAAAA,EAAAymG,UAAA,cACD,CAND,CAAY1mD,KAAAA,GAMX,KAEY,MAAAgtD,GAIXt7G,WAAAA,CACSuO,EACAjU,EACAoY,EACAS,GAAqB,KAHrBlT,aAAA,OACAsM,cAAA,OACAspG,YAAA,OACA/B,YAAA,EAPD,KAAAyH,iBAAA,EACA,KAAAC,UAAA,EAGC,KAAOv7G,QAAPsO,EACA,KAAQhC,SAARjS,EACA,KAAMu7G,OAANnjG,EACA,KAAMohG,OAAN3gG,CACN,CAEH,aAAA8D,GACE1W,KAAKi7G,UAAA,EACDj7G,KAAKg7G,mBAAuB,KAACA,kBAC3Bh7G,KAAKN,QAAQgX,SACrB,CAEA,eAAAlZ,CACEwQ,GAEA,MAAMjU,QAAA,KAAkBiS,SAASxO,UAAUA,UAAUwQ,GACtB,IAAA4E,EAExBI,EAGP,OALIb,EAAAA,EAAAA,IAAoBpY,GACtB,OAAA6Y,EAAI,KAAC2gG,SAAL3gG,EAAajY,KAAK,mBAAoBqT,GAEtC,OAAAgF,EAAI,KAACugG,SAALvgG,EAAarY,KAAK,mBAAoBqT,GAEjCjU,CACT,CAEA,YAAAy8G,CACExoG,GACa,IAAbjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAEI6J,QAAgB,KAACzS,QAAQrE,IAAI2S,GAC7B4E,GAAA,EAAS,IACWI,EAAA2C,EAKxB,IALKxD,GAAOpY,IAAA,OACViZ,EAAAhT,KAAKuzG,SAALvgG,EAAarY,KAAK,aAAc,CAAEoW,KAAA/C,IAClCmE,QAA8B,OAAxBwD,EAAM3V,KAAKgM,SAAS0pG,WAAA,EAAd//F,EAAoBqiG,SAAShqG,IACzC4E,IAAWT,IAERA,EAAK,OACV,MAAM4tC,EAAKzsC,EAAAA,GAAYmoE,WAAWtpE,EAAI+kG,OAOtC,OANI/kG,EAAIglG,QACNp3D,EAAGqlC,WAAajvE,EAAAA,GAAWslE,WAAWtpE,EAAIglG,QAExCvkG,SACQ,KAACsoG,OAAOn7D,GAEbA,CACT,CAEA,YAAAm7D,CAAaltG,GACX,MAAMjU,EAAW,CACfgX,KAAM/C,EAAG1G,GAAG,OACZ4vG,MAAOlpG,EAAGggE,WACVz8D,MAAO,IAAIuY,EACXphB,OAAQqlD,GAAUolD,aAED,IAAAhhG,EAAfnE,EAAGo3E,aAILrrF,EAAIo9G,MAAQnpG,EAAGo3E,WAAYpX,WAC3Bj0E,EAAIwX,MAAMC,OAASxD,EAAGo3E,WAAYvF,YAClC9lF,EAAIwX,MAAME,IAAMvJ,QACd,OAAAiK,EAAAnE,EAAGo3E,WAAYtF,KAAK,GAAGkB,MAAMhzE,GAAMA,EAAE6D,MAAQ9X,EAAIgX,aAAA,EAAjDoB,EAAwD6J,SAAU,GAEpEjiB,EAAI2O,OAASqlD,GAAUqlD,iBAEf,KAAC1zG,QAAQ+3G,IAAI19G,EACzB,CAEA,kBAAAk8G,GACMj2G,KAAKg7G,cACTh7G,KAAKg7G,YAAchiH,QAAQgP,IAAI,CAC7BhI,KAAKm7G,iBACLn7G,KAAKo7G,qBACJzgE,MAAK,SACV,CAEA,oBAAAwgE,GACE,IACE,MAAMhpG,QAAiB,KAACzS,QAAQ27G,YAC9BttD,GAAUolD,YACV/5G,KAAKC,MAAQ,IACb,IAEF,GAAI8Y,EAAK9K,OAAQ,CACf,IAAK,MAAMuL,KAAOT,EAAM,KAAAnE,EAEtB,MAAMmE,QAAgC,OAAxBnE,EAAMhO,KAAKgM,SAAS0pG,WAAA,EAAd1nG,EAAoBiqG,WAAWrlG,EAAI7B,OACvD,IAAKoB,EAAO,CACVS,EAAIrB,MAAMC,OAASpY,KAAKC,MACxB,QACF,CACA,MAAM2Z,EAAamD,EAAAA,GAAWslE,WAAWtpE,GACmB,IAAApY,QAAlDiZ,EAAW0xD,OAAO9xD,EAAI7B,KAAM/Q,KAAKs1G,OAAOG,SAChD7iG,EAAIrB,MAAMC,OAASwB,EAAW6sE,YAC9BjtE,EAAIrB,MAAME,IAAMvJ,QACoC,OAAlDnO,EAAAiZ,EAAW8sE,KAAK,GAAGkB,MAAMhzE,GAAMA,EAAE6D,MAAQe,EAAI7B,aAAA,EAA7ChX,EAAoDiiB,SAAU,GAEhEpJ,EAAIukG,MAAQnkG,EAAWg7D,WACvBp7D,EAAIlK,OAASqlD,GAAUqlD,WAEvBxgG,EAAIrB,MAAMC,OAASpY,KAAKC,KAE5B,OACM2G,KAAKN,QAAQ63G,QAAQplG,EAC7B,YACQ,IAAInZ,SAASgV,GAAMmoC,WAAWnoC,EAAG,MAE3C,CAAE,MAAOA,GACPzS,QAAQpB,MAAM,uBAAwB6T,SAChC,IAAIhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MACzC,CACA,IAAIhO,KAAKi7G,SAGT,OAAOj7G,KAAKm7G,gBACd,CAEA,sBAAAC,GACE,IACE,MAAMjpG,QAAiBnS,KAAKs1G,OAAOG,OAAQuB,cACrCpkG,QAAa5S,KAAKN,QAAQ27G,YAC9BttD,GAAUqlD,UACVjhG,EAAUX,OAAS,EACnB,IAEF,GAAIoB,EAAKvL,OAAQ,CACf,IAAK,MAAM2L,KAAOJ,EAAM,KAAA5E,EACtB,IAAI4E,EAAauD,EAAAA,GAAWslE,WAAWzoE,EAAImkG,OACvCxhG,GAAA,EACJ,IACEA,QAAiB/C,EAAW8xD,OAAO1xD,EAAIjC,KAAM/Q,KAAKs1G,OAAOG,OAC3D,CAAE,MAAAznG,GACAzS,QAAQpB,MAAM,gCAAiC6Y,EAAIjC,KACrD,CACA,GAAI4E,EAAU,CACZ3C,EAAItK,OAASqlD,GAAU0mD,UACvB,QACF,CAEA,MAAM10D,QAAgC,OAAxB/xC,EAAMhO,KAAKgM,SAAS0pG,WAAA,EAAd1nG,EAAoBiqG,WAAWjlG,EAAIjC,OACvD,GAAIgvC,EAAO,CACTntC,EAAauD,EAAAA,GAAWslE,WAAW17B,GAEnC,IACEpqC,QAAiB/C,EAAW8xD,OAAO1xD,EAAIjC,KAAM/Q,KAAKs1G,OAAOG,OAC3D,CAAE,MAAAznG,GACAzS,QAAQpB,MAAM,gCAAiC6Y,EAAIjC,KACrD,CACA,GAAI4E,EAAU,KAAA5b,EACZiZ,EAAIzB,MAAMC,OAASoB,EAAYitE,YAC/B7sE,EAAIzB,MAAME,IAAMvJ,QACd,OAAAnO,EAAA6Y,EAAWktE,KAAK,GAAGkB,MAAMhzE,GAAMA,EAAE6D,MAAQmB,EAAIjC,aAAA,EAA7ChX,EAAoDiiB,SAAU,GAEhEhJ,EAAImkG,MAAQp3D,EACR/sC,EAAIzB,MAAMC,QAAUW,EAAUX,OAAS,IACzCwB,EAAItK,OAASqlD,GAAU0mD,WAEzB,QACF,CACF,CACAzhG,EAAItK,OAASqlD,GAAUklD,QACzB,OACMjzG,KAAKN,QAAQ63G,QAAQ3kG,EAC7B,YACY,IAAA5Z,SAASgV,GAAMmoC,WAAWnoC,EAAG,MAE3C,CAAE,MAAOA,GACPzS,QAAQpB,MAAM,uBAAwB6T,SAChC,IAAIhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MACzC,CACA,IAAIhO,KAAKi7G,SAGT,OAAW,KAACG,kBACd,ECjNW,MAAAE,GACX77G,WAAAA,CAA2BuO,GAAA,KAAAyjG,QAAA,OAAEA,GAAFzjG,CAA8B,CAEzD,iBAAAssB,CAAkBtsB,GAChB,MAAMjU,QAAW8xC,EAAkB,QAAQ79B,IAhBxB,EAgBmD,CACpEijG,OAAAA,CAAQjjG,GACNA,EAAGwsG,kBAAkB,OAAQ,CAAEC,QAAS,SAAUC,YAChD,SACA,CAAC,SAAU,gBAEf,IAGF,OAAW,IAAAY,GAAcvhH,EAC3B,CAEA,aAAA2c,GACE1W,KAAKyxG,GAAGxM,OACV,CAEA,SAAA5pG,CAAU2S,GACR,OAAOhO,KAAKyxG,GAAGp2G,IAAI,OAAQ2S,GAAM8kF,OAAM,QACzC,CAEA,aAAAwjB,CAActoG,GACZ,MAAMjU,EAAIiG,KAAKyxG,GAAGD,YAAY,QACxBr/F,QAAanZ,QAAQgP,IACzBgG,EAAMvI,KAAKuI,GAASjU,EAAEm4G,MAAM72G,IAAI2S,GAAM8kF,OAAM,YAG9C,aADM/4F,EAAEygD,KACDroC,CACT,CAEA,SAAAslG,CAAUzpG,SACFhO,KAAKyxG,GAAGgG,IAAI,OAAQzpG,EAC5B,CAEA,aAAAupG,CAAcvpG,GACZ,IAAKA,EAAK3G,OAAQ,OAClB,MAAMtN,EAAIiG,KAAKyxG,GAAGD,YAAY,OAAQ,mBAChCx4G,QAAQgP,IACZgG,EAAKvI,KAAKuI,GACDjU,EAAEm4G,MAAMuF,IAAIzpG,YAGjBjU,EAAEygD,IACV,CAEA,YAAA/mC,CAAazF,GACX,MAAMjU,EAAIiG,KAAKyxG,GAAGD,YAAY,QACxBr/F,QAAmBnZ,QAAQgP,IAAI,IAChCgG,EAAMvI,KAAKuI,GAASjU,EAAEm4G,MAAMqJ,OAAOvtG,GAAM8kF,OAAM,IAAM,WAG1D,aADM/4F,EAAEygD,KACDroC,EAAW1M,KAAKuI,KAAWA,GACpC,CAEA,iBAAAqtG,CACErtG,EACAjU,GACQ,IAARoY,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,GAER,MAAMsK,EAAI5S,KAAKyxG,GAAGD,YAAY,QACxBx+F,EAAMJ,EAAEs/F,MAAM7rF,MAAM,UACpB1Q,EAAQ6lG,YAAYC,MAAM,CAACztG,EAAQ,GAAI,CAACA,EAAQjU,IAChDgmD,EAAc,GAAG,IAAA/G,EAAAzkC,GAAA,EAAA+F,GAAA,MACvB,QAA6CxU,EAA7CwN,EAAAwI,GAA2B9I,EAAI4/F,QAAQj9F,KAAMpB,IAAAzO,QAAAwN,EAAAinC,QAAAC,QAC3CuF,EAAKzkD,KADgBwK,EAAA+P,MACJA,SACbkqC,EAAK14C,QAAU8K,IAFwBoC,GAAA,GAG5C,OAAAvG,GAAAsM,GAAA,EAAA0+B,EAAAhrC,CAAA,aAAAuG,GAAA,MAAAjB,EAAA8xF,cAAA9xF,EAAA8xF,QAAA,YAAA9qF,EAAA,MAAA0+B,CAAA,EAED,aADMpmC,EAAE4nC,KACDuF,CACT,EC3CF,SAAS27D,GAAW1tG,GAClBA,EAAIlH,SAAW,IAAIqzC,EAASnsC,EAAIlH,SAASiK,KAAM/C,EAAIlH,SAASkK,MAC5D,IAAK,MAAMjX,KAAQwL,OAAOm5C,OAAO1wC,EAAI9T,MACnCH,EAAKy5G,KAAOz5G,EAAKy5G,KAAK/tG,KAAKuI,GAAQ,IAAImsC,EAASnsC,KAElD,OAAOA,CACT,CAEA,SAAS2tG,GAAc3tG,GACrB,MAAMjU,EAAiB,GACjBoY,EAAmB,GACnBS,EAAiB,GAGjBI,EAAO,GAFIhF,EAAIuD,MAAMC,OAAO5D,SAAS,IAAI6T,SAAS,EAAG,QAC5CzT,EAAIuD,MAAME,IAAI7D,SAAS,IAAI6T,SAAS,EAAG,OAEhD9L,EAAO,IAAI+qE,IACjB,IAAK,MAAO3gC,EAAK/G,KAASzzC,OAAOC,QAAQwI,EAAI9T,MAAO,CAClD,IAAK,MAAM8T,KAAOgrC,EAAKw6D,KACrB79F,EAAKoB,IAAI/I,EAAIJ,YAEf,GAAII,EAAItF,QAAUiT,EAAU+3F,WAA5B,CACA,IAAK,MAAM1lG,KAAKgrC,EAAKu6D,OACnB3gG,EAAKtX,KAAK,GAAGykD,KAAO/xC,EAAE1G,MAAM0G,EAAE6H,SAAS7C,KAEzC,IAAIhF,EAAImD,MAAR,CACI6nC,EAAKu6D,OAAOlsG,QAAQtN,EAAKuB,KAAK,GAAGykD,KAAO/sC,KAC5C,IAAK,MAAMhF,KAAKgrC,EAAKu6D,OACnBphG,EAAO7W,KAAK,GAAGykD,KAAO/xC,EAAE1G,MAAM0G,EAAE6H,SAAS7C,IAAA,CAN3C,CAQF,CACAhF,EAAIonG,KAAOr7G,EACXiU,EAAIulG,OAASphG,EACbnE,EAAImnG,KAAOviG,EACX5E,EAAIwlG,KAAOvqG,MAAMsY,KAAK5L,GACtB3H,EAAIqnG,UAAYljG,EAAO9K,MACzB,CAEa,MAAAu0G,GACXn8G,WAAAA,CAA2BuO,GAAA,KAAAyjG,QAAA,OAAEA,GAAFzjG,CAA+B,CAC1D,iBAAAssB,CACEtsB,EACAjU,GAEA,MAAMoY,QAAW05B,EACf,QAAQ79B,KAAajU,IAjFJ,EAmFjB,CACEk3G,OAAAA,CAAQjjG,GACN,MAAMjU,EAAOiU,EAAGwsG,kBAAkB,OAAQ,CACxCC,QAAS,CAAC,gBAAiB,mBAE7B1gH,EAAK2gH,YAAY,QAAS,CAAC,QAAS,cACpC3gH,EAAK2gH,YAAY,SAAU,SAAU,CAAEmB,YAAA,IACvC9hH,EAAK2gH,YAAY,OAAQ,OAAQ,CAAEmB,YAAA,IACnC9hH,EAAK2gH,YAAY,OAAQ,OAAQ,CAAEmB,YAAA,IACnC9hH,EAAK2gH,YAAY,OAAQ,OAAQ,CAAEmB,YAAA,IACf7tG,EAAGwsG,kBAAkB,cAAe,CACtDC,QAAS,SAECC,YAAY,SAAU,CAAC,SAAU,SAAU,QACvD1sG,EAAGwsG,kBAAkB,QAAS,CAAEC,QAAS,QAC3BzsG,EAAGwsG,kBAAkB,QAAS,CAAEC,QAAS,SACjDC,YAAY,SAAU,CAAC,SAAU,OACzC,IAGJ,OAAO,IAAIkB,GAAczpG,EAC3B,CAEA,aAAAuE,GACE1W,KAAKyxG,GAAGxM,OACV,CAEA,SAAA5pG,CAAU2S,GACR,MAAMjU,QAAYiG,KAAKyxG,GAAGp2G,IAAI,OAAQ,CAAC2S,EAAS+C,KAAM/C,EAASgD,OAC/D,OAAOjX,GAAO2hH,GAAW3hH,EAC3B,CAEA,aAAAu8G,CAActoG,GACZ,MAAMjU,EAAIiG,KAAKyxG,GAAGD,YAAY,QACxBr/F,QAAanZ,QAAQgP,IACzBgG,EAAUvI,KAAKuI,GAAajU,EAAEm4G,MAAM72G,IAAI,CAAC2S,EAAS+C,KAAM/C,EAASgD,UAGnE,aADMjX,EAAEygD,KACDroC,EAAK1M,KAAKuI,GAAQA,GAAO0tG,GAAW1tG,IAC7C,CAEA,gBAAA8tG,CAAiB9tG,GAMf,aALmBhO,KAAKyxG,GAAGsK,gBACzB,OACA,QACAP,YAAYC,MAAM,CAACztG,GAAO,CAACA,EAAMiD,OAAO8/C,qBAE9BtrD,KAAKuI,GAAQ0tG,GAAW1tG,IACtC,CAEA,SAAAypG,CAAUzpG,GACR2tG,GAAc3tG,SAAA,KACHyjG,GAAGgG,IAAI,OAAQzpG,EAC5B,CAEA,aAAAupG,CAAcvpG,GACZ,IAAKA,EAAK3G,OAAQ,OAClB,MAAMtN,EAAIiG,KAAKyxG,GAAGD,YAAY,OAAQ,mBAChCx4G,QAAQgP,IACZgG,EAAKvI,KAAKuI,IACR,GAAKA,EAEL,OADA2tG,GAAc3tG,GACPjU,EAAEm4G,MAAMuF,IAAIzpG,EAAG,WAGpBjU,EAAEygD,IACV,CAEA,YAAAmkD,CACE3wF,GAGA,IAFAjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAOo7B,EAAQkxE,KACfziG,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,GACRsK,EAAAtK,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAEA,MAAMgO,EAAQhF,EAAO8mG,aACrB,IAAIn/F,EAAQ3C,EACR+sC,EAAQ/sC,EAAQ,SAChBJ,GAAQ7Y,GAAQ2pC,EAAQixE,IAC1Bh/F,EAAQ/C,EACCA,GAAQ7Y,GAAQ2pC,EAAQkxE,OACjC70D,EAAQntC,GAEV,MAAMomC,EAAQwiE,YAAYC,MACxB9lG,EACAoqC,GAAA,GACA,GAIIxrC,EAAYvG,EAAO6mG,aACvB,OACA7mG,EAAO1G,GACL,SACA,OACEgT,EAAsB,CAAEk7F,KAAM,IAC9B1vG,EAAI9F,KAAKyxG,GAAGD,YAAY,QACxBl+F,EAAQxN,EAAEosG,MAAM7rF,MAAM9R,GAAW,IAAA4B,EAAA01B,GAAA,EAAAsM,GAAA,MACvC,QAGCrM,EAHDmN,EAAAn9B,GAA2BxI,EAAMs/F,QAC/B55D,EACAj/C,GAAQ2pC,EAAQkxE,KAAO,OAAS,SACjC/oE,IAAAC,QAAAmN,EAAAsB,QAAAC,KAAA3O,GAAA,EAAE,CAHc,MAAA9xC,EAAM+xC,EAAAj2B,MAIrB,OAAMjD,EAAM8oG,GAAW3hH,EAAO8b,OAE9B,GADAyE,EAAQ0hG,SAAWjiH,EAAOsK,IACtB2J,EAAOkD,OAAS0B,EAAI1B,OAASlD,EAAOkD,MAAO,SAE/C,GADAoJ,EAAQk7F,KAAKl6G,KAAKsX,GACdT,EAAQ,GAAKmI,EAAQk7F,KAAKnuG,QAAU8K,EAEtC,aADMrM,EAAE00C,KACDlgC,CACR,CACH,CAAC,OAAAtM,GAAAmqC,GAAA,EAAAhiC,EAAAnI,CAAA,aAAA69B,GAAA,MAAAoN,EAAAmsD,cAAAnsD,EAAAmsD,QAAA,YAAAjtD,EAAA,MAAAhiC,CAAA,EAGD,aAFMrQ,EAAE00C,YACDlgC,EAAQ0hG,SACR1hG,CACT,CAEA,cAAAu7F,CAAe7nG,GACb,MAAMjU,QAAciG,KAAKyxG,GAAGp2G,IAAI,QAAS2S,GACzC,OAAO,MAAAjU,OAAA,EAAAA,EAAO8b,KAChB,CAEA,cAAA+jC,CAAe5rC,EAAajU,SACpBiG,KAAKyxG,GAAGgG,IAAI,QAAS,CAAEpzG,IAAA2J,EAAK6H,MAAA9b,GACpC,CAEA,oBAAAkiH,GASE,aAR0Bj8G,KAAKyxG,GAAGyK,eAChC,cACA,SACAV,YAAYC,MACV,CAAC7/F,EAAa04F,QACd,CAAC14F,EAAa24F,WAAYtjG,OAAO8/C,mBAIvC,CAEA,gBAAAorD,CACEnuG,EACAjU,GAEe,IADfoY,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAgB,EAChBsK,EAAAtK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAe,EAEf,MAAM0K,EAAQwoG,YAAYC,MACxB,CAACztG,EAAQmE,GACT,CAACnE,EAAQ4E,GAAQ3B,OAAO8/C,mBAQ1B,aAN0B,KAAC0gD,GAAGsK,gBAC5B,cACA,SACA/oG,EACAjZ,EAGJ,CAEA,eAAAqiH,CAAgBpuG,EAAgBjU,GAC9B,MAAMoY,IAAcpY,EACfA,IACHA,EAAIiG,KAAKyxG,GAAGD,YAAY,cAAe,cAEzC,MAAM5+F,QAAa7Y,EAAEm4G,MAAM72G,IAAI2S,EAAO+C,MAAM+hF,OAAM,SAClD,GAAIlgF,GAAQ3B,OAAO2B,EAAKlK,SAAWuI,OAAOjD,EAAOtF,QAAS,CACxD,IAAGsF,EAAOisG,UAQR,YADA1+G,QAAQgL,IAAI,kBAAmByH,EAAO+C,KAAM,oBAN5C/C,EAAO8/D,QAAU,IAAI,IAAI4S,IAAI,IACvB9tE,EAAKk7D,SAAW,MAChB9/D,EAAO8/D,SAAW,YAElB/zE,EAAEm4G,MAAMuF,IAAIzpG,EAKtB,YACQjU,EAAEm4G,MAAMuF,IAAIzpG,SAEdjU,EAAEm4G,MAAMuF,IAAIzpG,GACbmE,SACGpY,EAAEygD,IAEZ,CAEA,gBAAA6hE,CAAiBruG,GAAiB,IAAAjU,EAChC,SAAKiU,EAAQ3G,OAAQ,OACrB,MAAM8K,EAAInS,KAAKyxG,GAAGD,YAAY,cAAe,mBACvCx4G,QAAQgP,IACZgG,EAAQvI,KAAI1M,eAAOiV,SACXjU,EAAKqiH,UAAUpuG,EAAQmE,EAC/B,WAEIA,EAAEqoC,IACV,CAEA,eAAA8hE,CAAgBtuG,SACRhO,KAAKyxG,GAAGlX,OAAO,cAAevsF,EACtC,CAEA,gBAAAuuG,CAAiBvuG,GACf,MAAMjU,EAAIiG,KAAKyxG,GAAGD,YAAY,cAAe,mBACvCx4G,QAAQgP,IAAIgG,EAAMvI,KAAKuI,GAASjU,EAAEm4G,MAAM3X,OAAOvsF,YAC/CjU,EAAEygD,IACV,CAEA,cAAAgiE,CAAexuG,GACb,OAAW,KAACyjG,GAAGp2G,IAAI,QAAS2S,EAC9B,CAEA,eAAAyuG,CAAgBzuG,GACd,IAAKA,EAAM3G,OAAQ,MAAO,GAC1B,MAAMtN,EAAIiG,KAAKyxG,GAAGD,YAAY,SACxBr/F,QAAanZ,QAAQgP,IACzBgG,EAAMvI,KAAKuI,GAASjU,EAAEm4G,MAAM72G,IAAI2S,GAAM8kF,OAAM,YAG9C,aADM/4F,EAAEygD,KACDroC,EAAK1W,QAAQuS,QAAA,IAAQA,GAC9B,CAEA,cAAA0uG,CAAe1uG,SACH,KAACyjG,GAAGgG,IAAI,QAASzpG,EAC7B,CAEA,qBAAA0oG,GAA8B,IAAR1oG,EAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,IAC5B,MAAMvO,EAAIiG,KAAKyxG,GAAGD,YAAY,SACxBr/F,EAAMpY,EAAEm4G,MAAM7rF,MAAM,UACpBzT,EAAgB,GAAG,IAAAI,EAAA2C,GAAA,EAAAoqC,GAAA,EACzB,YAAoD/G,EAApDzkC,EAAAuH,GAA2B3J,EAAIygG,QAAQ,KAAM,UAAOj9F,IAAAqjC,QAAAzkC,EAAAgmC,QAAAC,QAClD5nC,EAAKtX,KADgB09C,EAAAnjC,MACJA,SACbjD,EAAKvL,QAAU2G,IAF+B2H,GAAA,GAGnD,OAAA3H,GAAA+xC,GAAA,EAAA/sC,EAAAhF,CAAA,aAAA2H,GAAA,MAAApB,EAAA6wF,cAAA7wF,EAAA6wF,QAAA,YAAArlD,EAAA,MAAA/sC,CACD,EACA,aADMjZ,EAAEygD,KACD5nC,CACT,CAEA,mBAAA8kG,GACE,MAAM1pG,EAAU,IAAIlT,IACdf,EAAIiG,KAAKyxG,GAAGD,YAAY,QACxBr/F,EAA4B,GAAG,IAAAS,EAAAI,GAAA,EAAA2C,GAAA,EACrC,YAEqEoqC,EAFrE/G,EAAAl9B,GAA2B/hB,EAAEm4G,MAC1B7rF,MAAM,SACNusF,QAAQ4I,YAAYC,MAAM,CAAC,GAAI,GAAI,CAAC,GAAIxqG,OAAO8/C,qBAAmB/9C,IAAA+sC,QAAA/G,EAAAuB,QAAAC,KAAAxnC,GAAA,EAF9C,CAGrB,MAAMjZ,EAHegmD,EAAAlqC,MAGJA,MACjB,IAAIjD,EAAS5E,EAAQ3S,IAAItB,EAAE+M,SAASiK,MAC/B6B,EAQHA,EAAOk7D,QAAS/2D,IAAIhd,EAAE+M,SAASkK,MAP/BhD,EAAQ5S,IAAIrB,EAAE+M,SAASiK,KAAM,CAC3BA,KAAMhX,EAAE+M,SAASiK,KACjBS,OAAQzX,EAAEwX,MAAMC,OAChBC,IAAKR,OAAOlX,EAAEwX,MAAME,KACpBq8D,QAAS,IAAI4S,IAAY,CAAC3mF,EAAE+M,SAASkK,SAKzCmB,EAAS7W,KAAK0E,KAAK28G,SAAS5iH,EAAE+M,SAAUkH,GAAU,CACnD,OAAAA,GAAA2H,GAAA,EAAA/C,EAAA5E,CAAA,aAAAgF,GAAA,MAAAgmC,EAAAosD,cAAApsD,EAAAosD,QAAA,YAAAzvF,EAAA,MAAA/C,CAAA,EAKD,aAHM5Z,QAAQgP,IAAImK,SACZpY,EAAEygD,KAEDvxC,MAAMsY,KAAKvT,EAAQ0wC,UACvB6hC,MAAK,CAACvyE,EAAGjU,IAAMiU,EAAEwD,OAASzX,EAAEyX,QAAUxD,EAAEyD,IAAM1X,EAAE0X,MAChDhM,KAAKuI,IAAA,CACJ+C,KAAM/C,EAAO+C,KACbS,OAAQxD,EAAOwD,OACfC,IAAKzD,EAAOyD,IACZq8D,QAAS7kE,MAAMsY,KAAKvT,EAAO8/D,SAC3BkoC,UAAWhoG,EAAO4uG,MAAQt1E,EAAUosE,WAAapsE,EAAUqsE,WAEjE,CAEA,cAAAgJ,CAAe3uG,EAAcjU,GAC3B,MAAMoY,EAAMpY,EAAKsB,IAAI2S,EAAG+C,MACxB,GAAIoB,IAAQA,EAAI27D,QAAS3yE,IAAI6S,EAAGgD,MAE9B,YADAmB,EAAI27D,QAAS/2D,IAAI/I,EAAGgD,MAGtB,MAAM4B,QAAgB,KAACvX,IAAI2S,GAC3B,IAAK4E,EAAK,MAAU,IAAAjO,MAAM,gBAAgBqJ,EAAG+C,QAAQ/C,EAAGgD,QACnDmB,GACHpY,EAAKqB,IAAI4S,EAAG+C,KAAM,CAChBA,KAAM/C,EAAG+C,KACTS,OAAQoB,EAAIrB,MAAMC,OAClBC,IAAKR,OAAO2B,EAAIrB,MAAME,KACtBmrG,OAAA,EACA9uC,QAAS,IAAI4S,IAAY,CAAC1yE,EAAGgD,SAIjC,IAAK,MAAMhD,KAAQzI,OAAOm5C,OAAO9rC,EAAI1Y,MACnC,IAAK,MAAMiY,KAAOnE,EAAKwlG,WACX,KAACmJ,SAASxqG,EAAKpY,EAG/B,QCvXW8iH,GAGXp9G,WAAAA,CACSuO,EACAjU,EACAoY,GAFA,KAAAzS,aAAA,EACA,KAAAsM,cAAA,EACA,KAAA8wG,aAAA,OALD9B,iBAAA,EAAW,KACXC,UAAA,EAEC,KAAOv7G,QAAPsO,EACA,KAAQhC,SAARjS,EACA,KAAO+iH,QAAP3qG,CACN,CAEH,aAAAuE,GACE1W,KAAKi7G,UAAA,QACCj7G,KAAKg7G,kBACD,KAACt7G,QAAQgX,SACrB,CAQA,UAAA09F,GAA8B,IAAnBpmG,IAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,KAAAA,UAAA,GACLtI,KAAKg7G,cAETh7G,KAAKg7G,YAAch7G,KAAK+8G,OAAO/uG,GAC3BA,UAAA,KACSgtG,YACXh7G,KAAKg7G,iBAAA,GAET,CAEQ,YAAA+B,GAAgC,IAAnB/uG,IAAA1F,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,KAAAA,UAAA,GACfvO,EAAa,EACboY,QAAoBnS,KAAKN,QAAQm3G,YAIrC,IAHI1kG,IACFpY,EAAaoY,EAAYX,OAAS,EAAIW,EAAYX,OAAS,EAAI,IAEzDxR,KAAKi7G,UACX,IAAI,IAAAroG,EACF,MAAM5E,QAAehO,KAAKgM,SAASypG,OAAOyC,UACxCn+G,EA1CQ,KAiDV,GAJAwB,QAAQgL,IACN,6BAAoCxM,MAAeiU,EAAO3G,yBAElD,KAAC3H,QAAQ63G,QAAQvpG,GACN,GAAjBA,EAAO3G,OAAa,UACiC2L,EAIzD,IAJe,OAAXJ,EAAAT,QAAA,EAAAS,EAAaf,OAAQ7D,EAAOA,EAAO3G,OAAS,GAAGwK,OACjD,OAAAmB,EAAI,KAAC8pG,UAAL9pG,EAAcrY,KAAK,oBAAqBqT,EAAOA,EAAO3G,OAAS,GAAGmK,SAEpEW,EAAcnE,EAAOA,EAAO3G,OAAS,GACjC2G,EAAO3G,OAtDD,IAsDqB,MAC/BtN,EAAaoY,EAAYX,OAAS,CACpC,CAAE,MAAOzX,GACP,GAAIiU,EACF,MAAMjU,EAERwB,QAAQpB,MAAMJ,SACJ,IAAAf,SAASgV,GAAYmoC,WAAWnoC,EAAS,MACrD,CAGF,IAAIA,IAAoBhO,KAAKi7G,SAI7B,aADU,IAAAjiH,SAASgV,GAAYmoC,WAAWnoC,EAAS,OAC5ChO,KAAK+8G,OAAO/uG,EACrB,CASA,0BAAAuzE,CAA2BvzE,EAAcjU,GACvC,MAAMoY,QAAcnS,KAAKN,QAAQq3G,YAAYh9G,GAC7C,OAAO,MAAAoY,OAAA,EAAAA,EAAO4yE,aAAc/2E,CAC9B,CAOA,iBAAAgpG,GACE,OAAW,KAACt3G,QAAQm3G,WACtB,QCpFWmG,GAGXv9G,WAAAA,CACSuO,EACAjU,EACAoY,EACAS,EACAI,EACA2C,GAAA,KALAjW,aAAA,OACAsM,cAAA,OACAspG,YAAA,EACA,KAAAQ,cAAA,EACA,KAAA9B,YAAA,OACAT,YAAA,OARDyH,iBAAA,EAAW,KACXC,UAAA,EAEC,KAAOv7G,QAAPsO,EACA,KAAQhC,SAARjS,EACA,KAAMu7G,OAANnjG,EACA,KAAQ2jG,SAARljG,EACA,KAAMohG,OAANhhG,EACA,KAAMugG,OAAN59F,CACL,CASJ,aAAAe,GACE1W,KAAKi7G,UAAA,EACDj7G,KAAKg7G,mBAAuB,KAACA,kBACvB,KAACt7G,QAAQgX,SACrB,CAWO,YAAAioF,CACL3wF,GAGA,IAFAjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAOo7B,EAAQkxE,KACfziG,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAQ,IACRsK,EAAAtK,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAEA,OAAOhF,KAAKN,QAAQi/F,OAAO3wF,EAAQjU,EAAMoY,EAAOS,EAClD,CAaA,YAAA+iG,CACE3nG,GAIA,IAHAjU,EAAAuO,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAiB,GACjB6J,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAYg/B,EAAUqsE,QACtB/gG,EAAAtK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GACA0K,EAAA1K,UAAAjB,OAAA,EAAAiB,UAAA,QAAAtD,EAEA,MAAM2Q,QAAgB,KAACsnG,kBAAkBjvG,GACzC,IAAK,MAAMjU,KAASiU,EAAGw/D,OAAO9uB,SAAU,CACtC,IAAK3kD,EAAMqzE,WAAY,CACrB,IAAKrzE,EAAMu0E,kBACT,MAAM,IAAI3pE,MAAM,oCAElB5K,EAAMqzE,WAAarzE,EAAMu0E,kBAAkBhnE,GAAG,MAChD,CACA,IAAI0G,EACJ,GAAIjU,EAAMu0E,mBAAqBn8D,GAAam1B,EAAUssE,KAOpD5lG,SAN4B,KAAC2nG,OAC3B57G,EAAMu0E,kBACN,OACAn8D,GAAA,IAGgBqjG,KAAKz7G,EAAMszE,wBAG7B,GADAr/D,QAAchO,KAAKN,QAAQrE,IAAI,IAAI8+C,EAASpgD,EAAMqzE,WAAYrzE,EAAMszE,qBAC9Dr/D,GAAgC,GAAvBA,EAAMhH,OAAOK,OAC1B,GAAIuL,EAAgB,CAClB,MAAMT,QAAqB,KAACmjG,OAAOI,KAAMc,OAAOz8G,EAAMqzE,YAAA,GACtD,IAAKj7D,EACH,MAAM,IAAIxN,MAAM,6BAA6B5K,EAAMqzE,cAGrDp/D,SAAA,KAD4B2nG,OAAOxjG,EAAU,WAAYm1B,EAAUosE,YAAA,EAAmB,CAAC35G,EAAMszE,qBAC5EmoC,KAAKz7G,EAAMszE,kBAC9B,MACEr/D,EAAQ,IAAIwN,EACV,IAAI2+B,EAASpgD,EAAMqzE,WAAarzE,EAAMszE,mBACtC,GACA,GACA1xD,EAAU+3F,YAKlB1lG,EAAMmD,MAAQwE,EAAI5E,KAClB4E,EAAIijG,OAAOt9G,KAAK0S,EAClB,CAEA,MAAM+xC,QAAA,KAAkBrgD,QAAQ42G,QAC9BtoG,EAAG8/D,QAAQroE,KAAI,CAACuI,EAAGjU,IAAM,IAAIogD,EAASxkC,EAAI5E,KAAMhX,MAElD,IAAK,MAAOA,EAAM6Y,KAAW5E,EAAG8/D,QAAQtoE,UAAW,CACjD,IAAIwI,EAAM+xC,EAAKhmD,GACViU,IACHA,EAAM,IAAIwN,EACR,IAAI2+B,EAASxkC,EAAI5E,KAAMhX,GACvB,GACA,GACAoY,GAAam1B,EAAUosE,YAAe1gG,IAAYA,EAAQ9X,SAASnB,GACjE4hB,EAAU+3F,WACV/3F,EAAUu5F,YAGhBlnG,EAAIhL,SAAWkF,OAAO0K,EAAO5P,UAC7BgL,EAAIhH,OAAS4L,EAAOm7D,cAAcC,WAClCr4D,EAAI6/F,KAAKl6G,KAAK0S,GACd,IAAK,MAAM4E,KAAK5S,KAAK81G,SACnB,IACE,MAAM9iG,EAAOJ,EAAE5M,aAAgB4M,EAAE5M,MAAM2P,EAAK5b,EAAMoY,GAC9Ca,IACFhF,EAAI9T,KAAK0Y,EAAEshG,KAAOlhG,EAEtB,CAAE,MAAOhF,GACPzS,QAAQpB,MAAM,4BAA6ByY,EAAEshG,IAAKlmG,EACpD,CAEJ,CAEA,IAAK,MAAMA,KAAKhO,KAAK81G,SACnB9nG,EAAEmmG,eAAiBnmG,EAAEmmG,QAAQx+F,GAG/B,GAAIxD,GAAam1B,EAAUmsE,QAAS,OAAO99F,QACjC,KAACjW,QAAQ63G,QAAQ5hG,EAAIijG,QAC/BjjG,EAAI6/F,KAAK75G,SAASqS,IAChBA,EAAIuD,MAAQoE,EAAIpE,KAAA,UAGZvR,KAAKN,QAAQ63G,QAAQ5hG,EAAI6/F,MAC5BjwG,OAAOxB,KAAK4R,EAAIkjG,SAASxxG,QAC1BrH,KAAKN,QAAQg9G,SAAS,CACpB3rG,KAAM4E,EAAI5E,KACVS,OAAQmE,EAAIpE,MAAMC,OAClBC,IAAKR,OAAO0E,EAAIpE,MAAME,KACtBonG,QAASljG,EAAIkjG,QACb7vG,OAAAjP,IAIJ,MAAMi/C,EAAUzzC,OAAOC,QAAQmQ,EAAI2gC,OAWnC,OAVI0C,EAAQ3xC,cACJrH,KAAKs2C,MAAM0C,EAAQvzC,KAAIzE,IAAA,IAAEgN,EAAMjU,GAAAiH,EAAA,MAAY,CAC/C+P,KAAM/C,EACNwD,OAAQzX,EAAMyX,OACdC,IAAKR,OAAOlX,EAAM0X,KAClBzI,OAAQ,WACRgtG,UAAW1uE,EAAUosE,WAAA,KAIlB/9F,CACT,CAEA,sBAAAunG,GAAsB,IAAAlvG,EACpB,MAAMjU,QAAoBiG,KAAKN,QAAQu8G,iBAC5B,OAAXjuG,EAAAhO,KAAKuzG,SAALvlG,EAAarT,KAAK,aAAc,CAAE0M,OAAQtN,GAC5C,CAEA,WAAAu8C,CAAYtoC,GACVA,EAAQrS,SAASqS,GAAOA,EAAEtF,OAASsF,EAAEtF,QAAUkT,EAAa04F,eAAA,KACjD50G,QAAQ28G,WAAWruG,EAChC,CAEA,kBAAAioG,GACMj2G,KAAKg7G,oBAEHh7G,KAAKk9G,mBACXl9G,KAAKg7G,YAAchiH,QAAQgP,IAAI,CAC7BhI,KAAKm9G,mBACLn9G,KAAKo9G,iBACLp9G,KAAKq9G,kBACLr9G,KAAKs9G,qBACJ3iE,MAAK,SACV,CAEA,sBAAAwiE,GACE,IACE,MAAMnvG,QAAA,KAAqBtO,QAAQy8G,WAAWvgG,EAAa04F,OAAQ,IACnE,GAAItmG,EAAQ3G,OAAQ,CAClB,MAAMtN,EAAiB,GACjBoY,EAAoB,GAC1B,IAAK,MAAMS,KAAU5E,EACnB,UACY,KAACsnG,OAAOI,KAAMc,OAAO5jG,EAAO7B,MAAA,GAClC6B,EAAO2qG,aACTxjH,EAAKuB,KAAKsX,EAAO7B,OAEjB6B,EAAOlK,OAASkT,EAAa24F,WAC7BpiG,EAAQ7W,KAAKsX,GAEjB,CAAE,MAAO5E,GACPzS,QAAQpB,MAAM,wBAAyByY,EAAO7B,KAAM/C,EACtD,CAEEjU,EAAKsN,cAAA,KACI3H,QAAQ68G,WAAWxiH,GAE5BoY,EAAQ9K,cACA,KAAC3H,QAAQ28G,WAAWlqG,SAEtB,KAAC+qG,kBACb,gBACYlkH,SAASgV,GAAMmoC,WAAWnoC,EAAG,MAE3C,CAAE,MAAOA,GACPzS,QAAQpB,MAAM,uBAAwB6T,SAC5B,IAAAhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,OACzC,CACA,IAAIhO,KAAKi7G,SAGT,OAAW,KAACkC,kBACd,CAEA,oBAAAC,GACE,IACE,MAAMznG,QAAA,KAAqBjW,QAAQy8G,WACjCvgG,EAAa24F,WACb,IAEF,GAAI5+F,EAAQtO,OAAQ,CAClB9L,QAAQgL,IAAI,YAAaoP,EAAQtO,OAAQ,OAAO,IAAA2G,EAAAjU,GAAA,EAAAoY,GAAA,MAChD,QAAkCS,EAAlCI,EAAA8I,GAA2BnG,GAAO5b,IAAA6Y,QAAAI,EAAAunC,QAAAC,KAAAzgD,GAAA,EAAE,OAAnBiU,EAAM4E,EAAAiD,MACrB,IACE,MAAM9b,QAAWiG,KAAKs1G,OAAOI,KAAMc,OAAOxoG,EAAO+C,MACjD,IAAKhX,EAAI,CACPwB,QAAQpB,MAAM,mBAAoB6T,EAAO+C,MACzC,QACF,OACU,KAAC4kG,OAAO57G,EAAIiU,EAAOhF,OAAQgF,EAAOgoG,WAAA,EAAiBhoG,EAAO8/D,SACpE9/D,EAAOtF,OAASkT,EAAa44F,eACnB,KAAC90G,QAAQ08G,UAAUpuG,SACnB,KAACkvG,kBACb,CAAE,MAAOnjH,GACPwB,QAAQpB,MAAM,sBAAuB6T,EAAO+C,KAAMhX,EACpD,CACF,CAAC,OAAAA,GAAAoY,GAAA,EAAAnE,EAAAjU,CAAA,aAAAA,GAAA,MAAAiZ,EAAAoyF,cAAApyF,EAAAoyF,QAAA,YAAAjzF,EAAA,MAAAnE,CAAA,EACH,YACQ,IAAIhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MAE3C,CAAE,MAAOA,GACPzS,QAAQpB,MAAM,uBAAwB6T,SAC5B,IAAAhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MACzC,CACA,IAAIhO,KAAKi7G,SAGT,OAAOj7G,KAAKo9G,gBACd,CAEA,qBAAAC,GACE,IACE,MAAM1nG,QAAoB,KAACjW,QAAQy8G,WACjCvgG,EAAa44F,SACb,GACA,EACAp7G,KAAKC,MAAQ,MAEf,GAAIsc,EAAQtO,OAAQ,KAAA2G,EAAAjU,GAAA,EAAAoY,GAAA,MAClB,QAAkCS,EAAlCI,EAAA8I,GAA2BnG,GAAO5b,IAAA6Y,QAAAI,EAAAunC,QAAAC,KAAAzgD,GAAA,EAAE,OAAnBiU,EAAM4E,EAAAiD,MACrB,OAAM9b,QAAWiG,KAAKs1G,OAAOI,KAAMc,OAAOxoG,EAAO+C,MAAA,GACjD,IAAKhX,EAAI,CACPwB,QAAQpB,MAAM,mBAAoB6T,EAAO+C,MACzC,QACF,CACA,GAAKhX,EAAGqrF,WAED,CACL,MAAMjzE,QAAgB,KAACwjG,OAAO57G,EAAIiU,EAAOhF,OAAQgF,EAAOgoG,WAAA,EAAiBhoG,EAAO8/D,SAChF9/D,EAAOtF,OAASkT,EAAaw3F,UAC7BplG,EAAOwD,OAASW,EAAIZ,MAAMC,OAC1BxD,EAAOyD,IAAMR,OAAOkB,EAAIZ,MAAME,IAChC,MANEzD,EAAOwD,OAASpY,KAAKC,YAOb,KAACqG,QAAQ08G,UAAUpuG,EAAQ,CACvC,CAAC,OAAAjU,GAAAoY,GAAA,EAAAnE,EAAAjU,CAAA,aAAAA,GAAA,MAAAiZ,EAAAoyF,cAAApyF,EAAAoyF,QAAA,YAAAjzF,EAAA,MAAAnE,CACH,cACY,IAAAhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MAE3C,CAAE,MAAOA,GACPzS,QAAQpB,MAAM,uBAAwB6T,SAC5B,IAAAhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MACzC,CACA,IAAIhO,KAAKi7G,SAGT,OAAOj7G,KAAKq9G,iBACd,CAEA,sBAAAC,GACE,IACE,MAAM3nG,QAAqB,KAAC2/F,OAAOG,OAAQ/1G,QAAQm3G,YACnD,IAAKlhG,EAGH,aAFU,IAAA3c,SAASgV,GAAMmoC,WAAWnoC,EAAG,YACvChO,KAAKs9G,mBAGP,MAAMv9D,QAAgB//C,KAAKN,QAAQy8G,WACjCvgG,EAAaw3F,UACb,GACA,GACA,MAAAz9F,OAAA,EAAAA,EAAUnE,QAAS,GAErB,GAAIuuC,EAAQ14C,OAAQ,KAAA2G,EAAAjU,GAAA,EAAAoY,GAAA,MAClB,QAAkCS,EAAlCI,EAAA8I,GAA2BikC,GAAOhmD,IAAA6Y,QAAAI,EAAAunC,QAAAC,KAAAzgD,GAAA,EAAE,OAAnBiU,EAAM4E,EAAAiD,MAAA,CACrB,MAAM9b,QAAe,KAACu7G,OAAOI,KAAMc,OAAOxoG,EAAO+C,MAAA,GACjD,IAAKhX,IAAOA,EAAGqrF,WAAY,CAEzB7pF,QAAQpB,MAAM,mBAAoB6T,EAAO+C,MACzC,QACF,CACA,IAAKhX,EAAGqrF,WAAW1gB,OAAO12D,EAAO+C,KAAM/Q,KAAKs1G,OAAOG,QACjD,SAEFznG,EAAOtF,OAASkT,EAAa64F,gBAAA,KAClB/0G,QAAQ08G,UAAUpuG,EAAQ,CACvC,CAAC,OAAAjU,GAAAoY,GAAA,EAAAnE,EAAAjU,CAAA,aAAAA,GAAA,MAAAiZ,EAAAoyF,cAAApyF,EAAAoyF,QAAA,YAAAjzF,EAAA,MAAAnE,CAAA,EACH,YACQ,IAAIhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MAE3C,CAAE,MAAOA,GACPzS,QAAQpB,MAAM,uBAAwB6T,SAC5B,IAAAhV,SAASgV,GAAMmoC,WAAWnoC,EAAG,MACzC,CACA,IAAIhO,KAAKi7G,SAGT,OAAW,KAACqC,kBACd,CAEA,gBAAApH,GAAgB,IAAAloG,EACd,IAAKhO,KAAKgM,SAAS/G,QAAS,OAC5B,IAAIlL,QAAwB,KAAC2F,QAAQm2G,SAAS,YAC9C,IAAK97G,EAEH,YADAwB,QAAQgL,IAAI,qCAAsCvG,KAAKgM,SAAS/G,QAAQ6yG,WAG1E,IAAI3lG,EAAWlB,OAAOlX,GAAe,GACrCwB,QAAQgL,IAAI,oBAAqB4L,EAAU,MAAOnS,KAAKgM,SAAS/G,QAAQ6yG,WACxE,MAAMllG,QAAqC,OAA3B5E,EAAMhO,KAAKgM,SAAS/G,cAAA,EAAd+I,EAAuBkoG,WAAW/jG,KAAa,GAC/Da,QAAgBhT,KAAKN,QAAQ+8G,UACjC7pG,EAAQnN,KAAKuI,GAAQA,EAAI+C,QAErB4E,EAAoB,GAC1B,IAAK,MAAO3H,EAAGjU,KAAU6Y,EAAQpN,UAC1BwN,EAAQhF,KACX2H,EAAKra,KAAKvB,GACNA,EAAM0+G,QACRtmG,EAAW7Y,KAAKo0B,IAAIvb,EAAUpY,EAAM0+G,SAazB,IAAA14D,EATjBxkD,QAAQgL,IAAI,qBAAsBoP,SAC5B3V,KAAKs2C,MAAM3gC,EAAKlQ,KAAKuI,IAAA,CACzB+C,KAAM/C,EAAE+C,KACRS,OAAQP,OAAOjD,EAAEwD,QACjBC,IAAKR,OAAOjD,EAAEyD,KAAO,GACrBq8D,QAAS9/D,EAAE+nG,KACX/sG,OAAQ,OACRgtG,UAAW1uE,EAAUqsE,aAEnBh+F,EAAKtO,SACI,OAAX04C,EAAI,KAACwzD,SAALxzD,EAAaplD,KAAK,SAAUgb,EAAKtO,eAE7BrH,KAAKN,QAAQk6C,SAAS,WAAYznC,EAASvE,WACnD,CAEA,uBAAAqvG,CAAwBjvG,GACtB,MAAMjU,EAAoB,CACxBiqF,GAAAh2E,EACA+C,KAAM/C,EAAG1G,GAAG,OACZiK,MAAO,IAAIuY,EACX0rF,KAAM,GACNoD,OAAQ,GACRtiE,MAAO,CAAC,EACRuiE,QAAS,CAAC,GAQZ,OANI7qG,EAAGo3E,kBACKp3E,EAAGo3E,WAAW1gB,OAAO3qE,EAAIgX,KAAM/Q,KAAKs1G,OAAOG,UACnD17G,EAAIwX,MAAMC,OAASxD,EAAGo3E,WAAWvF,YACjC9lF,EAAIwX,MAAME,IAAMvJ,OAAO8F,EAAGo3E,WAAWtF,KAAK,GAAGkB,MAAMhzE,GAAMA,EAAE6D,MAAQ9X,EAAIgX,OAAOiL,QAAU,IAGrFjiB,CACT,CAEA,kBAAAo8G,GACE,MAAMnoG,QAAqB,KAAChC,SAASypG,OAAOuB,cAC5C,GAAKhpG,EACL,IAAK,MAAMjU,KAAe,KAACu7G,OAAOE,KAAMM,eAChC/7G,EAAQd,QAAQ+G,KAAKs1G,OAAOE,KAAOxnG,EAE7C,ECtZI,MAAOwvG,WAAqBvlF,EAChCx4B,WAAAA,CACSuO,EACAjU,EACAoY,GAGP0C,MAAM7G,EAAUjU,EAAQoY,EAFxB7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,IAE2C,KALpC0D,cAAA,EACA,KAAAspG,YAAA,EACA,KAAA/B,YAAA,EAFA,KAAQvnG,SAARgC,EACA,KAAMsnG,OAANv7G,EACA,KAAMw5G,OAANphG,CAIT,CAEA,iBAAAmoB,CACEtsB,EACAjU,GAGmB,IAFnBoY,EAAA7J,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAS,IAAIo4E,IACb9tE,EAAAtK,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GACA0K,EAAA1K,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,GAAAA,UAAA,GAAmB,UAEnB,MAAMqN,EAAgB,IAAI2kC,EAAetnC,EAAShF,GAC5C+xC,EAAU,IAAI3oB,EACd4hB,EAAqB,CACzB/zC,QAAS0Q,EACT8/F,OAAQ9/F,EACR+/F,KAAM//F,EACNnY,UAAWmY,IAENpB,EAAc+F,EAAYxU,SAAoB9M,QAAQgP,IAAI,CAC/DuyG,GAAgBjgF,KAAKtnB,GACrBsoG,GAAchhF,KAAKtnB,GACnB4oG,GAActhF,KAAKtsB,EAAWgF,KAG1BM,EAAiB,CAAE,EAYzB,OAXAA,EAAOmiG,OAAS,IAAIoH,GAAWtoG,EAAcykC,EAAU+G,GACvDzsC,EAAOoiG,KAAO,IAAIqF,GAASzgG,EAAY0+B,EAAU1lC,EAAQysC,GACzDzsC,EAAOkiG,KAAO,IAAIwH,GAChBl3G,EACAkzC,EACA1lC,EACAvZ,EACAoY,EACA4tC,GAGS,IAAA9nB,EAAS+gB,EAAU1lC,EAAQysC,EAASntC,EACjD,yuyRCvDE6qG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB34G,IAAjB44G,EACH,OAAOA,EAAa3pG,QAGrB,IAAI+gB,EAASyoF,EAAyBE,GAAY,CAGjD1pG,QAAS,CAAC,GAOX,OAHA4pG,EAAoBF,GAAUp9F,KAAKyU,EAAO/gB,QAAS+gB,EAAQA,EAAO/gB,QAASypG,GAGpE1oF,EAAO/gB,OACf,CCrBAypG,EAAoB9qG,EAAKoiB,IACxB,IAAI8oF,EAAS9oF,GAAUA,EAAOmrB,WAC7B,IAAOnrB,EAAiB,QACxB,IAAM,EAEP,OADA0oF,EAAoB53G,EAAEg4G,EAAQ,CAAE9qG,EAAG8qG,IAC5BA,CAAM,ECLdJ,EAAoB53G,EAAI,CAACmO,EAAS8pG,KACjC,IAAI,IAAI15G,KAAO05G,EACXL,EAAoB39D,EAAEg+D,EAAY15G,KAASq5G,EAAoB39D,EAAE9rC,EAAS5P,IAC5EkB,OAAOoe,eAAe1P,EAAS5P,EAAK,CAAEuoB,YAAY,EAAMvxB,IAAK0iH,EAAW15G,IAE1E,ECNDq5G,EAAoB5xE,EAAI,WACvB,GAA0B,kBAAfzyB,WAAyB,OAAOA,WAC3C,IACC,OAAOrZ,MAAQ,IAAIg+G,SAAS,cAAb,EAChB,CAAE,MAAOjkH,GACR,GAAsB,kBAAXiF,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB0+G,EAAoB39D,EAAI,CAAClgD,EAAK+uF,IAAUrpF,OAAOkiB,UAAU6W,eAAe/d,KAAK1gB,EAAK+uF,GCClF8uB,EAAoB1kE,EAAK/kC,IACH,qBAAXmT,QAA0BA,OAAOsmE,aAC1CnoF,OAAOoe,eAAe1P,EAASmT,OAAOsmE,YAAa,CAAE73E,MAAO,WAE7DtQ,OAAOoe,eAAe1P,EAAS,aAAc,CAAE4B,OAAO,GAAO,yGCAvD,MAAMooG,EAAgBllH,eAAO0N,GAA6C,IAAvBy3G,EAAS51G,UAAAjB,OAAA,QAAArC,IAAAsD,UAAA,IAAAA,UAAA,GAC/D,MAAM,gBAAE9E,EAAe,QAAEyB,GAAYwB,EAAqB1B,0BACpDxD,EAAUkF,EAAqBjK,aACrC,IAAI,WAAEoG,EAAU,gBAAEV,EAAe,WAAEW,IAAsB,OAAPoC,QAAO,IAAPA,OAAO,EAAPA,EAAShD,YAAa,CAAC,EACpEW,IACDA,EAAa,IACZV,IACDA,EAAkB,IACjBW,IACDA,EAAa,IACjB,MAAMmxG,EAAS,IAAItzB,IAAI,CAAC99E,EAAYV,EAAiBW,IAC/CizG,EAAW,CAAC,IAAIqI,EAAAA,GAAYnK,EAAQoK,EAAAA,GAAUrK,eAAgBxyG,IAC9D88G,EAAc,IAAIC,EAAAA,GAAYtK,EAAQoK,EAAAA,GAAUrK,eAAgBxyG,GAChEg9G,EAAgB,CAClB,IAAIC,EAAAA,GAAaxK,EAAQoK,EAAAA,GAAUvK,MAAOtyG,GAC1C,IAAIk9G,EAAAA,GAAazK,EAAQoK,EAAAA,GAAUvK,MAAOtyG,IAExCm9G,EAAc,CAChB,IAAIC,EAAAA,GAAc3K,EAAQoK,EAAAA,GAAUrK,eAAgBxyG,GACpD,IAAIq9G,EAAAA,GAAe5K,EAAQoK,EAAAA,GAAUrK,eAAgBxyG,GACrD,IAAIs9G,EAAAA,GAAmB7K,EAAQoK,EAAAA,GAAUrK,eAAgBxyG,GACzD,IAAIu9G,EAAAA,GAAW9K,EAAQoK,EAAAA,GAAUtK,OAAQvyG,GACzC,IAAIw9G,EAAAA,GAAa/K,EAAQoK,EAAAA,GAAUtK,OAAQvyG,GAC3C,IAAIy9G,EAAAA,GAAchL,EAAQoK,EAAAA,GAAUrK,eAAgBxyG,IAEpD4H,EAAAA,EAAM5G,SAASyJ,SAASG,OACxB2pG,EAASx6G,KAAK+iH,GACdl1G,EAAAA,EAAM5G,SAASyJ,SAAS/H,UACxB6xG,EAASx6G,QAAQojH,GACjBv1G,EAAAA,EAAM5G,SAASyJ,SAASE,OACxB4pG,EAASx6G,QAAQijH,GACrB,MAAMU,QAAkBC,EAAAA,GAAa5kF,KAAK92B,GAAmB,GAAIsyG,EAAU9B,EAAQkK,KAAej5G,EAAS1D,GAAW+B,EAAAA,QAAQC,QAAUD,EAAAA,QAAQC,QAAUD,EAAAA,QAAQ67G,SAClK,IAAKF,EACD,MAAMt6G,MAAM,wBAEhB,aADMy6G,EAAuBH,EAAWz7G,GAAmB,GAAI06G,GACxDe,CACX,EACMG,EAAyBrmH,MAAOkmH,EAAWz7G,EAAiB06G,KAyB9D,GAxBAe,EAAU1L,OAAO94G,GAAG,cAAeP,IAC/B,MAAMmS,EAAU,CAAE/M,OAAQ3G,EAAAA,EAAe0mH,oBAAqBnlH,QAC9D,KACI2L,EAAAA,EAAAA,IAAYwG,EAEhB,CACA,MAAOtS,GAAK,KAEhBklH,EAAU1L,OAAO94G,GAAG,aAAcP,IAC9B,MAAMmS,EAAU,CAAE/M,OAAQ3G,EAAAA,EAAe2mH,qBAAsBplH,QAC/D,KACI2L,EAAAA,EAAAA,IAAYwG,EAEhB,CACA,MAAOtS,GAAK,KAEhBklH,EAAU1L,OAAO94G,GAAG,cAAeP,IAC/B,MAAMmS,EAAU,CAAE/M,OAAQ3G,EAAAA,EAAe4mH,0BAA2BrlH,QACpE,KACI2L,EAAAA,EAAAA,IAAYwG,EAEhB,CACA,MAAOtS,GAAK,KAEZmkH,EAAW,CACX,MAAMsB,QAAYP,EAAUjI,cAC5BiI,EAAU1L,OAAO94G,GAAG,qBAAsBglH,IACtC,IACI,MAAMpzG,EAAU,CACZ/M,OAAQ3G,EAAAA,EAAe+mH,oBACvBxlH,KAAM,CAAEylH,eAAkB,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKhuG,SAAU,EAAGiuG,eAE7Cj8G,IAAmBqC,EAAAA,EAAAA,IAAYwG,EAEnC,CACA,MAAOlS,GAAS,IAExB,gCCtEJ,IAAIsM,EAAuB,IAAIjH,EAAAA,EAC/B,MAAMogH,OAAuC56G,KAAf,QAAJ66G,EAAAhmH,YAAI,IAAAgmH,OAAA,EAAJA,EAAM1pB,UAC1B2pB,EAAqB,IAAIt5G,EAAAA,EAAmBC,GAC3C,IAAIs5G,EAAmBt5G,EACzBxG,mBACA06C,MAAK,IAAMsjE,EAAcx3G,EAAsBm5G,KACpDrkH,QAAQgL,IAAI,2CAEZ,IAWI7E,EAXAs+G,EAAoC,KACpCC,EAAoC,KACpCC,EAAsC,KACtCC,EAA4C,KAC5CC,EAA4C,KAC5CC,EAAwC,KACxCC,EAAsC,KACtCC,EAA0C,KAC1CC,EAA+C,KAC/CC,EAAoC,KACpCC,EAAoC,KAExC,MAAMC,EAAmB,IAEzB,GAAIf,EAAmB,CACnB,MAAMgB,EAAqB7nH,iBACCgnH,GACdxM,OAAO94G,GAAG,UAAWP,KAC3BwS,EAAAA,EAAAA,IAA4BxS,EAAK,GACnC,EAEN0mH,IACA,MAAMC,EAAmB9nH,UACrB,IACI,MAAMkmH,QAAkBc,EACxB,IAAKd,EACD,MAAMt6G,MAAM,8BACV8B,EAAqBnC,OAAO,CAAET,kBAAkB,UAChDo7G,EAAU7K,OAChB74G,QAAQgL,IAAI,iBAChB,CACA,MAAOpM,GACHoB,QAAQpB,MAAM,qBAAsBA,EACxC,GAEE2mH,EAAwB/nH,UAC1B,MAAMgoH,QAAY3P,UAAU4P,YAC5B,IAAK,MAAMvP,KAAMsP,EAAK,CAAC,IAADE,EACP,QAAXA,EAAIxP,EAAGtvG,YAAI,IAAA8+G,GAAPA,EAASlvG,WAAW,UAEpB0/F,EAAGtvG,OACHivG,UAAU8P,eAAezP,EAAGtvG,MAC5B5G,QAAQgL,IAAI,qBAAqBkrG,EAAGtvG,QAE5C,CACA5G,QAAQgL,IAAI,mCAAmC,EAE7C46G,EAAUpoH,sBACCgnH,GAAkBrpG,gBACzBoqG,GAAuB,EAE3Bl7G,EAAgB7M,sBACLgnH,GAAkBrpG,UAC/BjQ,EAAuB,IAAIjH,EAAAA,QACrBiH,EAAqBxG,mBAC3B8/G,EAAmB9B,EAAcx3G,EAAsBm5G,GACvDgB,GAAoB,EAElBQ,EAAcA,KAChBzhH,OAAO8M,QAAQI,OAAO,CAClBnF,IAAK/H,OAAOG,QAAQuhH,OAAO,cAC3BvoH,KAAM,QACNqlD,MAAO,IACP3sC,OAAQ,MACRxS,IACA0C,EAAsB,OAAN1C,QAAM,IAANA,OAAM,EAANA,EAAQsI,GACpB5F,GACA/B,OAAOD,QAAQE,MAAMxE,IAAI,CACrBsG,iBAER,GACF,EAEA4/G,EAAevoH,UACjB,MAAM,SAAEiJ,EAAQ,gBAAEwB,SAA2BiD,EAAqBxG,mBAClE,IAAK+B,IAAawB,EACd,OAAO,EACX,MAAM3B,EAAYG,EAASwB,GAAiBjB,SAASV,UACrD,QAAKA,GAEEA,EAAU4D,KAAKkQ,GAAMA,EAAEspF,SAAQ/jG,SAASqmH,EAAiB,EAE9DC,EAAmBzoH,UACrB,GAAIsT,EAAQ/M,SAAW3G,EAAAA,EAAe0mH,qBAClChzG,EAAQ/M,SAAW3G,EAAAA,EAAe2mH,sBAClCjzG,EAAQ/M,SAAW3G,EAAAA,EAAe4mH,0BAClC,OAAO,EAEX,MAAM,OAAE3lH,GAAWyS,EACnB,aAAai1G,EAAa1nH,EAAOqlG,OAAO,EAG5Ct/F,OAAOG,QAAQ2hH,UAAUnqE,aAAY,CAACjrC,EAASq1G,EAAQC,KAC/C,CAAChpH,EAAAA,EAAe4B,WAAY5B,EAAAA,EAAe6B,gBAAgBU,SAASmR,EAAQ/M,SAC5EsiH,EAAsBv1G,GAmB1B,IAjBuB,CACnB1T,EAAAA,EAAewD,aACfxD,EAAAA,EAAekpH,sBACflpH,EAAAA,EAAempH,kBACfnpH,EAAAA,EAAeopH,oBACfppH,EAAAA,EAAeqpH,0BACfrpH,EAAAA,EAAespH,0BACftpH,EAAAA,EAAeupH,sBACfvpH,EAAAA,EAAewpH,mBACfxpH,EAAAA,EAAeypH,wBACfzpH,EAAAA,EAAe0pH,8BACf1pH,EAAAA,EAAe2pH,iBACf3pH,EAAAA,EAAe4pH,iBACf5pH,EAAAA,EAAe6pH,WACf7pH,EAAAA,EAAe6B,eACf7B,EAAAA,EAAe4B,YAEAW,SAASmR,EAAQ/M,QAkGpC,OA7DAkiH,EAAiBn1G,GAASsuC,MAAM8nE,IAC5B,GAAIp2G,EAAQ/M,SAAW3G,EAAAA,EAAeoD,QAClC,OAAO2mH,EAAsBr2G,EAASs1G,EAAcc,GAExD,GAAKA,EAQL,OAAQp2G,EAAQ/M,QACZ,KAAK3G,EAAAA,EAAesD,WAChB,OAAO0mH,EAAyBt2G,EAASs1G,GAC7C,KAAKhpH,EAAAA,EAAe0D,aAChB,OAAOumH,EAAyBjB,GACpC,KAAKhpH,EAAAA,EAAegE,YAChB,OAAOkmH,EAAyBlB,GACpC,KAAKhpH,EAAAA,EAAe4D,cAChB,OAAOumH,EAA2BnB,GACtC,KAAKhpH,EAAAA,EAAe8D,YAChB,OAAOsmH,EAAyBpB,GACpC,KAAKhpH,EAAAA,EAAekE,aAChB,OAAOmmH,EAA0B32G,EAASs1G,GAC9C,KAAKhpH,EAAAA,EAAeoE,WAChB,OAAOkmH,EAAwBtB,GACnC,KAAKhpH,EAAAA,EAAesE,SACpB,KAAKtE,EAAAA,EAAegG,SAChB,OAAOukH,EAAsB72G,EAASs1G,GAC1C,KAAKhpH,EAAAA,EAAewE,WAChB,OAAOgmH,EAAwB92G,EAASs1G,GAC5C,KAAKhpH,EAAAA,EAAe0E,iBAChB,OAAO+lH,EAA8B/2G,EAASs1G,GAClD,KAAKhpH,EAAAA,EAAewF,iBACpB,KAAKxF,EAAAA,EAAe0F,eAChB,OAAOglH,EAA8Bh3G,EAASs1G,GAClD,KAAKhpH,EAAAA,EAAe4E,aAChB,OAAO+lH,EAA0Bj3G,EAASs1G,GAC9C,KAAKhpH,EAAAA,EAAe8E,UAChB,OAAO8lH,EAAwBl3G,EAASs1G,GAC5C,KAAKhpH,EAAAA,EAAegF,eAChB,OAAO6lH,EAA4Bn3G,EAASs1G,GAChD,KAAKhpH,EAAAA,EAAekF,mBAChB,OAAO4lH,EAA+B9B,GAC1C,KAAKhpH,EAAAA,EAAeoF,kBAChB,OAAO2lH,EAAuB/B,GAClC,KAAKhpH,EAAAA,EAAesF,kBAChB,OAAO0lH,EAAuBhC,GAClC,KAAKhpH,EAAAA,EAAe4F,qBAChB,OAAOqlH,GAAiCv3G,EAASs1G,GACrD,KAAKhpH,EAAAA,EAAe8F,gBAChB,OAAOolH,GAAqBx3G,EAASs1G,GACzC,KAAKhpH,EAAAA,EAAekG,QAChB,OAAOilH,GAAsBz3G,EAASs1G,GAC1C,KAAKhpH,EAAAA,EAAeoG,QAChB,OAAOglH,GAAsB13G,EAASs1G,QAnD1CA,EAAa,CACT7oH,KAAMuT,EAAQ/M,OACdrF,SAAS,EACTE,MAAO,iBAmDf,KAEG,EAjGH,OAAQkS,EAAQ/M,QACZ,KAAK3G,EAAAA,EAAewD,aAChB,OAAO6nH,EAA0B33G,EAAQzS,OAAQ+nH,GACrD,KAAKhpH,EAAAA,EAAekpH,sBAChB,OAAOoC,GAAuB53G,GAClC,KAAK1T,EAAAA,EAAempH,kBAChB,OAAOoC,GAAuB73G,GAClC,KAAK1T,EAAAA,EAAeopH,oBAChB,OAAOoC,GAAyB93G,GACpC,KAAK1T,EAAAA,EAAeqpH,0BAChB,OAAOoC,GAA+B/3G,GAC1C,KAAK1T,EAAAA,EAAespH,0BAChB,OAAOoC,GAA+Bh4G,GAC1C,KAAK1T,EAAAA,EAAeupH,sBAChB,OAAOoC,GAA2Bj4G,GACtC,KAAK1T,EAAAA,EAAewpH,mBAChB,OAAOoC,GAAyBl4G,GACpC,KAAK1T,EAAAA,EAAeypH,wBAChB,OAAOoC,GAA6Bn4G,GACxC,KAAK1T,EAAAA,EAAe0pH,8BAChB,OAAOoC,GAAkCp4G,GAC7C,KAAK1T,EAAAA,EAAe2pH,iBAChB,OAAOoC,GAAuBr4G,GAClC,KAAK1T,EAAAA,EAAe4pH,iBAChB,OAAOoC,GAAuBt4G,GAClC,KAAK1T,EAAAA,EAAe6pH,WAChB,OAAO3B,IACX,KAAKloH,EAAAA,EAAe6B,eAChB,OAAOoL,IACX,KAAKjN,EAAAA,EAAe4B,WAChB,OAAO4mH,IAmER,IAGf,MAAMS,EAAyBv1G,IAC3B,MAAM,OAAE/M,EAAM,OAAE1F,GAAWyS,EAQ3B,OAPA1M,OAAOilH,KAAKC,MAAM,CAAC,GAAG,SAAUD,GAC5BA,EAAKjpH,SAAQ,SAAUmpH,GACfA,EAAIx9G,IACJ3H,OAAOilH,KAAK/+G,YAAYi/G,EAAIx9G,GAAI,CAAExO,KAAMF,EAAAA,EAAmBuG,iBAAkBG,SAAQ1F,UAE7F,GACJ,KACO,CAAI,EAGT8oH,EAAwBA,CAACr2G,EAASs1G,EAAcc,KAClDzC,EAAoC2B,EACpCl7G,EACKnC,OAAO,CACRygH,eAAgB,IAAK14G,EAAQzS,OAAQ6oH,kBAEpC9nE,MAAK,KACNymE,GAAa,KAEV,GAELuB,EAA2BA,CAACt2G,EAASs1G,KACvC,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KACzC,MAAM,QAAE11C,GAAYwB,EAAqB1B,0BACzC,IAAKE,EACD,MAAMN,MAAM,qBAChB,MAAM,UAAE9C,GAAcoD,EAAQ1C,SAC9B,IAAKV,EACD,MAAM8C,MAAM,yBAChB,MAAM,OAAE/K,GAAWyS,EACb24G,EAAmBnjH,EAAUpG,QAAQka,GAAMA,EAAEspF,SAAWrlG,EAAOqlG,SAE/D36F,EAAS,CACX,CAACW,EAAQhD,UAAUC,iBAAkB,IAC9B+C,EACH1C,SAAU,IACH0C,EAAQ1C,SACXV,UAAWmjH,KAIvBv+G,EAAqBrC,aAVT,WAU2BE,GAAQq2C,MAAK,KAChDgnE,EAAa,CACT7oH,KAAMH,EAAAA,EAAesD,WACrBhC,SAAS,EACTC,MAAM,GACR,GACJ,GAEV,CACA,MAAOC,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAesD,WACrBhC,SAAS,EACTC,MAAM,GAEd,GAEE8pH,EAA4BA,CAACpqH,EAAQ+nH,KACvC,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KAAO,IAADsqE,EAC/C,MAAM9kH,EAASsG,EAAqB1B,0BACpC,GAAW,OAAN5E,QAAM,IAANA,IAAAA,EAAQ8E,QACT,MAAMN,MAAM,qBAChB,MAAMugH,EAAc9rH,KAAKC,MACnBiI,EAAiBnB,EAAOmB,eAC9BqgH,EAAa,CACT7oH,KAAMH,EAAAA,EAAewD,aACrBlC,SAAS,EACTC,MAAOiG,EAAOuD,UACVwhH,EAAcj0G,OAAO3P,GAAkBq/G,IACN,QADsBsE,EACvD9kH,EAAO8E,QAAQ1C,SAASV,iBAAS,IAAAojH,OAAA,EAAjCA,EAAmCx/G,KAAKkQ,GAAMA,EAAEspF,SAAQ/jG,SAAStB,EAAOqlG,UAC9E,GAEV,CACA,MAAO9kG,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAewD,aACrBlC,SAAS,EACTE,OAAO,GAEf,CACA,OAAO,CAAI,EAET0oH,EAA4BlB,IAC9B,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KACzC,MAAM,QAAE11C,GAAYwB,EAAqB1B,0BACzC,IAAKE,EACD,MAAMN,MAAM,qBAChBg9G,EAAa,CACT7oH,KAAMH,EAAAA,EAAegE,YACrB1C,SAAS,EACTC,KAAM+K,EAAQnC,SAChB,GAEV,CACA,MAAO3I,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAegE,YACrB1C,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEEyoH,EAA4BjB,IAC9B,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KACzC,MAAM,QAAE11C,GAAYwB,EAAqB1B,0BACzC,IAAKE,EACD,MAAMN,MAAM,qBAChBg9G,EAAa,CACT7oH,KAAMH,EAAAA,EAAe0D,aACrBpC,SAAS,EACTC,KAAM+K,EAAQ/B,SAChB,GAEV,CACA,MAAO/I,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe0D,aACrBpC,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEE2oH,EAA8BnB,IAChC,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KACzC,MAAM,QAAE11C,GAAYwB,EAAqB1B,0BACzC,IAAKE,EACD,MAAMN,MAAM,qBAChBg9G,EAAa,CACT7oH,KAAMH,EAAAA,EAAe4D,cACrBtC,SAAS,EACTC,KAAM+K,EAAQhD,WAChB,GAEV,CACA,MAAO9H,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe4D,cACrBtC,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEE4oH,EAA4BpB,IAC9B,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KAAO,IAADwqE,EAC/C,MAAM,QAAElgH,GAAYwB,EAAqB1B,0BACzC,IAAKE,EACD,MAAMN,MAAM,qBAChBg9G,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8D,YACrBxC,SAAS,EACTC,KAAsB,QAAlBirH,EAAS,OAAPlgH,QAAO,IAAPA,OAAO,EAAPA,EAAS1D,eAAO,IAAA4jH,EAAAA,EAAI7hH,EAAAA,QAAQC,SACpC,GAEV,CACA,MAAOpJ,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8D,YACrBxC,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEE6oH,EAA4BA,CAAC32G,EAASs1G,KACxC,IACIl7G,EAAqBxG,mBAAmB06C,MAAK5hD,UACzC,MAAMkmH,QAAkBc,EACxB,IAAKd,EACD,MAAMt6G,MAAM,wBAChB,QAA4BK,IAAxBqH,EAAQzS,OAAO2nB,MAA8C,OAAxBlV,EAAQzS,OAAO2nB,KAAe,CACnE,MACMm6E,SADeujB,EAAUtgB,OAAO,IAAIymB,EAAAA,GAAU,UAAWC,EAAAA,GAAQzQ,KAAM,IACvDY,KAAK/vG,IAAIsI,EAAAA,GAC/B4zG,EAAa,CACT7oH,KAAMH,EAAAA,EAAekE,aACrB5C,SAAS,EACTC,KAAMwhG,GAEd,KACK,CACD,MAAM4pB,QAAgBrG,EAAUtgB,OAAO,IAAIymB,EAAAA,GAAU,UAAWC,EAAAA,GAAQzQ,KAAMvoG,EAAQzS,OAAO04B,OAAS,GAAIjmB,EAAQzS,OAAO2nB,MAAQ,IAC3Hm6E,EAAS4pB,EAAQ9P,KAAK/vG,IAAIsI,EAAAA,GAChC4zG,EAAa,CACT7oH,KAAMH,EAAAA,EAAekE,aACrB5C,SAAS,EACTC,KAAM,CAAE+J,SAAUy3F,EAAQn6E,KAAM+jG,EAAQtJ,WAEhD,IAER,CACA,MAAO7hH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAekE,aACrB5C,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEE8oH,EAA2BtB,IAC7B,IACIl7G,EAAqBxG,mBAAmB06C,MAAK5hD,UAAa,IAADwsH,EAAAC,EAAAC,EAAAC,EACrD,IAAIxrH,EAAO,GACX,MAAM2F,EAAM4G,EAAqB1B,0BACjC,GAAe,QAAXwgH,EAAA1lH,EAAIoF,eAAO,IAAAsgH,GAAW,QAAXC,EAAXD,EAAatjH,iBAAS,IAAAujH,GAAtBA,EAAwB5iH,YAAyB,QAAf6iH,EAAI5lH,EAAIoF,eAAO,IAAAwgH,GAAW,QAAXC,EAAXD,EAAaxjH,iBAAS,IAAAyjH,GAAtBA,EAAwB7iH,WAAY,CAAC,IAAD8iH,EAAAC,EAK1E1rH,SAJsB4lH,EAAmBr4G,iBAAiB,CAC3C,QAD2Ck+G,EACtD9lH,EAAIoF,eAAO,IAAA0gH,OAAA,EAAXA,EAAa1jH,UAAUW,WACZ,QADsBgjH,EACjC/lH,EAAIoF,eAAO,IAAA2gH,OAAA,EAAXA,EAAa3jH,UAAUY,cAEZ4C,KAAKK,IACT,IACAA,EACHsC,OAAQ,CAAEH,UAAWnC,EAAEsC,OAAOH,UAAU2F,WAAYzF,QAASrC,EAAEsC,OAAOD,QAAQyF,YAC9E5F,IAAK,CAAEC,UAAWnC,EAAEkC,IAAIC,UAAU2F,WAAYzF,QAASrC,EAAEkC,IAAIG,QAAQyF,eAGjF,CACA+zG,EAAa,CACT7oH,KAAMH,EAAAA,EAAeoE,WACrB9C,SAAS,EACTC,QACF,GAEV,CACA,MAAOC,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAeoE,WACrB9C,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEEwpH,EAA0BhC,IAC5B,IACIl7G,EAAqBxG,mBAAmB06C,MAAK5hD,UACzC,IAAK0d,EACD,MAAM9R,MAAM,0BAChB,MAAM,kBAAEtD,GAAsBoV,EAC9B,GAAqB,OAAjBpV,QAAiB,IAAjBA,GAAAA,EAAmBw8F,MAAQzkG,KAAKC,MAAQgI,EAAkB27F,UAAY,IACtE2kB,EAAa,CACT7oH,KAAMH,EAAAA,EAAesF,kBACrBhE,SAAS,EACTC,KAAM+W,OAAO5P,EAAkBw8F,KAAKgoB,QAAQ,UAG/C,CACD,MAAMpvG,QAAYwsE,MAAM,yDACxB,IAAKxsE,EAAIisE,GACL,MAAM,IAAI/9E,MAAM,gBAAgB8R,EAAI/N,YAAY+N,EAAIqsE,cAExD,MACM+a,SADapnF,EAAIxE,QACL4rF,KACZqnB,EAAc9rH,KAAKC,MACzBoN,EAAqBnC,OAAO,CACxBjD,kBAAmB,CAAEw8F,OAAMb,UAAWkoB,KAE1CvD,EAAa,CACT7oH,KAAMH,EAAAA,EAAesF,kBACrBhE,SAAS,EACTC,KAAM+W,OAAO4sF,EAAKgoB,QAAQ,KAElC,IAER,CACA,MAAO1rH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAesF,kBACrBhE,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEEupH,EAA0B/B,IAC5B,IACIl7G,EAAqBxG,mBAAmB06C,MAAK5hD,UACzC,MAAMkmH,QAAkBc,EACxB,IAAKd,EACD,MAAMt6G,MAAM,wBAChB,MACM4D,SADgB02G,EAAUtgB,OAAO,IAAIymB,EAAAA,GAAU,UAC/B5P,KAAK/vG,KAAKqgH,IACrB,CACH/0G,KAAM+0G,EAAIh/G,SAASiK,KACnBC,KAAM80G,EAAIh/G,SAASkK,KACnBhO,SAAUiO,OAAO60G,EAAI9iH,UACrBgE,OAAQ4f,EAAOrF,KAAKukG,EAAI9+G,QAAQ4G,SAAS,WAGjD+zG,EAAa,CACT7oH,KAAMH,EAAAA,EAAeoF,kBACrB9D,SAAS,EACTC,KAAMqO,GACR,GAEV,CACA,MAAOpO,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAeoF,kBACrB9D,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAGE+oH,EAAwBA,CAAC72G,EAASs1G,KACpC,GAAKt1G,EAAQzS,OAAOM,KAQpB,IACI+lH,EAAoC0B,EACpC,IAAIoE,EAAiB15G,EAAQzS,OAAOM,KAEpC,MAAM8rH,EAAkB35G,EAAQzS,OAAOM,KACnC8rH,EAAgB,GAAGC,aACnBF,EAAiBC,EAAgBvgH,KAAKK,IAAO,IAADogH,EACxC,MAAO,CACHvgH,QAASG,EAAEH,QACXwgH,YAAa,CACTF,WAAYngH,EAAEmgH,WACdG,SAAUtgH,EAAEsgH,SACZ3gH,IAAKK,EAAEL,KAEXzC,SAAoB,QAAZkjH,EAAEpgH,EAAE9C,gBAAQ,IAAAkjH,EAAAA,EAAI,EAC3B,KAGTz/G,EAAqBnC,OAAO,CAAEyhH,mBAAkBprE,MAAK,KACjDymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAesE,SACrBhD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MAnCIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAesE,SACrBhD,SAAS,EACTE,MAAO,8BAgCf,EAEEgpH,EAA0BA,CAAC92G,EAASs1G,KAEtC,GADApmH,QAAQgL,IAAI,0BAA2B8F,GAClCA,EAAQzS,OAQb,IACIsmH,EAAsCyB,EACtC,MAAM0E,EAAmBh6G,EAAQzS,OACjC6M,EAAqBnC,OAAO,CAAE+hH,qBAAoB1rE,MAAK,KACnDymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAewE,WACrBlD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MApBIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAewE,WACrBlD,SAAS,EACTE,MAAO,8BAiBf,EAEEipH,EAAgCA,CAAC/2G,EAASs1G,KAC5C,GAAKt1G,EAAQzS,OAQb,IACIumH,EAA4CwB,EAC5Cl7G,EACKnC,OAAO,CACRgiH,uBAAwBj6G,EAAQzS,SAE/B+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe0E,iBACrBpD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MAvBIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe0E,iBACrBpD,SAAS,EACTE,MAAO,8BAoBf,EAEEkpH,EAAgCA,CAACh3G,EAASs1G,KAC5C,GAAKt1G,EAAQzS,OAQb,IACIwmH,EAA4CuB,EAC5Cl7G,EACKnC,OAAO,CACRiiH,uBAAwBl6G,EAAQzS,SAE/B+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAewF,iBACrBlE,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MAvBIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAewF,iBACrBlE,SAAS,EACTE,MAAO,8BAoBf,EAEEopH,EAA0BA,CAACl3G,EAASs1G,KACtC,GAAKt1G,EAAQzS,OAQb,IACI0mH,EAAsCqB,EACtCl7G,EACKnC,OAAO,CACRkiH,iBAAkBn6G,EAAQzS,SAEzB+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8E,UACrBxD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MAvBIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8E,UACrBxD,SAAS,EACTE,MAAO,8BAoBf,EAEEmpH,EAA4BA,CAACj3G,EAASs1G,KACxC,GAAKt1G,EAAQzS,OAAb,CAQA,IACIymH,EAAwCsB,EACxCl7G,EACKnC,OAAO,CACRmiH,mBAAoBp6G,EAAQzS,SAE3B+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe4E,aACrBtD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CACA,OAAO,CAlBP,CANIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe4E,aACrBtD,SAAS,EACTE,MAAO,8BAqBJ,EAETqpH,EAA8BA,CAACn3G,EAASs1G,KAC1C,GAAKt1G,EAAQzS,OAQb,IACI2mH,EAA0CoB,EAC1Cl7G,EACKnC,OAAO,CACRoiH,qBAAsB,CAClBxP,MAAO7qG,EAAQzS,OAAOs9G,MACtByP,YAAat6G,EAAQzS,OAAO+sH,eAG/BhsE,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAegF,eACrB1D,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MA1BIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAegF,eACrB1D,SAAS,EACTE,MAAO,8BAuBf,EAEEspH,EAAkC9B,IACpC,IACIl7G,EAAqBxG,mBAAmB06C,MAAK,KAAO,IAADisE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/C,MAAM,QAAEhiH,GAAYwB,EAAqB1B,0BACzC,IAAKE,EACD,MAAMN,MAAM,qBAChB,MAAMlC,EAA0D,QAA/CmkH,EAAmB,QAAnBC,EAAG5hH,EAAQ1C,gBAAQ,IAAAskH,GAAe,QAAfC,EAAhBD,EAAkBjlH,qBAAa,IAAAklH,OAAf,EAAhBA,EAAiCrkH,mBAAW,IAAAmkH,EAAAA,EAAI,YAC9DvkH,EAAgD,QAA1C0kH,EAAmB,QAAnBC,EAAG/hH,EAAQ1C,gBAAQ,IAAAykH,GAAe,QAAfC,EAAhBD,EAAkBplH,qBAAa,IAAAqlH,OAAf,EAAhBA,EAAiC5kH,cAAM,IAAA0kH,EAAAA,EAAIzkH,EAAAA,GAC1Dq/G,EAAa,CACT7oH,KAAMH,EAAAA,EAAekF,mBACrB5D,SAAS,EACTC,KAAM,CAAEuI,cAAaJ,WACvB,GAEV,CACA,MAAOlI,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAekF,mBACrB5D,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,GAEEypH,GAAmCA,CAACv3G,EAASs1G,KAC/C,GAAKt1G,EAAQzS,OAQb,IACI4mH,EAA+CmB,EAC/Cl7G,EACKnC,OAAO,CACR4iH,0BAA2B76G,EAAQzS,SAElC+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe4F,qBACrBtE,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MAvBIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe4F,qBACrBtE,SAAS,EACTE,MAAO,8BAoBf,EAEE0pH,GAAuB9qH,MAAOsT,EAASs1G,KACzC,GAAKt1G,EAAQzS,OAAOutH,MAQpB,IACI1gH,EAAqBxG,mBAAmB06C,MAAMlkC,IAAS,IAAD2wG,EAAAC,EAAAC,EAClD,MAAM,QAAEriH,GAAYwB,EAAqB1B,0BACzC,IAAK0R,IAAQxR,EACT,MAAMN,MAAM,qBAChB,MAAM,eAAErD,EAAc,SAAEoC,GAAa+S,GAC/B,eAAEtV,GAAmB8D,EACrBigH,EAAc9rH,KAAKC,OACrBqK,GAAYwhH,EAAcj0G,OAAO3P,GAAkBq/G,IACnDgB,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8F,gBACrBxE,SAAS,EACTE,MAAO,oCAGf,IAAIotH,EAAapmH,EAAekG,OAAS,EACrB,OAAdlG,QAAc,IAAdA,OAAc,EAAdA,EAAgB1F,QAAQgb,GAAQA,EAAIy9F,IAAIiT,QAAU96G,EAAQzS,OAAOutH,OAAS1wG,EAAIy9F,IAAIjV,SAAW5yF,EAAQzS,OAAOqlG,SAC5G,GACiE,IAADuoB,EAAlED,EAAWlgH,OAAS,GAAkC,QAAjC+/G,EAAY,OAAP/6G,QAAO,IAAPA,GAAe,QAARg7G,EAAPh7G,EAASzS,cAAM,IAAAytH,GAAK,QAALC,EAAfD,EAAiBI,WAAG,IAAAH,OAAb,EAAPA,EAAsBjgH,cAAM,IAAA+/G,GAAAA,IACtDG,EAAuB,QAAbC,EAAGD,SAAU,IAAAC,OAAA,EAAVA,EAAY/rH,QAAQqK,IAAC,IAAA4hH,EAAAC,EAAA,OAAY,OAAPt7G,QAAO,IAAPA,GAAe,QAARq7G,EAAPr7G,EAASzS,cAAM,IAAA8tH,GAAK,QAALC,EAAfD,EAAiBD,WAAG,IAAAE,OAAb,EAAPA,EAAsBzsH,SAAS4K,EAAEouG,IAAI5sG,GAAG,KAEnFq6G,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8F,gBACrBxE,SAAS,EACTC,KAAMqtH,GACR,GAEV,CACA,MAAOptH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8F,gBACrBxE,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,MAzCIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAe8F,gBACrBxE,SAAS,EACTE,MAAO,8BAsCf,EAEE2pH,GAAwBA,CAACz3G,EAASs1G,KACpC,GAAKt1G,EAAQzS,OAAb,CAQA,IACI6mH,EAAoCkB,EACpCl7G,EACKnC,OAAO,CACRsjH,eAAgBv7G,EAAQzS,SAEvB+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAekG,QACrB5E,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CACA,OAAO,CAlBP,CANIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAekG,QACrB5E,SAAS,EACTE,MAAO,8BAqBJ,EAET4pH,GAAwBA,CAAC13G,EAASs1G,KACpC,GAAKt1G,EAAQzS,OAAb,CAQA,IACI8mH,EAAoCiB,EACpCl7G,EACKnC,OAAO,CACRujH,eAAgBx7G,EAAQzS,SAEvB+gD,MAAK,KACNymE,GAAa,GAErB,CACA,MAAOjnH,GACHwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAeoG,QACrB9E,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CACA,OAAO,CAlBP,CANIwnH,EAAa,CACT7oH,KAAMH,EAAAA,EAAeoG,QACrB9E,SAAS,EACTE,MAAO,8BAqBJ,EAGT2tH,GAAWC,IACbthH,EAAqBxG,mBAAmB06C,MAAMlkC,IACnC,OAAHA,QAAG,IAAHA,GAAAA,EAAK/U,iBACL6K,EAAAA,EAAAA,IAAakK,EAAI/U,eACjB+E,EAAqBrG,OAAO,IAAI2nH,EAAO,kBAC3C,GACF,EAEA9D,GAA0B7/B,IAC5B,IAAK47B,EACD,MAAMr7G,MAAM,qBAChB,IACIq7G,EAAkC,CAC9BlnH,KAAMH,EAAAA,EAAeoD,QACrB9B,SAAS,EACTC,KAA4B,aAAtBkqF,EAAS4jC,SAA0B5jC,EAASlhF,QAAQG,oBAAiB2B,GAEnF,CACA,MAAO7K,GAAQ,IAAD8tH,EACuB,QAAjCA,EAAAjI,SAAiC,IAAAiI,GAAjCA,EAAoC,CAChCnvH,KAAMH,EAAAA,EAAeoD,QACrB9B,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAeoD,SAC5B,CACA,OAAO,CAAI,EAETmoH,GAA0B9/B,IAC5B,IAAK67B,EACD,MAAMt7G,MAAM,qBAChB,IACIs7G,EAAkC,CAC9BnnH,KAAMH,EAAAA,EAAesE,SACrBhD,SAAS,EACTC,KAAM,CAAE6W,KAAMqzE,EAASrzE,KAAMmmG,MAAO9yB,EAAS8yB,QAErD,CACA,MAAO/8G,GAAQ,IAAD+tH,EACuB,QAAjCA,EAAAjI,SAAiC,IAAAiI,GAAjCA,EAAoC,CAChCpvH,KAAMH,EAAAA,EAAesE,SACrBhD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAesE,UAC5B,CACA,OAAO,CAAI,EAETknH,GAA4B//B,IAC9B,IAAK87B,EACD,MAAMv7G,MAAM,qBAChB,IACIu7G,EAAoC,CAChCpnH,KAAMH,EAAAA,EAAewE,WACrBlD,SAAS,EACTC,KAAM,CAAE6W,KAAMqzE,EAASrzE,KAAMmmG,MAAO9yB,EAAS8yB,QAErD,CACA,MAAO/8G,GAAQ,IAADguH,EACyB,QAAnCA,EAAAjI,SAAmC,IAAAiI,GAAnCA,EAAsC,CAClCrvH,KAAMH,EAAAA,EAAewE,WACrBlD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAewE,YAC5B,CACA,OAAO,CAAI,EAETinH,GAAkChgC,IACpC,IAAK+7B,EACD,MAAMx7G,MAAM,qBAChB,IACIw7G,EAA0C,CACtCrnH,KAAMH,EAAAA,EAAe0E,iBACrBpD,SAAS,EACTC,KAAc,OAARkqF,QAAQ,IAARA,OAAQ,EAARA,EAAUrzE,MAExB,CACA,MAAO5W,GAAQ,IAADiuH,EAC+B,QAAzCA,EAAAjI,SAAyC,IAAAiI,GAAzCA,EAA4C,CACxCtvH,KAAMH,EAAAA,EAAe0E,iBACrBpD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAe0E,kBAC5B,CACA,OAAO,CAAI,EAETonH,GAAqCrgC,IACvC,IAAKo8B,EACD,MAAM77G,MAAM,qBAChB,IACI67G,EAA6C,CACzC1nH,KAAMH,EAAAA,EAAe4F,qBACrBtE,SAAS,EACTC,KAAM,CACFyL,QAAiB,OAARy+E,QAAQ,IAARA,OAAQ,EAARA,EAAUz+E,QACnB8/D,OAAgB,OAAR2e,QAAQ,IAARA,OAAQ,EAARA,EAAU3e,OAClByuC,IAAa,OAAR9vB,QAAQ,IAARA,OAAQ,EAARA,EAAU8vB,MAG3B,CACA,MAAO/5G,GAAQ,IAADkuH,EACkC,QAA5CA,EAAA7H,SAA4C,IAAA6H,GAA5CA,EAA+C,CAC3CvvH,KAAMH,EAAAA,EAAe4F,qBACrBtE,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAe4F,sBAC5B,CACA,OAAO,CAAI,EAET8lH,GAAkCjgC,IACpC,IAAKg8B,EACD,MAAMz7G,MAAM,qBAChB,IACIy7G,EAA0C,CACtCtnH,KAAMH,EAAAA,EAAewF,iBACrBlE,SAAS,EACTC,KAAc,OAARkqF,QAAQ,IAARA,OAAQ,EAARA,EAAUrzE,MAExB,CACA,MAAO5W,GAAQ,IAADmuH,EAC+B,QAAzCA,EAAAlI,SAAyC,IAAAkI,GAAzCA,EAA4C,CACxCxvH,KAAMH,EAAAA,EAAewF,iBACrBlE,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAewF,kBAC5B,CACA,OAAO,CAAI,EAETmmH,GAA8BlgC,IAChC,IAAKi8B,EACD,MAAM17G,MAAM,qBAChB,IACI07G,EAAsC,CAClCvnH,KAAMH,EAAAA,EAAe4E,aACrBtD,SAAS,EACTC,KAAM,CACFyL,QAAiB,OAARy+E,QAAQ,IAARA,OAAQ,EAARA,EAAUz+E,QACnB8/D,OAAgB,OAAR2e,QAAQ,IAARA,OAAQ,EAARA,EAAU3e,OAClBp5D,QAAiB,OAAR+3E,QAAQ,IAARA,OAAQ,EAARA,EAAU/3E,QACnBw7D,IAAa,OAARuc,QAAQ,IAARA,OAAQ,EAARA,EAAUvc,IACf0gD,cAAuB,OAARnkC,QAAQ,IAARA,OAAQ,EAARA,EAAUmkC,gBAGrC,CACA,MAAOpuH,GAAQ,IAADquH,EAC2B,QAArCA,EAAAnI,SAAqC,IAAAmI,GAArCA,EAAwC,CACpC1vH,KAAMH,EAAAA,EAAe4E,aACrBtD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAe4E,cAC5B,CACA,OAAO,CAAI,EAETgnH,GAA4BngC,IAC9B,IAAKk8B,EACD,MAAM37G,MAAM,qBAChB,IACI,GAAY,OAARy/E,QAAQ,IAARA,GAAAA,EAAUjqF,MAMV,YALAmmH,EAAoC,CAChCxnH,KAAMH,EAAAA,EAAe8E,UACrBxD,SAAS,EACTE,MAAe,OAARiqF,QAAQ,IAARA,OAAQ,EAARA,EAAUjqF,QAIzBmmH,EAAoC,CAChCxnH,KAAMH,EAAAA,EAAe8E,UACrBxD,SAAS,EACTC,KAAc,OAARkqF,QAAQ,IAARA,OAAQ,EAARA,EAAUrzE,MAExB,CACA,MAAO5W,GAAQ,IAADsuH,EACyB,QAAnCA,EAAAnI,SAAmC,IAAAmI,GAAnCA,EAAsC,CAClC3vH,KAAMH,EAAAA,EAAe8E,UACrBxD,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAe8E,WAC5B,CACA,OAAO,CAAI,EAET+mH,GAAgCpgC,IAClC,IAAKm8B,EACD,MAAM57G,MAAM,qBAChB,IAAK,IAAD+jH,EACAnI,EAAwC,CACpCznH,KAAMH,EAAAA,EAAegF,eACrB1D,UAAkB,OAARmqF,QAAQ,IAARA,GAAAA,EAAUjqF,OACpBD,KAA4B,QAAxBwuH,EAAU,OAARtkC,QAAQ,IAARA,OAAQ,EAARA,EAAUukC,oBAAY,IAAAD,EAAAA,EAAI,GAChCvuH,MAAe,OAARiqF,QAAQ,IAARA,OAAQ,EAARA,EAAUjqF,OAEzB,CACA,MAAOA,GAAQ,IAADyuH,EAC6B,QAAvCA,EAAArI,SAAuC,IAAAqI,GAAvCA,EAA0C,CACtC9vH,KAAMH,EAAAA,EAAegF,eACrB1D,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAegF,gBAC5B,CACA,OAAO,CAAI,EAET+mH,GAA0BtgC,IAC5B,IAAKq8B,EACD,MAAM97G,MAAM,qBAChB,IACI87G,EAAkC,CAC9B3nH,KAAMH,EAAAA,EAAekG,QACrB5E,SAAS,EACTC,KAAMkqF,EAASykC,mBAEvB,CACA,MAAO1uH,GAAQ,IAAD2uH,EACuB,QAAjCA,EAAArI,SAAiC,IAAAqI,GAAjCA,EAAoC,CAChChwH,KAAMH,EAAAA,EAAekG,QACrB5E,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAekG,SAC5B,CACA,OAAO,CAAI,EAET8lH,GAA0BvgC,IAC5B,IAAKs8B,EACD,MAAM/7G,MAAM,qBAChB,IACI+7G,EAAkC,CAC9B5nH,KAAMH,EAAAA,EAAeoG,QACrB9E,SAAS,EACTC,KAAMkqF,EAAS2kC,mBAEvB,CACA,MAAO5uH,GAAQ,IAAD6uH,EACuB,QAAjCA,EAAAtI,SAAiC,IAAAsI,GAAjCA,EAAoC,CAChClwH,KAAMH,EAAAA,EAAeoG,QACrB9E,SAAS,EACTE,MAAO4L,KAAKkB,UAAU9M,IAE9B,CAAC,QAEG2tH,GAAQ,CAACnvH,EAAAA,EAAeoG,SAC5B,CACA,OAAO,CAAI,EAGfY,OAAO8M,QAAQw8G,UAAU3xE,aAAa4xE,IAC9BA,IAAmBxnH,IACfs+G,IACAA,EAAkC,CAC9BlnH,KAAMH,EAAAA,EAAeoD,QACrB9B,SAAS,EACTE,MAAO,gCAEX6lH,EAAoC,KACpCv5G,EAAqBrG,OAAO,mBAE5B6/G,IACAA,EAAkC,CAC9BnnH,KAAMH,EAAAA,EAAesE,SACrBhD,SAAS,EACTE,MAAO,gCAEX8lH,EAAoC,KACpCx5G,EAAqBrG,OAAO,mBAE5B8/G,IACAA,EAAoC,CAChCpnH,KAAMH,EAAAA,EAAewE,WACrBlD,SAAS,EACTE,MAAO,gCAEX8lH,EAAoC,KACpCx5G,EAAqBrG,OAAO,qBAE5BigH,IACAA,EAAsC,CAClCvnH,KAAMH,EAAAA,EAAe4E,aACrBtD,SAAS,EACTE,MAAO,gCAEXkmH,EAAwC,KACxC55G,EAAqBrG,OAAO,uBAE5B+/G,IACAA,EAA0C,CACtCrnH,KAAMH,EAAAA,EAAe0E,iBACrBpD,SAAS,EACTE,MAAO,gCAEXgmH,EAA4C,KAC5C15G,EAAqBrG,OAAO,2BAE5BggH,IACAA,EAA0C,CACtCtnH,KAAMH,EAAAA,EAAewF,iBACrBlE,SAAS,EACTE,MAAO,gCAEXimH,EAA4C,KAC5C35G,EAAqBrG,OAAO,2BAE5BkgH,IACAA,EAAoC,CAChCxnH,KAAMH,EAAAA,EAAe8E,UACrBxD,SAAS,EACTE,MAAO,gCAEXmmH,EAAsC,KACtC75G,EAAqBrG,OAAO,qBAE5BmgH,IACAA,EAAwC,CACpCznH,KAAMH,EAAAA,EAAegF,eACrB1D,SAAS,EACTE,MAAO,gCAEXomH,EAA0C,KAC1C95G,EAAqBrG,OAAO,yBAE5BogH,IACAA,EAA6C,CACzC1nH,KAAMH,EAAAA,EAAe4F,qBACrBtE,SAAS,EACTE,MAAO,gCAEXqmH,EAA+C,KAC/C/5G,EAAqBrG,OAAO,8BAE5BqgH,IACAA,EAAkC,CAC9B3nH,KAAMH,EAAAA,EAAekG,QACrB5E,SAAS,EACTE,MAAO,gCAEXsmH,EAAoC,KACpCh6G,EAAqBrG,OAAO,mBAE5BsgH,IACAA,EAAkC,CAC9B5nH,KAAMH,EAAAA,EAAeoG,QACrB9E,SAAS,EACTE,MAAO,gCAEXumH,EAAoC,KACpCj6G,EAAqBrG,OAAO,mBAEhCsB,OAAgBsD,EAChByB,EAAqBrG,OAAO,iBAChC,GAER","sources":["inject.ts","services/ChromeStorage.service.ts","services/GorillaPool.service.ts","services/serviceHelpers.ts","theme.ts","utils/chromeHelpers.ts","utils/constants.ts","utils/crypto.ts","utils/ordi.ts","utils/providerHelper.ts","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/_md.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/hashes/src/sha512.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/base64-js/index.js","../node_modules/bip39/src/_wordlists.js","../node_modules/bip39/src/index.js","../node_modules/buffer/index.js","../node_modules/crypto-js/aes.js","../node_modules/crypto-js/blowfish.js","../node_modules/crypto-js/cipher-core.js","../node_modules/crypto-js/core.js","../node_modules/crypto-js/enc-base64.js","../node_modules/crypto-js/enc-base64url.js","../node_modules/crypto-js/enc-utf16.js","../node_modules/crypto-js/evpkdf.js","../node_modules/crypto-js/format-hex.js","../node_modules/crypto-js/hmac.js","../node_modules/crypto-js/index.js","../node_modules/crypto-js/lib-typedarrays.js","../node_modules/crypto-js/md5.js","../node_modules/crypto-js/mode-cfb.js","../node_modules/crypto-js/mode-ctr-gladman.js","../node_modules/crypto-js/mode-ctr.js","../node_modules/crypto-js/mode-ecb.js","../node_modules/crypto-js/mode-ofb.js","../node_modules/crypto-js/pad-ansix923.js","../node_modules/crypto-js/pad-iso10126.js","../node_modules/crypto-js/pad-iso97971.js","../node_modules/crypto-js/pad-nopadding.js","../node_modules/crypto-js/pad-zeropadding.js","../node_modules/crypto-js/pbkdf2.js","../node_modules/crypto-js/rabbit-legacy.js","../node_modules/crypto-js/rabbit.js","../node_modules/crypto-js/rc4.js","../node_modules/crypto-js/ripemd160.js","../node_modules/crypto-js/sha1.js","../node_modules/crypto-js/sha224.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/sha3.js","../node_modules/crypto-js/sha384.js","../node_modules/crypto-js/sha512.js","../node_modules/crypto-js/tripledes.js","../node_modules/crypto-js/x64-core.js","../node_modules/ieee754/index.js","../node_modules/process/browser.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/yours-wallet-provider/dist/components/YoursIcon.js","../node_modules/yours-wallet-provider/dist/context/YoursWalletContext.js","../node_modules/yours-wallet-provider/dist/hook/useYoursWallet.js","../node_modules/yours-wallet-provider/dist/index.js","../node_modules/yours-wallet-provider/dist/types/providerTypes.js","../node_modules/@bsv/sdk/src/primitives/BigNumber.ts","../node_modules/@bsv/sdk/src/primitives/Mersenne.ts","../node_modules/@bsv/sdk/src/primitives/K256.ts","../node_modules/@bsv/sdk/src/primitives/ReductionContext.ts","../node_modules/@bsv/sdk/src/primitives/MontgomoryMethod.ts","../node_modules/@bsv/sdk/src/primitives/BasePoint.ts","../node_modules/@bsv/sdk/src/primitives/JacobianPoint.ts","../node_modules/@bsv/sdk/src/primitives/Hash.ts","../node_modules/@bsv/sdk/src/primitives/utils.ts","../node_modules/@bsv/sdk/src/primitives/Point.ts","../node_modules/@bsv/sdk/src/primitives/Curve.ts","../node_modules/@bsv/sdk/src/primitives/Signature.ts","../node_modules/@bsv/sdk/src/primitives/DRBG.ts","../node_modules/@bsv/sdk/src/primitives/ECDSA.ts","../node_modules/@bsv/sdk/src/primitives/PublicKey.ts","../node_modules/@bsv/sdk/src/primitives/Polynomial.ts","../node_modules/@bsv/sdk/src/primitives/PrivateKey.ts","../node_modules/@bsv/sdk/src/primitives/AESGCM.ts","../node_modules/@bsv/sdk/src/primitives/TransactionSignature.ts","../node_modules/@bsv/sdk/src/script/OP.ts","../node_modules/@bsv/sdk/src/script/Script.ts","../node_modules/@bsv/sdk/src/script/LockingScript.ts","../node_modules/@bsv/sdk/src/script/UnlockingScript.ts","../node_modules/@bsv/sdk/src/script/Spend.ts","../node_modules/@bsv/sdk/src/transaction/MerklePath.ts","../node_modules/@bsv/sdk/src/transaction/http/NodejsHttpClient.ts","../node_modules/@bsv/sdk/src/transaction/http/FetchHttpClient.ts","../node_modules/@bsv/sdk/src/transaction/http/DefaultHttpClient.ts","../node_modules/@bsv/sdk/src/transaction/broadcasters/ARC.ts","../node_modules/@bsv/sdk/src/transaction/chaintrackers/WhatsOnChain.ts","../node_modules/@bsv/sdk/src/transaction/Beef.ts","../node_modules/@bsv/sdk/src/transaction/Transaction.ts","../node_modules/@bsv/sdk/src/transaction/broadcasters/DefaultBroadcaster.ts","../node_modules/@bsv/sdk/src/transaction/chaintrackers/DefaultChainTracker.ts","../node_modules/@bsv/sdk/src/transaction/Broadcaster.ts","../node_modules/@bsv/sdk/src/transaction/BeefParty.ts","../node_modules/@bsv/sdk/src/compat/BSM.ts","../node_modules/@bsv/sdk/src/compat/HD.ts","../node_modules/@bsv/sdk/src/compat/ECIES.ts","../node_modules/@bsv/sdk/src/primitives/Random.ts","../node_modules/@bsv/sdk/src/transaction/fee-models/SatoshisPerKilobyte.ts","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/@tempfix/idb/build/index.js","../node_modules/spv-store/src/services/broadcast-service.ts","../node_modules/spv-store/src/models/address.ts","../node_modules/spv-store/src/models/block-header.ts","../node_modules/spv-store/src/models/block.ts","../node_modules/spv-store/src/models/index-context.ts","../node_modules/spv-store/src/models/index-data.ts","../node_modules/spv-store/src/models/indexer.ts","../node_modules/spv-store/src/models/ingest.ts","../node_modules/spv-store/src/models/search.ts","../node_modules/spv-store/src/models/txo.ts","../node_modules/spv-store/src/models/outpoint.ts","../node_modules/spv-store/src/lib/event-emitter.ts","../node_modules/spv-store/src/spv-store.ts","../node_modules/spv-store/src/providers/1sat-provider.ts","../node_modules/spv-store/src/templates/lock.ts","../node_modules/spv-store/src/indexers/lock.ts","../node_modules/spv-store/src/indexers/1sat.ts","../node_modules/spv-store/src/indexers/bsv20.ts","../node_modules/spv-store/src/indexers/bsv21.ts","../node_modules/spv-store/src/indexers/fund.ts","../node_modules/spv-store/src/indexers/map.ts","../node_modules/spv-store/src/indexers/insc.ts","../node_modules/spv-store/src/indexers/origin.ts","../node_modules/spv-store/src/indexers/sigma.ts","../node_modules/spv-store/src/indexers/ordlock.ts","../node_modules/spv-store/src/storage/idb/idb-blocks.ts","../node_modules/spv-store/src/stores/txn-store.ts","../node_modules/spv-store/src/storage/idb/idb-txns.ts","../node_modules/spv-store/src/storage/idb/idb-txos.ts","../node_modules/spv-store/src/stores/block-store.ts","../node_modules/spv-store/src/stores/txo-store.ts","../node_modules/spv-store/src/pre-config/1sat-web.ts","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","initSPVStore.ts","background.ts"],"sourcesContent":["export var YoursEventName;\n(function (YoursEventName) {\n    YoursEventName[\"CONNECT\"] = \"connectRequest\";\n    YoursEventName[\"DISCONNECT\"] = \"disconnect\";\n    YoursEventName[\"IS_CONNECTED\"] = \"isConnected\";\n    YoursEventName[\"GET_PUB_KEYS\"] = \"getPubKeys\";\n    YoursEventName[\"GET_ADDRESSES\"] = \"getAddresses\";\n    YoursEventName[\"GET_NETWORK\"] = \"getNetwork\";\n    YoursEventName[\"GET_BALANCE\"] = \"getBalance\";\n    YoursEventName[\"GET_ORDINALS\"] = \"getOrdinals\";\n    YoursEventName[\"GET_BSV20S\"] = \"getBsv20s\";\n    YoursEventName[\"SEND_BSV\"] = \"sendBsvRequest\";\n    YoursEventName[\"SEND_BSV20\"] = \"sendBsv20Request\";\n    YoursEventName[\"TRANSFER_ORDINAL\"] = \"transferOrdinalRequest\";\n    YoursEventName[\"SIGN_MESSAGE\"] = \"signMessageRequest\";\n    YoursEventName[\"BROADCAST\"] = \"broadcastRequest\";\n    YoursEventName[\"GET_SIGNATURES\"] = \"getSignaturesRequest\";\n    YoursEventName[\"GET_SOCIAL_PROFILE\"] = \"getSocialProfile\";\n    YoursEventName[\"GET_PAYMENT_UTXOS\"] = \"getPaymentUtxos\";\n    YoursEventName[\"GET_EXCHANGE_RATE\"] = \"getExchangeRate\";\n    YoursEventName[\"PURCHASE_ORDINAL\"] = \"purchaseOrdinalRequest\";\n    YoursEventName[\"PURCHASE_BSV20\"] = \"purchaseOrdinalRequest\";\n    YoursEventName[\"GENERATE_TAGGED_KEYS\"] = \"generateTaggedKeysRequest\";\n    YoursEventName[\"GET_TAGGED_KEYS\"] = \"getTaggedKeys\";\n    YoursEventName[\"INSCRIBE\"] = \"sendBsvRequest\";\n    YoursEventName[\"ENCRYPT\"] = \"encryptRequest\";\n    YoursEventName[\"DECRYPT\"] = \"decryptRequest\";\n    YoursEventName[\"SIGNED_OUT\"] = \"signedOut\";\n    YoursEventName[\"USER_CONNECT_RESPONSE\"] = \"userConnectResponse\";\n    YoursEventName[\"SEND_BSV_RESPONSE\"] = \"sendBsvResponse\";\n    YoursEventName[\"SEND_BSV20_RESPONSE\"] = \"sendBsv20Response\";\n    YoursEventName[\"TRANSFER_ORDINAL_RESPONSE\"] = \"transferOrdinalResponse\";\n    YoursEventName[\"PURCHASE_ORDINAL_RESPONSE\"] = \"purchaseOrdinalResponse\";\n    YoursEventName[\"SIGN_MESSAGE_RESPONSE\"] = \"signMessageResponse\";\n    YoursEventName[\"BROADCAST_RESPONSE\"] = \"broadcastResponse\";\n    YoursEventName[\"GET_SIGNATURES_RESPONSE\"] = \"getSignaturesResponse\";\n    YoursEventName[\"GENERATE_TAGGED_KEYS_RESPONSE\"] = \"generateTaggedKeysResponse\";\n    YoursEventName[\"ENCRYPT_RESPONSE\"] = \"encryptResponse\";\n    YoursEventName[\"DECRYPT_RESPONSE\"] = \"decryptResponse\";\n    YoursEventName[\"SYNC_UTXOS\"] = \"syncUtxos\";\n    YoursEventName[\"QUEUE_STATUS_UPDATE\"] = \"queueStatusUpdate\";\n    YoursEventName[\"IMPORT_STATUS_UPDATE\"] = \"importStatusUpdate\";\n    YoursEventName[\"FETCHING_TX_STATUS_UPDATE\"] = \"fetchingTx\";\n    YoursEventName[\"BLOCK_HEIGHT_UPDATE\"] = \"blockHeightUpdate\";\n    YoursEventName[\"SWITCH_ACCOUNT\"] = \"switchAccount\";\n})(YoursEventName || (YoursEventName = {}));\nexport var CustomListenerName;\n(function (CustomListenerName) {\n    CustomListenerName[\"YOURS_EMIT_EVENT\"] = \"YoursEmitEvent\";\n    CustomListenerName[\"YOURS_REQUEST\"] = \"YoursRequest\";\n    CustomListenerName[\"YOURS_RESPONSE\"] = \"YoursResponse\";\n})(CustomListenerName || (CustomListenerName = {}));\nconst createYoursMethod = (type) => {\n    return async (params) => {\n        return new Promise((resolve, reject) => {\n            const messageId = `${type}-${Date.now()}-${Math.random()}`;\n            const requestEvent = new CustomEvent(CustomListenerName.YOURS_REQUEST, {\n                detail: { messageId, type, params },\n            });\n            function onResponse(e) {\n                const responseEvent = e;\n                const { detail } = responseEvent;\n                if (detail.type === type) {\n                    if (detail.success) {\n                        resolve(detail.data);\n                    }\n                    else {\n                        reject(detail.error);\n                    }\n                }\n            }\n            self.addEventListener(messageId, onResponse, { once: true });\n            self.dispatchEvent(requestEvent);\n        });\n    };\n};\nconst whitelistedEvents = [YoursEventName.SIGNED_OUT, YoursEventName.SWITCH_ACCOUNT]; // Whitelisted event names\nconst createYoursEventEmitter = () => {\n    const eventListeners = new Map(); // Object to store event listeners\n    const on = (eventName, callback) => {\n        // Check if the provided event name is in the whitelist\n        if (whitelistedEvents.includes(eventName)) {\n            if (!eventListeners.has(eventName)) {\n                eventListeners.set(eventName, []);\n            }\n            eventListeners.get(eventName)?.push(callback);\n        }\n        else {\n            console.error('Event name is not whitelisted:', eventName);\n        }\n    };\n    const removeListener = (eventName, callback) => {\n        const listeners = eventListeners.get(eventName);\n        if (listeners) {\n            eventListeners.set(eventName, listeners.filter((fn) => fn !== callback));\n        }\n    };\n    const emit = (eventName, params) => {\n        const listeners = eventListeners.get(eventName);\n        if (listeners) {\n            listeners.forEach((callback) => callback(params));\n        }\n    };\n    return {\n        on,\n        removeListener,\n        emit,\n    };\n};\nconst { on, removeListener, emit } = createYoursEventEmitter();\nconst provider = {\n    isReady: true,\n    on,\n    removeListener,\n    connect: createYoursMethod(YoursEventName.CONNECT),\n    disconnect: createYoursMethod(YoursEventName.DISCONNECT),\n    isConnected: createYoursMethod(YoursEventName.IS_CONNECTED),\n    getPubKeys: createYoursMethod(YoursEventName.GET_PUB_KEYS),\n    getAddresses: createYoursMethod(YoursEventName.GET_ADDRESSES),\n    getNetwork: createYoursMethod(YoursEventName.GET_NETWORK),\n    getBalance: createYoursMethod(YoursEventName.GET_BALANCE),\n    getOrdinals: createYoursMethod(YoursEventName.GET_ORDINALS),\n    getBsv20s: createYoursMethod(YoursEventName.GET_BSV20S),\n    sendBsv: createYoursMethod(YoursEventName.SEND_BSV),\n    sendBsv20: createYoursMethod(YoursEventName.SEND_BSV20),\n    transferOrdinal: createYoursMethod(YoursEventName.TRANSFER_ORDINAL),\n    signMessage: createYoursMethod(YoursEventName.SIGN_MESSAGE),\n    broadcast: createYoursMethod(YoursEventName.BROADCAST),\n    getSignatures: createYoursMethod(YoursEventName.GET_SIGNATURES),\n    getSocialProfile: createYoursMethod(YoursEventName.GET_SOCIAL_PROFILE),\n    getPaymentUtxos: createYoursMethod(YoursEventName.GET_PAYMENT_UTXOS),\n    getExchangeRate: createYoursMethod(YoursEventName.GET_EXCHANGE_RATE),\n    purchaseOrdinal: createYoursMethod(YoursEventName.PURCHASE_ORDINAL),\n    purchaseBsv20: createYoursMethod(YoursEventName.PURCHASE_BSV20),\n    generateTaggedKeys: createYoursMethod(YoursEventName.GENERATE_TAGGED_KEYS),\n    getTaggedKeys: createYoursMethod(YoursEventName.GET_TAGGED_KEYS),\n    inscribe: createYoursMethod(YoursEventName.INSCRIBE),\n    encrypt: createYoursMethod(YoursEventName.ENCRYPT),\n    decrypt: createYoursMethod(YoursEventName.DECRYPT),\n};\nif (typeof window !== 'undefined') {\n    window.panda = provider;\n    window.yours = provider;\n}\n// Utility function to filter and emit only whitelisted events\nconst emitWhitelistedEvent = (action, params) => {\n    if (whitelistedEvents.includes(action)) {\n        emit(action, params);\n    }\n};\nself.addEventListener(CustomListenerName.YOURS_EMIT_EVENT, (event) => {\n    const emitEvent = event;\n    const { action, params } = emitEvent.detail;\n    emitWhitelistedEvent(action, params);\n});\n","import { Utils } from '@bsv/sdk';\nimport { NetWork } from 'yours-wallet-provider';\nimport { YoursEventName } from '../inject';\nimport { sendMessage } from '../utils/chromeHelpers';\nimport { CHROME_STORAGE_OBJECT_VERSION, HOSTED_YOURS_IMAGE, MAINNET_ADDRESS_PREFIX, TESTNET_ADDRESS_PREFIX, } from '../utils/constants';\nimport { decrypt } from '../utils/crypto';\nimport { deepMerge } from './serviceHelpers';\nexport class ChromeStorageService {\n    storage;\n    set = async (obj) => {\n        return new Promise((resolve, reject) => {\n            chrome.storage.local.set(obj, async () => {\n                if (chrome.runtime.lastError) {\n                    reject(chrome.runtime.lastError);\n                }\n                else {\n                    await this.getAndSetStorage();\n                    resolve();\n                }\n            });\n        });\n    };\n    get = async (keyOrKeys) => {\n        return new Promise((resolve, reject) => {\n            chrome.storage.local.get(keyOrKeys, (result) => {\n                if (chrome.runtime.lastError) {\n                    reject(chrome.runtime.lastError);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        });\n    };\n    remove = async (keyOrKeys) => {\n        return new Promise((resolve, reject) => {\n            chrome.storage.local.remove(keyOrKeys, () => {\n                if (chrome.runtime.lastError) {\n                    reject(chrome.runtime.lastError);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    };\n    clear = async () => {\n        return new Promise((resolve, reject) => {\n            chrome.storage.local.clear(() => {\n                if (chrome.runtime.lastError) {\n                    reject(chrome.runtime.lastError);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    };\n    mapDeprecatedStorageToNewInterface = async (oldStorage) => {\n        const { appState, colorTheme, derivationTags, encryptedKeys, exchangeRateCache, lastActiveTime, network, noApprovalLimit, passKey, popupWindowId, salt, socialProfile, whitelist, } = oldStorage;\n        const newInterface = {\n            accounts: {\n                [appState.addresses.identityAddress]: {\n                    name: 'Account 1',\n                    icon: socialProfile?.avatar ?? HOSTED_YOURS_IMAGE,\n                    encryptedKeys,\n                    derivationTags: derivationTags ?? [],\n                    settings: {\n                        noApprovalLimit: noApprovalLimit ?? 0,\n                        whitelist: whitelist ?? [],\n                        isPasswordRequired: appState.isPasswordRequired,\n                        socialProfile: {\n                            displayName: socialProfile?.displayName ?? 'Anonymous',\n                            avatar: socialProfile?.avatar ?? HOSTED_YOURS_IMAGE,\n                        },\n                        favoriteTokens: [],\n                        customFeeRate: 10,\n                    },\n                    addresses: {\n                        bsvAddress: appState.addresses.bsvAddress,\n                        ordAddress: appState.addresses.ordAddress,\n                        identityAddress: appState.addresses.identityAddress,\n                    },\n                    balance: {\n                        bsv: appState.balance?.bsv ?? 0,\n                        satoshis: appState.balance?.satoshis ?? 0,\n                        usdInCents: appState.balance?.usdInCents ?? 0,\n                    },\n                    pubKeys: {\n                        bsvPubKey: appState.pubKeys.bsvPubKey,\n                        ordPubKey: appState.pubKeys.ordPubKey,\n                        identityPubKey: appState.pubKeys.identityPubKey,\n                    },\n                    network: network ?? appState.network ?? NetWork.Mainnet,\n                },\n            },\n            selectedAccount: appState.addresses.identityAddress,\n            accountNumber: 1,\n            colorTheme,\n            isLocked: appState?.isLocked,\n            popupWindowId,\n            exchangeRateCache,\n            lastActiveTime,\n            passKey,\n            salt,\n            version: CHROME_STORAGE_OBJECT_VERSION,\n            hasUpgradedToSPV: false,\n        };\n        await this.set(newInterface);\n        await this.remove([\n            'appState',\n            'derivationTags',\n            'encryptedKeys',\n            'socialProfile',\n            'noApprovalLimit',\n            'network',\n            'paymentUtxos',\n            'whitelist',\n        ]);\n        return newInterface;\n    };\n    retrieveKeysFromOldStorage(storage) {\n        const { encryptedKeys, passKey, network } = storage;\n        try {\n            if (!encryptedKeys || !passKey)\n                return;\n            const d = decrypt(encryptedKeys, passKey);\n            const keys = JSON.parse(d);\n            const walletAddr = Utils.toBase58Check(Utils.fromBase58Check(keys.walletAddress).data, [\n                network === NetWork.Mainnet || !network ? MAINNET_ADDRESS_PREFIX : TESTNET_ADDRESS_PREFIX,\n            ]);\n            const ordAddr = Utils.toBase58Check(Utils.fromBase58Check(keys.ordAddress).data, [\n                network === NetWork.Mainnet || !network ? MAINNET_ADDRESS_PREFIX : TESTNET_ADDRESS_PREFIX,\n            ]);\n            let identityAddr = '';\n            let identityPubKey = '';\n            if (keys.identityAddress) {\n                identityAddr = Utils.toBase58Check(Utils.fromBase58Check(keys.identityAddress).data, [\n                    network === NetWork.Mainnet || !network ? MAINNET_ADDRESS_PREFIX : TESTNET_ADDRESS_PREFIX,\n                ]);\n                identityPubKey = keys.identityPubKey;\n            }\n            return {\n                ordAddress: ordAddr,\n                walletAddress: walletAddr,\n                walletPubKey: keys.walletPubKey,\n                ordPubKey: keys.ordPubKey,\n                identityAddress: identityAddr,\n                identityPubKey,\n            };\n        }\n        catch (error) {\n            console.log('Error in retrieveKeys:', error);\n        }\n    }\n    setOldAppStateIfMissing = async (storage) => {\n        if (!storage?.appState) {\n            const keys = this.retrieveKeysFromOldStorage(storage);\n            if (!keys)\n                return storage;\n            storage.appState = {\n                isLocked: true,\n                ordinals: [],\n                balance: { bsv: 0, satoshis: 0, usdInCents: 0 },\n                network: NetWork.Mainnet,\n                isPasswordRequired: true,\n                addresses: {\n                    bsvAddress: keys.walletAddress || '',\n                    ordAddress: keys.ordAddress || '',\n                    identityAddress: keys.identityAddress || '',\n                },\n                pubKeys: {\n                    bsvPubKey: keys.walletPubKey || '',\n                    ordPubKey: keys.ordPubKey || '',\n                    identityPubKey: keys?.identityPubKey || '',\n                },\n            };\n            await this.set(storage);\n            return storage;\n        }\n        return storage;\n    };\n    getAndSetStorage = async () => {\n        this.storage = await this.get(null); // fetches all chrome storage by passing null\n        if (!this.storage.version && !this.storage.hasUpgradedToSPV) {\n            this.storage = await this.setOldAppStateIfMissing(this.storage);\n            if (!this.storage.appState)\n                return;\n            this.storage = await this.mapDeprecatedStorageToNewInterface(this.storage);\n        }\n        return this.storage;\n    };\n    updateNested = async (key, update) => {\n        try {\n            const result = await this.get([key]);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const existingObject = (result[key] ?? {});\n            const mergedObject = deepMerge(existingObject, update);\n            const data = { [key]: mergedObject };\n            await this.set(data);\n        }\n        catch (error) {\n            throw new Error(`Failed to set nested object value: ${error}`);\n        }\n    };\n    removeNested = async (key, nestedKey) => {\n        try {\n            const result = await this.get([key]);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const existingObject = (result[key] ?? {});\n            delete existingObject[nestedKey];\n            const data = { [key]: existingObject };\n            await this.set(data);\n        }\n        catch (error) {\n            throw new Error(`Failed to remove nested object value: ${error}`);\n        }\n    };\n    update = async (obj) => {\n        try {\n            const result = await this.get(null); // Get all storage\n            const mergedObject = deepMerge(result, obj);\n            await this.set(mergedObject);\n        }\n        catch (error) {\n            throw new Error(`Failed to update storage: ${error}`);\n        }\n    };\n    getCurrentAccountObject = () => {\n        if (this.storage === null || this.storage === undefined) {\n            throw new Error('Storage is not initialized.');\n        }\n        const { accounts, selectedAccount } = this.storage;\n        if (!accounts) {\n            return this.storage;\n        }\n        return {\n            selectedAccount,\n            account: accounts[selectedAccount],\n            exchangeRateCache: this.storage.exchangeRateCache,\n            isLocked: this.storage.isLocked,\n            lastActiveTime: this.storage.lastActiveTime,\n            passKey: this.storage.passKey,\n            salt: this.storage.salt,\n        };\n    };\n    getNetwork = () => {\n        if (this.storage === null || this.storage === undefined) {\n            throw new Error('Storage is not initialized.');\n        }\n        const { accounts, selectedAccount } = this.storage;\n        if (!accounts || !selectedAccount) {\n            return NetWork.Mainnet;\n        }\n        const account = accounts[selectedAccount];\n        const { network } = account;\n        return network ?? NetWork.Mainnet;\n    };\n    getCustomFeeRate = () => {\n        if (!this.storage)\n            return 10;\n        const { accounts, selectedAccount } = this.storage;\n        if (!accounts || !selectedAccount)\n            return 10;\n        return accounts[selectedAccount]?.settings?.customFeeRate ?? 10;\n    };\n    isPasswordRequired = () => {\n        if (this.storage === null || this.storage === undefined) {\n            return true;\n        }\n        const { accounts, selectedAccount } = this.storage;\n        if (!accounts || !selectedAccount) {\n            return true;\n        }\n        const account = accounts[selectedAccount];\n        if (account.settings.isPasswordRequired === undefined) {\n            return true;\n        }\n        return account.settings.isPasswordRequired;\n    };\n    getAllAccounts = () => {\n        if (this.storage === null || this.storage === undefined) {\n            return [];\n        }\n        const { accounts } = this.storage;\n        if (!accounts)\n            return [];\n        const accountsArray = Object.entries(accounts).map(([address, account]) => ({\n            ...account,\n            address,\n        }));\n        return accountsArray;\n    };\n    switchAccount = async (identityAddress) => {\n        await this.update({ selectedAccount: identityAddress });\n        sendMessage({ action: YoursEventName.SWITCH_ACCOUNT });\n    };\n}\n","import axios from 'axios';\nimport { NetWork } from 'yours-wallet-provider';\nimport { GP_BASE_URL, GP_TESTNET_BASE_URL } from '../utils/constants';\nimport { isBSV20v2 } from '../utils/ordi';\nexport class GorillaPoolService {\n    chromeStorageService;\n    constructor(chromeStorageService) {\n        this.chromeStorageService = chromeStorageService;\n    }\n    getBaseUrl(network) {\n        return network === NetWork.Mainnet ? GP_BASE_URL : GP_TESTNET_BASE_URL;\n    }\n    getUtxoByOutpoint = async (outpoint) => {\n        try {\n            const network = this.chromeStorageService.getNetwork();\n            const { data } = await axios.get(`${this.getBaseUrl(network)}/api/txos/${outpoint}?script=true`);\n            const ordUtxo = data;\n            if (!ordUtxo.script)\n                throw Error('No script when fetching by outpoint');\n            return ordUtxo;\n        }\n        catch (e) {\n            throw new Error(JSON.stringify(e));\n        }\n    };\n    getTokenPriceInSats = async (tokenIds) => {\n        const network = this.chromeStorageService.getNetwork();\n        const result = [];\n        for (const tokenId of tokenIds) {\n            const { data } = await axios.get(`${this.getBaseUrl(network)}/api/bsv20/market?sort=price_per_token&dir=asc&limit=1&offset=0&${tokenId.length > 30 ? 'id' : 'tick'}=${tokenId}`);\n            if (data.length > 0) {\n                result.push({ id: tokenId, satPrice: data[0].pricePer });\n            }\n        }\n        return result;\n    };\n    getBsv20Balances = async (addresses) => {\n        const network = this.chromeStorageService.getNetwork();\n        const url = `${this.getBaseUrl(network)}/api/bsv20/balance?addresses=${addresses.join('&addresses=')}`;\n        const res = await axios.get(url);\n        const bsv20List = res.data.map((b) => {\n            const id = (b.tick || b.id);\n            return {\n                id: id,\n                tick: b.tick,\n                sym: b.sym || null,\n                icon: b.icon || null,\n                dec: b.dec,\n                all: {\n                    confirmed: BigInt(b.all.confirmed),\n                    pending: BigInt(b.all.pending),\n                },\n                listed: {\n                    confirmed: BigInt(b.all.confirmed),\n                    pending: BigInt(b.all.pending),\n                },\n            };\n        });\n        return bsv20List;\n    };\n    getBSV20Utxos = async (tick, addresses = []) => {\n        try {\n            const network = this.chromeStorageService.getNetwork();\n            const utxos = [];\n            await Promise.all(addresses.map(async (address) => {\n                const url = isBSV20v2(tick)\n                    ? `${this.getBaseUrl(network)}/api/bsv20/${address}/id/${tick}?limit=10000`\n                    : `${this.getBaseUrl(network)}/api/bsv20/${address}/tick/${tick}?limit=10000`;\n                const r = await axios.get(url);\n                r.data.forEach((utxo) => {\n                    if (utxo.status === 1 && !utxo.listing)\n                        utxos.push(utxo);\n                });\n            }));\n            return utxos;\n        }\n        catch (error) {\n            console.error('getBSV20Utxos', error);\n            return [];\n        }\n    };\n    getBsv20Details = async (tick) => {\n        try {\n            const network = this.chromeStorageService.getNetwork();\n            const url = isBSV20v2(tick)\n                ? `${this.getBaseUrl(network)}/api/bsv20/id/${tick}`\n                : `${this.getBaseUrl(network)}/api/bsv20/tick/${tick}`;\n            const r = await axios.get(url);\n            return r.data;\n        }\n        catch (error) {\n            console.error('getBsv20Details', error);\n        }\n    };\n}\n","import { PrivateKey } from '@bsv/sdk';\nimport { TxoLookup, TxoSort } from 'spv-store';\nimport { NetWork } from 'yours-wallet-provider';\nimport { decryptUsingPrivKey } from '../utils/crypto';\nimport { getTaggedDerivationKeys } from '../utils/keys';\nimport { convertAddressToMainnet, convertAddressToTestnet } from '../utils/tools';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const deepMerge = (target, source) => {\n    for (const key of Object.keys(source)) {\n        if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n            if (!target[key]) {\n                target[key] = {};\n            }\n            deepMerge(target[key], source[key]);\n        }\n        else {\n            target[key] = source[key];\n        }\n    }\n    return target;\n};\nexport const setDerivationTags = async (keys, oneSatSPV, chromeStorageService) => {\n    const ordsWithPandaTag = await oneSatSPV.search(new TxoLookup('origin', 'type', 'panda/tag', keys.identityAddress), TxoSort.DESC, 0);\n    const ordsWithYoursTag = await oneSatSPV.search(new TxoLookup('origin', 'type', 'yours/tag', keys.identityAddress), TxoSort.DESC, 0);\n    const taggedOrds = ordsWithPandaTag.txos.concat(ordsWithYoursTag.txos);\n    const tags = [];\n    const network = chromeStorageService.getNetwork();\n    for (const ord of taggedOrds) {\n        try {\n            const content = ord.data.origin.data?.insc?.file?.content;\n            if (!content)\n                continue;\n            const contentBuffer = Buffer.from(content);\n            if (!contentBuffer || contentBuffer.length === 0)\n                continue;\n            const derivationTag = decryptUsingPrivKey([Buffer.from(contentBuffer).toString('base64')], PrivateKey.fromWif(keys.identityWif));\n            const parsedTag = JSON.parse(Buffer.from(derivationTag[0], 'base64').toString('utf8'));\n            const taggedKeys = getTaggedDerivationKeys(parsedTag, keys.mnemonic);\n            const taggedAddress = network === NetWork.Mainnet\n                ? convertAddressToMainnet(taggedKeys.address)\n                : convertAddressToTestnet(taggedKeys.address);\n            tags.push({ tag: parsedTag, address: taggedAddress, pubKey: taggedKeys.pubKey.toString() });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    const { account } = chromeStorageService.getCurrentAccountObject();\n    if (!account)\n        throw new Error('No account found!');\n    const key = 'accounts';\n    const update = {\n        [account.addresses.identityAddress]: {\n            ...account,\n            derivationTags: tags,\n        },\n    };\n    await chromeStorageService.updateNested(key, update);\n};\n","export const theme = {\n    color: {\n        component: {\n            bottomMenuBackground: '#010101',\n            bottomMenuText: '#FFFFFF',\n            ordinalSelectedBorder: '#A1FF8B',\n            ordinalTypeJson: '#34D399',\n            ordinalTypePlainText: '#34D399',\n            ordinalTypeUnsupported: '#FFFFFF',\n            pageLoaderSpinner: '#A1FF8B',\n            pageLoaderSpinnerBorder: '#FFFFFF50',\n            pageLoaderText: '#FFFFFF',\n            primaryButtonLeftGradient: '#A1FF8B',\n            primaryButtonRightGradient: '#34D399',\n            primaryButtonText: '#010101',\n            progressBar: '#34D399',\n            progressBarTrack: '#F5F5F5',\n            queueBannerSynced: '#34D399',\n            queueBannerSyncedText: '#000000',\n            queueBannerSyncing: '#F79009',\n            queueBannerSyncingText: '#000000',\n            secondaryOutlineButtonGradientLeft: '#A1FF8B',\n            secondaryOutlineButtonGradientRight: '#34D399',\n            secondaryOutlineButtonText: '#010101',\n            snackbarError: '#FF4646',\n            snackbarErrorText: '#000000',\n            snackbarSuccess: '#34D399',\n            snackbarSuccessText: '#000000',\n            snackbarWarning: '#F79009',\n            snackbarWarningText: '#000000',\n            tabSelectedLeftGradient: '#A1FF8B',\n            tabSelectedRightGradient: '#34D399',\n            tabSelectedText: '#010101',\n            tabUnselected: '#17191E',\n            tabUnselectedText: '#FFFFFF',\n            toggleSwitchOn: '#34D399',\n            warningButton: '#FF4646',\n            warningButtonText: '#FFFFFF',\n        },\n        global: {\n            neutral: '#000000',\n            gray: '#98A2B3',\n            row: '#17191E',\n            walletBackground: '#010101',\n            contrast: '#FFFFFF',\n        },\n    },\n    settings: {\n        repo: 'https://github.com/yours-org/yours-wallet',\n        services: {\n            apps: true,\n            bsv20: true,\n            locks: true,\n            ordinals: true,\n        },\n        walletName: 'Yours',\n    },\n};\n","import { HOSTED_YOURS_IMAGE } from './constants';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const sendMessage = (message) => {\n    try {\n        chrome.runtime.sendMessage(message, () => {\n            if (chrome.runtime.lastError) {\n                console.warn(chrome.runtime.lastError.message);\n            }\n        });\n    }\n    catch (error) {\n        console.error(error);\n    }\n};\nexport const removeWindow = (windowId) => {\n    try {\n        chrome.windows.remove(windowId, () => {\n            if (chrome.runtime.lastError) {\n                console.warn(chrome.runtime.lastError.message);\n            }\n        });\n    }\n    catch (error) {\n        console.error(error);\n    }\n};\nexport const sendTransactionNotification = (newTxCount) => {\n    // Create the Chrome notification\n    chrome.notifications.create({\n        type: 'basic',\n        iconUrl: HOSTED_YOURS_IMAGE,\n        title: 'New Transactions',\n        message: `Your SPV wallet has received ${newTxCount} new transaction${newTxCount > 1 ? 's' : ''}!`,\n        priority: 2,\n    }, (notificationId) => {\n        if (chrome.runtime.lastError) {\n            console.error('Notification error:', chrome.runtime.lastError.message || chrome.runtime.lastError);\n        }\n        else {\n            console.log('Notification sent:', notificationId);\n        }\n    });\n};\n","import { NetWork } from 'yours-wallet-provider';\nexport const WOC_BASE_URL = 'https://api.whatsonchain.com/v1/bsv/main';\nexport const WOC_TESTNET_BASE_URL = 'https://api.whatsonchain.com/v1/bsv/test';\nexport const URL_WHATSINCHAIN = 'https://whatsonchain.com/tx/';\nexport const GP_BASE_URL = 'https://ordinals.gorillapool.io';\nexport const JUNGLE_BUS_URL = 'https://junglebus.gorillapool.io';\nexport const GP_TESTNET_BASE_URL = 'https://testnet.ordinals.gorillapool.io';\nexport const GORILLA_POOL_ARC_URL = 'https://arc.gorillapool.io/v1';\nexport const MAINNET_ADDRESS_PREFIX = 0x00;\nexport const TESTNET_ADDRESS_PREFIX = 0x6f;\nexport const BSV_DECIMAL_CONVERSION = 100000000;\nexport const BSV20_INDEX_FEE = 1000;\nexport const FEE_PER_KB = 10;\nexport const MAX_BYTES_PER_TX = 50000000; // 50MB;\nexport const GLOBAL_ORDERBOOK_MARKET_RATE = 0.05;\nexport const FEE_SATS = 125;\nexport const P2PKH_INPUT_SIZE = 148;\nexport const P2PKH_OUTPUT_SIZE = 34;\nexport const DUST = 10;\nexport const INACTIVITY_LIMIT = 10 * 60 * 1000; // 10 minutes\nexport const SNACKBAR_TIMEOUT = 3 * 1000; // 2.5 seconds\nexport const HOSTED_YOURS_IMAGE = 'https://i.ibb.co/zGcthBv/yours-org-light.png';\nexport const YOURS_DEV_WALLET = '1MtzWXQEYGp89bQ9U2nfrnuChFv37j6pV6';\nexport const PROVIDER_DOCS_URL = 'https://yours-wallet.gitbook.io/provider-api/intro/introduction';\nexport const ONE_SAT_MARKET_URL = 'https://1sat.market/market';\nexport const GENERIC_TOKEN_ICON = 'https://static-00.iconduck.com/assets.00/generic-cryptocurrency-icon-2048x2029-vzaeox5w.png';\nexport const GENERIC_NFT_ICON = 'https://cdn-icons-png.flaticon.com/512/6228/6228867.png';\nexport const KNOWN_BURN_ADDRESSES = ['1111111111111111111114oLvT2', '1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa'];\nexport const DEFAULT_WALLET_PATH = \"m/44'/236'/0'/1/0\";\nexport const DEFAULT_ORD_PATH = \"m/44'/236'/1'/0/0\";\nexport const DEFAULT_RELAYX_ORD_PATH = \"m/44'/236'/0'/2/0\";\nexport const SWEEP_PATH = \"m/44'/236'/0'/0/0\";\nexport const DEFAULT_IDENTITY_PATH = \"m/0'/236'/0'/0/0\";\nexport const DEFAULT_TWETCH_WALLET_PATH = 'm/0/0';\nexport const DEFAULT_AYM_WALLET_PATH = 'm/0/0';\nexport const DEFAULT_AYM_ORD_PATH = 'm';\nexport const DEFAULT_SIGHASH_TYPE = 65; // SIGHASH_ALL | SIGHASH_FORKID\nexport const CHROME_STORAGE_OBJECT_VERSION = 1;\nexport const SCRYPT_PREFIX = '2097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0000';\nexport const O_LOCK_SUFFIX = '615179547a75537a537a537a0079537a75527a527a7575615579008763567901c161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169587951797e58797eaa577961007982775179517958947f7551790128947f77517a75517a75618777777777777777777767557951876351795779a9876957795779ac777777777777777767006868';\nexport const LOCK_SUFFIX = '610079040065cd1d9f690079547a75537a537a537a5179537a75527a527a7575615579014161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169557961007961007982775179517954947f75517958947f77517a75517a756161007901007e81517a7561517a7561040065cd1d9f6955796100796100798277517951790128947f755179012c947f77517a75517a756161007901007e81517a7561517a756105ffffffff009f69557961007961007982775179517954947f75517958947f77517a75517a756161007901007e81517a7561517a75615279a2695679a95179876957795779ac7777777777777777';\n// Featured 3rd party integrations\nexport const featuredApps = [\n    {\n        icon: 'https://avatars.githubusercontent.com/u/159480043?s=400&u=8b1a3850d6e233f4d59af3275fe9e5e3fd81dcb3&v=4',\n        name: 'Yours',\n        link: 'https://yours.org',\n    },\n    {\n        icon: 'https://pbs.twimg.com/profile_images/1469020626912354306/4WA3cIs3_400x400.jpg',\n        name: 'Take It NFT',\n        link: 'https://www.takeitnft.com/marketplace/global',\n    },\n    {\n        icon: 'https://taleofshua.com/assets/shua_swd_512.png',\n        name: 'Tale of Shua',\n        link: 'https://taleofshua.com/profile/',\n    },\n    {\n        icon: 'https://avatars.githubusercontent.com/u/52027588?v=4',\n        name: 'sCrypt',\n        link: 'https://docs.scrypt.io/tokens/tutorials/ordinal-lock/#use-panda-wallet',\n    },\n    {\n        icon: 'https://pbs.twimg.com/profile_images/1555622553799892993/m0C6BWiv_400x400.jpg',\n        name: 'Haste Arcade',\n        link: 'https://hastearcade.com',\n    },\n];\nexport const DEFAULT_ACCOUNT = {\n    network: NetWork.Mainnet,\n    addresses: { bsvAddress: '', ordAddress: '', identityAddress: '' },\n    pubKeys: { bsvPubKey: '', ordPubKey: '', identityPubKey: '' },\n    settings: {\n        noApprovalLimit: 0,\n        whitelist: [],\n        isPasswordRequired: true,\n        socialProfile: { avatar: HOSTED_YOURS_IMAGE, displayName: 'Anonymous' },\n        favoriteTokens: [],\n        customFeeRate: 10,\n    },\n    balance: { bsv: 0, satoshis: 0, usdInCents: 0 },\n    encryptedKeys: '',\n    derivationTags: [],\n    icon: HOSTED_YOURS_IMAGE,\n    name: 'Account 1',\n    ordinals: [],\n    paymentUtxos: [],\n};\n","import { ECIES, Utils } from '@bsv/sdk';\nimport CryptoJS from 'crypto-js';\nexport const deriveKey = (password, salt) => {\n    const key = CryptoJS.PBKDF2(password, salt, {\n        keySize: 256 / 32,\n        iterations: 100000,\n    });\n    return key.toString(CryptoJS.enc.Hex);\n};\nexport const generateRandomSalt = (length = 16) => {\n    return CryptoJS.lib.WordArray.random(length).toString(CryptoJS.enc.Hex);\n};\nexport const encrypt = (textToEncrypt, password) => {\n    const salt = CryptoJS.lib.WordArray.random(128 / 8); // 128-bit salt\n    const key256Bits = CryptoJS.PBKDF2(password, salt, {\n        keySize: 256 / 32,\n        iterations: 1000,\n    });\n    // IV (initialization vector) - we generate a random one\n    const iv = CryptoJS.lib.WordArray.random(128 / 8);\n    const ciphertext = CryptoJS.AES.encrypt(textToEncrypt, key256Bits, {\n        iv: iv,\n    });\n    // We concatenate the salt and the IV before the ciphertext\n    const saltedCiphertext = salt.toString() + iv.toString() + ciphertext.toString();\n    return saltedCiphertext;\n};\nexport const decrypt = (saltedCiphertext, password) => {\n    const salt = CryptoJS.enc.Hex.parse(saltedCiphertext.slice(0, 32));\n    const iv = CryptoJS.enc.Hex.parse(saltedCiphertext.slice(32, 64));\n    const ciphertext = saltedCiphertext.slice(64);\n    const key256Bits = CryptoJS.PBKDF2(password, salt, {\n        keySize: 256 / 32,\n        iterations: 1000,\n    });\n    const bytes = CryptoJS.AES.decrypt(ciphertext, key256Bits, { iv: iv });\n    const originalText = bytes.toString(CryptoJS.enc.Utf8);\n    return originalText;\n};\nexport const encryptUsingPrivKey = (message, encoding = 'utf8', pubKeys, privateKey) => {\n    const msgBuf = Utils.toArray(message, encoding);\n    return pubKeys.map((pubKey) => Utils.toBase64(ECIES.electrumEncrypt(msgBuf, pubKey, privateKey)));\n};\nexport const decryptUsingPrivKey = (messages, privateKey) => {\n    return messages.map((m) => Utils.toBase64(ECIES.electrumDecrypt(Utils.toArray(m, 'base64'), privateKey)));\n};\n","import { P2PKH, Script, Utils } from '@bsv/sdk';\nexport const ContentType = {\n    BSV20: 'application/bsv-20',\n};\nfunction isOrdinalAfterP2PKH(script) {\n    const chunks = script\n        .toASM()\n        .split(' ')\n        .map((c) => c.trim());\n    return (chunks.length === 13 &&\n        chunks[0] === 'OP_DUP' &&\n        chunks[1] === 'OP_HASH160' &&\n        Buffer.from(chunks[2], 'hex').length === 20 &&\n        chunks[3] === 'OP_EQUALVERIFY' &&\n        chunks[4] === 'OP_CHECKSIG' &&\n        chunks[5] === '0' &&\n        chunks[6] === 'OP_IF' &&\n        chunks[7] === '6f7264' &&\n        chunks[8] === 'OP_1' &&\n        Buffer.from(chunks[9], 'hex').length > 0 &&\n        chunks[10] === '0' &&\n        Buffer.from(chunks[11], 'hex').length > 0 &&\n        chunks[12] === 'OP_ENDIF');\n}\nfunction isOrdinalBeforeP2PKH(script) {\n    const chunks = script\n        .toASM()\n        .split(' ')\n        .map((c) => c.trim());\n    return (chunks.length === 13 &&\n        chunks[0] === '0' &&\n        chunks[1] === 'OP_IF' &&\n        chunks[2] === '6f7264' &&\n        chunks[3] === 'OP_1' &&\n        Buffer.from(chunks[4], 'hex').length > 0 &&\n        chunks[5] === '0' &&\n        Buffer.from(chunks[6], 'hex').length > 0 &&\n        chunks[7] === 'OP_ENDIF' &&\n        chunks[8] === 'OP_DUP' &&\n        chunks[9] === 'OP_HASH160' &&\n        Buffer.from(chunks[10], 'hex').length === 20 &&\n        chunks[11] === 'OP_EQUALVERIFY' &&\n        chunks[12] === 'OP_CHECKSIG');\n}\nexport function isOrdinalP2PKH(script) {\n    return isOrdinalAfterP2PKH(script) || isOrdinalBeforeP2PKH(script);\n}\nfunction get_at(script, index) {\n    const chunks = script\n        .toASM()\n        .split(' ')\n        .map((c) => c.trim());\n    return chunks[index];\n}\nexport function getInscription(script) {\n    if (isOrdinalAfterP2PKH(script)) {\n        return {\n            content: fromByteString(get_at(script, 11)),\n            contentType: fromByteString(get_at(script, 9)),\n        };\n    }\n    if (isOrdinalBeforeP2PKH(script)) {\n        return {\n            content: fromByteString(get_at(script, 6)),\n            contentType: fromByteString(get_at(script, 4)),\n        };\n    }\n}\nexport function getBsv20v1(script) {\n    const i = getInscription(script);\n    if (!i) {\n        throw new Error(`doesn't contains any inscription!`);\n    }\n    const { contentType, content } = i;\n    if (contentType !== ContentType.BSV20) {\n        throw new Error(`invalid bsv20 contentType: ${contentType}`);\n    }\n    const bsv20P = 'bsv-20';\n    const bsv20 = JSON.parse(content);\n    if (bsv20.p === bsv20P && bsv20.op === 'deploy' && typeof bsv20.tick === 'string' && typeof bsv20.max === 'string') {\n        // BSV20V1_DEPLOY_JSON\n        return bsv20;\n    }\n    else if (bsv20.p === bsv20P &&\n        bsv20.op === 'mint' &&\n        typeof bsv20.tick === 'string' &&\n        typeof bsv20.amt === 'string') {\n        // BSV20V1_MINT_JSON\n        return bsv20;\n    }\n    else if (bsv20.p === bsv20P &&\n        bsv20.op === 'transfer' &&\n        typeof bsv20.tick === 'string' &&\n        typeof bsv20.amt === 'string') {\n        // BSV20V1_TRANSFER_JSON\n        return bsv20;\n    }\n    throw new Error(`invalid bsv20 v1 json, ${content}`);\n}\nexport function getBsv20v2(script) {\n    const i = getInscription(script);\n    if (!i) {\n        throw new Error(`doesn't contains any inscription!`);\n    }\n    const { contentType, content } = i;\n    if (contentType !== ContentType.BSV20) {\n        throw new Error(`invalid bsv20 contentType: ${contentType}`);\n    }\n    const bsv20 = JSON.parse(content);\n    const bsv20P = 'bsv-20';\n    if (bsv20.p === bsv20P && bsv20.op === 'deploy+mint' && typeof bsv20.amt === 'string') {\n        // BSV20V2_DEPLOY_MINT_JSON\n        return bsv20;\n    }\n    else if (bsv20.p === bsv20P &&\n        bsv20.op === 'transfer' &&\n        typeof bsv20.id === 'string' &&\n        typeof bsv20.amt === 'string') {\n        // BSV20V2_TRANSFER_JSON\n        return bsv20;\n    }\n    throw new Error(`invalid bsv20 v2 json, ${content}`);\n}\nexport function getAmtv1(script) {\n    const bsv20 = getBsv20v1(script);\n    if (bsv20.op === 'mint' || bsv20.op === 'transfer') {\n        return BigInt(bsv20.amt);\n    }\n    throw new Error(`invalid bsv20 op: ${bsv20.op}`);\n}\nexport function getAmtv2(script) {\n    const bsv20 = getBsv20v2(script);\n    return BigInt(bsv20.amt);\n}\nexport function create(inscription) {\n    const contentTypeBytes = toByteString(inscription.contentType);\n    const contentBytes = inscription.content instanceof Buffer\n        ? toByteString(inscription.content.toString('hex'))\n        : toByteString(inscription.content);\n    const asm = `OP_0 OP_IF 6f7264 OP_1 ${contentTypeBytes} OP_0 ${contentBytes} OP_ENDIF`;\n    return Script.fromASM(asm);\n}\nexport function createTransfer(tick, amt) {\n    return create({\n        content: JSON.stringify({\n            p: 'bsv-20',\n            op: 'transfer',\n            tick,\n            amt: amt.toString().replace(/n/, ''),\n        }),\n        contentType: ContentType.BSV20,\n    });\n}\nexport function createTransferP2PKH(address, tick, amt) {\n    return Script.fromHex(new P2PKH().lock(Utils.fromBase58Check(address).data).toHex() + createTransfer(tick, amt).toHex());\n}\nexport function createTransferV2(id, amt) {\n    return create({\n        content: JSON.stringify({\n            p: 'bsv-20',\n            op: 'transfer',\n            id,\n            amt: amt.toString().replace(/n/, ''),\n        }),\n        contentType: ContentType.BSV20,\n    });\n}\nexport function createTransferV2P2PKH(address, id, amt) {\n    return Script.fromHex(new P2PKH().lock(Utils.fromBase58Check(address).data).toHex() + createTransferV2(id, amt).toHex());\n}\nexport function fromByteString(bs) {\n    const encoder = new TextDecoder();\n    return encoder.decode(Buffer.from(bs, 'hex'));\n}\nexport function toByteString(str) {\n    const encoder = new TextEncoder();\n    const uint8array = encoder.encode(str);\n    return Buffer.from(uint8array).toString('hex');\n}\nexport function showAmount(amt, dec) {\n    const amtStr = amt.toString().replace(/n/, '');\n    if (dec === 0) {\n        return amtStr;\n    }\n    const left = amt / BigInt(Math.pow(10, dec));\n    const right = amt % BigInt(Math.pow(10, dec));\n    const rightStr = right.toString().padStart(dec, '0');\n    if (right > 0) {\n        return `${left}.${rightStr}`;\n    }\n    return `${left}`;\n}\nexport function normalize(amt, dec) {\n    if (dec === 0) {\n        if (/\\d+\\.\\d+/.test(amt)) {\n            return amt.split('.')[0];\n        }\n        return amt;\n    }\n    else {\n        if (/\\d+\\.\\d+/.test(amt)) {\n            const [l, r] = amt.split('.');\n            return (BigInt(l) * BigInt(Math.pow(10, dec)) + BigInt(r.slice(0, dec))).toString().replace(/n/, '');\n        }\n        else {\n            return amt.split('.')[0] + Math.pow(10, dec).toString().replace(/1/, '');\n        }\n    }\n}\nexport function isBSV20v2(tick) {\n    return /^[a-fA-F0-9]{64}_\\d+$/.test(tick);\n}\n","import { Utils } from '@bsv/sdk';\nexport function mapOrdinal(t) {\n    return {\n        txid: t.outpoint.txid,\n        vout: t.outpoint.vout,\n        outpoint: t.outpoint.toString(),\n        satoshis: Number(t.satoshis),\n        script: Utils.toBase64(t.script),\n        owner: t.owner,\n        spend: '',\n        origin: t.data.origin && {\n            outpoint: t.data.origin.data.outpoint,\n            nonce: Number(t.data.origin.data.nonce),\n            num: t.block.height < 50000000 ? `${t.block.height}:${t.block.idx}:${t.outpoint.vout}` : undefined,\n            data: {\n                insc: {\n                    file: t.data?.origin?.data?.insc?.file && {\n                        type: t.data.origin.data.insc.file.type,\n                        size: Number(t.data.origin.data.insc.file.size),\n                        hash: t.data.origin.data.insc.file.hash,\n                        text: (t.data.origin?.data?.insc?.file?.type.startsWith('text') ||\n                            t.data.origin?.data?.insc?.file?.type.startsWith('application/op-ns')) &&\n                            t.data.origin.data.insc?.file?.content &&\n                            Utils.toUTF8(t.data.origin.data.insc.file.content),\n                        json: t.data.origin?.data?.insc?.file?.type.startsWith('application/json') &&\n                            t.data.origin?.data?.insc?.file?.content &&\n                            JSON.parse(Utils.toUTF8(t.data.origin.data.insc.file.content)),\n                    },\n                },\n                map: t.data.origin.data?.map,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                sigma: (t.data.origin.data?.sigma?.data || []).map((s) => ({\n                    ...s,\n                    signature: Utils.toBase64(s.signature),\n                })),\n            },\n        },\n        height: t.block?.height,\n        idx: Number(t.block?.idx),\n        data: {\n            insc: {\n                file: t.data?.insc?.data?.file && {\n                    type: t.data.insc.data.file.type,\n                    size: t.data.insc.data.file.size,\n                    hash: t.data.insc.data.file.hash,\n                    text: t.data.insc?.data?.file?.type.startsWith('text') &&\n                        t.data.insc.data.file.content &&\n                        Utils.toUTF8(t.data.insc.data.file.content),\n                    json: t.data.insc?.data?.file?.type.startsWith('application/json') &&\n                        t.data.insc.data.file.content &&\n                        JSON.parse(Utils.toUTF8(t.data.insc.data.file.content)),\n                },\n            },\n            list: t.data.list && {\n                payout: Utils.toBase58(t.data.list.data.payout),\n                price: Number(t.data.list.data.price),\n            },\n            lock: t.data.lock?.data,\n            map: t.data.map?.data,\n            bsv20: (t.data.bsv20?.data || t.data.bsv21?.data) && {\n                ...(t.data.bsv20?.data || t.data.bsv21?.data),\n                amt: Number(t.data.bsv20?.data?.amt || t.data.bsv21?.data?.amt),\n            },\n            // TODO (DAVID CASE): add sigma\n        },\n    };\n}\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/czech.json');\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/portuguese.json');\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = sha256_1.sha256(Uint8Array.from(entropyBuffer));\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Uint8Array.from(Buffer.from(normalize(mnemonic), 'utf8'));\n    const saltBuffer = Uint8Array.from(Buffer.from(salt(normalize(password)), 'utf8'));\n    const res = pbkdf2_1.pbkdf2(sha512_1.sha512, mnemonicBuffer, saltBuffer, {\n        c: 2048,\n        dkLen: 64,\n    });\n    return Buffer.from(res);\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    const mnemonicBuffer = Uint8Array.from(Buffer.from(normalize(mnemonic), 'utf8'));\n    const saltBuffer = Uint8Array.from(Buffer.from(salt(normalize(password)), 'utf8'));\n    return pbkdf2_1.pbkdf2Async(sha512_1.sha512, mnemonicBuffer, saltBuffer, {\n        c: 2048,\n        dkLen: 64,\n    }).then((res) => Buffer.from(res));\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || ((size) => Buffer.from(utils_1.randomBytes(size)));\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"), require(\"./blowfish\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\", \"./blowfish\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.YoursIcon = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar YoursIcon = function (props) {\n    return ((0, jsx_runtime_1.jsxs)(\"svg\", { width: props.size, height: props.size, viewBox: \"0 0 32 38\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: [(0, jsx_runtime_1.jsxs)(\"g\", { filter: \"url(#filter0_dd_503_133)\", children: [(0, jsx_runtime_1.jsx)(\"path\", { d: \"M24.5381 23.031C24.5383 25.5506 23.6971 27.9982 22.148 29.9854C20.7442 31.7861 18.832 33.1152 16.6673 33.8061C16.3251 33.9153 15.9869 33.6517 15.9869 33.2924V30.0716C15.9869 29.6329 16.2511 29.2428 16.6326 29.0262C17.5831 28.4867 18.395 27.727 18.9976 26.8069C19.7325 25.6847 20.1242 24.3725 20.1246 23.031C20.1248 22.74 20.1069 22.4494 20.0708 22.1607C19.8778 20.6567 19.1954 19.258 18.1288 18.1802C18.0268 18.0754 17.9206 17.9747 17.8102 17.8782C16.8727 17.0443 15.7255 16.482 14.492 16.2518C13.2586 16.0217 11.9858 16.1324 10.8106 16.572C9.74214 15.4956 9.05941 14.0962 8.86865 12.5916C10.9508 11.7221 13.2455 11.4954 15.4575 11.9405C17.6696 12.3856 19.6979 13.4822 21.2818 15.0893C21.3756 15.1831 21.468 15.2797 21.5576 15.379C21.9853 15.842 22.3724 16.3408 22.7148 16.8699C23.847 18.6051 24.478 20.6193 24.5381 22.6903C24.5381 22.8034 24.5381 22.9165 24.5381 23.031Z\", fill: \"url(#paint0_linear_503_133)\" }), (0, jsx_runtime_1.jsx)(\"path\", { d: \"M20.0708 22.1606C18.6896 22.7366 17.2076 23.0324 15.7111 23.0309H15.4918C13.4865 22.9904 11.5278 22.4182 9.81608 21.3728C8.10432 20.3274 6.70077 18.8463 5.74886 17.0809C5.54475 16.7029 5.36282 16.3136 5.20391 15.9149C5.05428 15.5394 5.14812 15.112 5.4409 14.8333C6.43642 13.8859 7.59771 13.1266 8.86869 12.5942C9.05945 14.0989 9.74218 15.4983 10.8107 16.5747C10.9569 16.7218 11.109 16.8625 11.2672 16.9968C12.1899 17.7746 13.3005 18.2967 14.4881 18.5109C15.6758 18.7251 16.8988 18.6239 18.0351 18.2174L18.1275 18.1829C19.1941 19.2607 19.8765 20.6594 20.0695 22.1634L20.0708 22.1606Z\", fill: \"url(#paint1_linear_503_133)\" }), (0, jsx_runtime_1.jsx)(\"path\", { d: \"M27.0206 11.7209C27.0234 14.5949 25.9287 17.3616 23.9601 19.4556C23.659 18.5452 23.2418 17.6774 22.7188 16.8737C22.3764 16.3446 21.9892 15.8457 21.5616 15.3828C22.2566 14.271 22.6203 12.9842 22.61 11.6731C22.5998 10.3621 22.216 9.08111 21.5037 7.98039C22.3253 6.70516 23.5438 5.73579 24.9711 5.22192C26.3093 7.12443 27.0253 9.39483 27.0206 11.7209Z\", fill: \"url(#paint2_linear_503_133)\" }), (0, jsx_runtime_1.jsx)(\"path\", { d: \"M24.971 5.22741C24.0273 5.56535 23.1687 6.10493 22.4548 6.8086C21.741 7.51226 21.1891 8.36308 20.8376 9.30181C20.4862 10.2405 20.3436 11.2446 20.4198 12.244C20.4959 13.2435 20.7891 14.2143 21.2788 15.0889C19.8285 13.6115 17.9995 12.5617 15.9922 12.0546C15.9922 11.9415 15.9922 11.8284 15.9922 11.714C15.9921 9.75573 16.5005 7.83103 17.4676 6.12826C18.3259 4.61703 19.5194 3.32656 20.9528 2.35419C21.2889 2.12614 21.7291 2.12661 22.0647 2.35535C23.1981 3.12757 24.1833 4.1003 24.971 5.22741Z\", fill: \"url(#paint3_linear_503_133)\" })] }), (0, jsx_runtime_1.jsxs)(\"defs\", { children: [(0, jsx_runtime_1.jsxs)(\"filter\", { id: \"filter0_dd_503_133\", x: \"-3\", y: \"0\", width: \"38\", height: \"38\", filterUnits: \"userSpaceOnUse\", colorInterpolationFilters: \"sRGB\", children: [(0, jsx_runtime_1.jsx)(\"feFlood\", { floodOpacity: \"0\", result: \"BackgroundImageFix\" }), (0, jsx_runtime_1.jsx)(\"feColorMatrix\", { in: \"SourceAlpha\", type: \"matrix\", values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\", result: \"hardAlpha\" }), (0, jsx_runtime_1.jsx)(\"feOffset\", { dy: \"1\" }), (0, jsx_runtime_1.jsx)(\"feGaussianBlur\", { stdDeviation: \"1\" }), (0, jsx_runtime_1.jsx)(\"feColorMatrix\", { type: \"matrix\", values: \"0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.06 0\" }), (0, jsx_runtime_1.jsx)(\"feBlend\", { mode: \"normal\", in2: \"BackgroundImageFix\", result: \"effect1_dropShadow_503_133\" }), (0, jsx_runtime_1.jsx)(\"feColorMatrix\", { in: \"SourceAlpha\", type: \"matrix\", values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\", result: \"hardAlpha\" }), (0, jsx_runtime_1.jsx)(\"feOffset\", { dy: \"1\" }), (0, jsx_runtime_1.jsx)(\"feGaussianBlur\", { stdDeviation: \"1.5\" }), (0, jsx_runtime_1.jsx)(\"feColorMatrix\", { type: \"matrix\", values: \"0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.1 0\" }), (0, jsx_runtime_1.jsx)(\"feBlend\", { mode: \"normal\", in2: \"effect1_dropShadow_503_133\", result: \"effect2_dropShadow_503_133\" }), (0, jsx_runtime_1.jsx)(\"feBlend\", { mode: \"normal\", in: \"SourceGraphic\", in2: \"effect2_dropShadow_503_133\", result: \"shape\" })] }), (0, jsx_runtime_1.jsxs)(\"linearGradient\", { id: \"paint0_linear_503_133\", x1: \"5.98944\", y1: \"25.9973\", x2: \"17.5783\", y2: \"35.1517\", gradientUnits: \"userSpaceOnUse\", children: [(0, jsx_runtime_1.jsx)(\"stop\", { stopColor: \"#109464\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"0.509773\", stopColor: \"#5FE493\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"1\", stopColor: \"#A1FF8B\" })] }), (0, jsx_runtime_1.jsxs)(\"linearGradient\", { id: \"paint1_linear_503_133\", x1: \"8.03835\", y1: \"23.0901\", x2: \"17.5332\", y2: \"23.8983\", gradientUnits: \"userSpaceOnUse\", children: [(0, jsx_runtime_1.jsx)(\"stop\", { stopColor: \"#A1FF8B\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"0.509773\", stopColor: \"#5FE493\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"1\", stopColor: \"#109464\" })] }), (0, jsx_runtime_1.jsxs)(\"linearGradient\", { id: \"paint2_linear_503_133\", x1: \"24.2412\", y1: \"7.15592\", x2: \"18.5366\", y2: \"15.9753\", gradientUnits: \"userSpaceOnUse\", children: [(0, jsx_runtime_1.jsx)(\"stop\", { stopColor: \"#109464\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"0.328125\", stopColor: \"#5FE493\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"0.604167\", stopColor: \"#A1FF8B\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"1\", stopColor: \"#1A9E6A\" })] }), (0, jsx_runtime_1.jsxs)(\"linearGradient\", { id: \"paint3_linear_503_133\", x1: \"12.8652\", y1: \"12.1236\", x2: \"15.4536\", y2: \"4.7723\", gradientUnits: \"userSpaceOnUse\", children: [(0, jsx_runtime_1.jsx)(\"stop\", { stopColor: \"#109464\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"0.509773\", stopColor: \"#5FE493\" }), (0, jsx_runtime_1.jsx)(\"stop\", { offset: \"1\", stopColor: \"#A1FF8B\" })] })] })] }));\n};\nexports.YoursIcon = YoursIcon;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.YoursProvider = exports.YoursContext = void 0;\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar react_1 = require(\"react\");\nexports.YoursContext = (0, react_1.createContext)(undefined);\nvar YoursProvider = function (props) {\n    var children = props.children;\n    // It takes a moment for the yours wallet to get injected into the DOM. To use context we need an initial state;\n    var _a = (0, react_1.useState)({ isReady: false }), yoursWallet = _a[0], setYoursWallet = _a[1];\n    (0, react_1.useEffect)(function () {\n        var checkYoursWallet = function () {\n            var _a;\n            if (\"yours\" in window && ((_a = window.yours) === null || _a === void 0 ? void 0 : _a.isReady)) {\n                setYoursWallet(window.yours);\n            }\n        };\n        checkYoursWallet();\n        var intervalId = setInterval(checkYoursWallet, 1000);\n        return function () { return clearInterval(intervalId); };\n    }, []);\n    return ((0, jsx_runtime_1.jsx)(exports.YoursContext.Provider, { value: yoursWallet, children: children }));\n};\nexports.YoursProvider = YoursProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useYoursWallet = void 0;\nvar react_1 = require(\"react\");\nvar YoursWalletContext_1 = require(\"../context/YoursWalletContext\");\nvar useYoursWallet = function () {\n    var context = (0, react_1.useContext)(YoursWalletContext_1.YoursContext);\n    if (!context) {\n        throw new Error(\"useYoursWallet must be used within a YoursProvider\");\n    }\n    return context;\n};\nexports.useYoursWallet = useYoursWallet;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./context/YoursWalletContext\"), exports);\n__exportStar(require(\"./hook/useYoursWallet\"), exports);\n__exportStar(require(\"./types/providerTypes\"), exports);\n__exportStar(require(\"./components/YoursIcon\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetWork = exports.Bsv20Status = void 0;\nvar Bsv20Status;\n(function (Bsv20Status) {\n    Bsv20Status[Bsv20Status[\"Invalid\"] = -1] = \"Invalid\";\n    Bsv20Status[Bsv20Status[\"Pending\"] = 0] = \"Pending\";\n    Bsv20Status[Bsv20Status[\"Valid\"] = 1] = \"Valid\";\n})(Bsv20Status || (exports.Bsv20Status = Bsv20Status = {}));\nvar NetWork;\n(function (NetWork) {\n    NetWork[\"Mainnet\"] = \"mainnet\";\n    NetWork[\"Testnet\"] = \"testnet\";\n})(NetWork || (exports.NetWork = NetWork = {}));\n","import ReductionContext from './ReductionContext.js'\n\n/**\n * JavaScript numbers are only precise up to 53 bits. Since Bitcoin relies on\n * 256-bit cryptography, this BigNumber class enables operations on larger\n * numbers.\n *\n * @class BigNumber\n */\nexport default class BigNumber {\n  /**\n   * @privateinitializer\n   */\n  static zeros: string[] = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ]\n\n  /**\n   * @privateinitializer\n   */\n  static groupSizes: number[] = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ]\n\n  /**\n   * @privateinitializer\n   */\n  static groupBases: number[] = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ]\n\n  /**\n   * The word size of big number chunks.\n   *\n   * @property wordSize\n   *\n   * @example\n   * console.log(BigNumber.wordSize);  // output: 26\n   */\n  static wordSize: number = 26\n\n  /**\n   * Negative flag. Indicates whether the big number is a negative number.\n   * - If 0, the number is positive.\n   * - If 1, the number is negative.\n   *\n   * @property negative\n   *\n   * @example\n   * let num = new BigNumber(\"-10\");\n   * console.log(num.negative);  // output: 1\n   */\n  negative: number\n\n  /**\n   * Array of numbers, where each number represents a part of the value of the big number.\n   *\n   * @property words\n   *\n   * @example\n   * let num = new BigNumber(50000);\n   * console.log(num.words);  // output: [ 50000 ]\n   */\n  words: number[]\n\n  /**\n   * Length of the words array.\n   *\n   * @property length\n   *\n   * @example\n   * let num = new BigNumber(50000);\n   * console.log(num.length);  // output: 1\n   */\n  length: number\n\n  /**\n   * Reduction context of the big number.\n   *\n   * @property red\n   */\n  red: ReductionContext | null\n\n  /**\n   * Checks whether a value is an instance of BigNumber. If not, then checks the features of the input to determine potential compatibility. Regular JS numbers fail this check.\n   *\n   * @method isBN\n   * @param num - The value to be checked.\n   * @returns - Returns a boolean value determining whether or not the checked num parameter is a BigNumber.\n   *\n   * @example\n   * const validNum = new BigNumber(5);\n   * BigNumber.isBN(validNum); // returns true\n   *\n   * const invalidNum = 5;\n   * BigNumber.isBN(invalidNum); // returns false\n   */\n  static isBN (num: any): boolean {\n    if (num instanceof BigNumber) {\n      return true\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BigNumber.wordSize &&\n      Array.isArray(num.words)\n  }\n\n  /**\n   * Returns the bigger value between two BigNumbers\n   *\n   * @method max\n   * @param left - The first BigNumber to be compared.\n   * @param right - The second BigNumber to be compared.\n   * @returns - Returns the bigger BigNumber between left and right.\n   *\n   * @example\n   * const bn1 = new BigNumber(5);\n   * const bn2 = new BigNumber(10);\n   * BigNumber.max(bn1, bn2); // returns bn2\n   */\n  static max (left: BigNumber, right: BigNumber): BigNumber {\n    if (left.cmp(right) > 0) return left\n    return right\n  }\n\n  /**\n   * Returns the smaller value between two BigNumbers\n   *\n   * @method min\n   * @param left - The first BigNumber to be compared.\n   * @param right - The second BigNumber to be compared.\n   * @returns - Returns the smaller value between left and right.\n   *\n   * @example\n   * const bn1 = new BigNumber(5);\n   * const bn2 = new BigNumber(10);\n   * BigNumber.min(bn1, bn2); // returns bn1\n   */\n  static min (left: BigNumber, right: BigNumber): BigNumber {\n    if (left.cmp(right) < 0) return left\n    return right\n  }\n\n  /**\n   * @constructor\n   *\n   * @param number - The number (various types accepted) to construct a BigNumber from. Default is 0.\n   *\n   * @param base - The base of number provided. By default is 10.\n   *\n   * @param endian - The endianness provided. By default is 'big endian'.\n   *\n   * @example\n   * import BigNumber from './BigNumber';\n   * const bn = new BigNumber('123456', 10, 'be');\n   */\n  constructor (\n    number: number | string | number[] = 0,\n    base: number | 'be' | 'le' | 'hex' = 10,\n    endian: 'be' | 'le' = 'be'\n  ) {\n    this.negative = 0\n    this.words = []\n    this.length = 0\n\n    // Reduction context\n    this.red = null\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base\n        base = 10\n      }\n\n      if (typeof number === 'number') {\n        return this.initNumber(number, base, endian)\n      }\n\n      if (typeof number === 'object') {\n        return this.initArray(number, endian)\n      }\n\n      if (base === 'hex') {\n        base = 16\n      }\n      this.assert(base === (base | 0) && base >= 2 && base <= 36)\n\n      number = number.toString().replace(/\\s+/g, '')\n      let start = 0\n      if (number[0] === '-') {\n        start++\n        this.negative = 1\n      }\n\n      if (start < number.length) {\n        if (base === 16) {\n          this.parseHex(number, start, endian)\n        } else {\n          this.parseBase(number, base, start)\n          if (endian === 'le') {\n            this.initArray(this.toArray(), endian)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Asserts that a certain condition is true. If it is not, throws an error with the provided message.\n   *\n   * @method assert\n   * @private\n   * @param val - The condition to be checked.\n   * @param msg - The error message to throw if the condition is not satisfied. Default is 'Assertion failed'.\n   */\n  private assert (val: unknown, msg: string = 'Assertion failed'): void {\n    if (!(val as boolean)) throw new Error(msg)\n  }\n\n  /**\n   * Function to initialize a BigNumber from a regular number. It also determines if the number is negative and sets the negative property accordingly.\n   * If the endianness provided is little endian ('le'), it reverses the bytes.\n   *\n   * @method initNumber\n   * @private\n   * @param number - The number to initialize the BigNumber from.\n   * @param base - The base of the number provided.\n   * @param endian - The endianness ('be' for big-endian, 'le' for little-endian).\n   * @returns The current BigNumber instance.\n   */\n  private initNumber (number, base, endian): BigNumber {\n    if (number < 0) {\n      this.negative = 1\n      number = -number\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff]\n      this.length = 1\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ]\n      this.length = 2\n    } else {\n      this.assert(\n        number < 0x20000000000000,\n        'The number is larger than 2 ^ 53 (unsafe)'\n      )\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ]\n      this.length = 3\n    }\n\n    if (endian !== 'le') return this\n\n    // Reverse the bytes\n    this.initArray(this.toArray(), endian)\n    return this\n  }\n\n  /**\n   * Creates a new BigNumber from the provided number array and initializes it based on the base and endian provided.\n   *\n   * @method initArray\n   * @private\n   * @param number - The array of numbers to initialize the BigNumber from. Each number represents a part of the value of the big number.\n   * @param endian - The endianness ('be' for big-endian, 'le' for little-endian).\n   * @return The current BigNumber instance.\n   */\n  private initArray (number, endian): BigNumber {\n    // Perhaps a Uint8Array\n    this.assert(\n      typeof number.length === 'number',\n      'The number must have a length'\n    )\n    if (number.length <= 0) {\n      this.words = [0]\n      this.length = 1\n      return this\n    }\n\n    this.length = Math.ceil(number.length / 3)\n    this.words = new Array(this.length)\n    let i = 0\n    for (; i < this.length; i++) {\n      this.words[i] = 0\n    }\n\n    let j: number, w\n    let off = 0\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16)\n        this.words[j] |= (w << off) & 0x3ffffff\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff\n        off += 24\n        if (off >= 26) {\n          off -= 26\n          j++\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16)\n        this.words[j] |= (w << off) & 0x3ffffff\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff\n        off += 24\n        if (off >= 26) {\n          off -= 26\n          j++\n        }\n      }\n    }\n    return this.strip()\n  }\n\n  /**\n   * Function to extract the 4-bit number from a hexadecimal character\n   *\n   * @method parseHex4Bits\n   * @private\n   * @param string - The string containing the hexadecimal character.\n   * @param index - The index of the hexadecimal character in the string.\n   * @return The decimal value corresponding to the hexadecimal character.\n   */\n  private parseHex4Bits (string: string, index: number): number {\n    const c = string.charCodeAt(index)\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87\n    } else {\n      throw new Error('Invalid character in ' + string)\n    }\n  }\n\n  /**\n   * Function to extract the 8-bit number from two hexadecimal characters\n   *\n   * @method parseHexByte\n   * @private\n   * @param string - The string containing the hexadecimal characters.\n   * @param lowerBound - The lower bound of the index to start parsing from.\n   * @param index - The index of the second hexadecimal character in the string.\n   * @return The decimal value corresponding to the two hexadecimal characters.\n   */\n  private parseHexByte (\n    string: string, lowerBound: number, index: number\n  ): number {\n    let r = this.parseHex4Bits(string, index)\n    if (index - 1 >= lowerBound) {\n      r |= this.parseHex4Bits(string, index - 1) << 4\n    }\n    return r\n  }\n\n  /**\n   * Function to parse and convert a specific string portion into a big number in hexadecimal base.\n   *\n   * @method parseHex\n   * @private\n   * @param number - The string to parse.\n   * @param start - The index to start parsing from.\n   * @param endian - The endianness ('be', 'le').\n   * @return The current BigNumber instance.\n   */\n  private parseHex (number: string, start: number, endian): BigNumber {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6)\n    this.words = new Array(this.length)\n    let i = 0\n    for (; i < this.length; i++) {\n      this.words[i] = 0\n    }\n\n    // 24-bits chunks\n    let off = 0\n    let j = 0\n\n    let w\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = this.parseHexByte(number, start, i) << off\n        this.words[j] |= w & 0x3ffffff\n        if (off >= 18) {\n          off -= 18\n          j += 1\n          this.words[j] |= w >>> 26\n        } else {\n          off += 8\n        }\n      }\n    } else {\n      const parseLength = number.length - start\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = this.parseHexByte(number, start, i) << off\n        this.words[j] |= w & 0x3ffffff\n        if (off >= 18) {\n          off -= 18\n          j += 1\n          this.words[j] |= w >>> 26\n        } else {\n          off += 8\n        }\n      }\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Function to convert a particular string portion into a base word.\n   *\n   * @method parseBaseWord\n   * @private\n   * @param str - The string to parse.\n   * @param start - The index to start parsing from.\n   * @param end - The index to stop parsing at.\n   * @param mul - The base to be used for the conversion.\n   * @return The decimal value of the parsed base word.\n   */\n  private parseBaseWord (str, start, end, mul): number {\n    let r = 0\n    let b = 0\n    const len = Math.min(str.length, end)\n    for (let i = start; i < len; i++) {\n      const c = str.charCodeAt(i) - 48\n\n      r *= mul\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa\n\n      // '0' - '9'\n      } else {\n        b = c\n      }\n      this.assert(c >= 0 && b < mul, 'Invalid character')\n      r += b\n    }\n    return r\n  }\n\n  /**\n   * Function to convert a string into a big number in a specific base.\n   *\n   * @method parseBase\n   * @private\n   * @param number - The string to be converted into a big number.\n   * @param base - The base to be used for conversion.\n   * @param start - The index to start conversion from.\n   * @return The current BigNumber instance.\n   */\n  private parseBase (number: string, base: number, start: number): BigNumber {\n    // Initialize as zero\n    this.words = [0]\n    this.length = 1\n\n    // Find length of limb in base\n    let limbLen = 0\n    let limbPow = 1\n    for (; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++\n    }\n    limbLen--\n    limbPow = (limbPow / base) | 0\n\n    const total = number.length - start\n    const mod = total % limbLen\n    const end = Math.min(total, total - mod) + start\n\n    let word = 0\n    let i = start\n    for (; i < end; i += limbLen) {\n      word = this.parseBaseWord(number, i, i + limbLen, base)\n\n      this.imuln(limbPow)\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word\n      } else {\n        this._iaddn(word)\n      }\n    }\n\n    if (mod !== 0) {\n      let pow = 1\n      word = this.parseBaseWord(number, i, number.length, base)\n\n      for (i = 0; i < mod; i++) {\n        pow *= base\n      }\n\n      this.imuln(pow)\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word\n      } else {\n        this._iaddn(word)\n      }\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * The copy method copies the state of this BigNumber into an exsiting `dest` BigNumber.\n   *\n   * @method copy\n   * @param dest - The BigNumber instance that will be updated to become a copy.\n   *\n   * @example\n   * const bn1 = new BigNumber('123456', 10, 'be');\n   * const bn2 = new BigNumber();\n   * bn1.copy(bn2);\n   * // bn2 is now a BigNumber representing 123456\n   */\n  copy (dest: BigNumber): void {\n    dest.words = new Array(this.length)\n    for (let i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i]\n    }\n    dest.length = this.length\n    dest.negative = this.negative\n    dest.red = this.red\n  }\n\n  /**\n   *\n   * Directly transfers the attributes of the source BigNumber to the destination BigNumber.\n   *\n   * @method move\n   * @param dest - The BigNumber that attributes will be moved into.\n   * @param src - The BigNumber that attributes will be moved from.\n   *\n   * @example\n   * const src = new BigNumber('123456', 10, 'be');\n   * const dest = new BigNumber();\n   * BigNumber.move(dest, src);\n   * // dest is now a BigNumber representing 123456\n   */\n  static move (dest: BigNumber, src: BigNumber): void {\n    dest.words = src.words\n    dest.length = src.length\n    dest.negative = src.negative\n    dest.red = src.red\n  }\n\n  /**\n   * Creates a copy of the current BigNumber instance.\n   *\n   * @method clone\n   * @returns A new BigNumber instance, identical to the original.\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * const bnClone = bn.clone();\n   */\n  clone (): BigNumber {\n    const r = new BigNumber()\n    this.copy(r)\n    return r\n  }\n\n  /**\n   * Increases the BigNumber length up to a certain size and initializes new elements with 0.\n   *\n   * @method expand\n   * @param size - The desired size to grow the BigNumber length.\n   * @returns The BigNumber instance after expansion.\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * bn.expand(10);\n   */\n  expand (size): BigNumber {\n    while (this.length < size) {\n      this.words[this.length++] = 0\n    }\n    return this\n  }\n\n  /**\n   * Removes leading zeros.\n   *\n   * @method strip\n   * @returns - Returns the BigNumber after stripping leading zeros.\n   *\n   * @example\n   * const bn = new BigNumber(\"000000\", 2, \"be\");\n   * bn.strip();\n   * // bn now represents 0\n   */\n  strip (): BigNumber {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--\n    }\n    return this.normSign()\n  }\n\n  /**\n   * Normalizes the sign of the BigNumber. Changes -0 to 0.\n   *\n   * @method normSign\n   * @returns The normalized BigNumber instance.\n   *\n   * @example\n   * const bn = new BigNumber('-0', 10, 'be');\n   * bn.normSign();\n   */\n  normSign (): BigNumber {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0\n    }\n    return this\n  }\n\n  /**\n   * Utility for inspecting the current BigNumber instance. Accompanied with a prefix '<BN: ' or '<BN-R: '.\n   *\n   * @method inspect\n   * @returns A string representation to inspect the BigNumber instance.\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * bn.inspect();\n   */\n  inspect (): string {\n    return (this.red !== null ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>'\n  }\n\n  /**\n   * Converts the BigNumber instance to a string representation.\n   *\n   * @method toString\n   * @param base - The base for representing number. Default is 10. Other accepted values are 16 and 'hex'.\n   * @param padding - Represents the minimum number of digits to represent the BigNumber as a string. Default is 1.\n   * @throws If base is not between 2 and 36.\n   * @returns The string representation of the BigNumber instance\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * bn.toString(16); // Converts the BigNumber to a hexadecimal string.\n   */\n  toString (base: number | 'hex' = 10, padding: number = 1): string {\n    let out: string\n    if (base === 16 || base === 'hex') {\n      out = ''\n      let off = 0\n      let carry = 0\n      for (let i = 0; i < this.length; i++) {\n        const w = this.words[i]\n        const word = (((w << off) | carry) & 0xffffff).toString(16)\n        carry = (w >>> (24 - off)) & 0xffffff\n        off += 2\n        if (off >= 26) {\n          off -= 26\n          i--\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = BigNumber.zeros[6 - word.length] + word + out\n        } else {\n          out = word + out\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out\n      }\n      if (padding === 0 && out === '0') {\n        return ''\n      }\n      while (out.length % padding !== 0 && padding !== 0) {\n        out = '0' + out\n      }\n      if (this.negative !== 0) {\n        out = '-' + out\n      }\n      return out\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      const groupSize = BigNumber.groupSizes[base]\n      const groupBase = BigNumber.groupBases[base]\n      out = ''\n      let c = this.clone()\n      c.negative = 0\n      while (!c.isZero()) {\n        const r = c.modrn(groupBase).toString(base)\n        c = c.idivn(groupBase)\n\n        if (!c.isZero()) {\n          out = BigNumber.zeros[groupSize - r.length] + r + out\n        } else {\n          out = r + out\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out\n      }\n      if (this.negative !== 0) {\n        out = '-' + out\n      }\n      return out\n    }\n\n    throw new Error('Base should be between 2 and 36')\n  }\n\n  /**\n   * Converts the BigNumber instance to a JavaScript number.\n   * Please note that JavaScript numbers are only precise up to 53 bits.\n   *\n   * @method toNumber\n   * @throws If the BigNumber instance cannot be safely stored in a JavaScript number\n   * @returns The JavaScript number representation of the BigNumber instance.\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * bn.toNumber();\n   */\n  toNumber (): number {\n    let ret = this.words[0]\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000)\n    } else if (this.length > 2) {\n      throw new Error('Number can only safely store up to 53 bits')\n    }\n    return (this.negative !== 0) ? -ret : ret\n  }\n\n  /**\n   * Converts the BigNumber instance to a JSON-formatted string.\n   *\n   * @method toJSON\n   * @returns The JSON string representation of the BigNumber instance.\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * bn.toJSON();\n   */\n  toJSON (): string {\n    return this.toString(16)\n  }\n\n  /**\n   * An internal method to format the BigNumber instance into ArrayTypes of Little Endian Type.\n   * This is a private method.\n   *\n   * @method toArrayLikeLE\n   * @private\n   * @param res - The resultant ArrayType instance\n   * @param byteLength - The byte length to define the size of ArrayType\n   */\n  private toArrayLikeLE (res, byteLength): void {\n    let position = 0\n    let carry = 0\n\n    for (let i = 0, shift = 0; i < this.length; i++) {\n      const word = (this.words[i] << shift) | carry\n\n      res[position++] = word & 0xff\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff\n        }\n        carry = 0\n        shift = 0\n      } else {\n        carry = word >>> 24\n        shift += 2\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry\n\n      while (position < res.length) {\n        res[position++] = 0\n      }\n    }\n  }\n\n  /**\n   * An internal method to format the BigNumber instance into ArrayTypes of Big Endian Type.\n   * This is a private method.\n   *\n   * @method toArrayLikeBE\n   * @private\n   * @param res - The resultant ArrayType instance\n   * @param byteLength - The byte length to define the size of ArrayType\n   */\n  private toArrayLikeBE (res, byteLength): void {\n    let position = res.length - 1\n    let carry = 0\n\n    for (let i = 0, shift = 0; i < this.length; i++) {\n      const word = (this.words[i] << shift) | carry\n\n      res[position--] = word & 0xff\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff\n        }\n        carry = 0\n        shift = 0\n      } else {\n        carry = word >>> 24\n        shift += 2\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry\n\n      while (position >= 0) {\n        res[position--] = 0\n      }\n    }\n  }\n\n  /**\n   * Converts the BigNumber instance to a JavaScript number array.\n   *\n   * @method toArray\n   * @param endian - The endian for converting BigNumber to array. Default value is 'be'.\n   * @param length - The length for the resultant array. Default value is undefined.\n   * @returns The JavaScript array representation of the BigNumber instance.\n   *\n   * @example\n   * const bn = new BigNumber('123456', 10, 'be');\n   * bn.toArray('be', 8);\n   */\n  toArray (endian: 'le' | 'be' = 'be', length?: number): number[] {\n    this.strip()\n\n    const byteLength = this.byteLength()\n    const reqLength = length ?? Math.max(1, byteLength)\n    this.assert(byteLength <= reqLength, 'byte array longer than desired length')\n    this.assert(reqLength > 0, 'Requested array length <= 0')\n\n    const res = new Array(reqLength)\n    if (endian === 'le') {\n      this.toArrayLikeLE(res, byteLength)\n    } else {\n      this.toArrayLikeBE(res, byteLength)\n    }\n    return res\n  }\n\n  /**\n   * A utility method to count the word bits.\n   * This is a private method.\n   *\n   * @method countWordBits\n   * @private\n   * @param w - The input number to count the word bits.\n   * @returns The number of word bits\n   */\n  private countWordBits (w: number): number {\n    if (typeof Math.clz32 === 'function') {\n      return 32 - Math.clz32(w)\n    }\n    let t = w\n    let r = 0\n    if (t >= 0x1000) {\n      r += 13\n      t >>>= 13\n    }\n    if (t >= 0x40) {\n      r += 7\n      t >>>= 7\n    }\n    if (t >= 0x8) {\n      r += 4\n      t >>>= 4\n    }\n    if (t >= 0x02) {\n      r += 2\n      t >>>= 2\n    }\n    return r + t\n  }\n\n  /**\n   * A utility method to compute the number of zero bits.\n   * This is a private method.\n   *\n   * @method zeroWordBits\n   * @private\n   * @param w - The input number to count the zero bits.\n   * @returns The number of zero bits\n   */\n  private zeroWordBits (w: number): number {\n    // Short-cut\n    if (w === 0) return 26\n\n    let t = w\n    let r = 0\n    if ((t & 0x1fff) === 0) {\n      r += 13\n      t >>>= 13\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7\n      t >>>= 7\n    }\n    if ((t & 0xf) === 0) {\n      r += 4\n      t >>>= 4\n    }\n    if ((t & 0x3) === 0) {\n      r += 2\n      t >>>= 2\n    }\n    if ((t & 0x1) === 0) {\n      r++\n    }\n    return r\n  }\n\n  /**\n   * Returns the number of used bits in this big number.\n   *\n   * @method bitLength\n   * @returns The number of used bits\n   */\n  bitLength (): number {\n    const w = this.words[this.length - 1]\n    const hi = this.countWordBits(w)\n    return (this.length - 1) * 26 + hi\n  }\n\n  /**\n   * Convert a big number to a boolean array representing\n   * a binary number, where each array index is a bit.\n   * @static\n   * @method toBitArray\n   * @param num - The big number to convert.\n   * @returns Returns an array of booleans representing\n   * a binary number, with each array index being a bit.\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('6'); // binary: 110\n   * const bits = BigNumber.toBitArray(bn); // [1,1,0]\n   */\n  static toBitArray (num: BigNumber): Array<0 | 1> {\n    const w = new Array(num.bitLength())\n\n    for (let bit = 0; bit < w.length; bit++) {\n      const off = (bit / 26) | 0\n      const wbit = bit % 26\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01\n    }\n\n    return w\n  }\n\n  /**\n   * Convert this big number to a boolean array representing\n   * a binary number, where each array index is a bit.\n   * @method toBitArray\n   * @returns Returns an array of booleans representing a binary number.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('6'); // binary: 110\n   * const bits = bn.toBitArray(); // [ 1, 1, 0 ]\n   */\n  toBitArray (): Array<0 | 1> {\n    return BigNumber.toBitArray(this)\n  }\n\n  /**\n   * Returns the number of trailing zero bits in the big number.\n   * @method zeroBits\n   * @returns Returns the number of trailing zero bits\n   * in the binary representation of the big number.\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('8'); // binary: 1000\n   * const zeroBits = bn.zeroBits(); // 3\n   */\n  zeroBits (): number {\n    if (this.isZero()) return 0\n\n    let r = 0\n    for (let i = 0; i < this.length; i++) {\n      const b = this.zeroWordBits(this.words[i])\n      r += b\n      if (b !== 26) break\n    }\n    return r\n  }\n\n  /**\n   * Get the byte length of the BigNumber\n   *\n   * @method byteLength\n   * @returns Returns the byte length of the big number.\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('1234');\n   * const byteLen = bn.byteLength();\n   */\n  byteLength (): number {\n    return Math.ceil(this.bitLength() / 8)\n  }\n\n  /**\n   * Converts this big number to two's complement with a specified bit width.\n   * @method toTwos\n   * @param width - The bit width.\n   * @returns Returns the two's complement of the big number.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('-1234');\n   * const twosComp = bn.toTwos(16);\n   */\n  toTwos (width: number): BigNumber {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1)\n    }\n    return this.clone()\n  }\n\n  /**\n   * Converts this big number from two's complement with a specified bit width.\n   * @method fromTwos\n   * @param width - The bit width.\n   * @returns Returns the big number converted from two's complement.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('-1234');\n   * const fromTwos = bn.fromTwos(16);\n   */\n  fromTwos (width: number): BigNumber {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg()\n    }\n    return this.clone()\n  }\n\n  /**\n   * Checks if the big number is negative.\n   * @method isNeg\n   * @returns Returns true if the big number is negative, otherwise false.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('-1234');\n   * const isNegative = bn.isNeg(); // true\n   */\n  isNeg (): boolean {\n    return this.negative !== 0\n  }\n\n  /**\n   * Negates the big number and returns a new instance.\n   * @method neg\n   * @returns Returns a new BigNumber that is the negation of this big number.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('1234');\n   * const neg = bn.neg(); // -1234\n   */\n  neg (): BigNumber {\n    return this.clone().ineg()\n  }\n\n  /**\n   * Negates the big number in-place.\n   * @method ineg\n   * @returns Returns this big number as the negation of itself.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn = new BigNumber('1234');\n   * bn.ineg(); // bn is now -1234\n   */\n  ineg (): BigNumber {\n    if (!this.isZero()) {\n      this.negative ^= 1\n    }\n\n    return this\n  }\n\n  /**\n   * Performs a bitwise OR operation with another BigNumber and stores\n   * the result in this BigNumber.\n   * @method iuor\n   * @param num - The other BigNumber.\n   * @returns Returns this BigNumber after performing the bitwise OR operation.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn1 = new BigNumber('10'); // binary: 1010\n   * const bn2 = new(num: BigNumber): BigNumber BigNumber('6'); // binary: 0110\n   * bn1.iuor(bn2); // now, bn1 binary: 1110\n   */\n  iuor (num: BigNumber): BigNumber {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0\n    }\n\n    for (let i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i]\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Performs a bitwise OR operation with another BigNumber, considering\n   * that neither of the numbers can be negative. Stores the result in this BigNumber.\n   * @method ior\n   * @param num - The other BigNumber.\n   * @returns Returns this BigNumber after performing the bitwise OR operation.\n   *\n   * @example\n   * const BigNumber = require(\"./BigNumber\");\n   * const bn1 = new BigNumber('10'); // binary: 1010\n   * const bn2 = new BigNumber('6'); // binary: 0110\n   * bn1.ior(bn2); // now, bn1 binary: 1110\n   */\n  ior (num: BigNumber): BigNumber {\n    this.assert((this.negative | num.negative) === 0)\n    return this.iuor(num)\n  }\n\n  /**\n   * Performs a bitwise OR operation on the current instance and given\n   * BigNumber and returns a new BigNumber, in such a way that if either\n   * the corresponding bit in the first operand or the second operand is\n   * 1, then the output is also 1.\n   *\n   * @method or\n   * @param num - The BigNumber to perform the bitwise OR operation with.\n   * @returns Returns a new BigNumber resulting from the bitwise OR operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.or(num2).toString());\n   */\n  or (num: BigNumber): BigNumber {\n    if (this.length > num.length) return this.clone().ior(num)\n    return num.clone().ior(this)\n  }\n\n  /**\n   * Performs a bitwise OR operation on the current instance and given\n   * BigNumber without considering signed bit(no negative values) and returns a new BigNumber,\n   * similar to the `or` method.\n   *\n   * @method uor\n   * @param num - The BigNumber to perform the bitwise OR operation with.\n   * @returns Returns a new BigNumber resulting from the bitwise OR operation without sign consideration.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.uor(num2).toString());\n   */\n  uor (num: BigNumber): BigNumber {\n    if (this.length > num.length) return this.clone().iuor(num)\n    return num.clone().iuor(this)\n  }\n\n  /**\n   * Performs a bitwise AND operation in-place(this method changes the calling object)\n   * on the current instance and given BigNumber such that it modifies the current\n   * instance and keeps the bits set in the result only if the corresponding bit is set\n   * in both operands.\n   *\n   * @method iuand\n   * @param num - The BigNumber to perform the bitwise AND operation with.\n   * @returns Returns the current BigNumber instance after performing the bitwise AND operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.iuand(num2).toString());\n   */\n  iuand (num: BigNumber): BigNumber {\n    const minLength = Math.min(this.length, num.length)\n\n    for (let i = 0; i < minLength; i++) {\n      this.words[i] = this.words[i] & num.words[i]\n    }\n\n    this.length = minLength\n\n    return this.strip()\n  }\n\n  /**\n   * Performs an in-place operation that does a bitwise AND operation in-place,\n   * on the current instance and given BigNumber such that it modifies the current\n   * instance only if neither operand is negative. This method is similar to the iuand method but\n   * checks for negative values before operation.\n   *\n   * @method iand\n   * @param num - The BigNumber to perform the bitwise AND operation with.\n   * @returns Returns the current BigNumber instance after performing the bitwise AND operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.iand(num2).toString());\n   */\n  iand (num: BigNumber): BigNumber {\n    this.assert((this.negative | num.negative) === 0)\n    return this.iuand(num)\n  }\n\n  /**\n   * Performs a bitwise AND operation that returns a new BigNumber, and keeps the bits\n   * set in the result only if the corresponding bit is set in both operands.\n   *\n   * @method and\n   * @param num - The BigNumber to perform the bitwise AND operation with.\n   * @returns Returns new BigNumber resulting from the bitwise AND operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.and(num2).toString());\n   */\n  and (num: BigNumber): BigNumber {\n    if (this.length > num.length) return this.clone().iand(num)\n    return num.clone().iand(this)\n  }\n\n  /**\n   * Performs a bitwise AND operation without considering signed bit\n   * (no negative values) which returns a new BigNumber, similar to the `and` method.\n   *\n   * @method uand\n   * @param num - The BigNumber to perform the bitwise AND operation with.\n   * @returns Returns new BigNumber resulting from the bitwise AND operation without sign consideration.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.uand(num2).toString());\n   */\n  uand (num: BigNumber): BigNumber {\n    if (this.length > num.length) return this.clone().iuand(num)\n    return num.clone().iuand(this)\n  }\n\n  /**\n   * Modifies the current instance by performing a bitwise XOR operation\n   * in-place with the provided BigNumber. It keeps the bits set in the result only if the\n   * corresponding bits in the operands are different.\n   *\n   * @method iuxor\n   * @param num - The BigNumber to perform the bitwise XOR operation with.\n   * @returns Returns the current BigNumber instance after performing the bitwise XOR operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.iuxor(num2).toString());\n   */\n  iuxor (num: BigNumber): BigNumber {\n    if (this.length > num.length) {\n      for (let i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] ^ num.words[i]\n      }\n    } else {\n      for (let i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i] ^ num.words[i]\n      }\n      for (let i = this.length; i < num.length; i++) {\n        this.words[i] = num.words[i]\n      }\n      this.length = num.length\n    }\n    return this.strip()\n  }\n\n  /**\n   * Performs an in-place operation that does a bitwise XOR operation in-place,\n   * on the current instance and given BigNumber such that it modifies the current\n   * instance only if neither operand is negative. This method is similar to the iuxor method but\n   * checks for negative values before operation.\n   *\n   * @method ixor\n   * @param num - The BigNumber to perform the bitwise XOR operation with.\n   * @returns Returns the current BigNumber instance after performing the bitwise XOR operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.ixor(num2).toString());\n   */\n  ixor (num: BigNumber): BigNumber {\n    this.assert(\n      (this.negative | num.negative) === 0,\n      'Neither number can be negative'\n    )\n    return this.iuxor(num)\n  }\n\n  /**\n   * Performs a bitwise XOR operation which returns a new BigNumber, and keeps the bits\n   * set in the result only if the corresponding bits in the operands are different.\n   *\n   * @method xor\n   * @param num - The BigNumber to perform the bitwise XOR operation with.\n   * @returns Returns a new BigNumber resulting from the bitwise XOR operation.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const num2 = new BigNumber('20');\n   * console.log(num1.xor(num2).toString());\n   */\n  xor (num: BigNumber): BigNumber {\n    if (this.length > num.length) return this.clone().ixor(num)\n    return num.clone().ixor(this)\n  }\n\n  /**\n   * Performs an unsigned XOR operation on this BigNumber with the supplied BigNumber. Returns a new BigNumber.\n   *\n   * @method uxor\n   * @param num - The BigNumber with which the unsigned bitwise XOR operation is to be performed.\n   * @returns Returns a new BigNumber resulting from the unsigned bitwise XOR operation.\n   *\n   * @example\n   * const num1 = new BigNumber('30');\n   * const num2 = new BigNumber('40');\n   * console.log(num1.uxor(num2).toString()); // Output will be the result of unsigned XOR operation\n   */\n  uxor (num: BigNumber): BigNumber {\n    if (this.length > num.length) return this.clone().iuxor(num)\n    return num.clone().iuxor(this)\n  }\n\n  /**\n   * In-place method that performs a bitwise NOT operation on a BigNumber up to a specified bit width.\n   *\n   * @method inotn\n   * @param width - The number of bits to perform the NOT operation on.\n   * @returns Returns the BigNumber after performing the bitwise NOT operation.\n   *\n   * @example\n   * const num = new BigNumber('42');\n   * num.inotn(10);\n   * console.log(num.toString());\n   */\n  inotn (width: number): BigNumber {\n    this.assert(\n      typeof width === 'number' && width >= 0,\n      'The width needs to be a number greater than zero'\n    )\n\n    let bytesNeeded = Math.ceil(width / 26) | 0\n    const bitsLeft = width % 26\n\n    // Extend the number with leading zeroes\n    this.expand(bytesNeeded)\n\n    if (bitsLeft > 0) {\n      bytesNeeded--\n    }\n\n    // Handle complete words\n    let i = 0\n    for (; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft))\n    }\n\n    // And remove leading zeroes\n    return this.strip()\n  }\n\n  /**\n   * Performs a bitwise NOT operation on a BigNumber up to a specified bit width. Returns a new BigNumber.\n   *\n   * @method notn\n   * @param width - The number of bits to perform the NOT operation on.\n   * @returns Returns a new BigNumber resulting from the bitwise NOT operation.\n   *\n   * @example\n   * const num = new BigNumber('42');\n   * const notnResult = num.notn(10);\n   * console.log(notnResult.toString());\n   */\n  notn (width: number): BigNumber {\n    return this.clone().inotn(width)\n  }\n\n  /**\n   * Set `bit` of `this` BigNumber. The `bit` is a position in the binary representation,\n   * and `val` is the value to be set at that position (`0` or `1`).\n   *\n   * @method setn\n   * @param bit - The bit position to set.\n   * @param val - The value to set at the bit position.\n   * @returns Returns the BigNumber after setting the value at the bit position.\n   *\n   * @example\n   * const num = new BigNumber('42');\n   * num.setn(2, 1);\n   * console.log(num.toString());\n   */\n  setn (bit: number, val: 0 | 1 | true | false): BigNumber {\n    this.assert(typeof bit === 'number' && bit >= 0)\n\n    const off = (bit / 26) | 0\n    const wbit = bit % 26\n\n    this.expand(off + 1)\n\n    if (val === 1 || val === true) {\n      this.words[off] = this.words[off] | (1 << wbit)\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit)\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Add `num` to `this` BigNumber in-place.\n   *\n   * @method iadd\n   * @param num - The BigNumber to add to `this` BigNumber.\n   * @returns Returns the BigNumber after performing the addition.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * num1.iadd(new BigNumber('20'));\n   * console.log(num1.toString());\n   */\n  iadd (num: BigNumber): BigNumber {\n    let r\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0\n      r = this.isub(num)\n      this.negative ^= 1\n      return this.normSign()\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0\n      r = this.isub(num)\n      num.negative = 1\n      return r.normSign()\n    }\n\n    // a.length > b.length\n    let a, b\n    if (this.length > num.length) {\n      /* eslint-disable @typescript-eslint/no-this-alias */\n      a = this\n      b = num\n    } else {\n      a = num\n      /* eslint-disable @typescript-eslint/no-this-alias */\n      b = this\n    }\n\n    let carry = 0\n    let i = 0\n    for (; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry\n      this.words[i] = r & 0x3ffffff\n      carry = r >>> 26\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry\n      this.words[i] = r & 0x3ffffff\n      carry = r >>> 26\n    }\n\n    this.length = a.length\n    if (carry !== 0) {\n      this.words[this.length] = carry\n      this.length++\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i]\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Add `num` to `this` BigNumber.\n   *\n   * @method add\n   * @param num - The BigNumber to add to `this` BigNumber.\n   * @returns Returns a new BigNumber which is the result of the addition.\n   *\n   * @example\n   * const num1 = new BigNumber('10');\n   * const addResult = num1.add(new BigNumber('20'));\n   * console.log(addResult.toString());\n   */\n  add (num: BigNumber): BigNumber {\n    let res\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0\n      res = this.sub(num)\n      num.negative ^= 1\n      return res\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0\n      res = num.sub(this)\n      this.negative = 1\n      return res\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num)\n\n    return num.clone().iadd(this)\n  }\n\n  /**\n   * Subtract `num` from `this` BigNumber in-place.\n   *\n   * @method isub\n   * @param num - The BigNumber to be subtracted from `this` BigNumber.\n   * @returns Returns the BigNumber after performing the subtraction.\n   *\n   * @example\n   * const num1 = new BigNumber('20');\n   * num1.isub(new BigNumber('10'));\n   * console.log(num1.toString());\n   */\n  isub (num: BigNumber): BigNumber {\n    let r: BigNumber | number\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0\n      r = this.iadd(num)\n      num.negative = 1\n      return r.normSign()\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0\n      this.iadd(num)\n      this.negative = 1\n      return this.normSign()\n    }\n\n    // At this point both numbers are positive\n    const cmp = this.cmp(num)\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0\n      this.length = 1\n      this.words[0] = 0\n      return this\n    }\n\n    // a > b\n    let a, b\n    if (cmp > 0) {\n      /* eslint-disable @typescript-eslint/no-this-alias */\n      a = this\n      b = num\n    } else {\n      a = num\n      /* eslint-disable @typescript-eslint/no-this-alias */\n      b = this\n    }\n\n    let carry = 0\n    let i = 0\n    for (; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry\n      carry = r >> 26\n      this.words[i] = r & 0x3ffffff\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry\n      carry = r >> 26\n      this.words[i] = r & 0x3ffffff\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i]\n      }\n    }\n\n    this.length = Math.max(this.length, i)\n\n    if (a !== this) {\n      this.negative = 1\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Subtract `num` from `this` BigNumber.\n   *\n   * @method sub\n   * @param num - The BigNumber to be subtracted from `this` BigNumber.\n   * @returns Returns a new BigNumber which is the result of the subtraction.\n   *\n   * @example\n   * const num1 = new BigNumber('20');\n   * const subResult = num1.sub(new BigNumber('10'));\n   * console.log(subResult.toString());\n   */\n  sub (num: BigNumber): BigNumber {\n    return this.clone().isub(num)\n  }\n\n  private smallMulTo (\n    self: BigNumber, num: BigNumber, out: BigNumber\n  ): BigNumber {\n    out.negative = num.negative ^ self.negative\n    let len = (self.length + num.length) | 0\n    out.length = len\n    len = (len - 1) | 0\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    let a = self.words[0] | 0\n    let b = num.words[0] | 0\n    let r = a * b\n\n    const lo = r & 0x3ffffff\n    let carry = (r / 0x4000000) | 0\n    out.words[0] = lo\n\n    let k = 1\n    for (; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      let ncarry = carry >>> 26\n      let rword = carry & 0x3ffffff\n      const maxJ = Math.min(k, num.length - 1)\n      for (let j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        const i = (k - j) | 0\n        a = self.words[i] | 0\n        b = num.words[j] | 0\n        r = a * b + rword\n        ncarry += (r / 0x4000000) | 0\n        rword = r & 0x3ffffff\n      }\n      out.words[k] = rword | 0\n      carry = ncarry | 0\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0\n    } else {\n      out.length--\n    }\n\n    return out.strip()\n  }\n\n  comb10MulTo (self: BigNumber, num: BigNumber, out: BigNumber): BigNumber {\n    const a = self.words\n    const b = num.words\n    const o = out.words\n    let c: number = 0\n    let lo: number\n    let mid: number\n    let hi: number\n    const a0 = a[0] | 0\n    const al0 = a0 & 0x1fff\n    const ah0 = a0 >>> 13\n    const a1 = a[1] | 0\n    const al1 = a1 & 0x1fff\n    const ah1 = a1 >>> 13\n    const a2 = a[2] | 0\n    const al2 = a2 & 0x1fff\n    const ah2 = a2 >>> 13\n    const a3 = a[3] | 0\n    const al3 = a3 & 0x1fff\n    const ah3 = a3 >>> 13\n    const a4 = a[4] | 0\n    const al4 = a4 & 0x1fff\n    const ah4 = a4 >>> 13\n    const a5 = a[5] | 0\n    const al5 = a5 & 0x1fff\n    const ah5 = a5 >>> 13\n    const a6 = a[6] | 0\n    const al6 = a6 & 0x1fff\n    const ah6 = a6 >>> 13\n    const a7 = a[7] | 0\n    const al7 = a7 & 0x1fff\n    const ah7 = a7 >>> 13\n    const a8 = a[8] | 0\n    const al8 = a8 & 0x1fff\n    const ah8 = a8 >>> 13\n    const a9 = a[9] | 0\n    const al9 = a9 & 0x1fff\n    const ah9 = a9 >>> 13\n    const b0 = b[0] | 0\n    const bl0 = b0 & 0x1fff\n    const bh0 = b0 >>> 13\n    const b1 = b[1] | 0\n    const bl1 = b1 & 0x1fff\n    const bh1 = b1 >>> 13\n    const b2 = b[2] | 0\n    const bl2 = b2 & 0x1fff\n    const bh2 = b2 >>> 13\n    const b3 = b[3] | 0\n    const bl3 = b3 & 0x1fff\n    const bh3 = b3 >>> 13\n    const b4 = b[4] | 0\n    const bl4 = b4 & 0x1fff\n    const bh4 = b4 >>> 13\n    const b5 = b[5] | 0\n    const bl5 = b5 & 0x1fff\n    const bh5 = b5 >>> 13\n    const b6 = b[6] | 0\n    const bl6 = b6 & 0x1fff\n    const bh6 = b6 >>> 13\n    const b7 = b[7] | 0\n    const bl7 = b7 & 0x1fff\n    const bh7 = b7 >>> 13\n    const b8 = b[8] | 0\n    const bl8 = b8 & 0x1fff\n    const bh8 = b8 >>> 13\n    const b9 = b[9] | 0\n    const bl9 = b9 & 0x1fff\n    const bh9 = b9 >>> 13\n\n    out.negative = self.negative ^ num.negative\n    out.length = 19\n    /* k = 0 */\n    lo = Math.imul(al0, bl0)\n    mid = Math.imul(al0, bh0)\n    mid = (mid + Math.imul(ah0, bl0)) | 0\n    hi = Math.imul(ah0, bh0)\n    let w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0\n    w0 &= 0x3ffffff\n    /* k = 1 */\n    lo = Math.imul(al1, bl0)\n    mid = Math.imul(al1, bh0)\n    mid = (mid + Math.imul(ah1, bl0)) | 0\n    hi = Math.imul(ah1, bh0)\n    lo = (lo + Math.imul(al0, bl1)) | 0\n    mid = (mid + Math.imul(al0, bh1)) | 0\n    mid = (mid + Math.imul(ah0, bl1)) | 0\n    hi = (hi + Math.imul(ah0, bh1)) | 0\n    let w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0\n    w1 &= 0x3ffffff\n    /* k = 2 */\n    lo = Math.imul(al2, bl0)\n    mid = Math.imul(al2, bh0)\n    mid = (mid + Math.imul(ah2, bl0)) | 0\n    hi = Math.imul(ah2, bh0)\n    lo = (lo + Math.imul(al1, bl1)) | 0\n    mid = (mid + Math.imul(al1, bh1)) | 0\n    mid = (mid + Math.imul(ah1, bl1)) | 0\n    hi = (hi + Math.imul(ah1, bh1)) | 0\n    lo = (lo + Math.imul(al0, bl2)) | 0\n    mid = (mid + Math.imul(al0, bh2)) | 0\n    mid = (mid + Math.imul(ah0, bl2)) | 0\n    hi = (hi + Math.imul(ah0, bh2)) | 0\n    let w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0\n    w2 &= 0x3ffffff\n    /* k = 3 */\n    lo = Math.imul(al3, bl0)\n    mid = Math.imul(al3, bh0)\n    mid = (mid + Math.imul(ah3, bl0)) | 0\n    hi = Math.imul(ah3, bh0)\n    lo = (lo + Math.imul(al2, bl1)) | 0\n    mid = (mid + Math.imul(al2, bh1)) | 0\n    mid = (mid + Math.imul(ah2, bl1)) | 0\n    hi = (hi + Math.imul(ah2, bh1)) | 0\n    lo = (lo + Math.imul(al1, bl2)) | 0\n    mid = (mid + Math.imul(al1, bh2)) | 0\n    mid = (mid + Math.imul(ah1, bl2)) | 0\n    hi = (hi + Math.imul(ah1, bh2)) | 0\n    lo = (lo + Math.imul(al0, bl3)) | 0\n    mid = (mid + Math.imul(al0, bh3)) | 0\n    mid = (mid + Math.imul(ah0, bl3)) | 0\n    hi = (hi + Math.imul(ah0, bh3)) | 0\n    let w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0\n    w3 &= 0x3ffffff\n    /* k = 4 */\n    lo = Math.imul(al4, bl0)\n    mid = Math.imul(al4, bh0)\n    mid = (mid + Math.imul(ah4, bl0)) | 0\n    hi = Math.imul(ah4, bh0)\n    lo = (lo + Math.imul(al3, bl1)) | 0\n    mid = (mid + Math.imul(al3, bh1)) | 0\n    mid = (mid + Math.imul(ah3, bl1)) | 0\n    hi = (hi + Math.imul(ah3, bh1)) | 0\n    lo = (lo + Math.imul(al2, bl2)) | 0\n    mid = (mid + Math.imul(al2, bh2)) | 0\n    mid = (mid + Math.imul(ah2, bl2)) | 0\n    hi = (hi + Math.imul(ah2, bh2)) | 0\n    lo = (lo + Math.imul(al1, bl3)) | 0\n    mid = (mid + Math.imul(al1, bh3)) | 0\n    mid = (mid + Math.imul(ah1, bl3)) | 0\n    hi = (hi + Math.imul(ah1, bh3)) | 0\n    lo = (lo + Math.imul(al0, bl4)) | 0\n    mid = (mid + Math.imul(al0, bh4)) | 0\n    mid = (mid + Math.imul(ah0, bl4)) | 0\n    hi = (hi + Math.imul(ah0, bh4)) | 0\n    let w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0\n    w4 &= 0x3ffffff\n    /* k = 5 */\n    lo = Math.imul(al5, bl0)\n    mid = Math.imul(al5, bh0)\n    mid = (mid + Math.imul(ah5, bl0)) | 0\n    hi = Math.imul(ah5, bh0)\n    lo = (lo + Math.imul(al4, bl1)) | 0\n    mid = (mid + Math.imul(al4, bh1)) | 0\n    mid = (mid + Math.imul(ah4, bl1)) | 0\n    hi = (hi + Math.imul(ah4, bh1)) | 0\n    lo = (lo + Math.imul(al3, bl2)) | 0\n    mid = (mid + Math.imul(al3, bh2)) | 0\n    mid = (mid + Math.imul(ah3, bl2)) | 0\n    hi = (hi + Math.imul(ah3, bh2)) | 0\n    lo = (lo + Math.imul(al2, bl3)) | 0\n    mid = (mid + Math.imul(al2, bh3)) | 0\n    mid = (mid + Math.imul(ah2, bl3)) | 0\n    hi = (hi + Math.imul(ah2, bh3)) | 0\n    lo = (lo + Math.imul(al1, bl4)) | 0\n    mid = (mid + Math.imul(al1, bh4)) | 0\n    mid = (mid + Math.imul(ah1, bl4)) | 0\n    hi = (hi + Math.imul(ah1, bh4)) | 0\n    lo = (lo + Math.imul(al0, bl5)) | 0\n    mid = (mid + Math.imul(al0, bh5)) | 0\n    mid = (mid + Math.imul(ah0, bl5)) | 0\n    hi = (hi + Math.imul(ah0, bh5)) | 0\n    let w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0\n    w5 &= 0x3ffffff\n    /* k = 6 */\n    lo = Math.imul(al6, bl0)\n    mid = Math.imul(al6, bh0)\n    mid = (mid + Math.imul(ah6, bl0)) | 0\n    hi = Math.imul(ah6, bh0)\n    lo = (lo + Math.imul(al5, bl1)) | 0\n    mid = (mid + Math.imul(al5, bh1)) | 0\n    mid = (mid + Math.imul(ah5, bl1)) | 0\n    hi = (hi + Math.imul(ah5, bh1)) | 0\n    lo = (lo + Math.imul(al4, bl2)) | 0\n    mid = (mid + Math.imul(al4, bh2)) | 0\n    mid = (mid + Math.imul(ah4, bl2)) | 0\n    hi = (hi + Math.imul(ah4, bh2)) | 0\n    lo = (lo + Math.imul(al3, bl3)) | 0\n    mid = (mid + Math.imul(al3, bh3)) | 0\n    mid = (mid + Math.imul(ah3, bl3)) | 0\n    hi = (hi + Math.imul(ah3, bh3)) | 0\n    lo = (lo + Math.imul(al2, bl4)) | 0\n    mid = (mid + Math.imul(al2, bh4)) | 0\n    mid = (mid + Math.imul(ah2, bl4)) | 0\n    hi = (hi + Math.imul(ah2, bh4)) | 0\n    lo = (lo + Math.imul(al1, bl5)) | 0\n    mid = (mid + Math.imul(al1, bh5)) | 0\n    mid = (mid + Math.imul(ah1, bl5)) | 0\n    hi = (hi + Math.imul(ah1, bh5)) | 0\n    lo = (lo + Math.imul(al0, bl6)) | 0\n    mid = (mid + Math.imul(al0, bh6)) | 0\n    mid = (mid + Math.imul(ah0, bl6)) | 0\n    hi = (hi + Math.imul(ah0, bh6)) | 0\n    let w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0\n    w6 &= 0x3ffffff\n    /* k = 7 */\n    lo = Math.imul(al7, bl0)\n    mid = Math.imul(al7, bh0)\n    mid = (mid + Math.imul(ah7, bl0)) | 0\n    hi = Math.imul(ah7, bh0)\n    lo = (lo + Math.imul(al6, bl1)) | 0\n    mid = (mid + Math.imul(al6, bh1)) | 0\n    mid = (mid + Math.imul(ah6, bl1)) | 0\n    hi = (hi + Math.imul(ah6, bh1)) | 0\n    lo = (lo + Math.imul(al5, bl2)) | 0\n    mid = (mid + Math.imul(al5, bh2)) | 0\n    mid = (mid + Math.imul(ah5, bl2)) | 0\n    hi = (hi + Math.imul(ah5, bh2)) | 0\n    lo = (lo + Math.imul(al4, bl3)) | 0\n    mid = (mid + Math.imul(al4, bh3)) | 0\n    mid = (mid + Math.imul(ah4, bl3)) | 0\n    hi = (hi + Math.imul(ah4, bh3)) | 0\n    lo = (lo + Math.imul(al3, bl4)) | 0\n    mid = (mid + Math.imul(al3, bh4)) | 0\n    mid = (mid + Math.imul(ah3, bl4)) | 0\n    hi = (hi + Math.imul(ah3, bh4)) | 0\n    lo = (lo + Math.imul(al2, bl5)) | 0\n    mid = (mid + Math.imul(al2, bh5)) | 0\n    mid = (mid + Math.imul(ah2, bl5)) | 0\n    hi = (hi + Math.imul(ah2, bh5)) | 0\n    lo = (lo + Math.imul(al1, bl6)) | 0\n    mid = (mid + Math.imul(al1, bh6)) | 0\n    mid = (mid + Math.imul(ah1, bl6)) | 0\n    hi = (hi + Math.imul(ah1, bh6)) | 0\n    lo = (lo + Math.imul(al0, bl7)) | 0\n    mid = (mid + Math.imul(al0, bh7)) | 0\n    mid = (mid + Math.imul(ah0, bl7)) | 0\n    hi = (hi + Math.imul(ah0, bh7)) | 0\n    let w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0\n    w7 &= 0x3ffffff\n    /* k = 8 */\n    lo = Math.imul(al8, bl0)\n    mid = Math.imul(al8, bh0)\n    mid = (mid + Math.imul(ah8, bl0)) | 0\n    hi = Math.imul(ah8, bh0)\n    lo = (lo + Math.imul(al7, bl1)) | 0\n    mid = (mid + Math.imul(al7, bh1)) | 0\n    mid = (mid + Math.imul(ah7, bl1)) | 0\n    hi = (hi + Math.imul(ah7, bh1)) | 0\n    lo = (lo + Math.imul(al6, bl2)) | 0\n    mid = (mid + Math.imul(al6, bh2)) | 0\n    mid = (mid + Math.imul(ah6, bl2)) | 0\n    hi = (hi + Math.imul(ah6, bh2)) | 0\n    lo = (lo + Math.imul(al5, bl3)) | 0\n    mid = (mid + Math.imul(al5, bh3)) | 0\n    mid = (mid + Math.imul(ah5, bl3)) | 0\n    hi = (hi + Math.imul(ah5, bh3)) | 0\n    lo = (lo + Math.imul(al4, bl4)) | 0\n    mid = (mid + Math.imul(al4, bh4)) | 0\n    mid = (mid + Math.imul(ah4, bl4)) | 0\n    hi = (hi + Math.imul(ah4, bh4)) | 0\n    lo = (lo + Math.imul(al3, bl5)) | 0\n    mid = (mid + Math.imul(al3, bh5)) | 0\n    mid = (mid + Math.imul(ah3, bl5)) | 0\n    hi = (hi + Math.imul(ah3, bh5)) | 0\n    lo = (lo + Math.imul(al2, bl6)) | 0\n    mid = (mid + Math.imul(al2, bh6)) | 0\n    mid = (mid + Math.imul(ah2, bl6)) | 0\n    hi = (hi + Math.imul(ah2, bh6)) | 0\n    lo = (lo + Math.imul(al1, bl7)) | 0\n    mid = (mid + Math.imul(al1, bh7)) | 0\n    mid = (mid + Math.imul(ah1, bl7)) | 0\n    hi = (hi + Math.imul(ah1, bh7)) | 0\n    lo = (lo + Math.imul(al0, bl8)) | 0\n    mid = (mid + Math.imul(al0, bh8)) | 0\n    mid = (mid + Math.imul(ah0, bl8)) | 0\n    hi = (hi + Math.imul(ah0, bh8)) | 0\n    let w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0\n    w8 &= 0x3ffffff\n    /* k = 9 */\n    lo = Math.imul(al9, bl0)\n    mid = Math.imul(al9, bh0)\n    mid = (mid + Math.imul(ah9, bl0)) | 0\n    hi = Math.imul(ah9, bh0)\n    lo = (lo + Math.imul(al8, bl1)) | 0\n    mid = (mid + Math.imul(al8, bh1)) | 0\n    mid = (mid + Math.imul(ah8, bl1)) | 0\n    hi = (hi + Math.imul(ah8, bh1)) | 0\n    lo = (lo + Math.imul(al7, bl2)) | 0\n    mid = (mid + Math.imul(al7, bh2)) | 0\n    mid = (mid + Math.imul(ah7, bl2)) | 0\n    hi = (hi + Math.imul(ah7, bh2)) | 0\n    lo = (lo + Math.imul(al6, bl3)) | 0\n    mid = (mid + Math.imul(al6, bh3)) | 0\n    mid = (mid + Math.imul(ah6, bl3)) | 0\n    hi = (hi + Math.imul(ah6, bh3)) | 0\n    lo = (lo + Math.imul(al5, bl4)) | 0\n    mid = (mid + Math.imul(al5, bh4)) | 0\n    mid = (mid + Math.imul(ah5, bl4)) | 0\n    hi = (hi + Math.imul(ah5, bh4)) | 0\n    lo = (lo + Math.imul(al4, bl5)) | 0\n    mid = (mid + Math.imul(al4, bh5)) | 0\n    mid = (mid + Math.imul(ah4, bl5)) | 0\n    hi = (hi + Math.imul(ah4, bh5)) | 0\n    lo = (lo + Math.imul(al3, bl6)) | 0\n    mid = (mid + Math.imul(al3, bh6)) | 0\n    mid = (mid + Math.imul(ah3, bl6)) | 0\n    hi = (hi + Math.imul(ah3, bh6)) | 0\n    lo = (lo + Math.imul(al2, bl7)) | 0\n    mid = (mid + Math.imul(al2, bh7)) | 0\n    mid = (mid + Math.imul(ah2, bl7)) | 0\n    hi = (hi + Math.imul(ah2, bh7)) | 0\n    lo = (lo + Math.imul(al1, bl8)) | 0\n    mid = (mid + Math.imul(al1, bh8)) | 0\n    mid = (mid + Math.imul(ah1, bl8)) | 0\n    hi = (hi + Math.imul(ah1, bh8)) | 0\n    lo = (lo + Math.imul(al0, bl9)) | 0\n    mid = (mid + Math.imul(al0, bh9)) | 0\n    mid = (mid + Math.imul(ah0, bl9)) | 0\n    hi = (hi + Math.imul(ah0, bh9)) | 0\n    let w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0\n    w9 &= 0x3ffffff\n    /* k = 10 */\n    lo = Math.imul(al9, bl1)\n    mid = Math.imul(al9, bh1)\n    mid = (mid + Math.imul(ah9, bl1)) | 0\n    hi = Math.imul(ah9, bh1)\n    lo = (lo + Math.imul(al8, bl2)) | 0\n    mid = (mid + Math.imul(al8, bh2)) | 0\n    mid = (mid + Math.imul(ah8, bl2)) | 0\n    hi = (hi + Math.imul(ah8, bh2)) | 0\n    lo = (lo + Math.imul(al7, bl3)) | 0\n    mid = (mid + Math.imul(al7, bh3)) | 0\n    mid = (mid + Math.imul(ah7, bl3)) | 0\n    hi = (hi + Math.imul(ah7, bh3)) | 0\n    lo = (lo + Math.imul(al6, bl4)) | 0\n    mid = (mid + Math.imul(al6, bh4)) | 0\n    mid = (mid + Math.imul(ah6, bl4)) | 0\n    hi = (hi + Math.imul(ah6, bh4)) | 0\n    lo = (lo + Math.imul(al5, bl5)) | 0\n    mid = (mid + Math.imul(al5, bh5)) | 0\n    mid = (mid + Math.imul(ah5, bl5)) | 0\n    hi = (hi + Math.imul(ah5, bh5)) | 0\n    lo = (lo + Math.imul(al4, bl6)) | 0\n    mid = (mid + Math.imul(al4, bh6)) | 0\n    mid = (mid + Math.imul(ah4, bl6)) | 0\n    hi = (hi + Math.imul(ah4, bh6)) | 0\n    lo = (lo + Math.imul(al3, bl7)) | 0\n    mid = (mid + Math.imul(al3, bh7)) | 0\n    mid = (mid + Math.imul(ah3, bl7)) | 0\n    hi = (hi + Math.imul(ah3, bh7)) | 0\n    lo = (lo + Math.imul(al2, bl8)) | 0\n    mid = (mid + Math.imul(al2, bh8)) | 0\n    mid = (mid + Math.imul(ah2, bl8)) | 0\n    hi = (hi + Math.imul(ah2, bh8)) | 0\n    lo = (lo + Math.imul(al1, bl9)) | 0\n    mid = (mid + Math.imul(al1, bh9)) | 0\n    mid = (mid + Math.imul(ah1, bl9)) | 0\n    hi = (hi + Math.imul(ah1, bh9)) | 0\n    let w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0\n    w10 &= 0x3ffffff\n    /* k = 11 */\n    lo = Math.imul(al9, bl2)\n    mid = Math.imul(al9, bh2)\n    mid = (mid + Math.imul(ah9, bl2)) | 0\n    hi = Math.imul(ah9, bh2)\n    lo = (lo + Math.imul(al8, bl3)) | 0\n    mid = (mid + Math.imul(al8, bh3)) | 0\n    mid = (mid + Math.imul(ah8, bl3)) | 0\n    hi = (hi + Math.imul(ah8, bh3)) | 0\n    lo = (lo + Math.imul(al7, bl4)) | 0\n    mid = (mid + Math.imul(al7, bh4)) | 0\n    mid = (mid + Math.imul(ah7, bl4)) | 0\n    hi = (hi + Math.imul(ah7, bh4)) | 0\n    lo = (lo + Math.imul(al6, bl5)) | 0\n    mid = (mid + Math.imul(al6, bh5)) | 0\n    mid = (mid + Math.imul(ah6, bl5)) | 0\n    hi = (hi + Math.imul(ah6, bh5)) | 0\n    lo = (lo + Math.imul(al5, bl6)) | 0\n    mid = (mid + Math.imul(al5, bh6)) | 0\n    mid = (mid + Math.imul(ah5, bl6)) | 0\n    hi = (hi + Math.imul(ah5, bh6)) | 0\n    lo = (lo + Math.imul(al4, bl7)) | 0\n    mid = (mid + Math.imul(al4, bh7)) | 0\n    mid = (mid + Math.imul(ah4, bl7)) | 0\n    hi = (hi + Math.imul(ah4, bh7)) | 0\n    lo = (lo + Math.imul(al3, bl8)) | 0\n    mid = (mid + Math.imul(al3, bh8)) | 0\n    mid = (mid + Math.imul(ah3, bl8)) | 0\n    hi = (hi + Math.imul(ah3, bh8)) | 0\n    lo = (lo + Math.imul(al2, bl9)) | 0\n    mid = (mid + Math.imul(al2, bh9)) | 0\n    mid = (mid + Math.imul(ah2, bl9)) | 0\n    hi = (hi + Math.imul(ah2, bh9)) | 0\n    let w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0\n    w11 &= 0x3ffffff\n    /* k = 12 */\n    lo = Math.imul(al9, bl3)\n    mid = Math.imul(al9, bh3)\n    mid = (mid + Math.imul(ah9, bl3)) | 0\n    hi = Math.imul(ah9, bh3)\n    lo = (lo + Math.imul(al8, bl4)) | 0\n    mid = (mid + Math.imul(al8, bh4)) | 0\n    mid = (mid + Math.imul(ah8, bl4)) | 0\n    hi = (hi + Math.imul(ah8, bh4)) | 0\n    lo = (lo + Math.imul(al7, bl5)) | 0\n    mid = (mid + Math.imul(al7, bh5)) | 0\n    mid = (mid + Math.imul(ah7, bl5)) | 0\n    hi = (hi + Math.imul(ah7, bh5)) | 0\n    lo = (lo + Math.imul(al6, bl6)) | 0\n    mid = (mid + Math.imul(al6, bh6)) | 0\n    mid = (mid + Math.imul(ah6, bl6)) | 0\n    hi = (hi + Math.imul(ah6, bh6)) | 0\n    lo = (lo + Math.imul(al5, bl7)) | 0\n    mid = (mid + Math.imul(al5, bh7)) | 0\n    mid = (mid + Math.imul(ah5, bl7)) | 0\n    hi = (hi + Math.imul(ah5, bh7)) | 0\n    lo = (lo + Math.imul(al4, bl8)) | 0\n    mid = (mid + Math.imul(al4, bh8)) | 0\n    mid = (mid + Math.imul(ah4, bl8)) | 0\n    hi = (hi + Math.imul(ah4, bh8)) | 0\n    lo = (lo + Math.imul(al3, bl9)) | 0\n    mid = (mid + Math.imul(al3, bh9)) | 0\n    mid = (mid + Math.imul(ah3, bl9)) | 0\n    hi = (hi + Math.imul(ah3, bh9)) | 0\n    let w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0\n    w12 &= 0x3ffffff\n    /* k = 13 */\n    lo = Math.imul(al9, bl4)\n    mid = Math.imul(al9, bh4)\n    mid = (mid + Math.imul(ah9, bl4)) | 0\n    hi = Math.imul(ah9, bh4)\n    lo = (lo + Math.imul(al8, bl5)) | 0\n    mid = (mid + Math.imul(al8, bh5)) | 0\n    mid = (mid + Math.imul(ah8, bl5)) | 0\n    hi = (hi + Math.imul(ah8, bh5)) | 0\n    lo = (lo + Math.imul(al7, bl6)) | 0\n    mid = (mid + Math.imul(al7, bh6)) | 0\n    mid = (mid + Math.imul(ah7, bl6)) | 0\n    hi = (hi + Math.imul(ah7, bh6)) | 0\n    lo = (lo + Math.imul(al6, bl7)) | 0\n    mid = (mid + Math.imul(al6, bh7)) | 0\n    mid = (mid + Math.imul(ah6, bl7)) | 0\n    hi = (hi + Math.imul(ah6, bh7)) | 0\n    lo = (lo + Math.imul(al5, bl8)) | 0\n    mid = (mid + Math.imul(al5, bh8)) | 0\n    mid = (mid + Math.imul(ah5, bl8)) | 0\n    hi = (hi + Math.imul(ah5, bh8)) | 0\n    lo = (lo + Math.imul(al4, bl9)) | 0\n    mid = (mid + Math.imul(al4, bh9)) | 0\n    mid = (mid + Math.imul(ah4, bl9)) | 0\n    hi = (hi + Math.imul(ah4, bh9)) | 0\n    let w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0\n    w13 &= 0x3ffffff\n    /* k = 14 */\n    lo = Math.imul(al9, bl5)\n    mid = Math.imul(al9, bh5)\n    mid = (mid + Math.imul(ah9, bl5)) | 0\n    hi = Math.imul(ah9, bh5)\n    lo = (lo + Math.imul(al8, bl6)) | 0\n    mid = (mid + Math.imul(al8, bh6)) | 0\n    mid = (mid + Math.imul(ah8, bl6)) | 0\n    hi = (hi + Math.imul(ah8, bh6)) | 0\n    lo = (lo + Math.imul(al7, bl7)) | 0\n    mid = (mid + Math.imul(al7, bh7)) | 0\n    mid = (mid + Math.imul(ah7, bl7)) | 0\n    hi = (hi + Math.imul(ah7, bh7)) | 0\n    lo = (lo + Math.imul(al6, bl8)) | 0\n    mid = (mid + Math.imul(al6, bh8)) | 0\n    mid = (mid + Math.imul(ah6, bl8)) | 0\n    hi = (hi + Math.imul(ah6, bh8)) | 0\n    lo = (lo + Math.imul(al5, bl9)) | 0\n    mid = (mid + Math.imul(al5, bh9)) | 0\n    mid = (mid + Math.imul(ah5, bl9)) | 0\n    hi = (hi + Math.imul(ah5, bh9)) | 0\n    let w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0\n    w14 &= 0x3ffffff\n    /* k = 15 */\n    lo = Math.imul(al9, bl6)\n    mid = Math.imul(al9, bh6)\n    mid = (mid + Math.imul(ah9, bl6)) | 0\n    hi = Math.imul(ah9, bh6)\n    lo = (lo + Math.imul(al8, bl7)) | 0\n    mid = (mid + Math.imul(al8, bh7)) | 0\n    mid = (mid + Math.imul(ah8, bl7)) | 0\n    hi = (hi + Math.imul(ah8, bh7)) | 0\n    lo = (lo + Math.imul(al7, bl8)) | 0\n    mid = (mid + Math.imul(al7, bh8)) | 0\n    mid = (mid + Math.imul(ah7, bl8)) | 0\n    hi = (hi + Math.imul(ah7, bh8)) | 0\n    lo = (lo + Math.imul(al6, bl9)) | 0\n    mid = (mid + Math.imul(al6, bh9)) | 0\n    mid = (mid + Math.imul(ah6, bl9)) | 0\n    hi = (hi + Math.imul(ah6, bh9)) | 0\n    let w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0\n    w15 &= 0x3ffffff\n    /* k = 16 */\n    lo = Math.imul(al9, bl7)\n    mid = Math.imul(al9, bh7)\n    mid = (mid + Math.imul(ah9, bl7)) | 0\n    hi = Math.imul(ah9, bh7)\n    lo = (lo + Math.imul(al8, bl8)) | 0\n    mid = (mid + Math.imul(al8, bh8)) | 0\n    mid = (mid + Math.imul(ah8, bl8)) | 0\n    hi = (hi + Math.imul(ah8, bh8)) | 0\n    lo = (lo + Math.imul(al7, bl9)) | 0\n    mid = (mid + Math.imul(al7, bh9)) | 0\n    mid = (mid + Math.imul(ah7, bl9)) | 0\n    hi = (hi + Math.imul(ah7, bh9)) | 0\n    let w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0\n    w16 &= 0x3ffffff\n    /* k = 17 */\n    lo = Math.imul(al9, bl8)\n    mid = Math.imul(al9, bh8)\n    mid = (mid + Math.imul(ah9, bl8)) | 0\n    hi = Math.imul(ah9, bh8)\n    lo = (lo + Math.imul(al8, bl9)) | 0\n    mid = (mid + Math.imul(al8, bh9)) | 0\n    mid = (mid + Math.imul(ah8, bl9)) | 0\n    hi = (hi + Math.imul(ah8, bh9)) | 0\n    let w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0\n    w17 &= 0x3ffffff\n    /* k = 18 */\n    lo = Math.imul(al9, bl9)\n    mid = Math.imul(al9, bh9)\n    mid = (mid + Math.imul(ah9, bl9)) | 0\n    hi = Math.imul(ah9, bh9)\n    let w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0\n    w18 &= 0x3ffffff\n    o[0] = w0\n    o[1] = w1\n    o[2] = w2\n    o[3] = w3\n    o[4] = w4\n    o[5] = w5\n    o[6] = w6\n    o[7] = w7\n    o[8] = w8\n    o[9] = w9\n    o[10] = w10\n    o[11] = w11\n    o[12] = w12\n    o[13] = w13\n    o[14] = w14\n    o[15] = w15\n    o[16] = w16\n    o[17] = w17\n    o[18] = w18\n    if (c !== 0) {\n      o[19] = c\n      out.length++\n    }\n    return out\n  }\n\n  private bigMulTo (self: BigNumber, num: BigNumber, out: BigNumber): BigNumber {\n    out.negative = num.negative ^ self.negative\n    out.length = self.length + num.length\n\n    let carry = 0\n    let hncarry = 0\n    let k = 0\n    for (; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      let ncarry = hncarry\n      hncarry = 0\n      let rword = carry & 0x3ffffff\n      const maxJ = Math.min(k, num.length - 1)\n      for (let j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        const i = k - j\n        const a = self.words[i] | 0\n        const b = num.words[j] | 0\n        const r = a * b\n\n        let lo = r & 0x3ffffff\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0\n        lo = (lo + rword) | 0\n        rword = lo & 0x3ffffff\n        ncarry = (ncarry + (lo >>> 26)) | 0\n\n        hncarry += ncarry >>> 26\n        ncarry &= 0x3ffffff\n      }\n      out.words[k] = rword\n      carry = ncarry\n      ncarry = hncarry\n    }\n    if (carry !== 0) {\n      out.words[k] = carry\n    } else {\n      out.length--\n    }\n\n    return out.strip()\n  }\n\n  /**\n   * Performs multiplication between the BigNumber instance and a given BigNumber.\n   * It chooses the multiplication method based on the lengths of the numbers to optimize execution time.\n   *\n   * @method mulTo\n   * @param num - The BigNumber multiply with.\n   * @param out - The BigNumber where to store the result.\n   * @returns The BigNumber resulting from the multiplication operation.\n   *\n   * @example\n   * const bn1 = new BigNumber('12345');\n   * const bn2 = new BigNumber('23456');\n   * const output = new BigNumber();\n   * bn1.mulTo(bn2, output);\n   */\n  mulTo (num: BigNumber, out: BigNumber): BigNumber {\n    let res\n    const len = this.length + num.length\n    if (this.length === 10 && num.length === 10) {\n      res = this.comb10MulTo(this, num, out)\n    } else if (len < 63) {\n      res = this.smallMulTo(this, num, out)\n    } else {\n      res = this.bigMulTo(this, num, out)\n    }\n\n    return res\n  }\n\n  /**\n   * Performs multiplication between the BigNumber instance and a given BigNumber.\n   * It creates a new BigNumber to store the result.\n   *\n   * @method mul\n   * @param num - The BigNumber to multiply with.\n   * @returns The BigNumber resulting from the multiplication operation.\n   *\n   * @example\n   * const bn1 = new BigNumber('12345');\n   * const bn2 = new BigNumber('23456');\n   * const result = bn1.mul(bn2);\n   */\n  mul (num: BigNumber): BigNumber {\n    const out = new BigNumber()\n    out.words = new Array(this.length + num.length)\n    return this.mulTo(num, out)\n  }\n\n  /**\n   * Performs an in-place multiplication of the BigNumber instance by a given BigNumber.\n   *\n   * @method imul\n   * @param num - The BigNumber to multiply with.\n   * @returns The BigNumber itself after the multiplication.\n   *\n   * @example\n   * const bn1 = new BigNumber('12345');\n   * const bn2 = new BigNumber('23456');\n   * bn1.imul(bn2);\n   */\n  imul (num: BigNumber): BigNumber {\n    return this.clone().mulTo(num, this)\n  }\n\n  /**\n   * Performs an in-place multiplication of the BigNumber instance by a number.\n   * This method asserts the input to be a number less than 0x4000000 to prevent overflowing.\n   * If negavtive number is provided, the resulting BigNumber will be inversely negative.\n   *\n   * @method imuln\n   * @param num - The number to multiply with.\n   * @returns The BigNumber itself after the multiplication.\n   *\n   * @example\n   * const bn = new BigNumber('12345');\n   * bn.imuln(23456);\n   */\n  imuln (num: number): BigNumber {\n    const isNegNum = num < 0\n    if (isNegNum) num = -num\n\n    this.assert(typeof num === 'number')\n    this.assert(num < 0x4000000)\n\n    // Carry\n    let carry = 0\n    let i = 0\n    for (; i < this.length; i++) {\n      const w = (this.words[i] | 0) * num\n      const lo = (w & 0x3ffffff) + (carry & 0x3ffffff)\n      carry >>= 26\n      carry += (w / 0x4000000) | 0\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26\n      this.words[i] = lo & 0x3ffffff\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry\n      this.length++\n    }\n\n    return isNegNum ? this.ineg() : this\n  }\n\n  /**\n   * Performs multiplication between the BigNumber instance and a number.\n   * It performs the multiplication operation in-place to a cloned BigNumber.\n   *\n   * @method muln\n   * @param num - The number to multiply with.\n   * @returns The resulting BigNumber from the multiplication operation.\n   *\n   * @example\n   * const bn = new BigNumber('12345');\n   * const result = bn.muln(23456);\n   */\n  muln (num: number): BigNumber {\n    return this.clone().imuln(num)\n  }\n\n  /**\n   * Squares the BigNumber instance.\n   *\n   * @method sqr\n   * @returns The BigNumber squared.\n   *\n   * @example\n   * const bn = new BigNumber('12345');\n   * const result = bn.sqr();\n   */\n  sqr (): BigNumber {\n    return this.mul(this)\n  }\n\n  /**\n   * Performs in-place multiplication of the BigNumber instance by itself.\n   *\n   * @method isqr\n   * @returns The result of multiplying the BigNumber instance by itself.\n   *\n   * @example\n   * let myNumber = new BigNumber(4);\n   * myNumber.isqr(); // Returns BigNumber of value 16\n   */\n  isqr (): BigNumber {\n    return this.imul(this.clone())\n  }\n\n  /**\n   * Raises the BigNumber instance to the power of the specified BigNumber.\n   *\n   * @method pow\n   * @param num - The exponent to raise the BigNumber instance to.\n   * @returns The result of raising the BigNumber instance to the power of num.\n   *\n   * @example\n   * let base = new BigNumber(2);\n   * let exponent = new BigNumber(3);\n   * base.pow(exponent); // Returns BigNumber of value 8\n   */\n  pow (num: BigNumber): BigNumber {\n    const w = BigNumber.toBitArray(num)\n    if (w.length === 0) return new BigNumber(1)\n\n    // Skip leading zeroes\n    /* eslint-disable @typescript-eslint/no-this-alias */\n    let res = this\n    let i = 0\n    for (; i < w.length; i++, res = res.sqr() as this) {\n      if (w[i] !== 0) break\n    }\n\n    if (++i < w.length) {\n      for (let q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue\n        res = res.mul(q) as this\n      }\n    }\n\n    return res\n  }\n\n  /**\n   * Performs in-place bitwise left shift operation on the BigNumber instance.\n   *\n   * @method iushln\n   * @param bits - The number of positions to shift.\n   * @returns The BigNumber instance after performing the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(4);\n   * myNumber.iushln(2); // Returns BigNumber of value 16\n   */\n  iushln (bits: number): BigNumber {\n    this.assert(typeof bits === 'number' && bits >= 0)\n    const r = bits % 26\n    const s = (bits - r) / 26\n    const carryMask = (0x3ffffff >>> (26 - r)) << (26 - r)\n    let i: number\n\n    if (r !== 0) {\n      let carry = 0\n\n      for (i = 0; i < this.length; i++) {\n        const newCarry = this.words[i] & carryMask\n        const c = ((this.words[i] | 0) - newCarry) << r\n        this.words[i] = c | carry\n        carry = newCarry >>> (26 - r)\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry\n        this.length++\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i]\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0\n      }\n\n      this.length += s\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Performs an in-place left shift operation on the BigNumber instance only if it is non-negative.\n   *\n   * @method ishln\n   * @param bits - The number of positions to shift.\n   * @returns The BigNumber instance after performing the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(4);\n   * myNumber.ishln(2); // Returns BigNumber of value 16\n   */\n  ishln (bits: number): BigNumber {\n    this.assert(this.negative === 0)\n    return this.iushln(bits)\n  }\n\n  /**\n   * Performs an in-place unsigned bitwise right shift operation on the BigNumber instance.\n   *\n   * @method iushrn\n   * @param bits - The number of positions to shift.\n   * @param hint - Lowest bit before trailing zeroes.\n   * @param extended - To be filled with the bits that are shifted out.\n   * @returns The BigNumber instance after performing the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(16);\n   * myNumber.iushrn(2); // Returns BigNumber of value 4\n   */\n  iushrn (bits: number, hint?: number, extended?: BigNumber): BigNumber {\n    this.assert(typeof bits === 'number' && bits >= 0)\n    let h\n    if (typeof hint === 'number' && hint !== 0) {\n      h = (hint - (hint % 26)) / 26\n    } else {\n      h = 0\n    }\n\n    const r = bits % 26\n    const s = Math.min((bits - r) / 26, this.length)\n    const mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r)\n    const maskedWords = extended\n\n    h -= s\n    h = Math.max(0, h)\n\n    // Extended mode, copy masked part\n    let i = 0\n    if (typeof maskedWords !== 'undefined') {\n      for (; i < s; i++) {\n        maskedWords.words[i] = this.words[i]\n      }\n      maskedWords.length = s\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s]\n      }\n    } else {\n      this.words[0] = 0\n      this.length = 1\n    }\n\n    let carry = 0\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      const word = this.words[i] | 0\n      this.words[i] = (carry << (26 - r)) | (word >>> r)\n      carry = word & mask\n    }\n\n    // Push carried bits as a mask\n    if ((maskedWords != null) && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0\n      this.length = 1\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Performs an in-place right shift operation on the BigNumber instance only if it is non-negative.\n   *\n   * @method ishrn\n   * @param bits - The number of positions to shift.\n   * @param hint - Lowest bit before trailing zeroes.\n   * @param extended - To be filled with the bits that are shifted out.\n   * @returns The BigNumber instance after performing the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(16);\n   * myNumber.ishrn(2); // Returns BigNumber of value 4\n   */\n  ishrn (bits, hint?, extended?): BigNumber {\n    this.assert(this.negative === 0)\n    return this.iushrn(bits, hint, extended)\n  }\n\n  /**\n   * Performs a bitwise left shift operation on a clone of the BigNumber instance.\n   *\n   * @method shln\n   * @param bits - The number of positions to shift.\n   * @returns A new BigNumber, which is the result of the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(4);\n   * let shiftedNumber = myNumber.shln(2);\n   * console.log(shiftedNumber.toString()); // Outputs \"16\"\n   */\n  shln (bits): BigNumber {\n    return this.clone().ishln(bits)\n  }\n\n  /**\n   * Performs an unsigned bitwise shift left operation on a clone of the BigNumber instance.\n   *\n   * @method ushln\n   * @param bits - The number of bits to shift.\n   * @returns A new BigNumber resulting from the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(4);\n   * let shiftedNumber = myNumber.ushln(2);\n   * console.log(shiftedNumber.toString()); // Outputs \"16\"\n   */\n  ushln (bits): BigNumber {\n    return this.clone().iushln(bits)\n  }\n\n  /**\n   * Performs a bitwise right shift operation on a clone of the BigNumber instance.\n   *\n   * @method shrn\n   * @param bits - The number of bits to shift.\n   * @returns A new BigNumber resulting from the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(16);\n   * let shiftedNumber = myNumber.shrn(3);\n   * console.log(shiftedNumber.toString()); // Outputs \"2\"\n   */\n  shrn (bits): BigNumber {\n    return this.clone().ishrn(bits)\n  }\n\n  /**\n   * Performs an unsigned bitwise shift right operation on a clone of the BigNumber instance.\n   *\n   * @method ushrn\n   * @param bits - The number of bits to shift.\n   * @returns A new BigNumber resulting from the shift operation.\n   *\n   * @example\n   * let myNumber = new BigNumber(20);\n   * let shiftedNumber = myNumber.ushrn(2);\n   * console.log(shiftedNumber.toString()); // Outputs \"5\"\n   */\n  ushrn (bits): BigNumber {\n    return this.clone().iushrn(bits)\n  }\n\n  /**\n   * Tests if the nth bit of the BigNumber is set.\n   *\n   * @method testn\n   * @param bit - The position of the bit to test.\n   * @returns A boolean indicating whether the nth bit is set.\n   *\n   * @example\n   * let myNumber = new BigNumber(10); // 1010 in binary\n   * myNumber.testn(1); // Returns true (indicating that the second bit from right is set)\n   */\n  testn (bit: number): boolean {\n    this.assert(typeof bit === 'number' && bit >= 0)\n    const r = bit % 26\n    const s = (bit - r) / 26\n    const q = 1 << r\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false\n\n    // Check bit and return\n    const w = this.words[s]\n\n    return Boolean(w & q)\n  }\n\n  /**\n   * Performs an in-place operation to keep only the lower bits of the number.\n   * @method imaskn\n   * @param bits - The number of lower bits to keep.\n   * @returns Returns the BigNumber with only the specified lower bits.\n   * @throws Will throw an error if bits is not a positive number.\n   * @throws Will throw an error if initial BigNumber is negative as imaskn only works with positive numbers.\n   * @example\n   * const myNumber = new BigNumber(52);\n   * myNumber.imaskn(2); // myNumber becomes 0 because lower 2 bits of 52 (110100) are 00.\n   */\n  imaskn (bits): BigNumber {\n    this.assert(typeof bits === 'number' && bits >= 0)\n    const r = bits % 26\n    let s = (bits - r) / 26\n\n    this.assert(this.negative === 0, 'imaskn works only with positive numbers')\n\n    if (this.length <= s) {\n      return this\n    }\n\n    if (r !== 0) {\n      s++\n    }\n    this.length = Math.min(s, this.length)\n\n    if (r !== 0) {\n      const mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r)\n      this.words[this.length - 1] &= mask\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Returns a new BigNumber that keeps only the lower bits of the original number.\n   * @method maskn\n   * @param bits - The number of lower bits to keep.\n   * @returns Returns a new BigNumber with only the specified lower bits of the original number.\n   * @example\n   * const myNumber = new BigNumber(52);\n   * const newNumber = myNumber.maskn(2); // newNumber becomes 0, myNumber doesn't change.\n   */\n  maskn (bits): BigNumber {\n    return this.clone().imaskn(bits)\n  }\n\n  /**\n   * Performs an in-place addition of a plain number to the BigNumber.\n   * @method iaddn\n   * @param num - The plain number to add.\n   * @returns Returns the BigNumber after the addition.\n   * @throws Will throw an error if num is not a number or is larger than 0x4000000.\n   * @example\n   * const myNumber = new BigNumber(50);\n   * myNumber.iaddn(2); // myNumber becomes 52.\n   */\n  iaddn (num: number): BigNumber {\n    this.assert(typeof num === 'number')\n    this.assert(num < 0x4000000, 'num is too large')\n    if (num < 0) return this.isubn(-num)\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0)\n        this.negative = 0\n        return this\n      }\n\n      this.negative = 0\n      this.isubn(num)\n      this.negative = 1\n      return this\n    }\n\n    // Add without checks\n    return this._iaddn(num)\n  }\n\n  /**\n   * A helper method for in-place addition, used when there are no sign changes or size checks needed.\n   * @private\n   * @method _iaddn\n   * @param num - The plain number to add.\n   * @returns Returns the BigNumber after the addition.\n   */\n  _iaddn (num: number): BigNumber {\n    this.words[0] += num\n\n    // Carry\n    let i = 0\n    for (; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1\n      } else {\n        this.words[i + 1]++\n      }\n    }\n    this.length = Math.max(this.length, i + 1)\n\n    return this\n  }\n\n  /**\n   * Performs an in-place subtraction of a plain number from the BigNumber.\n   * @method isubn\n   * @param num - The plain number to subtract.\n   * @returns Returns the BigNumber after the subtraction.\n   * @throws Will throw an error if num is not a number or is larger than 0x4000000.\n   * @example\n   * const myNumber = new BigNumber(52);\n   * myNumber.isubn(2); // myNumber becomes 50.\n   */\n  isubn (num: number): BigNumber {\n    this.assert(typeof num === 'number')\n    this.assert(num < 0x4000000)\n    if (num < 0) return this.iaddn(-num)\n\n    if (this.negative !== 0) {\n      this.negative = 0\n      this.iaddn(num)\n      this.negative = 1\n      return this\n    }\n\n    this.words[0] -= num\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0]\n      this.negative = 1\n    } else {\n      // Carry\n      for (let i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000\n        this.words[i + 1] -= 1\n      }\n    }\n\n    return this.strip()\n  }\n\n  /**\n   * Returns a new BigNumber that is the result of adding a plain number to the original BigNumber.\n   * @method addn\n   * @param num - The plain number to add.\n   * @returns Returns a new BigNumber which is the sum of the original BigNumber and the plain number.\n   * @example\n   * const myNumber = new BigNumber(50);\n   * const newNumber = myNumber.addn(2); // newNumber becomes 52, myNumber doesn't change.\n   */\n  addn (num: number): BigNumber {\n    return this.clone().iaddn(num)\n  }\n\n  /**\n   * Returns a new BigNumber that is the result of subtracting a plain number from the original BigNumber.\n   * @method subn\n   * @param num - The plain number to subtract.\n   * @returns Returns a new BigNumber which is the difference of the original BigNumber and the plain number.\n   * @example\n   * const myNumber = new BigNumber(52);\n   * const newNumber = myNumber.subn(2);  // newNumber becomes 50, myNumber doesn't change.\n   */\n  subn (num: number): BigNumber {\n    return this.clone().isubn(num)\n  }\n\n  /**\n   * Performs an in-place operation to make the BigNumber an absolute value.\n   * @method iabs\n   * @returns Returns the BigNumber as an absolute value.\n   * @example\n   * const myNumber = new BigNumber(-50);\n   * myNumber.iabs(); // myNumber becomes 50.\n   */\n  iabs (): BigNumber {\n    this.negative = 0\n    return this\n  }\n\n  /**\n   * Obtains the absolute value of a BigNumber instance.\n   * This operation does not affect the actual object but instead returns a new instance of BigNumber.\n   *\n   * @method abs\n   * @returns a new BigNumber instance with the absolute value of the current instance.\n   *\n   * @example\n   * let negativeNumber = new BigNumber(-10);\n   * let absolute = negativeNumber.abs();\n   * console.log(absolute.toString()); // Outputs: \"10\"\n   */\n  abs (): BigNumber {\n    return this.clone().iabs()\n  }\n\n  /**\n   * Perform an in-place shift left, subtract, and multiply operation on a BigNumber instance.\n   * This method modifies the existing BigNumber instance.\n   *\n   * @method _ishlnsubmul\n   * @param num - The BigNumber to be operated on.\n   * @param mul - The multiplication factor.\n   * @param shift - The number of places to shift left.\n   * @returns the updated BigNumber instance after performing the in-place shift, subtract, and multiply operations.\n   *\n   * @example\n   * let number = new BigNumber(10);\n   * number._ishlnsubmul(new BigNumber(2), 3, 1);\n   * console.log(number.toString()); // Outputs result after performing operations\n   */\n  _ishlnsubmul (num: BigNumber, mul, shift: number): BigNumber {\n    const len = num.length + shift\n    let i: number\n\n    this.expand(len)\n\n    let w\n    let carry = 0\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry\n      const right = (num.words[i] | 0) * mul\n      w -= right & 0x3ffffff\n      carry = (w >> 26) - ((right / 0x4000000) | 0)\n      this.words[i + shift] = w & 0x3ffffff\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry\n      carry = w >> 26\n      this.words[i + shift] = w & 0x3ffffff\n    }\n\n    if (carry === 0) return this.strip()\n\n    // Subtraction overflow\n    this.assert(carry === -1, 'carry must be -1')\n    carry = 0\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry\n      carry = w >> 26\n      this.words[i] = w & 0x3ffffff\n    }\n    this.negative = 1\n\n    return this.strip()\n  }\n\n  /**\n   * Performs a division on a BigNumber instance word-wise.\n   *\n   * This is a private method and should not be directly accessed.\n   *\n   * @method wordDiv\n   * @private\n   * @param num - The BigNumber to divide by.\n   * @param mode - Specifies the operation mode as 'mod' for modulus or 'div' for division.\n   * @returns Object with division (div) and modulo (mod) results, subject to the 'mode' specified.\n   */\n  private wordDiv (num: BigNumber, mode): any {\n    let shift = this.length - num.length\n\n    let a = this.clone()\n    let b = num\n\n    // Normalize\n    let bhi = b.words[b.length - 1] | 0\n    const bhiBits = this.countWordBits(bhi)\n    shift = 26 - bhiBits\n    if (shift !== 0) {\n      b = b.ushln(shift)\n      a.iushln(shift)\n      bhi = b.words[b.length - 1] | 0\n    }\n\n    // Initialize quotient\n    const m = a.length - b.length\n    let q: BigNumber | undefined\n\n    if (mode !== 'mod') {\n      q = new BigNumber()\n      q.length = m + 1\n      q.words = new Array(q.length)\n      for (let i = 0; i < q.length; i++) {\n        q.words[i] = 0\n      }\n    }\n\n    const diff = a.clone()._ishlnsubmul(b, 1, m)\n    if (diff.negative === 0) {\n      a = diff\n      if (typeof q !== 'undefined') {\n        q.words[m] = 1\n      }\n    }\n\n    for (let j = m - 1; j >= 0; j--) {\n      let qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0)\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff)\n\n      a._ishlnsubmul(b, qj, j)\n      while (a.negative !== 0) {\n        qj--\n        a.negative = 0\n        a._ishlnsubmul(b, 1, j)\n        if (!a.isZero()) {\n          a.negative ^= 1\n        }\n      }\n      if (typeof q !== 'undefined') {\n        q.words[j] = qj\n      }\n    }\n    if (typeof q !== 'undefined') {\n      q.strip()\n    }\n    a.strip()\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift)\n    }\n\n    return {\n      div: q ?? null,\n      mod: a\n    }\n  }\n\n  /**\n   * Performs division and/or modulus operation on a BigNumber instance depending on the 'mode' parameter.\n   * If the mode parameter is not provided, both division and modulus results are returned.\n   *\n   * @method divmod\n   * @param num - The BigNumber to divide by.\n   * @param mode - Specifies operation as 'mod' for modulus, 'div' for division, or both if not specified.\n   * @param positive - Specifies if unsigned modulus is requested.\n   * @returns Object with properties for division (div) and modulo (mod) results.\n   *\n   * @example\n   * let number = new BigNumber(10);\n   * let result = number.divmod(new BigNumber(3));\n   * console.log(result.div.toString()); // Outputs: \"3\"\n   * console.log(result.mod.toString()); // Outputs: \"1\"\n   */\n  divmod (num: BigNumber, mode?: 'div' | 'mod', positive?: boolean): any {\n    this.assert(!num.isZero())\n\n    if (this.isZero()) {\n      return {\n        div: new BigNumber(0),\n        mod: new BigNumber(0)\n      }\n    }\n\n    let div, mod, res\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode)\n\n      if (mode !== 'mod') {\n        div = res.div.neg()\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg()\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num)\n        }\n      }\n\n      return {\n        div,\n        mod\n      }\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode)\n\n      if (mode !== 'mod') {\n        div = res.div.neg()\n      }\n\n      return {\n        div,\n        mod: res.mod\n      }\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode)\n\n      if (mode !== 'div') {\n        mod = res.mod.neg()\n        if (positive && mod.negative !== 0) {\n          mod.isub(num)\n        }\n      }\n\n      return {\n        div: res.div,\n        mod\n      }\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BigNumber(0),\n        mod: this\n      }\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        }\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BigNumber(this.modrn(num.words[0]))\n        }\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BigNumber(this.modrn(num.words[0]))\n      }\n    }\n\n    return this.wordDiv(num, mode)\n  }\n\n  /**\n   * Divides a BigNumber instance by another BigNumber and returns result. This does not modify the actual object.\n   *\n   * @method div\n   * @param num - The BigNumber to divide by.\n   * @returns A new BigNumber instance of the division result.\n   *\n   * @example\n   * let number = new BigNumber(10);\n   * let result = number.div(new BigNumber(2));\n   * console.log(result.toString()); // Outputs: \"5\"\n   */\n  div (num: BigNumber): BigNumber {\n    return this.divmod(num, 'div', false).div as BigNumber\n  }\n\n  /**\n   * Returns the remainder after division of one `BigNumber` by another `BigNumber`.\n   *\n   * @method mod\n   * @param num - The divisor `BigNumber`.\n   * @returns The remainder `BigNumber` after division.\n   *\n   * @example\n   * const bigNum1 = new BigNumber('100');\n   * const bigNum2 = new BigNumber('45');\n   * const remainder = bigNum1.mod(bigNum2); // remainder here would be '10'\n   */\n  mod (num: BigNumber): BigNumber {\n    return this.divmod(num, 'mod', false).mod as BigNumber\n  }\n\n  /**\n   * Returns the remainder after unsigned division of one `BigNumber` by another `BigNumber`.\n   *\n   * @method umod\n   * @param num - The divisor `BigNumber`.\n   * @returns The remainder `BigNumber` after unsigned division.\n   * Note: Here 'unsigned division' means that signs of the numbers are ignored.\n   *\n   * @example\n   * const bigNum1 = new BigNumber('-100');\n   * const bigNum2 = new BigNumber('45');\n   * const remainder = bigNum1.umod(bigNum2); // remainder here would be '10' as signs are ignored.\n   */\n  umod (num: BigNumber): BigNumber {\n    return this.divmod(num, 'mod', true).mod as BigNumber\n  }\n\n  /**\n   * Returns the rounded quotient after division of one `BigNumber` by another `BigNumber`.\n   *\n   * @method divRound\n   * @param num - The divisor `BigNumber`.\n   * @returns The rounded quotient `BigNumber` after division.\n   *\n   * @example\n   * const bigNum1 = new BigNumber('100');\n   * const bigNum2 = new BigNumber('45');\n   * const quotient = bigNum1.divRound(bigNum2); // quotient here would be '2'\n   */\n  divRound (num: BigNumber): BigNumber {\n    const dm: { div: BigNumber, mod: BigNumber } = (\n      this.divmod(num) as unknown as { div: BigNumber, mod: BigNumber }\n    )\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div\n\n    const mod = dm.div.negative !== 0\n      ? dm.mod.isub(num)\n      : dm.mod\n\n    const half = num.ushrn(1)\n    const r2: number = num.andln(1)\n    const cmp = mod.cmp(half)\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1)\n  }\n\n  /**\n   * Returns the remainder after division of a `BigNumber` by a primitive number.\n   *\n   * @method modrn\n   * @param num - The divisor primitive number.\n   * @returns The remainder number after division.\n   *\n   * @example\n   * const bigNum = new BigNumber('100');\n   * const num = 45;\n   * const remainder = bigNum.modrn(num); // remainder here would be '10'\n   */\n  modrn (num: number): number {\n    const isNegNum = num < 0\n    if (isNegNum) num = -num\n\n    this.assert(num <= 0x3ffffff)\n    const p = (1 << 26) % num\n\n    let acc = 0\n    for (let i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num\n    }\n\n    return isNegNum ? -acc : acc\n  }\n\n  /**\n   * Performs an in-place division of a `BigNumber` by a primitive number.\n   *\n   * @method idivn\n   * @param num - The divisor primitive number.\n   * @returns The `BigNumber` itself after being divided.\n   * Note: 'in-place' means that this operation modifies the original `BigNumber`.\n   *\n   * @example\n   * const bigNum = new BigNumber('100');\n   * const num = 45;\n   * bigNum.idivn(num); // the bigNum here directly becomes '2'\n   */\n  idivn (num: number): BigNumber {\n    const isNegNum = num < 0\n    if (isNegNum) num = -num\n\n    this.assert(num <= 0x3ffffff)\n\n    let carry = 0\n    for (let i = this.length - 1; i >= 0; i--) {\n      const w = (this.words[i] | 0) + carry * 0x4000000\n      this.words[i] = (w / num) | 0\n      carry = w % num\n    }\n\n    this.strip()\n    return isNegNum ? this.ineg() : this\n  }\n\n  /**\n   * Returns the quotient `BigNumber` after division of one `BigNumber` by a primitive number.\n   *\n   * @method divn\n   * @param num - The divisor primitive number.\n   * @returns A new quotient `BigNumber` after division.\n   *\n   * @example\n   * const bigNum = new BigNumber('100');\n   * const num = 45;\n   * const quotient = bigNum.divn(num); // quotient here would be '2'\n   */\n  divn (num: number): BigNumber {\n    return this.clone().idivn(num)\n  }\n\n  /**\n   * Computes the Extended Euclidean Algorithm for this BigNumber and provided BigNumber `p`.\n   * The Extended Euclidean Algorithm is a method to find the GCD (Greatest Common Divisor) and the multiplicative inverse in a modulus field.\n   *\n   * @method egcd\n   * @param p - The `BigNumber` with which the Extended Euclidean Algorithm will be computed.\n   * @returns An object `{a: BigNumber, b: BigNumber, gcd: BigNumber}` where `gcd` is the GCD of the numbers, `a` is the coefficient of `this`, and `b` is the coefficient of `p` in Bézout's identity.\n   *\n   * @example\n   * const bigNum1 = new BigNumber('100');\n   * const bigNum2 = new BigNumber('45');\n   * const result = bigNum1.egcd(bigNum2);\n   */\n  egcd (p: BigNumber): { a: BigNumber, b: BigNumber, gcd: BigNumber } {\n    this.assert(p.negative === 0, 'p must not be negative')\n    this.assert(!p.isZero(), 'p must not be zero')\n\n    let x = this\n    const y = p.clone()\n\n    if (x.negative !== 0) {\n      x = x.umod(p) as this\n    } else {\n      x = x.clone() as this\n    }\n\n    // A * x + B * y = x\n    const A = new BigNumber(1)\n    const B = new BigNumber(0)\n\n    // C * x + D * y = y\n    const C = new BigNumber(0)\n    const D = new BigNumber(1)\n\n    let g = 0\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1)\n      y.iushrn(1)\n      ++g\n    }\n\n    const yp = y.clone()\n    const xp = x.clone()\n\n    while (!x.isZero()) {\n      let i = 0\n      let im = 1\n      for (; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i)\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp)\n            B.isub(xp)\n          }\n\n          A.iushrn(1)\n          B.iushrn(1)\n        }\n      }\n\n      let j = 0\n      let jm = 1\n      for (; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j)\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp)\n            D.isub(xp)\n          }\n\n          C.iushrn(1)\n          D.iushrn(1)\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y)\n        A.isub(C)\n        B.isub(D)\n      } else {\n        y.isub(x)\n        C.isub(A)\n        D.isub(B)\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    }\n  }\n\n  /**\n   * Compute the multiplicative inverse of the current BigNumber in the modulus field specified by `p`.\n   * The multiplicative inverse is a number which when multiplied with the current BigNumber gives '1' in the modulus field.\n   *\n   * @method _invmp\n   * @param p - The `BigNumber` specifying the modulus field.\n   * @returns The multiplicative inverse `BigNumber` in the modulus field specified by `p`.\n   *\n   * @example\n   * const bigNum = new BigNumber('45');\n   * const p = new BigNumber('100');\n   * const inverse = bigNum._invmp(p); // inverse here would be a BigNumber such that (inverse*bigNum) % p = '1'\n   */\n  _invmp (p: BigNumber): BigNumber {\n    this.assert(p.negative === 0, 'p must not be negative')\n    this.assert(!p.isZero(), 'p must not be zero')\n\n    let a = this\n    const b = p.clone()\n\n    if (a.negative !== 0) {\n      a = a.umod(p) as this\n    } else {\n      a = a.clone() as this\n    }\n\n    const x1 = new BigNumber(1)\n    const x2 = new BigNumber(0)\n\n    const delta = b.clone()\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      let i = 0\n      let im = 1\n      for (; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i)\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta)\n          }\n\n          x1.iushrn(1)\n        }\n      }\n\n      let j = 0\n      let jm = 1\n      for (; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j)\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta)\n          }\n\n          x2.iushrn(1)\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b)\n        x1.isub(x2)\n      } else {\n        b.isub(a)\n        x2.isub(x1)\n      }\n    }\n\n    let res\n    if (a.cmpn(1) === 0) {\n      res = x1\n    } else {\n      res = x2\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p)\n    }\n\n    return res\n  }\n\n  /**\n   * Computes and returns the greatest common divisor (GCD) of this BigNumber and the provided BigNumber.\n   *\n   * @method gcd\n   * @param num - The BigNumber with which to compute the GCD.\n   * @returns The GCD of this BigNumber and the provided BigNumber.\n   *\n   * @example\n   * let a = new BigNumber(48);\n   * let b = new BigNumber(18);\n   * let gcd = a.gcd(b);\n   */\n  gcd (num: BigNumber): BigNumber {\n    if (this.isZero()) return num.abs()\n    if (num.isZero()) return this.abs()\n\n    let a = this.clone()\n    let b = num.clone()\n    a.negative = 0\n    b.negative = 0\n\n    // Remove common factor of two\n    let shift = 0\n    for (; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1)\n      b.iushrn(1)\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1)\n      }\n      while (b.isEven()) {\n        b.iushrn(1)\n      }\n\n      const r = a.cmp(b)\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        const t = a\n        a = b\n        b = t\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break\n      }\n\n      a.isub(b)\n    } while (true)\n\n    return b.iushln(shift)\n  }\n\n  /**\n   * Computes and returns the modular multiplicative inverse of this BigNumber in the field defined by the provided BigNumber.\n   *\n   * @method invm\n   * @param num - The BigNumber that defines the field.\n   * @returns The modular multiplicative inverse of this BigNumber.\n   *\n   * @example\n   * let a = new BigNumber(3);\n   * let field = new BigNumber(7);\n   * let inverse = a.invm(field);\n   */\n  invm (num: BigNumber): BigNumber {\n    return this.egcd(num).a.umod(num)\n  }\n\n  /**\n   * Checks if this BigNumber is even.\n   * An even number is an integer which is evenly divisible by two.\n   *\n   * @method isEven\n   * @returns true if this BigNumber is even, else false.\n   *\n   * @example\n   * let a = new BigNumber(4);\n   * let isEven = a.isEven(); // true\n   */\n  isEven (): boolean {\n    return (this.words[0] & 1) === 0\n  }\n\n  /**\n   * Checks if this BigNumber is Odd.\n   * An odd number is an integer which is not evenly divisible by two.\n   *\n   * @method isOdd\n   * @returns true if this BigNumber is Odd, else false.\n   *\n   * @example\n   * let a = new BigNumber(3);\n   * let isOdd = a.isOdd(); // true\n   */\n  isOdd (): boolean {\n    return (this.words[0] & 1) === 1\n  }\n\n  /**\n   * Returns the result of bitwise AND operation between the least significant 26 bits of\n   * this BigNumber and the provided number.\n   * This method is mostly used to mask-off less significant bits.\n   *\n   * @method andln\n   * @param num - The number to AND with.\n   * @returns The result of the AND operation.\n   *\n   * @example\n   * let a = new BigNumber(60);\n   * let result = a.andln(13); // 12\n   */\n  andln (num: number): number {\n    return this.words[0] & num\n  }\n\n  /**\n   * Increments the value at the bit position specified by the input parameter.\n   *\n   * @method bincn\n   * @param bit - The bit position to increment at.\n   * @returns This BigNumber after incrementing at the specific bit position.\n   *\n   * @example\n   * let a = new BigNumber(5);\n   * a.bincn(2); // a = 7\n   */\n  bincn (bit: number): BigNumber {\n    this.assert(typeof bit === 'number')\n    const r = bit % 26\n    const s = (bit - r) / 26\n    const q = 1 << r\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this.expand(s + 1)\n      this.words[s] |= q\n      return this\n    }\n\n    // Add bit and propagate, if needed\n    let carry = q\n    let i = s\n    for (; carry !== 0 && i < this.length; i++) {\n      let w = this.words[i] | 0\n      w += carry\n      carry = w >>> 26\n      w &= 0x3ffffff\n      this.words[i] = w\n    }\n    if (carry !== 0) {\n      this.words[i] = carry\n      this.length++\n    }\n    return this\n  }\n\n  /**\n   * Checks if this BigNumber is Zero.\n   * A BigNumber is zero if it only contains one word and that word is 0.\n   *\n   * @method isZero\n   * @returns true if this BigNumber is Zero, else false.\n   *\n   * @example\n   * let a = new BigNumber(0);\n   * let isZero = a.isZero(); // true\n   */\n  isZero (): boolean {\n    return this.length === 1 && this.words[0] === 0\n  }\n\n  /**\n   * Compares this BigNumber with the given number.\n   * It returns -1 if this BigNumber is less than the number, 0 if they're equal, and 1 if the BigNumber is greater than the number.\n   *\n   * @method cmpn\n   * @param num - The number to compare with.\n   * @returns -1, 0, or 1 based on the comparison result.\n   *\n   * @example\n   * let a = new BigNumber(15);\n   * let result = a.cmpn(10); // 1\n   */\n  cmpn (num: number): 1 | 0 | -1 {\n    const negative = num < 0\n\n    if (this.negative !== 0 && !negative) return -1\n    if (this.negative === 0 && negative) return 1\n\n    this.strip()\n\n    let res: 1 | 0 | -1\n    if (this.length > 1) {\n      res = 1\n    } else {\n      if (negative) {\n        num = -num\n      }\n\n      this.assert(num <= 0x3ffffff, 'Number is too big')\n\n      const w = this.words[0] | 0\n      res = w === num ? 0 : w < num ? -1 : 1\n    }\n    if (this.negative !== 0) return (-res | 0) as 1 | 0 | -1\n    return res\n  }\n\n  /**\n   * Compare this big number with another big number.\n   * @method cmp\n   * @param num - The big number to compare with.\n   * @returns Returns:\n   * 1 if this big number is greater,\n   * -1 if it's less,\n   * 0 if they are equal.\n   *\n   * @example\n   * import BigNumber from './BigNumber';\n   * const bn1 = new BigNumber('10');\n   * const bn2 = new BigNumber('6');\n   * const comparisonResult = bn1.cmp(bn2); // 1 - because 10 is greater than 6\n   */\n  cmp (num: BigNumber): 1 | 0 | -1 {\n    if (this.negative !== 0 && num.negative === 0) return -1\n    if (this.negative === 0 && num.negative !== 0) return 1\n\n    const res = this.ucmp(num)\n    if (this.negative !== 0) return (-res | 0) as 1 | 0 | -1\n    return res\n  }\n\n  /**\n   * Performs an unsigned comparison between this BigNumber instance and another.\n   *\n   * @method ucmp\n   * @param num - The BigNumber instance to compare with.\n   * @returns Returns 1 if this BigNumber is bigger, -1 if it is smaller, and 0 if they are equal.\n   *\n   * @example\n   * let bigNumber1 = new BigNumber('1234');\n   * let bigNumber2 = new BigNumber('2345');\n   * let comparisonResult = bigNumber1.ucmp(bigNumber2); // Returns -1\n   */\n  ucmp (num: BigNumber): 1 | 0 | -1 {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1\n    if (this.length < num.length) return -1\n\n    let res: 1 | 0 | -1 = 0\n    for (let i = this.length - 1; i >= 0; i--) {\n      const a = this.words[i] | 0\n      const b = num.words[i] | 0\n\n      if (a === b) continue\n      if (a < b) {\n        res = -1\n      } else if (a > b) {\n        res = 1\n      }\n      break\n    }\n    return res\n  }\n\n  /**\n   * Checks if this BigNumber instance is greater than a number.\n   *\n   * @method gtn\n   * @param num - The number to compare with.\n   * @returns Returns true if this BigNumber is greater than the number, false otherwise.\n   *\n   * @example\n   * let bigNumber = new BigNumber('2345');\n   * let isGreater = bigNumber.gtn(1234); // Returns true\n   */\n  gtn (num: number): boolean {\n    return this.cmpn(num) === 1\n  }\n\n  /**\n   * Checks if this BigNumber instance is greater than another BigNumber.\n   *\n   * @method gt\n   * @param num - The BigNumber to compare with.\n   * @returns Returns true if this BigNumber is greater than the other BigNumber, false otherwise.\n   *\n   * @example\n   * let bigNumber1 = new BigNumber('2345');\n   * let bigNumber2 = new BigNumber('1234');\n   * let isGreater = bigNumber1.gt(bigNumber2); // Returns true\n   */\n  gt (num: BigNumber): boolean {\n    return this.cmp(num) === 1\n  }\n\n  /**\n   * Checks if this BigNumber instance is greater than or equal to a number.\n   *\n   * @method gten\n   * @param num - The number to compare with.\n   * @returns Returns true if this BigNumber is greater than or equal to the number, false otherwise.\n   *\n   * @example\n   * let bigNumber = new BigNumber('1234');\n   * let isGreaterOrEqual = bigNumber.gten(1234); // Returns true\n   */\n  gten (num: number): boolean {\n    return this.cmpn(num) >= 0\n  }\n\n  /**\n   * Checks if this BigNumber instance is greater than or equal to another BigNumber.\n   *\n   * @method gte\n   * @param num - The BigNumber to compare with.\n   * @returns Returns true if this BigNumber is greater than or equal to the other BigNumber, false otherwise.\n   *\n   * @example\n   * let bigNumber1 = new BigNumber('1234');\n   * let bigNumber2 = new BigNumber('1234');\n   * let isGreaterOrEqual = bigNumber1.gte(bigNumber2); // Returns true\n   */\n  gte (num: BigNumber): boolean {\n    return this.cmp(num) >= 0\n  }\n\n  /**\n   * Checks if this BigNumber instance is less than a number.\n   *\n   * @method ltn\n   * @param num - The number to compare with.\n   * @returns Returns true if this BigNumber is less than the number, false otherwise.\n   *\n   * @example\n   * let bigNumber = new BigNumber('1234');\n   * let isLess = bigNumber.ltn(2345); // Returns true\n   */\n  ltn (num: number): boolean {\n    return this.cmpn(num) === -1\n  }\n\n  /**\n   * Checks if this BigNumber instance is less than another BigNumber.\n   *\n   * @method lt\n   * @param num - The BigNumber to compare with.\n   * @returns Returns true if this BigNumber is less than the other BigNumber, false otherwise.\n   *\n   * @example\n   * let bigNumber1 = new BigNumber('1234');\n   * let bigNumber2 = new BigNumber('2345');\n   * let isLess = bigNumber1.lt(bigNumber2); // Returns true\n   */\n  lt (num: BigNumber): boolean {\n    return this.cmp(num) === -1\n  }\n\n  /**\n   * Checks if this BigNumber instance is less than or equal to a number.\n   *\n   * @method lten\n   * @param num - The number to compare with.\n   * @returns Returns true if this BigNumber is less than or equal to the number, false otherwise.\n   *\n   * @example\n   * let bigNumber = new BigNumber('2345');\n   * let isLessOrEqual = bigNumber.lten(2345); // Returns true\n   */\n  lten (num: number): boolean {\n    return this.cmpn(num) <= 0\n  }\n\n  /**\n   * Checks if this BigNumber instance is less than or equal to another BigNumber.\n   *\n   * @method lte\n   * @param num - The BigNumber to compare with.\n   * @returns Returns true if this BigNumber is less than or equal to the other BigNumber, false otherwise.\n   *\n   * @example\n   * let bigNumber1 = new BigNumber('2345');\n   * let bigNumber2 = new BigNumber('2345');\n   * let isLessOrEqual = bigNumber1.lte(bigNumber2); // Returns true\n   */\n  lte (num: BigNumber): boolean {\n    return this.cmp(num) <= 0\n  }\n\n  /**\n   * Checks if this BigNumber instance is equal to a number.\n   *\n   * @method eqn\n   * @param num - The number to compare with.\n   * @returns Returns true if this BigNumber is equal to the number, false otherwise.\n   *\n   * @example\n   * let bigNumber = new BigNumber('1234');\n   * let isEqual = bigNumber.eqn(1234); // Returns true\n   */\n  eqn (num: number): boolean {\n    return this.cmpn(num) === 0\n  }\n\n  /**\n   * Compares the current BigNumber with the given number and returns whether they're equal.\n   *\n   * @method eq\n   * @param num - The number to compare equality with.\n   * @returns Returns true if the current BigNumber is equal to the provided number, otherwise false.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * bigNum.eq(new BigNumber(10)); // true\n   */\n  eq (num: BigNumber): boolean {\n    return this.cmp(num) === 0\n  }\n\n  /**\n   * Converts a BigNumber to a reduction context ensuring the number is a positive integer and is not already in a reduction context.\n   * Throws an error in case the number is either negative or already in a reduction context.\n   *\n   * @method toRed\n   * @param ctx - The ReductionContext to convert the BigNumber to.\n   * @returns Returns the BigNumber in the given ReductionContext.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   */\n  toRed (ctx: ReductionContext): BigNumber {\n    this.assert(this.red == null, 'Already a number in reduction context')\n    this.assert(this.negative === 0, 'red works only with positives')\n    return ctx.convertTo(this).forceRed(ctx)\n  }\n\n  /**\n   * Converts a BigNumber from a reduction context, making sure the number is indeed in a reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method fromRed\n   * @returns Returns the BigNumber out of the ReductionContext.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.fromRed();\n   */\n  fromRed (): BigNumber {\n    this.assert(\n      this.red,\n      'fromRed works only with numbers in reduction context'\n    )\n    return (this.red).convertFrom(this)\n  }\n\n  /**\n   * Forces the current BigNumber into a reduction context, irrespective of the BigNumber's current state.\n   *\n   * @method forceRed\n   * @param ctx - The ReductionContext to forcefully convert the BigNumber to.\n   * @returns Returns the BigNumber in the given ReductionContext.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * let redCtx = new ReductionContext();\n   * bigNum.forceRed(redCtx);\n   */\n  forceRed (ctx: ReductionContext): BigNumber {\n    // this.assert(this.red == null, 'Already a number in reduction context')\n    this.red = ctx\n    return this\n  }\n\n  /**\n   * Performs addition operation of the current BigNumber with the given number in a reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method redAdd\n   * @param num - The number to add to the current BigNumber.\n   * @returns Returns a new BigNumber that's the sum of the current BigNumber and the provided number in the reduction context.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.redAdd(new BigNumber(20)); // returns a BigNumber of 30 in reduction context\n   */\n  redAdd (num: BigNumber): BigNumber {\n    this.assert(this.red, 'redAdd works only with red numbers')\n    return (this.red).add(this, num)\n  }\n\n  /**\n   * Performs in-place addition operation of the current BigNumber with the given number in a reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method redIAdd\n   * @param num - The number to add to the current BigNumber.\n   * @returns Returns the modified current BigNumber after adding the provided number in the reduction context.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.redIAdd(new BigNumber(20)); // modifies the bigNum to 30 in reduction context\n   */\n  redIAdd (num: BigNumber): BigNumber {\n    this.assert(this.red, 'redIAdd works only with red numbers')\n    return (this.red).iadd(this, num)\n  }\n\n  /**\n   * Performs subtraction operation of the current BigNumber with the given number in a reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method redSub\n   * @param num - The number to subtract from the current BigNumber.\n   * @returns Returns a new BigNumber that's the subtraction result of the current BigNumber and the provided number in the reduction context.\n   *\n   * @example\n   * let bigNum = new BigNumber(30);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.redSub(new BigNumber(20)); // returns a BigNumber of 10 in reduction context\n   */\n  redSub (num: BigNumber): BigNumber {\n    this.assert(this.red, 'redSub works only with red numbers')\n    return (this.red).sub(this, num)\n  }\n\n  /**\n   * Performs in-place subtraction operation of the current BigNumber with the given number in a reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method redISub\n   * @param num - The number to subtract from the current BigNumber.\n   * @returns Returns the modified current BigNumber after subtracting the provided number in the reduction context.\n   *\n   * @example\n   * let bigNum = new BigNumber(30);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.redISub(new BigNumber(20)); // modifies the bigNum to 10 in reduction context\n   */\n  redISub (num: BigNumber): BigNumber {\n    this.assert(this.red, 'redISub works only with red numbers')\n    return (this.red).isub(this, num)\n  }\n\n  /**\n   * Performs the shift left operation on the current BigNumber in the reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method redShl\n   * @param num - The positions to shift left the current BigNumber.\n   * @returns Returns a new BigNumber after performing the shift left operation on the current BigNumber in the reduction context.\n   *\n   * @example\n   * let bigNum = new BigNumber(1);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.redShl(2); // returns a BigNumber of 4 in reduction context\n   */\n  redShl (num: number): BigNumber {\n    this.assert(this.red, 'redShl works only with red numbers')\n    return (this.red).shl(this, num)\n  }\n\n  /**\n   * Performs multiplication operation of the current BigNumber with the given number in a reduction context.\n   * Throws an error in case the number is not in a reduction context.\n   *\n   * @method redMul\n   * @param num - The number to multiply with the current BigNumber.\n   * @returns Returns a new BigNumber that's the product of the current BigNumber and the provided number in the reduction context.\n   *\n   * @example\n   * let bigNum = new BigNumber(10);\n   * let redCtx = new ReductionContext();\n   * bigNum.toRed(redCtx);\n   * bigNum.redMul(new BigNumber(20)); // returns a BigNumber of 200 in reduction context\n   */\n  redMul (num: BigNumber): BigNumber {\n    this.assert(this.red, 'redMul works only with red numbers')\n    ; (this.red).verify2(this, num)\n    return (this.red).mul(this, num)\n  }\n\n  /**\n   * Performs an in-place multiplication of this BigNumber instance with another BigNumber within a reduction context.\n   * Expects that this BigNumber is within the reduction context i.e., it has been reduced.\n   *\n   * @method redIMul\n   * @param num - The BigNumber to multiply with the current BigNumber.\n   * @returns A BigNumber that is the result of the in-place multiplication operation, within the reduction context.\n   *\n   * @example\n   * let bigNum1 = new BigNumber('10').toRed(someRed);\n   * let bigNum2 = new BigNumber('5');\n   * bigNum1.redIMul(bigNum2);\n   */\n  redIMul (num: BigNumber): BigNumber {\n    this.assert(this.red, 'redMul works only with red numbers')\n    ; (this.red).verify2(this, num)\n    return (this.red).imul(this, num)\n  }\n\n  /**\n   * Square of a \"red\" (reduced) BigNumber.\n   * This function squares the calling BigNumber and returns the result.\n   * It only works if the number is \"reduced\". A number is considered reduced\n   * if it has a `red` field that points to a reduction context object.\n   *\n   * @method redSqr\n   * @throws If the BigNumber is not reduced\n   * @returns The square of the BigNumber\n   *\n   * @example\n   * const num = new BigNumber('25').toRed(someRed);\n   * const result = num.redSqr();\n   * console.log(result.toString()); // Outputs: '625' mod the red value\n   */\n  redSqr (): BigNumber {\n    this.assert(this.red, 'redSqr works only with red numbers')\n    ; (this.red).verify1(this)\n    return (this.red).sqr(this)\n  }\n\n  /**\n   * In-place square of a \"red\" (reduced) BigNumber.\n   * This function squares the calling BigNumber and overwrites it with the result.\n   * It only works if the number is \"reduced\". A number is considered reduced\n   * if it has a `red` field that points to a reduction context object.\n   *\n   * @method redISqr\n   * @throws If the BigNumber is not reduced\n   * @returns This BigNumber squared in place\n   *\n   * @example\n   * const num = new BigNumber('25').toRed(someRed);\n   * num.redISqr();\n   * console.log(num.toString()); // Outputs: '625' mod the red value\n   */\n  redISqr (): BigNumber {\n    this.assert(this.red, 'redISqr works only with red numbers')\n    ; (this.red).verify1(this)\n    return (this.red).isqr(this)\n  }\n\n  /**\n   * Square root of a \"red\" (reduced) BigNumber.\n   * This function calculates the square root of the calling BigNumber\n   * and returns the result. It only works if the number is \"reduced\".\n   * A number is considered reduced if it has a `red`\n   * field that points to a reduction context object.\n   *\n   * @method redSqrt\n   * @throws If the BigNumber is not reduced\n   * @returns The square root of the BigNumber\n   *\n   * @example\n   * const num = new BigNumber('4').toRed(someRed);\n   * const result = num.redSqrt();\n   * console.log(result.toString()); // Outputs: '2' mod the red value\n   */\n  redSqrt (): BigNumber {\n    this.assert(this.red, 'redSqrt works only with red numbers')\n    ; (this.red).verify1(this)\n    return (this.red).sqrt(this)\n  }\n\n  /**\n   * Find multiplicative inverse (reciprocal) in respect to reduction context.\n   * The method works only on numbers that have a reduction context set.\n   *\n   * @method redInvm\n   * @returns Returns a BigNumber that is multiplicative inverse in respect to the reduction context.\n   * @throws Will throw an error if this number does not have a reduction context.\n   *\n   * @example\n   * let a = new BigNumber('2345', 16);\n   * a.red = someReductionContext;\n   * let aInverse = a.redInvm();\n   */\n  redInvm (): BigNumber {\n    this.assert(this.red, 'redInvm works only with red numbers')\n    ; (this.red).verify1(this)\n    return (this.red).invm(this)\n  }\n\n  /**\n   * Find negative version of this number in respect to reduction context.\n   * The method works only on numbers that have a reduction context set.\n   *\n   * @method redNeg\n   * @returns Returns a BigNumber that is the negative version of this number in respect to the reduction context.\n   * @throws Will throw an error if this number does not have a reduction context.\n   *\n   * @example\n   * let a = new BigNumber('2345', 16);\n   * a.red = someReductionContext;\n   * let aNeg = a.redNeg();\n   */\n  redNeg (): BigNumber {\n    this.assert(this.red, 'redNeg works only with red numbers')\n    ; (this.red).verify1(this)\n    return (this.red).neg(this)\n  }\n\n  /**\n   * Raises this number to the power of 'num', in respect to reduction context.\n   * Note that 'num' must not have a reduction context set.\n   *\n   * @method redPow\n   * @param num - The exponent to raise this number to.\n   * @returns Returns a BigNumber that is this number raised to the power of 'num', in respect to the reduction context.\n   * @throws Will throw an error if this number does not have a reduction context or 'num' has a reduction context.\n   *\n   * @example\n   * let a = new BigNumber(3);\n   * a.red = someReductionContext;\n   * let b = new BigNumber(3);\n   * let result = a.redPow(b);  // equivalent to (a^b) mod red\n   */\n  redPow (num: BigNumber): BigNumber {\n    this.assert((this.red != null) && (num.red == null), 'redPow(normalNum)')\n    ; (this.red).verify1(this)\n    return (this.red).pow(this, num)\n  }\n\n  /**\n   * Creates a BigNumber from a hexadecimal string.\n   *\n   * @static\n   * @method fromHex\n   * @param hex - The hexadecimal string to create a BigNumber from.\n   * @returns Returns a BigNumber created from the hexadecimal input string.\n   *\n   * @example\n   * const exampleHex = 'a1b2c3';\n   * const bigNumber = BigNumber.fromHex(exampleHex);\n   */\n  static fromHex (hex: string, endian?: 'little' | 'big'): BigNumber {\n    if (endian === 'big') {\n      return new BigNumber(hex, 16)\n    } else {\n      return new BigNumber(hex, 16, 'le')\n    }\n  }\n\n  /**\n   * Converts this BigNumber to a hexadecimal string.\n   *\n   * @method toHex\n   * @param length - The minimum length of the hex string\n   * @returns Returns a string representing the hexadecimal value of this BigNumber.\n   *\n   * @example\n   * const bigNumber = new BigNumber(255);\n   * const hex = bigNumber.toHex();\n   */\n  toHex (length: number = 0): string {\n    return this.toString('hex', length * 2)\n  }\n\n  /**\n   * Creates a BigNumber from a JSON-serialized string.\n   *\n   * @static\n   * @method fromJSON\n   * @param str - The JSON-serialized string to create a BigNumber from.\n   * @returns Returns a BigNumber created from the JSON input string.\n   *\n   * @example\n   * const serialized = '{\"type\":\"BigNumber\",\"hex\":\"a1b2c3\"}';\n   * const bigNumber = BigNumber.fromJSON(serialized);\n   */\n  static fromJSON (str: string): BigNumber {\n    return new BigNumber(str)\n  }\n\n  /**\n   * Creates a BigNumber from a number.\n   *\n   * @static\n   * @method fromNumber\n   * @param n - The number to create a BigNumber from.\n   * @returns Returns a BigNumber equivalent to the input number.\n   *\n   * @example\n   * const number = 1234;\n   * const bigNumber = BigNumber.fromNumber(number);\n   */\n  static fromNumber (n: number): BigNumber {\n    return new BigNumber(n)\n  }\n\n  /**\n   * Creates a BigNumber from a string, considering an optional base.\n   *\n   * @static\n   * @method fromString\n   * @param str - The string to create a BigNumber from.\n   * @param base - The base used for conversion. If not provided, base 10 is assumed.\n   * @returns Returns a BigNumber equivalent to the string after conversion from the specified base.\n   *\n   * @example\n   * const str = '1234';\n   * const bigNumber = BigNumber.fromString(str, 16);\n   */\n  static fromString (str: string, base?: number | 'hex'): BigNumber {\n    return new BigNumber(str, base)\n  }\n\n  /**\n   * Creates a BigNumber from a signed magnitude number.\n   *\n   * @static\n   * @method fromSm\n   * @param num - The signed magnitude number to convert to a BigNumber.\n   * @param endian - Defines endianess. If not provided, big endian is assumed.\n   * @returns Returns a BigNumber equivalent to the signed magnitude number interpreted with specified endianess.\n   *\n   * @example\n   * const num = [0x81]\n   * const bigNumber = BigNumber.fromSm(num, { endian: 'little' }); // equivalent to BigNumber from '-1'\n   */\n  static fromSm (num: number[], endian: 'big' | 'little' = 'big'): BigNumber {\n    let n = num\n    if (num.length === 0) {\n      return new BigNumber(0)\n    }\n\n    if (endian === 'little') {\n      n = [...n]\n      n = n.reverse()\n    }\n\n    if ((n[0] & 0x80) !== 0) {\n      n = [...n]\n      n[0] = n[0] & 0x7f\n      return new BigNumber(n).neg()\n    } else {\n      return new BigNumber(n)\n    }\n  }\n\n  /**\n   * Converts this BigNumber to a signed magnitude number.\n   *\n   * @method toSm\n   * @param endian - Defines endianess. If not provided, big endian is assumed.\n   * @returns Returns an array equivalent to this BigNumber interpreted as a signed magnitude with specified endianess.\n   *\n   * @example\n   * const bigNumber = new BigNumber(-1);\n   * const num = bigNumber.toSm('little'); // [0x81]\n   */\n  toSm (endian: 'big' | 'little' = 'big'): number[] {\n    let num: number[]\n    if (this.cmpn(0) === -1) {\n      num = this.neg().toArray()\n      if ((num[0] & 0x80) !== 0) {\n        num = [0x80, ...num]\n      } else {\n        num[0] = num[0] | 0x80\n      }\n    } else {\n      num = this.toArray()\n      if ((num[0] & 0x80) !== 0) {\n        num = [0x00, ...num]\n      }\n    }\n\n    if (num.length === 1 && num[0] === 0) {\n      num = []\n    }\n\n    if (endian === 'little') {\n      num = num.reverse()\n    }\n\n    return num\n  }\n\n  /**\n   * Creates a BigNumber from a number representing the \"bits\" value in a block header.\n   *\n   * @static\n   * @method fromBits\n   * @param bits - The number representing the bits value in a block header.\n   * @param strict - If true, an error is thrown if the number has negative bit set.\n   * @returns Returns a BigNumber equivalent to the \"bits\" value in a block header.\n   * @throws Will throw an error if `strict` is `true` and the number has negative bit set.\n   *\n   * @example\n   * const bits = 0x1d00ffff;\n   * const bigNumber = BigNumber.fromBits(bits);\n   */\n  static fromBits (bits: number, strict: boolean = false): BigNumber {\n    // Convert to signed 32-bit value manually without using Buffer\n    bits = (bits & 0x80000000) ? bits - 0x100000000 : bits\n    if (strict && (bits & 0x00800000) !== 0) {\n      throw new Error('negative bit set')\n    }\n    const nsize = bits >> 24\n    const nword = bits & 0x007fffff\n\n    // Manually create the byte array (similar to the original buffer)\n    let bytes = [\n      (nword >> 24) & 0xFF,\n      (nword >> 16) & 0xFF,\n      (nword >> 8) & 0xFF,\n      nword & 0xFF\n    ]\n\n    if (nsize <= 3) {\n      bytes = bytes.slice(1, 1 + nsize) // remove the most significant byte(s) as necessary\n    } else {\n      // add trailing zeros (similar to the original buffer fill)\n      for (let i = 0; i < nsize - 3; i++) {\n        bytes.push(0)\n      }\n    }\n\n    // Adjust for sign if the negative bit was set, and then convert array to BigNumber\n    if ((bits & 0x00800000) !== 0) {\n      return new BigNumber(bytes).neg()\n    } else {\n      return new BigNumber(bytes)\n    }\n  }\n\n  /**\n   * Converts this BigNumber to a number representing the \"bits\" value in a block header.\n   *\n   * @method toBits\n   * @returns Returns a number equivalent to the \"bits\" value in a block header.\n   *\n   * @example\n   * const bigNumber = new BigNumber(1);\n   * const bits = bigNumber.toBits();\n   */\n  toBits (): number {\n    let byteArray\n    if (this.ltn(0)) {\n      byteArray = this.neg().toArray('be')\n    } else {\n      byteArray = this.toArray('be')\n    }\n\n    // Ensure that the byte array is of a minimum size\n    while (byteArray.length < 4) {\n      byteArray.unshift(0)\n    }\n\n    // For the case where byteArray represents '00', the bits should be 0x00000000\n    if (byteArray.every(byte => byte === 0)) {\n      return 0x00000000\n    }\n\n    // Remove leading zeros from the byte array for further processing\n    while (byteArray[0] === 0) {\n      byteArray.shift()\n    }\n\n    let nsize = byteArray.length\n\n    // We're interested in the first three bytes for the \"nword\"\n    // or in smaller cases, what's available\n    let nword = byteArray.slice(0, 3).reduce((acc, val) => (acc * 256) + val, 0)\n\n    // Ensure we don't have the sign bit set initially\n    if ((nword & 0x800000) !== 0) {\n      // If the 24th bit is set, we're going to need one more byte to represent this number\n      byteArray.unshift(0) // Unshift a zero byte to not change the actual number\n      nsize += 1\n      nword >>>= 8 // Shift right to make room for that byte\n    }\n\n    // Encode size and the 3 bytes into \"nword\"\n    let bits = (nsize << 24) | nword\n\n    if (this.ltn(0)) {\n      // If the number is negative, set the 0x00800000 bit to indicate sign\n      bits |= 0x00800000\n    }\n\n    return bits >>> 0 // Convert to unsigned 32-bit integer\n  }\n\n  /**\n   * Creates a BigNumber from the format used in Bitcoin scripts.\n   *\n   * @static\n   * @method fromScriptNum\n   * @param num - The number in the format used in Bitcoin scripts.\n   * @param requireMinimal - If true, non-minimally encoded values will throw an error.\n   * @param maxNumSize - The maximum allowed size for the number. If not provided, defaults to 4.\n   * @returns Returns a BigNumber equivalent to the number used in a Bitcoin script.\n   * @throws Will throw an error if `requireMinimal` is `true` and the value is non-minimally encoded. Will throw an error if number length is greater than `maxNumSize`.\n   *\n   * @example\n   * const num = [0x02, 0x01]\n   * const bigNumber = BigNumber.fromScriptNum(num, true, 5)\n   */\n  static fromScriptNum (\n    num: number[], requireMinimal?: boolean, maxNumSize?: number\n  ): BigNumber {\n    if (maxNumSize === undefined) {\n      maxNumSize = Number.MAX_SAFE_INTEGER\n    }\n    if (num.length > maxNumSize) {\n      throw new Error('script number overflow')\n    }\n    if (requireMinimal && num.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n      if ((num[num.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n        if (num.length <= 1 || (num[num.length - 2] & 0x80) === 0) {\n          throw new Error('non-minimally encoded script number')\n        }\n      }\n    }\n    return BigNumber.fromSm(num, 'little')\n  }\n\n  /**\n   * Converts this BigNumber to a number in the format used in Bitcoin scripts.\n   *\n   * @method toScriptNum\n   * @returns Returns the equivalent to this BigNumber as a Bitcoin script number.\n   *\n   * @example\n   * const bigNumber = new BigNumber(258)\n   * const num = bigNumber.toScriptNum() // equivalent to bigNumber.toSm('little')\n   */\n  toScriptNum (): number[] {\n    return this.toSm('little')\n  }\n}\n","import BigNumber from './BigNumber.js'\n\n/**\n * A representation of a pseudo-Mersenne prime.\n * A pseudo-Mersenne prime has the general form 2^n - k, where n and k are integers.\n *\n * @class Mersenne\n *\n * @property name - The identifier for the Mersenne instance.\n * @property p - BigNumber equivalent to 2^n - k.\n * @property k - The constant subtracted from 2^n to derive a pseudo-Mersenne prime.\n * @property n - The exponent which determines the magnitude of the prime.\n */\nexport default class Mersenne {\n  name: string\n  p: BigNumber\n  k: BigNumber\n  n: number\n  private readonly tmp: BigNumber\n\n  /**\n   * @constructor\n   * @param name - An identifier for the Mersenne instance.\n   * @param p - A string representation of the pseudo-Mersenne prime, expressed in hexadecimal.\n   *\n   * @example\n   * const mersenne = new Mersenne('M31', '7FFFFFFF');\n   */\n  constructor (name: string, p: string) {\n    // P = 2 ^ N - K\n    this.name = name\n    this.p = new BigNumber(p, 16)\n    this.n = this.p.bitLength()\n    this.k = new BigNumber(1).iushln(this.n).isub(this.p)\n\n    this.tmp = this._tmp()\n  }\n\n  /**\n   * Creates a temporary BigNumber structure for computations,\n   * ensuring the appropriate number of words are initially allocated.\n   *\n   * @method _tmp\n   * @returns A BigNumber with scaled size depending on prime magnitude.\n   */\n  private _tmp (): BigNumber {\n    const tmp = new BigNumber()\n    tmp.words = new Array(Math.ceil(this.n / 13))\n    return tmp\n  }\n\n  /**\n   * Reduces an input BigNumber in place, under the assumption that\n   * it is less than the square of the pseudo-Mersenne prime.\n   *\n   * @method ireduce\n   * @param num - The BigNumber to be reduced.\n   * @returns The reduced BigNumber.\n   *\n   * @example\n   * const reduced = mersenne.ireduce(new BigNumber('2345', 16));\n   */\n  ireduce (num: BigNumber): BigNumber {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    let r = num\n    let rlen\n\n    do {\n      this.split(r, this.tmp)\n      r = this.imulK(r)\n      r = r.iadd(this.tmp)\n      rlen = r.bitLength()\n    } while (rlen > this.n)\n\n    const cmp = rlen < this.n ? -1 : r.ucmp(this.p)\n    if (cmp === 0) {\n      r.words[0] = 0\n      r.length = 1\n    } else if (cmp > 0) {\n      r.isub(this.p)\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip()\n      } else {\n        // r is a BN v5 instance\n        r.strip()\n      }\n    }\n\n    return r\n  }\n\n  /**\n   * Shifts bits of the input BigNumber to the right, in place,\n   * to meet the magnitude of the pseudo-Mersenne prime.\n   *\n   * @method split\n   * @param input - The BigNumber to be shifted.\n   * @param out - The BigNumber to hold the shifted result.\n   *\n   * @example\n   * mersenne.split(new BigNumber('2345', 16), new BigNumber());\n   */\n  split (input: BigNumber, out: BigNumber): void {\n    input.iushrn(this.n, 0, out)\n  }\n\n  /**\n   * Performs an in-place multiplication of the parameter by constant k.\n   *\n   * @method imulK\n   * @param num - The BigNumber to multiply with k.\n   * @returns The result of the multiplication, in BigNumber format.\n   *\n   * @example\n   * const multiplied = mersenne.imulK(new BigNumber('2345', 16));\n   */\n  imulK (num: BigNumber): BigNumber {\n    return num.imul(this.k)\n  }\n}\n","import Mersenne from './Mersenne.js'\nimport BigNumber from './BigNumber.js'\n\n/**\n * A class representing K-256, a prime number with optimizations, specifically used in the secp256k1 curve.\n * It extends the functionalities of the Mersenne class.\n * K-256 prime is represented as 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'\n *\n * @class K256\n * @extends {Mersenne}\n *\n * @example\n * const k256 = new K256();\n */\nexport default class K256 extends Mersenne {\n  /**\n   * Constructor for the K256 class.\n   * Creates an instance of K256 using the super constructor from Mersenne.\n   *\n   * @constructor\n   *\n   * @example\n   * const k256 = new K256();\n   */\n  constructor () {\n    super(\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'\n    )\n  }\n\n  /**\n   * Splits a BigNumber into a new BigNumber based on specific computation\n   * rules. This method modifies the input and output big numbers.\n   *\n   * @method split\n   * @param input - The BigNumber to be split.\n   * @param output - The BigNumber that results from the split.\n   *\n   * @example\n   * const input = new BigNumber(3456);\n   * const output = new BigNumber(0);\n   * k256.split(input, output);\n   */\n  split (input: BigNumber, output: BigNumber): void {\n    // 256 = 9 * 26 + 22\n    const mask = 0x3fffff\n\n    const outLen = Math.min(input.length, 9)\n    let i = 0\n    for (; i < outLen; i++) {\n      output.words[i] = input.words[i]\n    }\n    output.length = outLen\n\n    if (input.length <= 9) {\n      input.words[0] = 0\n      input.length = 1\n      return\n    }\n\n    // Shift by 9 limbs\n    let prev = input.words[9]\n    output.words[output.length++] = prev & mask\n\n    for (i = 10; i < input.length; i++) {\n      const next = input.words[i] | 0\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22)\n      prev = next\n    }\n    prev >>>= 22\n    input.words[i - 10] = prev\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10\n    } else {\n      input.length -= 9\n    }\n  }\n\n  /**\n   * Multiplies a BigNumber ('num') with the constant 'K' in-place and returns the result.\n   * 'K' is equal to 0x1000003d1 or in decimal representation: [ 64, 977 ].\n   *\n   * @method imulK\n   * @param num - The BigNumber to multiply with K.\n   * @returns Returns the mutated BigNumber after multiplication.\n   *\n   * @example\n   * const number = new BigNumber(12345);\n   * const result = k256.imulK(number);\n   */\n  imulK (num: BigNumber): BigNumber {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0\n    num.words[num.length + 1] = 0\n    num.length += 2\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    let lo = 0\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i] | 0\n      lo += w * 0x3d1\n      num.words[i] = lo & 0x3ffffff\n      lo = w * 0x40 + ((lo / 0x4000000) | 0)\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--\n      if (num.words[num.length - 1] === 0) {\n        num.length--\n      }\n    }\n    return num\n  }\n}\n","import BigNumber from './BigNumber.js'\nimport K256 from './K256.js'\nimport Mersenne from './Mersenne.js'\n\n/**\n * A base reduction engine that provides several arithmetic operations over\n * big numbers under a modulus context. It's particularly suitable for\n * calculations required in cryptography algorithms and encoding schemas.\n *\n * @class ReductionContext\n *\n * @property prime - The prime number utilised in the reduction context, typically an instance of Mersenne class.\n * @property m - The modulus used for reduction operations.\n */\nexport default class ReductionContext {\n  prime: Mersenne | null\n  m: BigNumber\n\n  /**\n   * Constructs a new ReductionContext.\n   *\n   * @constructor\n   * @param m - A BigNumber representing the modulus, or 'k256' to create a context for Koblitz curve.\n   *\n   * @example\n   * new ReductionContext(new BigNumber(11));\n   * new ReductionContext('k256');\n   */\n  constructor (m: BigNumber | 'k256') {\n    if (m === 'k256') {\n      const prime = new K256()\n      this.m = prime.p\n      this.prime = prime\n    } else {\n      this.assert(m.gtn(1), 'modulus must be greater than 1')\n      this.m = m\n      this.prime = null\n    }\n  }\n\n  /**\n   * Asserts that given value is truthy. Throws an Error with a provided message\n   * if the value is falsy.\n   *\n   * @private\n   * @param val - The value to be checked.\n   * @param msg - The error message to be thrown if the value is falsy.\n   *\n   * @example\n   * this.assert(1 < 2, '1 is not less than 2');\n   * this.assert(2 < 1, '2 is less than 1'); // throws an Error with message '2 is less than 1'\n   */\n  private assert (val: unknown, msg: string = 'Assertion failed'): void {\n    if (!(val as boolean)) throw new Error(msg)\n  }\n\n  /**\n   * Verifies that a BigNumber is positive and red. Throws an error if these\n   * conditions are not met.\n   *\n   * @param a - The BigNumber to be verified.\n   *\n   * @example\n   * this.verify1(new BigNumber(10).toRed());\n   * this.verify1(new BigNumber(-10).toRed()); //throws an Error\n   * this.verify1(new BigNumber(10)); //throws an Error\n   */\n  verify1 (a: BigNumber): void {\n    this.assert(a.negative === 0, 'red works only with positives')\n    this.assert(a.red, 'red works only with red numbers')\n  }\n\n  /**\n   * Verifies that two BigNumbers are both positive and red. Also checks\n   * that they have the same reduction context. Throws an error if these\n   * conditions are not met.\n   *\n   * @param a - The first BigNumber to be verified.\n   * @param b - The second BigNumber to be verified.\n   *\n   * @example\n   * this.verify2(new BigNumber(10).toRed(this), new BigNumber(20).toRed(this));\n   * this.verify2(new BigNumber(-10).toRed(this), new BigNumber(20).toRed(this)); //throws an Error\n   * this.verify2(new BigNumber(10).toRed(this), new BigNumber(20)); //throws an Error\n   */\n  verify2 (a: BigNumber, b: BigNumber): void {\n    this.assert(\n      (a.negative | b.negative) === 0,\n      'red works only with positives'\n    )\n    this.assert(\n      (a.red != null) && a.red === b.red,\n      'red works only with red numbers'\n    )\n  }\n\n  /**\n   * Performs an in-place reduction of the given BigNumber by the modulus of the reduction context, 'm'.\n   *\n   * @method imod\n   *\n   * @param a - BigNumber to be reduced.\n   *\n   * @returns Returns the reduced result.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.imod(new BigNumber(19)); // Returns 5\n   */\n  imod (a: BigNumber): BigNumber {\n    if (this.prime != null) return this.prime.ireduce(a).forceRed(this)\n\n    BigNumber.move(a, a.umod(this.m).forceRed(this))\n    return a\n  }\n\n  /**\n   * Negates a BigNumber in the context of the modulus.\n   *\n   * @method neg\n   *\n   * @param a - BigNumber to negate.\n   *\n   * @returns Returns the negation of 'a' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.neg(new BigNumber(3)); // Returns 4\n   */\n  neg (a: BigNumber): BigNumber {\n    if (a.isZero()) {\n      return a.clone()\n    }\n\n    return this.m.sub(a).forceRed(this)\n  }\n\n  /**\n   * Performs the addition operation on two BigNumbers in the reduction context.\n   *\n   * @method add\n   *\n   * @param a - First BigNumber to add.\n   * @param b - Second BigNumber to add.\n   *\n   * @returns Returns the result of 'a + b' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(5));\n   * context.add(new BigNumber(2), new BigNumber(4)); // Returns 1\n   */\n  add (a: BigNumber, b: BigNumber): BigNumber {\n    this.verify2(a, b)\n\n    const res = a.add(b)\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m)\n    }\n    return res.forceRed(this)\n  }\n\n  /**\n   * Performs an in-place addition operation on two BigNumbers in the reduction context\n   * in order to avoid creating a new BigNumber, it modifies the first one with the result.\n   *\n   * @method iadd\n   *\n   * @param a - First BigNumber to add.\n   * @param b - Second BigNumber to add.\n   *\n   * @returns Returns the modified 'a' after addition with 'b' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(5));\n   * const a = new BigNumber(2);\n   * context.iadd(a, new BigNumber(4)); // Modifies 'a' to be 1\n   */\n  iadd (a: BigNumber, b: BigNumber): BigNumber {\n    this.verify2(a, b)\n\n    const res = a.iadd(b)\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m)\n    }\n    return res\n  }\n\n  /**\n   * Subtracts one BigNumber from another BigNumber in the reduction context.\n   *\n   * @method sub\n   *\n   * @param a - BigNumber to be subtracted from.\n   * @param b - BigNumber to subtract.\n   *\n   * @returns Returns the result of 'a - b' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.sub(new BigNumber(3), new BigNumber(2)); // Returns 1\n   */\n  sub (a: BigNumber, b: BigNumber): BigNumber {\n    this.verify2(a, b)\n\n    const res = a.sub(b)\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m)\n    }\n    return res.forceRed(this)\n  }\n\n  /**\n   * Performs in-place subtraction of one BigNumber from another in the reduction context,\n   * it modifies the first BigNumber with the result.\n   *\n   * @method isub\n   *\n   * @param a - BigNumber to be subtracted from.\n   * @param b - BigNumber to subtract.\n   *\n   * @returns Returns the modified 'a' after subtraction of 'b' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(5));\n   * const a = new BigNumber(4);\n   * context.isub(a, new BigNumber(2)); // Modifies 'a' to be 2\n   */\n  isub (a: BigNumber, b: BigNumber): BigNumber {\n    this.verify2(a, b)\n\n    const res = a.isub(b)\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m)\n    }\n    return res\n  }\n\n  /**\n   * Performs bitwise shift left operation on a BigNumber in the reduction context.\n   *\n   * @method shl\n   *\n   * @param a - BigNumber to perform shift on.\n   * @param num - The number of positions to shift.\n   *\n   * @returns Returns the result of shifting 'a' left by 'num' positions in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(32));\n   * context.shl(new BigNumber(4), 2); // Returns 16\n   */\n  shl (a: BigNumber, num: number): BigNumber {\n    this.verify1(a)\n    return this.imod(a.ushln(num))\n  }\n\n  /**\n   * Performs in-place multiplication of two BigNumbers in the reduction context,\n   * modifying the first BigNumber with the result.\n   *\n   * @method imul\n   *\n   * @param a - First BigNumber to multiply.\n   * @param b - Second BigNumber to multiply.\n   *\n   * @returns Returns the modified 'a' after multiplication with 'b' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * const a = new BigNumber(3);\n   * context.imul(a, new BigNumber(2)); // Modifies 'a' to be 6\n   */\n  imul (a: BigNumber, b: BigNumber): BigNumber {\n    this.verify2(a, b)\n    return this.imod(a.imul(b))\n  }\n\n  /**\n   * Multiplies two BigNumbers in the reduction context.\n   *\n   * @method mul\n   *\n   * @param a - First BigNumber to multiply.\n   * @param b - Second BigNumber to multiply.\n   *\n   * @returns Returns the result of 'a * b' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.mul(new BigNumber(3), new BigNumber(2)); // Returns 6\n   */\n  mul (a: BigNumber, b: BigNumber): BigNumber {\n    this.verify2(a, b)\n    return this.imod(a.mul(b))\n  }\n\n  /**\n   * Calculates the square of a BigNumber in the reduction context,\n   * modifying the original BigNumber with the result.\n   *\n   * @method isqr\n   *\n   * @param a - BigNumber to be squared.\n   *\n   * @returns Returns the squared 'a' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * const a = new BigNumber(3);\n   * context.isqr(a); // Modifies 'a' to be 2 (9 % 7 = 2)\n   */\n  isqr (a: BigNumber): BigNumber {\n    return this.imul(a, a.clone())\n  }\n\n  /**\n   * Calculates the square of a BigNumber in the reduction context.\n   *\n   * @method sqr\n   *\n   * @param a - BigNumber to be squared.\n   *\n   * @returns Returns the result of 'a^2' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.sqr(new BigNumber(3)); // Returns 2 (9 % 7 = 2)\n   */\n  sqr (a: BigNumber): BigNumber {\n    return this.mul(a, a)\n  }\n\n  /**\n   * Calculates the square root of a BigNumber in the reduction context.\n   *\n   * @method sqrt\n   *\n   * @param a - The BigNumber to calculate the square root of.\n   *\n   * @returns Returns the square root of 'a' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(9));\n   * context.sqrt(new BigNumber(4)); // Returns 2\n   */\n  sqrt (a: BigNumber): BigNumber {\n    if (a.isZero()) return a.clone()\n\n    const mod3 = this.m.andln(3)\n    this.assert(mod3 % 2 === 1)\n\n    // Fast case\n    if (mod3 === 3) {\n      const pow = this.m.add(new BigNumber(1)).iushrn(2)\n      return this.pow(a, pow)\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    const q = this.m.subn(1)\n    let s = 0\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++\n      q.iushrn(1)\n    }\n    this.assert(!q.isZero())\n\n    const one = new BigNumber(1).toRed(this)\n    const nOne = one.redNeg()\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    const lpow = this.m.subn(1).iushrn(1)\n    const zl = this.m.bitLength()\n    const z = new BigNumber(2 * zl * zl).toRed(this)\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne)\n    }\n\n    let c = this.pow(z, q)\n    let r = this.pow(a, q.addn(1).iushrn(1))\n    let t = this.pow(a, q)\n    let m = s\n    while (t.cmp(one) !== 0) {\n      let tmp = t\n      let i = 0\n      for (; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr()\n      }\n      this.assert(i < m)\n      const b = this.pow(c, new BigNumber(1).iushln(m - i - 1))\n\n      r = r.redMul(b)\n      c = b.redSqr()\n      t = t.redMul(c)\n      m = i\n    }\n\n    return r\n  }\n\n  /**\n   * Calculates the multiplicative inverse of a BigNumber in the reduction context.\n   *\n   * @method invm\n   *\n   * @param a - The BigNumber to find the multiplicative inverse of.\n   *\n   * @returns Returns the multiplicative inverse of 'a' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(11));\n   * context.invm(new BigNumber(3)); // Returns 4 (3*4 mod 11 = 1)\n   */\n  invm (a: BigNumber): BigNumber {\n    const inv = a._invmp(this.m)\n    if (inv.negative !== 0) {\n      inv.negative = 0\n      return this.imod(inv).redNeg()\n    } else {\n      return this.imod(inv)\n    }\n  }\n\n  /**\n   * Raises a BigNumber to a power in the reduction context.\n   *\n   * @method pow\n   *\n   * @param a - The BigNumber to be raised to a power.\n   * @param num - The power to raise the BigNumber to.\n   *\n   * @returns Returns the result of 'a' raised to the power of 'num' in the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.pow(new BigNumber(3), new BigNumber(2)); // Returns 2 (3^2 % 7)\n   */\n  pow (a: BigNumber, num: BigNumber): BigNumber {\n    if (num.isZero()) return new BigNumber(1).toRed(this)\n    if (num.cmpn(1) === 0) return a.clone()\n\n    const windowSize = 4\n    const wnd = new Array(1 << windowSize)\n    wnd[0] = new BigNumber(1).toRed(this)\n    wnd[1] = a\n    let i = 2\n    for (; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a)\n    }\n\n    let res = wnd[0]\n    let current = 0\n    let currentLen = 0\n    let start = num.bitLength() % 26\n    if (start === 0) {\n      start = 26\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      const word = num.words[i]\n      for (let j = start - 1; j >= 0; j--) {\n        const bit = (word >> j) & 1\n        if (res !== wnd[0]) {\n          res = this.sqr(res)\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0\n          continue\n        }\n\n        current <<= 1\n        current |= bit\n        currentLen++\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue\n\n        res = this.mul(res, wnd[current])\n        currentLen = 0\n        current = 0\n      }\n      start = 26\n    }\n\n    return res\n  }\n\n  /**\n   * Converts a BigNumber to its equivalent in the reduction context.\n   *\n   * @method convertTo\n   *\n   * @param num - The BigNumber to convert to the reduction context.\n   *\n   * @returns Returns the converted BigNumber compatible with the reduction context.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * context.convertTo(new BigNumber(8)); // Returns 1 (8 % 7)\n   */\n  convertTo (num: BigNumber): BigNumber {\n    const r = num.umod(this.m)\n\n    return r === num ? r.clone() : r\n  }\n\n  /**\n   * Converts a BigNumber from reduction context to its regular form.\n   *\n   * @method convertFrom\n   *\n   * @param num - The BigNumber to convert from the reduction context.\n   *\n   * @returns Returns the converted BigNumber in its regular form.\n   *\n   * @example\n   * const context = new ReductionContext(new BigNumber(7));\n   * const a = context.convertTo(new BigNumber(8)); // 'a' is now 1 in the reduction context\n   * context.convertFrom(a); // Returns 1\n   */\n  convertFrom (num: BigNumber): BigNumber {\n    const res = num.clone()\n    res.red = null\n    return res\n  }\n}\n","import ReductionContext from './ReductionContext.js'\nimport BigNumber from './BigNumber.js'\n\n/**\n * Represents a Montgomery reduction context, which is a mathematical method\n * for performing modular multiplication without division.\n *\n * Montgomery reduction is an algorithm used mainly in cryptography which can\n * help to speed up calculations in contexts where there are many repeated\n * computations.\n *\n * This class extends the `ReductionContext` class.\n *\n * @class MontgomoryMethod\n * @extends {ReductionContext}\n *\n * @property shift - The number of bits in the modulus.\n * @property r - The 2^shift, shifted left by the bit length of modulus `m`.\n * @property r2 - The square of `r` modulo `m`.\n * @property rinv - The modular multiplicative inverse of `r` mod `m`.\n * @property minv - The modular multiplicative inverse of `m` mod `r`.\n */\nexport default class MontgomoryMethod extends ReductionContext {\n  shift: number\n  r: BigNumber\n  r2: BigNumber\n  rinv: BigNumber\n  minv: BigNumber\n\n  /**\n   * @constructor\n   * @param m - The modulus to be used for the Montgomery method reductions.\n   */\n  constructor (m: BigNumber | 'k256') {\n    super(m)\n\n    this.shift = this.m.bitLength()\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26)\n    }\n\n    this.r = new BigNumber(1).iushln(this.shift)\n    this.r2 = this.imod(this.r.sqr())\n    this.rinv = this.r._invmp(this.m)\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)\n    this.minv = this.minv.umod(this.r)\n    this.minv = this.r.sub(this.minv)\n  }\n\n  /**\n   * Converts a number into the Montgomery domain.\n   *\n   * @method convertTo\n   * @param num - The number to be converted into the Montgomery domain.\n   * @returns The result of the conversion into the Montgomery domain.\n   *\n   * @example\n   * const montMethod = new MontgomoryMethod(m);\n   * const convertedNum = montMethod.convertTo(num);\n   */\n  convertTo (num: BigNumber): BigNumber {\n    return this.imod(num.ushln(this.shift))\n  }\n\n  /**\n   * Converts a number from the Montgomery domain back to the original domain.\n   *\n   * @method convertFrom\n   * @param num - The number to be converted from the Montgomery domain.\n   * @returns The result of the conversion from the Montgomery domain.\n   *\n   * @example\n   * const montMethod = new MontgomoryMethod(m);\n   * const convertedNum = montMethod.convertFrom(num);\n   */\n  convertFrom (num: BigNumber): BigNumber {\n    const r = this.imod(num.mul(this.rinv))\n    r.red = null\n    return r\n  }\n\n  /**\n   * Performs an in-place multiplication of two numbers in the Montgomery domain.\n   *\n   * @method imul\n   * @param a - The first number to multiply.\n   * @param b - The second number to multiply.\n   * @returns The result of the in-place multiplication.\n   *\n   * @example\n   * const montMethod = new MontgomoryMethod(m);\n   * const product = montMethod.imul(a, b);\n   */\n  imul (a: BigNumber, b: BigNumber): BigNumber {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0\n      a.length = 1\n      return a\n    }\n\n    const t = a.imul(b)\n    const c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)\n    const u = t.isub(c).iushrn(this.shift)\n    let res = u\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m)\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m)\n    }\n\n    return res.forceRed(this)\n  }\n\n  /**\n   * Performs the multiplication of two numbers in the Montgomery domain.\n   *\n   * @method mul\n   * @param a - The first number to multiply.\n   * @param b - The second number to multiply.\n   * @returns The result of the multiplication.\n   *\n   * @example\n   * const montMethod = new MontgomoryMethod(m);\n   * const product = montMethod.mul(a, b);\n   */\n  mul (a: BigNumber, b: BigNumber): BigNumber {\n    if (a.isZero() || b.isZero()) return new BigNumber(0).forceRed(this)\n\n    const t = a.mul(b)\n    const c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)\n    const u = t.isub(c).iushrn(this.shift)\n    let res = u\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m)\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m)\n    }\n\n    return res.forceRed(this)\n  }\n\n  /**\n   * Calculates the modular multiplicative inverse of a number in the Montgomery domain.\n   *\n   * @method invm\n   * @param a - The number to compute the modular multiplicative inverse of.\n   * @returns The modular multiplicative inverse of 'a'.\n   *\n   * @example\n   * const montMethod = new MontgomoryMethod(m);\n   * const inverse = montMethod.invm(a);\n   */\n  invm (a: BigNumber): BigNumber {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    const res = this.imod(a._invmp(this.m).mul(this.r2))\n    return res.forceRed(this)\n  }\n}\n","import Curve from './Curve.js'\n\n/**\n * Base class for Point (affine coordinates) and JacobianPoint classes,\n * defining their curve and type.\n */\nexport default abstract class BasePoint {\n  curve: Curve\n  type: 'affine' | 'jacobian'\n  precomputed: {\n    doubles: { step: number, points: any[] } | undefined\n    naf: { wnd: any, points: any[] } | undefined\n    beta: BasePoint | null | undefined\n  } | null\n\n  constructor (type: 'affine' | 'jacobian') {\n    this.curve = new Curve()\n    this.type = type\n    this.precomputed = null\n  }\n}\n","import BasePoint from './BasePoint.js'\nimport BigNumber from './BigNumber.js'\nimport Point from './Point.js'\n\n/**\n * The `JacobianPoint` class extends the `BasePoint` class for handling Jacobian coordinates on an Elliptic Curve.\n * This class defines the properties and the methods needed to work with points in Jacobian coordinates.\n *\n * The Jacobian coordinates represent a point (x, y, z) on an Elliptic Curve such that the usual (x, y) coordinates are given by (x/z^2, y/z^3).\n *\n * @property x - The `x` coordinate of the point in the Jacobian form.\n * @property y - The `y` coordinate of the point in the Jacobian form.\n * @property z - The `z` coordinate of the point in the Jacobian form.\n * @property zOne - Flag that indicates if the `z` coordinate is one.\n *\n * @example\n * const pointJ = new JacobianPoint('3', '4', '1');\n */\nexport default class JacobianPoint extends BasePoint {\n  x: BigNumber\n  y: BigNumber\n  z: BigNumber\n  zOne: boolean\n\n  /**\n   * Constructs a new `JacobianPoint` instance.\n   *\n   * @param x - If `null`, the x-coordinate will default to the curve's defined 'one' constant.\n   * If `x` is not a BigNumber, `x` will be converted to a `BigNumber` assuming it is a hex string.\n   *\n   * @param y - If `null`, the y-coordinate will default to the curve's defined 'one' constant.\n   * If `y` is not a BigNumber, `y` will be converted to a `BigNumber` assuming it is a hex string.\n   *\n   * @param z - If `null`, the z-coordinate will default to 0.\n   * If `z` is not a BigNumber, `z` will be converted to a `BigNumber` assuming it is a hex string.\n   *\n   * @example\n   * const pointJ1 = new JacobianPoint(null, null, null); // creates point at infinity\n   * const pointJ2 = new JacobianPoint('3', '4', '1'); // creates point (3, 4, 1)\n   */\n  constructor (\n    x: string | BigNumber | null,\n    y: string | BigNumber | null,\n    z: string | BigNumber | null\n  ) {\n    super('jacobian')\n    if (x === null && y === null && z === null) {\n      this.x = this.curve.one\n      this.y = this.curve.one\n      this.z = new BigNumber(0)\n    } else {\n      if (!BigNumber.isBN(x)) {\n        x = new BigNumber(x as string, 16)\n      }\n      this.x = x as BigNumber\n      if (!BigNumber.isBN(y)) {\n        y = new BigNumber(y as string, 16)\n      }\n      this.y = y as BigNumber\n      if (!BigNumber.isBN(z)) {\n        z = new BigNumber(z as string, 16)\n      }\n      this.z = z as BigNumber\n    }\n    if (this.x.red == null) { this.x = this.x.toRed(this.curve.red) }\n    if (this.y.red == null) { this.y = this.y.toRed(this.curve.red) }\n    if (this.z.red == null) { this.z = this.z.toRed(this.curve.red) }\n\n    this.zOne = this.z === this.curve.one\n  }\n\n  /**\n   * Converts the `JacobianPoint` object instance to standard affine `Point` format and returns `Point` type.\n   *\n   * @returns The `Point`(affine) object representing the same point as the original `JacobianPoint`.\n   *\n   * If the initial `JacobianPoint` represents point at infinity, an instance of `Point` at infinity is returned.\n   *\n   * @example\n   * const pointJ = new JacobianPoint('3', '4', '1');\n   * const pointP = pointJ.toP();  // The point in affine coordinates.\n   */\n  toP (): Point {\n    if (this.isInfinity()) {\n      return new Point(null, null)\n    }\n\n    const zinv = this.z.redInvm()\n    const zinv2 = zinv.redSqr()\n    const ax = this.x.redMul(zinv2)\n    const ay = this.y.redMul(zinv2).redMul(zinv)\n\n    return new Point(ax, ay)\n  }\n\n  /**\n   * Negation operation. It returns the additive inverse of the Jacobian point.\n   *\n   * @method neg\n   * @returns Returns a new Jacobian point as the result of the negation.\n   *\n   * @example\n   * const jp = new JacobianPoint(x, y, z)\n   * const result = jp.neg()\n   */\n  neg (): JacobianPoint {\n    return new JacobianPoint(this.x, this.y.redNeg(), this.z)\n  }\n\n  /**\n   * Addition operation in the Jacobian coordinates. It takes a Jacobian point as an argument\n   * and returns a new Jacobian point as a result of the addition. In the special cases,\n   * when either one of the points is the point at infinity, it will return the other point.\n   *\n   * @method add\n   * @param p - The Jacobian point to be added.\n   * @returns Returns a new Jacobian point as the result of the addition.\n   *\n   * @example\n   * const p1 = new JacobianPoint(x1, y1, z1)\n   * const p2 = new JacobianPoint(x2, y2, z2)\n   * const result = p1.add(p2)\n   */\n  add (p: JacobianPoint): JacobianPoint {\n    // O + P = P\n    if (this.isInfinity()) { return p }\n\n    // P + O = P\n    if (p.isInfinity()) { return this }\n\n    // 12M + 4S + 7A\n    const pz2 = p.z.redSqr()\n    const z2 = this.z.redSqr()\n    const u1 = this.x.redMul(pz2)\n    const u2 = p.x.redMul(z2)\n    const s1 = this.y.redMul(pz2.redMul(p.z))\n    const s2 = p.y.redMul(z2.redMul(this.z))\n\n    const h = u1.redSub(u2)\n    const r = s1.redSub(s2)\n    if (h.cmpn(0) === 0) {\n      if (r.cmpn(0) !== 0) {\n        return new JacobianPoint(null, null, null)\n      } else {\n        return this.dbl()\n      }\n    }\n\n    const h2 = h.redSqr()\n    const h3 = h2.redMul(h)\n    const v = u1.redMul(h2)\n\n    const nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n    const ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n    const nz = this.z.redMul(p.z).redMul(h)\n\n    return new JacobianPoint(nx, ny, nz)\n  }\n\n  /**\n   * Mixed addition operation. This function combines the standard point addition with\n   * the transformation from the affine to Jacobian coordinates. It first converts\n   * the affine point to Jacobian, and then preforms the addition.\n   *\n   * @method mixedAdd\n   * @param p - The affine point to be added.\n   * @returns Returns the result of the mixed addition as a new Jacobian point.\n   *\n   * @example\n   * const jp = new JacobianPoint(x1, y1, z1)\n   * const ap = new Point(x2, y2)\n   * const result = jp.mixedAdd(ap)\n   */\n  mixedAdd (p: Point): JacobianPoint {\n    // O + P = P\n    if (this.isInfinity()) { return p.toJ() }\n\n    // P + O = P\n    if (p.isInfinity()) { return this }\n\n    // 8M + 3S + 7A\n    const z2 = this.z.redSqr()\n    const u1 = this.x\n    const u2 = p.x.redMul(z2)\n    const s1 = this.y\n    const s2 = p.y.redMul(z2).redMul(this.z)\n\n    const h = u1.redSub(u2)\n    const r = s1.redSub(s2)\n    if (h.cmpn(0) === 0) {\n      if (r.cmpn(0) !== 0) {\n        return new JacobianPoint(null, null, null)\n      } else {\n        return this.dbl()\n      }\n    }\n\n    const h2 = h.redSqr()\n    const h3 = h2.redMul(h)\n    const v = u1.redMul(h2)\n\n    const nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n    const ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n    const nz = this.z.redMul(h)\n\n    return new JacobianPoint(nx, ny, nz)\n  }\n\n  /**\n   * Multiple doubling operation. It doubles the Jacobian point as many times as the pow parameter specifies. If pow is 0 or the point is the point at infinity, it will return the point itself.\n   *\n   * @method dblp\n   * @param pow - The number of times the point should be doubled.\n   * @returns Returns a new Jacobian point as the result of multiple doublings.\n   *\n   * @example\n   * const jp = new JacobianPoint(x, y, z)\n   * const result = jp.dblp(3)\n   */\n  dblp (pow: number): JacobianPoint {\n    if (pow === 0) {\n      return this\n    }\n    if (this.isInfinity()) {\n      return this\n    }\n    if (typeof pow === 'undefined') {\n      return this.dbl()\n    }\n\n    /* eslint-disable @typescript-eslint/no-this-alias */\n    let r = this as JacobianPoint\n    for (let i = 0; i < pow; i++) { r = r.dbl() }\n    return r\n  }\n\n  /**\n   * Point doubling operation in the Jacobian coordinates. A special case is when the point is the point at infinity, in this case, this function will return the point itself.\n   *\n   * @method dbl\n   * @returns Returns a new Jacobian point as the result of the doubling.\n   *\n   * @example\n   * const jp = new JacobianPoint(x, y, z)\n   * const result = jp.dbl()\n   */\n  dbl (): JacobianPoint {\n    if (this.isInfinity()) {\n      return this\n    }\n\n    let nx\n    let ny\n    let nz\n    // Z = 1\n    if (this.zOne) {\n      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n      //     #doubling-mdbl-2007-bl\n      // 1M + 5S + 14A\n\n      // XX = X1^2\n      const xx = this.x.redSqr()\n      // YY = Y1^2\n      const yy = this.y.redSqr()\n      // YYYY = YY^2\n      const yyyy = yy.redSqr()\n      // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n      let s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy)\n      s = s.redIAdd(s)\n      // M = 3 * XX + a; a = 0\n      const m = xx.redAdd(xx).redIAdd(xx)\n      // T = M ^ 2 - 2*S\n      const t = m.redSqr().redISub(s).redISub(s)\n\n      // 8 * YYYY\n      let yyyy8 = yyyy.redIAdd(yyyy)\n      yyyy8 = yyyy8.redIAdd(yyyy8)\n      yyyy8 = yyyy8.redIAdd(yyyy8)\n\n      // X3 = T\n      nx = t\n      // Y3 = M * (S - T) - 8 * YYYY\n      ny = m.redMul(s.redISub(t)).redISub(yyyy8)\n      // Z3 = 2*Y1\n      nz = this.y.redAdd(this.y)\n    } else {\n      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n      //     #doubling-dbl-2009-l\n      // 2M + 5S + 13A\n\n      // A = X1^2\n      const a = this.x.redSqr()\n      // B = Y1^2\n      const b = this.y.redSqr()\n      // C = B^2\n      const c = b.redSqr()\n      // D = 2 * ((X1 + B)^2 - A - C)\n      let d = this.x.redAdd(b).redSqr().redISub(a).redISub(c)\n      d = d.redIAdd(d)\n      // E = 3 * A\n      const e = a.redAdd(a).redIAdd(a)\n      // F = E^2\n      const f = e.redSqr()\n\n      // 8 * C\n      let c8 = c.redIAdd(c)\n      c8 = c8.redIAdd(c8)\n      c8 = c8.redIAdd(c8)\n\n      // X3 = F - 2 * D\n      nx = f.redISub(d).redISub(d)\n      // Y3 = E * (D - X3) - 8 * C\n      ny = e.redMul(d.redISub(nx)).redISub(c8)\n      // Z3 = 2 * Y1 * Z1\n      nz = this.y.redMul(this.z)\n      nz = nz.redIAdd(nz)\n    }\n\n    return new JacobianPoint(nx, ny, nz)\n  }\n\n  /**\n   * Equality check operation. It checks whether the affine or Jacobian point is equal to this Jacobian point.\n   *\n   * @method eq\n   * @param p - The affine or Jacobian point to compare with.\n   * @returns Returns true if the points are equal, otherwise returns false.\n   *\n   * @example\n   * const jp1 = new JacobianPoint(x1, y1, z1)\n   * const jp2 = new JacobianPoint(x2, y2, z2)\n   * const areEqual = jp1.eq(jp2)\n   */\n  eq (p: Point | JacobianPoint): boolean {\n    if (p.type === 'affine') { return this.eq((p as Point).toJ()) }\n\n    if (this === p) { return true }\n\n    // x1 * z2^2 == x2 * z1^2\n    const z2 = this.z.redSqr()\n    p = p as JacobianPoint\n    const pz2 = p.z.redSqr()\n    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) {\n      return false\n    }\n\n    // y1 * z2^3 == y2 * z1^3\n    const z3 = z2.redMul(this.z)\n    const pz3 = pz2.redMul(p.z)\n    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0\n  }\n\n  /**\n   * Equality check operation in relation to an x coordinate of a point in projective coordinates.\n   * It checks whether the x coordinate of the Jacobian point is equal to the provided x coordinate\n   * of a point in projective coordinates.\n   *\n   * @method eqXToP\n   * @param x - The x coordinate of a point in projective coordinates.\n   * @returns Returns true if the x coordinates are equal, otherwise returns false.\n   *\n   * @example\n   * const jp = new JacobianPoint(x1, y1, z1)\n   * const isXEqual = jp.eqXToP(x2)\n   */\n  eqXToP (x: BigNumber): boolean {\n    const zs = this.z.redSqr()\n    const rx = x.toRed(this.curve.red).redMul(zs)\n    if (this.x.cmp(rx) === 0) { return true }\n\n    const xc = x.clone()\n    const t = this.curve.redN.redMul(zs)\n    for (; ;) {\n      xc.iadd(this.curve.n)\n      if (xc.cmp(this.curve.p) >= 0) { return false }\n\n      rx.redIAdd(t)\n      if (this.x.cmp(rx) === 0) { return true }\n    }\n  }\n\n  /**\n   * Returns the string representation of the JacobianPoint instance.\n   * @method inspect\n   * @returns Returns the string description of the JacobianPoint. If the JacobianPoint represents a point at infinity, the return value of this function is '<EC JPoint Infinity>'. For a normal point, it returns the string description format as '<EC JPoint x: x-coordinate y: y-coordinate z: z-coordinate>'.\n   *\n   * @example\n   * const point = new JacobianPoint('5', '6', '1');\n   * console.log(point.inspect()); // Output: '<EC JPoint x: 5 y: 6 z: 1>'\n   */\n  inspect (): string {\n    if (this.isInfinity()) { return '<EC JPoint Infinity>' }\n    return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>'\n  }\n\n  /**\n   * Checks whether the JacobianPoint instance represents a point at infinity.\n   * @method isInfinity\n   * @returns Returns true if the JacobianPoint's z-coordinate equals to zero (which represents the point at infinity in Jacobian coordinates). Returns false otherwise.\n   *\n   * @example\n   * const point = new JacobianPoint('5', '6', '0');\n   * console.log(point.isInfinity()); // Output: true\n   */\n  isInfinity (): boolean {\n    return this.z.cmpn(0) === 0\n  }\n}\n","const assert = (\n  expression: unknown,\n  message: string = 'Hash assertion failed'\n): void => {\n  if (!(expression as boolean)) {\n    throw new Error(message)\n  }\n}\n\n/**\n * The BaseHash class is an abstract base class for cryptographic hash functions.\n * It provides a common structure and functionality for hash function classes.\n *\n * @class BaseHash\n *\n * @property pending - Stores partially processed message segments.\n * @property pendingTotal - The total number of characters that are being stored in `pending`\n * @property blockSize - The size of each block to processed.\n * @property outSize - The size of the final hash output.\n * @property endian - The endianness used during processing, can either be 'big' or 'little'.\n * @property _delta8 - The block size divided by 8, useful in various computations.\n * @property _delta32 - The block size divided by 32, useful in various computations.\n * @property padLength - The length of padding to be added to finalize the computation.\n * @property hmacStrength - The HMAC strength value.\n *\n * @param blockSize - The size of the block to be hashed.\n * @param outSize - The size of the resulting hash.\n * @param hmacStrength - The strength of the HMAC.\n * @param padLength - The length of the padding to be added.\n *\n * @example\n * Sub-classes would extend this base BaseHash class like:\n * class RIPEMD160 extends BaseHash {\n *   constructor () {\n *     super(512, 160, 192, 64);\n *     // ...\n *   }\n *   // ...\n * }\n */\nabstract class BaseHash {\n  pending: number[] | null\n  pendingTotal: number\n  blockSize: number\n  outSize: number\n  endian: 'big' | 'little'\n  _delta8: number\n  _delta32: number\n  padLength: number\n  hmacStrength: number\n\n  constructor (\n    blockSize: number, outSize: number, hmacStrength: number, padLength: number\n  ) {\n    this.pending = null\n    this.pendingTotal = 0\n    this.blockSize = blockSize\n    this.outSize = outSize\n    this.hmacStrength = hmacStrength\n    this.padLength = padLength / 8\n    this.endian = 'big'\n\n    this._delta8 = this.blockSize / 8\n    this._delta32 = this.blockSize / 32\n  }\n\n  _update (msg: number[], start: number): void {\n    throw new Error('Not implemented')\n  }\n\n  _digest (): number[] {\n    throw new Error('Not implemented')\n  }\n\n  _digestHex (): string {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Converts the input message into an array, pads it, and joins into 32bit blocks.\n   * If there is enough data, it tries updating the hash computation.\n   *\n   * @method update\n   * @param msg - The message segment to include in the hashing computation.\n   * @param enc - The encoding of the message. If 'hex', the string will be treated as such, 'utf8' otherwise.\n   *\n   * @returns Returns the instance of the object for chaining.\n   *\n   * @example\n   * sha256.update('Hello World', 'utf8');\n   */\n  update (msg: number[] | string, enc?: 'hex' | 'utf8'): this {\n    // Convert message to array, pad it, and join into 32bit blocks\n    msg = toArray(msg, enc)\n    if (this.pending == null) {\n      this.pending = msg\n    } else {\n      this.pending = this.pending.concat(msg)\n    }\n    this.pendingTotal += msg.length\n\n    // Enough data, try updating\n    if (this.pending.length >= this._delta8) {\n      msg = this.pending\n\n      // Process pending data in blocks\n      const r = msg.length % this._delta8\n      this.pending = msg.slice(msg.length - r, msg.length)\n      if (this.pending.length === 0) { this.pending = null }\n\n      msg = join32(msg, 0, msg.length - r, this.endian)\n      for (let i = 0; i < msg.length; i += this._delta32) {\n        this._update(msg, i)\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Finalizes the hash computation and returns the hash value/result.\n   *\n   * @method digest\n   *\n   * @returns Returns the final hash value.\n   *\n   * @example\n   * const hash = sha256.digest();\n   */\n  digest (): number[] {\n    this.update(this._pad())\n    assert(this.pending === null)\n\n    return this._digest()\n  };\n\n  /**\n   * Finalizes the hash computation and returns the hash value/result as a hex string.\n   *\n   * @method digest\n   *\n   * @returns Returns the final hash value as a hex string.\n   *\n   * @example\n   * const hash = sha256.digestHex();\n   */\n  digestHex (): string {\n    this.update(this._pad())\n    assert(this.pending === null)\n\n    return this._digestHex()\n  };\n\n  /**\n   * [Private Method] Used internally to prepare the padding for the final stage of the hash computation.\n   *\n   * @method _pad\n   * @private\n   *\n   * @returns Returns an array denoting the padding.\n   */\n  private _pad (): number[] { //\n    let len = this.pendingTotal\n    const bytes = this._delta8\n    const k = bytes - ((len + this.padLength) % bytes)\n    const res = new Array(k + this.padLength)\n    res[0] = 0x80\n    let i\n    for (i = 1; i < k; i++) { res[i] = 0 }\n\n    // Append length\n    len <<= 3\n    let t\n    if (this.endian === 'big') {\n      for (t = 8; t < this.padLength; t++) { res[i++] = 0 }\n\n      res[i++] = 0\n      res[i++] = 0\n      res[i++] = 0\n      res[i++] = 0\n      res[i++] = (len >>> 24) & 0xff\n      res[i++] = (len >>> 16) & 0xff\n      res[i++] = (len >>> 8) & 0xff\n      res[i++] = len & 0xff\n    } else {\n      res[i++] = len & 0xff\n      res[i++] = (len >>> 8) & 0xff\n      res[i++] = (len >>> 16) & 0xff\n      res[i++] = (len >>> 24) & 0xff\n      res[i++] = 0\n      res[i++] = 0\n      res[i++] = 0\n      res[i++] = 0\n\n      for (t = 8; t < this.padLength; t++) { res[i++] = 0 }\n    }\n\n    return res\n  }\n}\n\nfunction isSurrogatePair (msg: string, i: number): boolean {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00\n}\n\n/**\n *\n * @param msg\n * @param enc Optional. Encoding to use if msg is string. Default is 'utf8'.\n * @returns array of byte values from msg. If msg is an array, a copy is returned.\n */\nexport function toArray (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] {\n  if (Array.isArray(msg)) { return msg.slice() }\n  if (!(msg as unknown as boolean)) { return [] }\n  const res = []\n  if (typeof msg === 'string') {\n    if (enc !== 'hex') {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      let p = 0\n      for (let i = 0; i < msg.length; i++) {\n        let c = msg.charCodeAt(i)\n        if (c < 128) {\n          res[p++] = c\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192\n          res[p++] = (c & 63) | 128\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF)\n          res[p++] = (c >> 18) | 240\n          res[p++] = ((c >> 12) & 63) | 128\n          res[p++] = ((c >> 6) & 63) | 128\n          res[p++] = (c & 63) | 128\n        } else {\n          res[p++] = (c >> 12) | 224\n          res[p++] = ((c >> 6) & 63) | 128\n          res[p++] = (c & 63) | 128\n        }\n      }\n    } else {\n      msg = msg.replace(/[^a-z0-9]+/ig, '')\n      if (msg.length % 2 !== 0) {\n        msg = '0' + msg\n      }\n      for (let i = 0; i < msg.length; i += 2) {\n        res.push(parseInt(msg[i] + msg[i + 1], 16))\n      }\n    }\n  } else {\n    msg = msg as number[]\n    for (let i = 0; i < msg.length; i++) { res[i] = msg[i] | 0 }\n  }\n  return res\n}\n\nfunction htonl (w: number): number {\n  const res = (w >>> 24) |\n    ((w >>> 8) & 0xff00) |\n    ((w << 8) & 0xff0000) |\n    ((w & 0xff) << 24)\n  return res >>> 0\n}\n\nfunction toHex32 (msg: number[], endian?: 'little' | 'big'): string {\n  let res = ''\n  for (let i = 0; i < msg.length; i++) {\n    let w = msg[i]\n    if (endian === 'little') { w = htonl(w) }\n    res += zero8(w.toString(16))\n  }\n  return res\n}\n\nfunction zero8 (word: string): string {\n  if (word.length === 7) {\n    return '0' + word\n  } else if (word.length === 6) {\n    return '00' + word\n  } else if (word.length === 5) {\n    return '000' + word\n  } else if (word.length === 4) {\n    return '0000' + word\n  } else if (word.length === 3) {\n    return '00000' + word\n  } else if (word.length === 2) {\n    return '000000' + word\n  } else if (word.length === 1) {\n    return '0000000' + word\n  } else {\n    return word\n  }\n}\n\nfunction join32 (msg, start, end, endian): number[] {\n  const len = end - start\n  assert(len % 4 === 0)\n  const res = new Array(len / 4)\n  for (let i = 0, k: number = start; i < res.length; i++, k += 4) {\n    let w\n    if (endian === 'big') {\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3]\n    } else {\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k]\n    }\n    res[i] = w >>> 0\n  }\n  return res\n}\n\nfunction split32 (msg: number[], endian: 'big' | 'little'): number[] {\n  const res = new Array(msg.length * 4)\n  for (let i = 0, k = 0; i < msg.length; i++, k += 4) {\n    const m = msg[i]\n    if (endian === 'big') {\n      res[k] = m >>> 24\n      res[k + 1] = (m >>> 16) & 0xff\n      res[k + 2] = (m >>> 8) & 0xff\n      res[k + 3] = m & 0xff\n    } else {\n      res[k + 3] = m >>> 24\n      res[k + 2] = (m >>> 16) & 0xff\n      res[k + 1] = (m >>> 8) & 0xff\n      res[k] = m & 0xff\n    }\n  }\n  return res\n}\n\nfunction rotr32 (w: number, b: number): number {\n  return (w >>> b) | (w << (32 - b))\n}\n\nfunction rotl32 (w: number, b: number): number {\n  return (w << b) | (w >>> (32 - b))\n}\n\nfunction sum32 (a: number, b: number): number {\n  return (a + b) >>> 0\n}\n\nfunction SUM32_3 (a: number, b: number, c: number): number {\n  return (a + b + c) >>> 0\n}\n\nfunction SUM32_4 (a: number, b: number, c: number, d: number): number {\n  return (a + b + c + d) >>> 0\n}\n\nfunction SUM32_5 (\n  a: number, b: number, c: number, d: number, e: number\n): number {\n  return (a + b + c + d + e) >>> 0\n}\n\nfunction FT_1 (s, x, y, z): number {\n  if (s === 0) { return ch32(x, y, z) }\n  if (s === 1 || s === 3) { return p32(x, y, z) }\n  if (s === 2) { return maj32(x, y, z) }\n}\n\nfunction ch32 (x, y, z): number {\n  return (x & y) ^ ((~x) & z)\n}\n\nfunction maj32 (x, y, z): number {\n  return (x & y) ^ (x & z) ^ (y & z)\n}\n\nfunction p32 (x, y, z): number {\n  return x ^ y ^ z\n}\n\nfunction S0_256 (x): number {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22)\n}\n\nfunction S1_256 (x): number {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25)\n}\n\nfunction G0_256 (x): number {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3)\n}\n\nfunction G1_256 (x): number {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10)\n}\n\nconst r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nconst rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nconst s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nconst sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nfunction f (j, x, y, z): number {\n  if (j <= 15) { return x ^ y ^ z } else if (j <= 31) { return (x & y) | ((~x) & z) } else if (j <= 47) { return (x | (~y)) ^ z } else if (j <= 63) { return (x & z) | (y & (~z)) } else { return x ^ (y | (~z)) }\n}\n\nfunction K (j): number {\n  if (j <= 15) { return 0x00000000 } else if (j <= 31) { return 0x5a827999 } else if (j <= 47) { return 0x6ed9eba1 } else if (j <= 63) { return 0x8f1bbcdc } else { return 0xa953fd4e }\n}\n\nfunction Kh (j): number {\n  if (j <= 15) { return 0x50a28be6 } else if (j <= 31) { return 0x5c4dd124 } else if (j <= 47) { return 0x6d703ef3 } else if (j <= 63) { return 0x7a6d76e9 } else { return 0x00000000 }\n}\n\nfunction sum64 (buf, pos, ah, al) {\n  const bh = buf[pos]\n  const bl = buf[pos + 1]\n\n  const lo = (al + bl) >>> 0\n  const hi = (lo < al ? 1 : 0) + ah + bh\n  buf[pos] = hi >>> 0\n  buf[pos + 1] = lo\n}\n\nfunction sum64_hi (ah, al, bh, bl) {\n  const lo = (al + bl) >>> 0\n  const hi = (lo < al ? 1 : 0) + ah + bh\n  return hi >>> 0\n}\n\nfunction sum64_lo (ah, al, bh, bl) {\n  const lo = al + bl\n  return lo >>> 0\n}\n\nfunction sum64_4_hi (ah, al, bh, bl, ch, cl, dh, dl) {\n  let carry = 0\n  let lo = al\n  lo = (lo + bl) >>> 0\n  carry += lo < al ? 1 : 0\n  lo = (lo + cl) >>> 0\n  carry += lo < cl ? 1 : 0\n  lo = (lo + dl) >>> 0\n  carry += lo < dl ? 1 : 0\n\n  const hi = ah + bh + ch + dh + carry\n  return hi >>> 0\n}\n\nfunction sum64_4_lo (ah, al, bh, bl, ch, cl, dh, dl) {\n  const lo = al + bl + cl + dl\n  return lo >>> 0\n}\n\nfunction sum64_5_hi (ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  let carry = 0\n  let lo = al\n  lo = (lo + bl) >>> 0\n  carry += lo < al ? 1 : 0\n  lo = (lo + cl) >>> 0\n  carry += lo < cl ? 1 : 0\n  lo = (lo + dl) >>> 0\n  carry += lo < dl ? 1 : 0\n  lo = (lo + el) >>> 0\n  carry += lo < el ? 1 : 0\n\n  const hi = ah + bh + ch + dh + eh + carry\n  return hi >>> 0\n}\n\nfunction sum64_5_lo (ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  const lo = al + bl + cl + dl + el\n\n  return lo >>> 0\n}\n\nfunction rotr64_hi (ah, al, num) {\n  const r = (al << (32 - num)) | (ah >>> num)\n  return r >>> 0\n}\n\nfunction rotr64_lo (ah, al, num) {\n  const r = (ah << (32 - num)) | (al >>> num)\n  return r >>> 0\n}\n\nfunction shr64_hi (ah, al, num) {\n  return ah >>> num\n}\n\nfunction shr64_lo (ah, al, num) {\n  const r = (ah << (32 - num)) | (al >>> num)\n  return r >>> 0\n}\n\n/**\n * An implementation of RIPEMD160 cryptographic hash function. Extends the BaseHash class.\n * It provides a way to compute a 'digest' for any kind of input data; transforming the data\n * into a unique output of fixed size. The output is deterministic; it will always be\n * the same for the same input.\n *\n * @class RIPEMD160\n * @param None\n *\n * @constructor\n * Use the RIPEMD160 constructor to create an instance of RIPEMD160 hash function.\n *\n * @example\n * const ripemd160 = new RIPEMD160();\n *\n * @property h - Array that is updated iteratively as part of hashing computation.\n */\nexport class RIPEMD160 extends BaseHash {\n  h: number[]\n\n  constructor () {\n    super(512, 160, 192, 64)\n    this.endian = 'little'\n\n    this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]\n    this.endian = 'little'\n  }\n\n  _update (msg: number[], start: number): void {\n    let A = this.h[0]\n    let B = this.h[1]\n    let C = this.h[2]\n    let D = this.h[3]\n    let E = this.h[4]\n    let Ah = A\n    let Bh = B\n    let Ch = C\n    let Dh = D\n    let Eh = E\n    let T\n    for (let j = 0; j < 80; j++) {\n      T = sum32(\n        rotl32(\n          SUM32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n          s[j]),\n        E)\n      A = E\n      E = D\n      D = rotl32(C, 10)\n      C = B\n      B = T\n      T = sum32(\n        rotl32(\n          SUM32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n          sh[j]),\n        Eh)\n      Ah = Eh\n      Eh = Dh\n      Dh = rotl32(Ch, 10)\n      Ch = Bh\n      Bh = T\n    }\n    T = SUM32_3(this.h[1], C, Dh)\n    this.h[1] = SUM32_3(this.h[2], D, Eh)\n    this.h[2] = SUM32_3(this.h[3], E, Ah)\n    this.h[3] = SUM32_3(this.h[4], A, Bh)\n    this.h[4] = SUM32_3(this.h[0], B, Ch)\n    this.h[0] = T\n  }\n\n  _digest (): number[] {\n    return split32(this.h, 'little')\n  }\n\n  _digestHex (): string {\n    return toHex32(this.h, 'little')\n  }\n}\n\n/**\n * An implementation of SHA256 cryptographic hash function. Extends the BaseHash class.\n * It provides a way to compute a 'digest' for any kind of input data; transforming the data\n * into a unique output of fixed size. The output is deterministic; it will always be\n * the same for the same input.\n *\n * @class SHA256\n * @param None\n *\n * @constructor\n * Use the SHA256 constructor to create an instance of SHA256 hash function.\n *\n * @example\n * const sha256 = new SHA256();\n *\n * @property h - The initial hash constants\n * @property W - Provides a way to recycle usage of the array memory.\n * @property k - The round constants used for each round of SHA-256\n */\nexport class SHA256 extends BaseHash {\n  h: number[]\n  W: number[]\n  k: number[]\n\n  constructor () {\n    super(512, 256, 192, 64)\n    this.h = [\n      0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n      0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n    ]\n    this.k = [\n      0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n      0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n      0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n      0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n      0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n      0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n      0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n      0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n      0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n      0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n      0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n      0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n      0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n      0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n      0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n      0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n    ]\n    this.W = new Array(64)\n  }\n\n  _update (msg: number[], start?: number): void {\n    const W = this.W\n\n    let i: number\n    for (i = 0; i < 16; i++) {\n      W[i] = msg[start + i]\n    }\n    for (; i < W.length; i++) {\n      W[i] = SUM32_4(G1_256(W[i - 2]), W[i - 7], G0_256(W[i - 15]), W[i - 16])\n    }\n\n    let a = this.h[0]\n    let b = this.h[1]\n    let c = this.h[2]\n    let d = this.h[3]\n    let e = this.h[4]\n    let f = this.h[5]\n    let g = this.h[6]\n    let h = this.h[7]\n\n    assert(this.k.length === W.length)\n    for (i = 0; i < W.length; i++) {\n      const T1 = SUM32_5(h, S1_256(e), ch32(e, f, g), this.k[i], W[i])\n      const T2 = sum32(S0_256(a), maj32(a, b, c))\n      h = g\n      g = f\n      f = e\n      e = sum32(d, T1)\n      d = c\n      c = b\n      b = a\n      a = sum32(T1, T2)\n    }\n\n    this.h[0] = sum32(this.h[0], a)\n    this.h[1] = sum32(this.h[1], b)\n    this.h[2] = sum32(this.h[2], c)\n    this.h[3] = sum32(this.h[3], d)\n    this.h[4] = sum32(this.h[4], e)\n    this.h[5] = sum32(this.h[5], f)\n    this.h[6] = sum32(this.h[6], g)\n    this.h[7] = sum32(this.h[7], h)\n  };\n\n  _digest (): number[] {\n    return split32(this.h, 'big')\n  }\n\n  _digestHex (): string {\n    return toHex32(this.h, 'big')\n  }\n}\n\n/**\n * An implementation of SHA1 cryptographic hash function. Extends the BaseHash class.\n * It provides a way to compute a 'digest' for any kind of input data; transforming the data\n * into a unique output of fixed size. The output is deterministic; it will always be\n * the same for the same input.\n *\n * @class SHA1\n * @param None\n *\n * @constructor\n * Use the SHA1 constructor to create an instance of SHA1 hash function.\n *\n * @example\n * const sha1 = new SHA1();\n *\n * @property h - The initial hash constants.\n * @property W - Provides a way to recycle usage of the array memory.\n * @property k - The round constants used for each round of SHA-1.\n */\nexport class SHA1 extends BaseHash {\n  h: number[]\n  W: number[]\n  k: number[]\n\n  constructor () {\n    super(512, 160, 80, 64)\n    this.k = [\n      0x5A827999, 0x6ED9EBA1,\n      0x8F1BBCDC, 0xCA62C1D6\n    ]\n    this.h = [\n      0x67452301, 0xefcdab89, 0x98badcfe,\n      0x10325476, 0xc3d2e1f0]\n    this.W = new Array(80)\n  }\n\n  _update (msg: number[], start?: number): void {\n    const W = this.W\n\n    let i: number\n    for (i = 0; i < 16; i++) { W[i] = msg[start + i] }\n\n    for (; i < W.length; i++) {\n      W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)\n    }\n\n    let a = this.h[0]\n    let b = this.h[1]\n    let c = this.h[2]\n    let d = this.h[3]\n    let e = this.h[4]\n\n    for (i = 0; i < W.length; i++) {\n      const s = ~~(i / 20)\n      const t = SUM32_5(rotl32(a, 5), FT_1(s, b, c, d), e, W[i], this.k[s])\n      e = d\n      d = c\n      c = rotl32(b, 30)\n      b = a\n      a = t\n    }\n\n    this.h[0] = sum32(this.h[0], a)\n    this.h[1] = sum32(this.h[1], b)\n    this.h[2] = sum32(this.h[2], c)\n    this.h[3] = sum32(this.h[3], d)\n    this.h[4] = sum32(this.h[4], e)\n  }\n\n  _digest (): number[] {\n    return split32(this.h, 'big')\n  }\n\n  _digestHex (): string {\n    return toHex32(this.h, 'big')\n  }\n}\n\n/**\n * An implementation of SHA512 cryptographic hash function. Extends the BaseHash class.\n * It provides a way to compute a 'digest' for any kind of input data; transforming the data\n * into a unique output of fixed size. The output is deterministic; it will always be\n * the same for the same input.\n *\n * @class SHA512\n * @param None\n *\n * @constructor\n * Use the SHA512 constructor to create an instance of SHA512 hash function.\n *\n * @example\n * const sha512 = new SHA512();\n *\n * @property h - The initial hash constants.\n * @property W - Provides a way to recycle usage of the array memory.\n * @property k - The round constants used for each round of SHA-512.\n */\nexport class SHA512 extends BaseHash {\n  h: number[]\n  W: number[]\n  k: number[]\n\n  constructor () {\n    super(1024, 512, 192, 128)\n    this.h = [\n      0x6a09e667, 0xf3bcc908,\n      0xbb67ae85, 0x84caa73b,\n      0x3c6ef372, 0xfe94f82b,\n      0xa54ff53a, 0x5f1d36f1,\n      0x510e527f, 0xade682d1,\n      0x9b05688c, 0x2b3e6c1f,\n      0x1f83d9ab, 0xfb41bd6b,\n      0x5be0cd19, 0x137e2179]\n    this.k = [\n      0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n      0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n      0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n      0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n      0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n      0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n      0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n      0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n      0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n      0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n      0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n      0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n      0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n      0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n      0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n      0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n      0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n      0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n      0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n      0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n      0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n      0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n      0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n      0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n      0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n      0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n      0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n      0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n      0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n      0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n      0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n      0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n      0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n      0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n      0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n      0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n      0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n      0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n      0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n      0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n    ]\n    this.W = new Array(160)\n  }\n\n  _prepareBlock (msg, start) {\n    const W = this.W\n\n    // 32 x 32bit words\n    let i\n    for (i = 0; i < 32; i++) { W[i] = msg[start + i] }\n    for (; i < W.length; i += 2) {\n      const c0_hi = g1_512_hi(W[i - 4], W[i - 3]) // i - 2\n      const c0_lo = g1_512_lo(W[i - 4], W[i - 3])\n      const c1_hi = W[i - 14] // i - 7\n      const c1_lo = W[i - 13]\n      const c2_hi = g0_512_hi(W[i - 30], W[i - 29]) // i - 15\n      const c2_lo = g0_512_lo(W[i - 30], W[i - 29])\n      const c3_hi = W[i - 32] // i - 16\n      const c3_lo = W[i - 31]\n\n      W[i] = sum64_4_hi(\n        c0_hi, c0_lo,\n        c1_hi, c1_lo,\n        c2_hi, c2_lo,\n        c3_hi, c3_lo)\n      W[i + 1] = sum64_4_lo(\n        c0_hi, c0_lo,\n        c1_hi, c1_lo,\n        c2_hi, c2_lo,\n        c3_hi, c3_lo)\n    }\n  }\n\n  _update (msg, start) {\n    this._prepareBlock(msg, start)\n\n    const W = this.W\n\n    let ah = this.h[0]\n    let al = this.h[1]\n    let bh = this.h[2]\n    let bl = this.h[3]\n    let ch = this.h[4]\n    let cl = this.h[5]\n    let dh = this.h[6]\n    let dl = this.h[7]\n    let eh = this.h[8]\n    let el = this.h[9]\n    let fh = this.h[10]\n    let fl = this.h[11]\n    let gh = this.h[12]\n    let gl = this.h[13]\n    let hh = this.h[14]\n    let hl = this.h[15]\n\n    assert(this.k.length === W.length)\n    for (let i = 0; i < W.length; i += 2) {\n      let c0_hi = hh\n      let c0_lo = hl\n      let c1_hi = s1_512_hi(eh, el)\n      let c1_lo = s1_512_lo(eh, el)\n      const c2_hi = ch64_hi(eh, el, fh, fl, gh, gl)\n      const c2_lo = ch64_lo(eh, el, fh, fl, gh, gl)\n      const c3_hi = this.k[i]\n      const c3_lo = this.k[i + 1]\n      const c4_hi = W[i]\n      const c4_lo = W[i + 1]\n\n      const T1_hi = sum64_5_hi(\n        c0_hi, c0_lo,\n        c1_hi, c1_lo,\n        c2_hi, c2_lo,\n        c3_hi, c3_lo,\n        c4_hi, c4_lo)\n      const T1_lo = sum64_5_lo(\n        c0_hi, c0_lo,\n        c1_hi, c1_lo,\n        c2_hi, c2_lo,\n        c3_hi, c3_lo,\n        c4_hi, c4_lo)\n\n      c0_hi = s0_512_hi(ah, al)\n      c0_lo = s0_512_lo(ah, al)\n      c1_hi = maj64_hi(ah, al, bh, bl, ch, cl)\n      c1_lo = maj64_lo(ah, al, bh, bl, ch, cl)\n\n      const T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo)\n      const T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo)\n\n      hh = gh\n      hl = gl\n\n      gh = fh\n      gl = fl\n\n      fh = eh\n      fl = el\n\n      eh = sum64_hi(dh, dl, T1_hi, T1_lo)\n      el = sum64_lo(dl, dl, T1_hi, T1_lo)\n\n      dh = ch\n      dl = cl\n\n      ch = bh\n      cl = bl\n\n      bh = ah\n      bl = al\n\n      ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo)\n      al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo)\n    }\n\n    sum64(this.h, 0, ah, al)\n    sum64(this.h, 2, bh, bl)\n    sum64(this.h, 4, ch, cl)\n    sum64(this.h, 6, dh, dl)\n    sum64(this.h, 8, eh, el)\n    sum64(this.h, 10, fh, fl)\n    sum64(this.h, 12, gh, gl)\n    sum64(this.h, 14, hh, hl)\n  }\n\n  _digest () {\n    return split32(this.h, 'big')\n  }\n\n  _digestHex () {\n    return toHex32(this.h, 'big')\n  }\n}\n\nfunction ch64_hi (xh, xl, yh, yl, zh, zl) {\n  let r = (xh & yh) ^ ((~xh) & zh)\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction ch64_lo (xh, xl, yh, yl, zh, zl) {\n  let r = (xl & yl) ^ ((~xl) & zl)\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction maj64_hi (xh, xl, yh, yl, zh, zl) {\n  let r = (xh & yh) ^ (xh & zh) ^ (yh & zh)\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction maj64_lo (xh, xl, yh, yl, zh, zl) {\n  let r = (xl & yl) ^ (xl & zl) ^ (yl & zl)\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction s0_512_hi (xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 28)\n  const c1_hi = rotr64_hi(xl, xh, 2) // 34\n  const c2_hi = rotr64_hi(xl, xh, 7) // 39\n\n  let r = c0_hi ^ c1_hi ^ c2_hi\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction s0_512_lo (xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 28)\n  const c1_lo = rotr64_lo(xl, xh, 2) // 34\n  const c2_lo = rotr64_lo(xl, xh, 7) // 39\n\n  let r = c0_lo ^ c1_lo ^ c2_lo\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction s1_512_hi (xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 14)\n  const c1_hi = rotr64_hi(xh, xl, 18)\n  const c2_hi = rotr64_hi(xl, xh, 9) // 41\n\n  let r = c0_hi ^ c1_hi ^ c2_hi\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction s1_512_lo (xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 14)\n  const c1_lo = rotr64_lo(xh, xl, 18)\n  const c2_lo = rotr64_lo(xl, xh, 9) // 41\n\n  let r = c0_lo ^ c1_lo ^ c2_lo\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction g0_512_hi (xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 1)\n  const c1_hi = rotr64_hi(xh, xl, 8)\n  const c2_hi = shr64_hi(xh, xl, 7)\n\n  let r = c0_hi ^ c1_hi ^ c2_hi\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction g0_512_lo (xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 1)\n  const c1_lo = rotr64_lo(xh, xl, 8)\n  const c2_lo = shr64_lo(xh, xl, 7)\n\n  let r = c0_lo ^ c1_lo ^ c2_lo\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction g1_512_hi (xh, xl) {\n  const c0_hi = rotr64_hi(xh, xl, 19)\n  const c1_hi = rotr64_hi(xl, xh, 29) // 61\n  const c2_hi = shr64_hi(xh, xl, 6)\n\n  let r = c0_hi ^ c1_hi ^ c2_hi\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\nfunction g1_512_lo (xh, xl) {\n  const c0_lo = rotr64_lo(xh, xl, 19)\n  const c1_lo = rotr64_lo(xl, xh, 29) // 61\n  const c2_lo = shr64_lo(xh, xl, 6)\n\n  let r = c0_lo ^ c1_lo ^ c2_lo\n  if (r < 0) { r += 0x100000000 }\n  return r\n}\n\n/**\n * The `SHA256HMAC` class is used to create Hash-based Message Authentication Code (HMAC) using the SHA-256 cryptographic hash function.\n *\n * HMAC is a specific type of MAC involving a cryptographic hash function and a secret cryptographic key. It may be used to simultaneously verify both the data integrity and the authenticity of a message.\n *\n * This class also uses the SHA-256 cryptographic hash algorithm that produces a 256-bit (32-byte) hash value.\n *\n * @property inner - Represents the inner hash of SHA-256.\n * @property outer - Represents the outer hash of SHA-256.\n * @property blockSize - The block size for the SHA-256 hash function, in bytes. It's set to 64 bytes.\n * @property outSize - The output size of the SHA-256 hash function, in bytes. It's set to 32 bytes.\n */\nexport class SHA256HMAC {\n  inner: SHA256\n  outer: SHA256\n  blockSize = 64\n  outSize = 32\n\n  /**\n   * The constructor for the `SHA256HMAC` class.\n   *\n   * It initializes the `SHA256HMAC` object and sets up the inner and outer padded keys.\n   * If the key size is larger than the blockSize, it is digested using SHA-256.\n   * If the key size is less than the blockSize, it is padded with zeroes.\n   *\n   * @constructor\n   * @param key - The key to use to create the HMAC. Can be a number array or a string in hexadecimal format.\n   *\n   * @example\n   * const myHMAC = new SHA256HMAC('deadbeef');\n   */\n  constructor (key: number[] | string) {\n    key = toArray(key, 'hex')\n    // Shorten key, if needed\n    if (key.length > this.blockSize) {\n      key = new SHA256().update(key).digest()\n    }\n    assert(key.length <= this.blockSize)\n\n    // Add padding to key\n    let i\n    for (i = key.length; i < this.blockSize; i++) { key.push(0) }\n\n    for (i = 0; i < key.length; i++) { key[i] ^= 0x36 }\n    this.inner = new SHA256().update(key)\n\n    // 0x36 ^ 0x5c = 0x6a\n    for (i = 0; i < key.length; i++) { key[i] ^= 0x6a }\n    this.outer = new SHA256().update(key)\n  }\n\n  /**\n   * Updates the `SHA256HMAC` object with part of the message to be hashed.\n   *\n   * @method update\n   * @param msg - Part of the message to hash. Can be a number array or a string.\n   * @param enc - If 'hex', then the input is encoded as hexadecimal. If undefined or not 'hex', then no encoding is performed.\n   * @returns Returns the instance of `SHA256HMAC` for chaining calls.\n   *\n   * @example\n   * myHMAC.update('deadbeef', 'hex');\n   */\n  update (msg: number[] | string, enc?: 'hex'): SHA256HMAC {\n    this.inner.update(msg, enc)\n    return this\n  }\n\n  /**\n   * Finalizes the HMAC computation and returns the resultant hash.\n   *\n   * @method digest\n   * @returns Returns the digest of the hashed data. Can be a number array or a string.\n   *\n   * @example\n   * let hashedMessage = myHMAC.digest();\n   */\n  digest (): number[] {\n    this.outer.update(this.inner.digest())\n    return this.outer.digest()\n  }\n\n  /**\n   * Finalizes the HMAC computation and returns the resultant hash as a hex string.\n   *\n   * @method digest\n   * @returns Returns the digest of the hashed data as a hex string\n   *\n   * @example\n   * let hashedMessage = myHMAC.digestHex();\n   */\n  digestHex (): string {\n    this.outer.update(this.inner.digest())\n    return this.outer.digestHex()\n  }\n}\n\nexport class SHA1HMAC {\n  inner: SHA1\n  outer: SHA1\n  blockSize = 64\n\n  constructor (key: number[] | string) {\n    key = toArray(key, 'hex')\n    // Shorten key, if needed\n    if (key.length > this.blockSize) {\n      key = new SHA1().update(key).digest()\n    }\n\n    // Keys shorter than block size are padded with zeros on the right\n    let i\n    for (i = key.length; i < this.blockSize; i++) {\n      key.push(0)\n    }\n\n    for (i = 0; i < key.length; i++) {\n      key[i] ^= 0x36\n    }\n    this.inner = new SHA1().update(key)\n\n    // 0x36 ^ 0x5c = 0x6a\n    for (i = 0; i < key.length; i++) {\n      key[i] ^= 0x6a\n    }\n    this.outer = new SHA1().update(key)\n  }\n\n  update (msg: number[] | string, enc?: 'hex'): SHA1HMAC {\n    this.inner.update(msg, enc)\n    return this\n  }\n\n  digest (): number[] {\n    this.outer.update(this.inner.digest())\n    return this.outer.digest()\n  }\n\n  digestHex (): string {\n    this.outer.update(this.inner.digest())\n    return this.outer.digestHex()\n  }\n}\n\n/**\n * The `SHA512HMAC` class is used to create Hash-based Message Authentication Code (HMAC) using the SHA-512 cryptographic hash function.\n *\n * HMAC is a specific type of MAC involving a cryptographic hash function and a secret cryptographic key. It may be used to simultaneously verify both the data integrity and the authenticity of a message.\n *\n * This class also uses the SHA-512 cryptographic hash algorithm that produces a 512-bit (64-byte) hash value.\n *\n * @property inner - Represents the inner hash of SHA-512.\n * @property outer - Represents the outer hash of SHA-512.\n * @property blockSize - The block size for the SHA-512 hash function, in bytes. It's set to 128 bytes.\n * @property outSize - The output size of the SHA-512 hash function, in bytes. It's set to 64 bytes.\n */\nexport class SHA512HMAC {\n  inner: SHA512\n  outer: SHA512\n  blockSize = 128\n  outSize = 32\n\n  /**\n   * The constructor for the `SHA512HMAC` class.\n   *\n   * It initializes the `SHA512HMAC` object and sets up the inner and outer padded keys.\n   * If the key size is larger than the blockSize, it is digested using SHA-512.\n   * If the key size is less than the blockSize, it is padded with zeroes.\n   *\n   * @constructor\n   * @param key - The key to use to create the HMAC. Can be a number array or a string in hexadecimal format.\n   *\n   * @example\n   * const myHMAC = new SHA512HMAC('deadbeef');\n   */\n  constructor (key: number[] | string) {\n    key = toArray(key, 'hex')\n    // Shorten key, if needed\n    if (key.length > this.blockSize) {\n      key = new SHA512().update(key).digest()\n    }\n    assert(key.length <= this.blockSize)\n\n    // Add padding to key\n    let i\n    for (i = key.length; i < this.blockSize; i++) { key.push(0) }\n\n    for (i = 0; i < key.length; i++) { key[i] ^= 0x36 }\n    this.inner = new SHA512().update(key)\n\n    // 0x36 ^ 0x5c = 0x6a\n    for (i = 0; i < key.length; i++) { key[i] ^= 0x6a }\n    this.outer = new SHA512().update(key)\n  }\n\n  /**\n   * Updates the `SHA512HMAC` object with part of the message to be hashed.\n   *\n   * @method update\n   * @param msg - Part of the message to hash. Can be a number array or a string.\n   * @param enc - If 'hex', then the input is encoded as hexadecimal. If undefined or not 'hex', then no encoding is performed.\n   * @returns Returns the instance of `SHA512HMAC` for chaining calls.\n   *\n   * @example\n   * myHMAC.update('deadbeef', 'hex');\n   */\n  update (msg: number[] | string, enc?: 'hex' | 'utf8'): SHA512HMAC {\n    this.inner.update(msg, enc)\n    return this\n  }\n\n  /**\n   * Finalizes the HMAC computation and returns the resultant hash.\n   *\n   * @method digest\n   * @returns Returns the digest of the hashed data as a number array.\n   *\n   * @example\n   * let hashedMessage = myHMAC.digest();\n   */\n  digest (): number[] {\n    this.outer.update(this.inner.digest())\n    return this.outer.digest()\n  }\n\n  /**\n   * Finalizes the HMAC computation and returns the resultant hash as a hex string.\n   *\n   * @method digest\n   * @returns Returns the digest of the hashed data as a hex string\n   *\n   * @example\n   * let hashedMessage = myHMAC.digestHex();\n   */\n  digestHex (): string {\n    this.outer.update(this.inner.digest())\n    return this.outer.digestHex()\n  }\n}\n\n/**\n * Computes RIPEMD160 hash of a given message.\n * @function ripemd160\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the computed RIPEMD160 hash of the message.\n *\n * @example\n * const digest = ripemd160('Hello, world!');\n */\nexport const ripemd160 = (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] => {\n  return new RIPEMD160().update(msg, enc).digest()\n}\n\n/**\n * Computes SHA1 hash of a given message.\n * @function sha1\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the computed SHA1 hash of the message.\n *\n * @example\n * const digest = sha1('Hello, world!');\n */\nexport const sha1 = (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] => {\n  return new SHA1().update(msg, enc).digest()\n}\n\n/**\n * Computes SHA256 hash of a given message.\n * @function sha256\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the computed SHA256 hash of the message.\n *\n * @example\n * const digest = sha256('Hello, world!');\n */\nexport const sha256 = (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] => {\n  return new SHA256().update(msg, enc).digest()\n}\n\n/**\n * Computes SHA512 hash of a given message.\n * @function sha512\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the computed SHA512 hash of the message.\n *\n * @example\n * const digest = sha512('Hello, world!');\n */\nexport const sha512 = (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] => {\n  return new SHA512().update(msg, enc).digest()\n}\n\n/**\n * Performs a 'double hash' using SHA256. This means the data is hashed twice\n * with SHA256. First, the SHA256 hash of the message is computed, then the\n * SHA256 hash of the resulting hash is computed.\n * @function hash256\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the double hashed SHA256 output.\n *\n * @example\n * const doubleHash = hash256('Hello, world!');\n */\nexport const hash256 = (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] => {\n  const first = new SHA256().update(msg, enc).digest()\n  return new SHA256().update(first).digest()\n}\n\n/**\n * Computes SHA256 hash of a given message and then computes a RIPEMD160 hash of the result.\n *\n * @function hash160\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the RIPEMD160 hash of the SHA256 hash of the input message.\n *\n * @example\n * const hash = hash160('Hello, world!');\n */\nexport const hash160 = (msg: number[] | string, enc?: 'hex' | 'utf8'): number[] => {\n  const first = new SHA256().update(msg, enc).digest()\n  return new RIPEMD160().update(first).digest()\n}\n\n/**\n * Computes SHA256 HMAC of a given message with a given key.\n * @function sha256hmac\n * @param key - The key used to compute the HMAC\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the computed HMAC of the message.\n *\n * @example\n * const digest = sha256hmac('deadbeef', 'ffff001d');\n */\nexport const sha256hmac = (key: number[] | string, msg: number[] | string, enc?: 'hex'): number[] => {\n  return new SHA256HMAC(key).update(msg, enc).digest()\n}\n\n/**\n * Computes SHA512 HMAC of a given message with a given key.\n * @function sha512hmac\n * @param key - The key used to compute the HMAC\n * @param msg - The message to compute the hash for.\n * @param enc - The encoding of msg if string. Default is 'utf8'.\n *\n * @returns the computed HMAC of the message.\n *\n * @example\n * const digest = sha512hmac('deadbeef', 'ffff001d');\n */\nexport const sha512hmac = (key: number[] | string, msg: number[] | string, enc?: 'hex'): number[] => {\n  return new SHA512HMAC(key).update(msg, enc).digest()\n}\n\n/**\n * Limited SHA-512-only PBKDF2 function for use in deprecated BIP39 code.\n * @function pbkdf2\n * @param password - The PBKDF2 password\n * @param salt - The PBKDF2 salt\n * @param iterations - The number of of iterations to run\n * @param keylen - The length of the key\n * @param digest - The digest (must be sha512 for this implementation)\n *\n * @returns The computed key\n */\nexport function pbkdf2 (password: number[], salt: number[], iterations: number, keylen: number, digest = 'sha512'): number[] {\n  if (digest !== 'sha512') {\n    throw new Error('Only sha512 is supported in this PBKDF2 implementation')\n  }\n  const DK = new Array(keylen)\n  const block1 = [...salt, 0, 0, 0, 0]\n\n  let destPos = 0\n  const hLen = 64\n  const l = Math.ceil(keylen / hLen)\n\n  for (let i = 1; i <= l; i++) {\n    block1[salt.length] = (i >> 24) & 0xFF // MSB\n    block1[salt.length + 1] = (i >> 16) & 0xFF\n    block1[salt.length + 2] = (i >> 8) & 0xFF\n    block1[salt.length + 3] = i & 0xFF // LSB\n\n    const T = sha512hmac(password, block1)\n    let U = T\n\n    for (let j = 1; j < iterations; j++) {\n      U = sha512hmac(password, U)\n      for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    for (let i = 0; i < T.length; i++) {\n      DK[destPos + i] = T[i]\n    }\n    destPos += hLen\n  }\n\n  return DK.slice(0, keylen)\n}\n","import BigNumber from './BigNumber.js'\nimport { hash256 } from './Hash.js'\n\n/**\n * Prepends a '0' to an odd character length word to ensure it has an even number of characters.\n * @param {string} word - The input word.\n * @returns {string} - The word with a leading '0' if it's an odd character length; otherwise, the original word.\n */\nexport const zero2 = (word: string): string => {\n  if (word.length % 2 === 1) {\n    return '0' + word\n  } else {\n    return word\n  }\n}\n\n/**\n * Converts an array of numbers to a hexadecimal string representation.\n * @param {number[]} msg - The input array of numbers.\n * @returns {string} - The hexadecimal string representation of the input array.\n */\nexport const toHex = (msg: number[]): string => {\n  let res = ''\n  for (let i = 0; i < msg.length; i++) {\n    res += zero2(msg[i].toString(16))\n  }\n  return res\n}\n\n/**\n * Converts various message formats into an array of numbers.\n * Supports arrays, hexadecimal strings, base64 strings, and UTF-8 strings.\n *\n * @param {any} msg - The input message (array or string).\n * @param {('hex' | 'utf8' | 'base64')} enc - Specifies the string encoding, if applicable.\n * @returns {any[]} - Array representation of the input.\n */\nexport const toArray = (msg: any, enc?: 'hex' | 'utf8' | 'base64'): any[] => {\n  // Return a copy if already an array\n  if (Array.isArray(msg)) { return msg.slice() }\n\n  // Return empty array for falsy values\n  if (!(msg as boolean)) { return [] }\n  const res: any[] = []\n\n  // Convert non-string messages to numbers\n  if (typeof msg !== 'string') {\n    for (let i = 0; i < msg.length; i++) { res[i] = msg[i] | 0 }\n    return res\n  }\n\n  // Handle hexadecimal encoding\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '')\n    if (msg.length % 2 !== 0) { msg = '0' + (msg as string) }\n    for (let i = 0; i < msg.length; i += 2) {\n      res.push(\n        parseInt((msg[i] as string) + (msg[i + 1] as string), 16)\n      )\n    }\n\n    // Handle base64\n  } else if (enc === 'base64') {\n    const base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    const result: number[] = []\n    let currentBit: number = 0\n    let currentByte: number = 0\n\n    for (const char of msg.replace(/=+$/, '')) {\n      currentBit = (currentBit << 6) | base64Chars.indexOf(char)\n      currentByte += 6\n\n      if (currentByte >= 8) {\n        currentByte -= 8\n        result.push((currentBit >> currentByte) & 0xFF)\n        currentBit &= (1 << currentByte) - 1\n      }\n    }\n\n    return result\n  } else {\n    // Handle UTF-8 encoding\n    for (let i = 0; i < msg.length; i++) {\n      const c = msg.charCodeAt(i)\n      const hi = c >> 8\n      const lo = c & 0xff\n      if (hi as unknown as boolean) {\n        res.push(hi, lo)\n      } else {\n        res.push(lo)\n      }\n    }\n  }\n  return res\n}\n\n/**\n * Converts an array of numbers to a UTF-8 encoded string.\n * @param {number[]} arr - The input array of numbers.\n * @returns {string} - The UTF-8 encoded string.\n */\nexport const toUTF8 = (arr: number[]): string => {\n  let result = ''\n\n  for (let i = 0; i < arr.length; i++) {\n    const byte = arr[i]\n\n    // 1-byte sequence (0xxxxxxx)\n    if (byte <= 0x7F) {\n      result += String.fromCharCode(byte)\n    }\n    // 2-byte sequence (110xxxxx 10xxxxxx)\n    else if (byte >= 0xC0 && byte <= 0xDF) {\n      const byte2 = arr[++i]\n      const codePoint = ((byte & 0x1F) << 6) | (byte2 & 0x3F)\n      result += String.fromCharCode(codePoint)\n    }\n    // 3-byte sequence (1110xxxx 10xxxxxx 10xxxxxx)\n    else if (byte >= 0xE0 && byte <= 0xEF) {\n      const byte2 = arr[++i]\n      const byte3 = arr[++i]\n      const codePoint = ((byte & 0x0F) << 12) | ((byte2 & 0x3F) << 6) | (byte3 & 0x3F)\n      result += String.fromCharCode(codePoint)\n    }\n    // 4-byte sequence (11110xxx 10xxxxxx 10xxxxxx 10xxxxxx)\n    else if (byte >= 0xF0 && byte <= 0xF7) {\n      const byte2 = arr[++i]\n      const byte3 = arr[++i]\n      const byte4 = arr[++i]\n      const codePoint = ((byte & 0x07) << 18) | ((byte2 & 0x3F) << 12) | ((byte3 & 0x3F) << 6) | (byte4 & 0x3F)\n\n      // Convert to UTF-16 surrogate pair\n      const surrogate1 = 0xD800 + ((codePoint - 0x10000) >> 10)\n      const surrogate2 = 0xDC00 + ((codePoint - 0x10000) & 0x3FF)\n      result += String.fromCharCode(surrogate1, surrogate2)\n    }\n  }\n\n  return result\n}\n\n/**\n * Encodes an array of numbers into a specified encoding ('hex' or 'utf8'). If no encoding is provided, returns the original array.\n * @param {number[]} arr - The input array of numbers.\n * @param {('hex' | 'utf8')} enc - The desired encoding.\n * @returns {string | number[]} - The encoded message as a string (for 'hex' and 'utf8') or the original array.\n */\nexport const encode = (arr: number[], enc?: 'hex' | 'utf8'): string | number[] => {\n  switch (enc) {\n    case 'hex':\n      return toHex(arr)\n    case 'utf8':\n      return toUTF8(arr)\n    // If no encoding is provided, return the original array\n    default:\n      return arr\n  }\n}\n\n/**\n * Converts an array of bytes (each between 0 and 255) into a base64 encoded string.\n *\n * @param {number[]} byteArray - An array of numbers where each number is a byte (0-255).\n * @returns {string} The base64 encoded string.\n *\n * @example\n * const bytes = [72, 101, 108, 108, 111]; // Represents the string \"Hello\"\n * console.log(toBase64(bytes)); // Outputs: SGVsbG8=\n */\nexport function toBase64 (byteArray: number[]): string {\n  const base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  let result = ''\n  let i: number\n\n  for (i = 0; i < byteArray.length; i += 3) {\n    const byte1 = byteArray[i]\n    const byte2 = i + 1 < byteArray.length ? byteArray[i + 1] : 0\n    const byte3 = i + 2 < byteArray.length ? byteArray[i + 2] : 0\n\n    const encoded1 = byte1 >> 2\n    const encoded2 = ((byte1 & 0x03) << 4) | (byte2 >> 4)\n    const encoded3 = ((byte2 & 0x0F) << 2) | (byte3 >> 6)\n    const encoded4 = byte3 & 0x3F\n\n    result += base64Chars.charAt(encoded1) + base64Chars.charAt(encoded2)\n    result += i + 1 < byteArray.length ? base64Chars.charAt(encoded3) : '='\n    result += i + 2 < byteArray.length ? base64Chars.charAt(encoded4) : '='\n  }\n\n  return result\n}\n\nconst base58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\n/**\n * Converts a string from base58 to a binary array\n * @param str - The string representation\n * @returns The binary representation\n */\nexport const fromBase58 = (str: string): number[] => {\n  if (!str || typeof str !== 'string') { throw new Error(`Expected base58 string but got “${str}”`) }\n  if (str.match(/[IOl0]/gmu)) {\n    throw new Error(\n      `Invalid base58 character “${str.match(/[IOl0]/gmu)}”`\n    )\n  }\n  const lz = str.match(/^1+/gmu)\n  const psz: number = lz ? lz[0].length : 0\n  const size =\n    ((str.length - psz) * (Math.log(58) / Math.log(256)) + 1) >>> 0\n\n  const uint8 = new Uint8Array([\n    ...new Uint8Array(psz),\n    ...str\n      .match(/.{1}/gmu)\n      .map((i) => base58chars.indexOf(i))\n      .reduce((acc, i) => {\n        acc = acc.map((j) => {\n          const x = j * 58 + i\n          i = x >> 8\n          return x\n        })\n        return acc\n      }, new Uint8Array(size))\n      .reverse()\n      .filter(\n        (\n          (lastValue) => (value) =>\n            // @ts-expect-error\n            (lastValue = lastValue || value)\n        )(false)\n      )\n  ])\n  return [...uint8]\n}\n\n/**\n * Converts a binary array into a base58 string\n * @param bin - The binary array to convert to base58\n * @returns The base58 string representation\n */\nexport const toBase58 = (bin: number[]): string => {\n  const base58Map = Array(256).fill(-1)\n  for (let i = 0; i < base58chars.length; ++i) { base58Map[base58chars.charCodeAt(i)] = i }\n\n  const result = []\n\n  for (const byte of bin) {\n    let carry = byte\n    for (let j = 0; j < result.length; ++j) {\n      const x = (base58Map[result[j]] << 8) + carry\n      result[j] = base58chars.charCodeAt(x % 58)\n      carry = (x / 58) | 0\n    }\n    while (carry) {\n      result.push(base58chars.charCodeAt(carry % 58))\n      carry = (carry / 58) | 0\n    }\n  }\n\n  for (const byte of bin) {\n    if (byte) break\n    else result.push('1'.charCodeAt(0))\n  }\n\n  result.reverse()\n\n  return String.fromCharCode(...result)\n}\n\n/**\n * Converts a binary array into a base58check string with a checksum\n * @param bin - The binary array to convert to base58check\n * @returns The base58check string representation\n */\nexport const toBase58Check = (bin: number[], prefix: number[] = [0]) => {\n  let hash = hash256([...prefix, ...bin])\n  hash = [...prefix, ...bin, ...hash.slice(0, 4)]\n  return toBase58(hash)\n}\n\n/**\n * Converts a base58check string into a binary array after validating the checksum\n * @param str - The base58check string to convert to binary\n * @param enc - If hex, the return values will be hex strings, arrays of numbers otherwise\n * @param prefixLength - The length of the prefix. Optional, defaults to 1.\n * @returns The binary array representation\n */\nexport const fromBase58Check = (str: string, enc?: 'hex', prefixLength: number = 1) => {\n  const bin = fromBase58(str)\n  let prefix: string | number[] = bin.slice(0, prefixLength)\n  let data: string | number[] = bin.slice(prefixLength, -4)\n  let hash = [...prefix, ...data]\n  hash = hash256(hash)\n  bin.slice(-4).forEach((check, index) => {\n    if (check !== hash[index]) {\n      throw new Error('Invalid checksum')\n    }\n  })\n  if (enc === 'hex') {\n    prefix = toHex(prefix)\n    data = toHex(data)\n  }\n  return { prefix, data }\n}\n\nexport class Writer {\n  public bufs: number[][]\n\n  constructor (bufs?: number[][]) {\n    this.bufs = bufs || []\n  }\n\n  getLength (): number {\n    let len = 0\n    for (const buf of this.bufs) {\n      len = len + buf.length\n    }\n    return len\n  }\n\n  toArray (): number[] {\n    const totalLength = this.getLength()\n    const ret = new Array(totalLength)\n    let offset = 0\n    for (const buf of this.bufs) {\n      for (let i = 0; i < buf.length; i++) {\n        ret[offset++] = buf[i]\n      }\n    }\n    return ret\n  }\n\n  write (buf: number[]): Writer {\n    this.bufs.push(buf)\n    return this\n  }\n\n  writeReverse (buf: number[]): Writer {\n    const buf2: number[] = new Array(buf.length)\n    for (let i = 0; i < buf2.length; i++) {\n      buf2[i] = buf[buf.length - 1 - i]\n    }\n    this.bufs.push(buf2)\n    return this\n  }\n\n  writeUInt8 (n: number): Writer {\n    const buf = new Array(1)\n    buf[0] = n\n    this.write(buf)\n    return this\n  }\n\n  writeInt8 (n: number): Writer {\n    const buf = new Array(1)\n    buf[0] = n & 0xFF\n    this.write(buf)\n    return this\n  }\n\n  writeUInt16BE (n: number): Writer {\n    this.bufs.push([\n      (n >> 8) & 0xFF, // shift right 8 bits to get the high byte\n      n & 0xFF // low byte is just the last 8 bits\n    ])\n    return this\n  }\n\n  writeInt16BE (n: number): Writer {\n    return this.writeUInt16BE(n & 0xFFFF) // Mask with 0xFFFF to get the lower 16 bits\n  }\n\n  writeUInt16LE (n: number): Writer {\n    this.bufs.push([\n      n & 0xFF, // low byte is just the last 8 bits\n      (n >> 8) & 0xFF // shift right 8 bits to get the high byte\n    ])\n    return this\n  }\n\n  writeInt16LE (n: number): Writer {\n    return this.writeUInt16LE(n & 0xFFFF) // Mask with 0xFFFF to get the lower 16 bits\n  }\n\n  writeUInt32BE (n: number): Writer {\n    this.bufs.push([\n      (n >> 24) & 0xFF, // highest byte\n      (n >> 16) & 0xFF,\n      (n >> 8) & 0xFF,\n      n & 0xFF // lowest byte\n    ])\n    return this\n  }\n\n  writeInt32BE (n: number): Writer {\n    return this.writeUInt32BE(n >>> 0) // Using unsigned right shift to handle negative numbers\n  }\n\n  writeUInt32LE (n: number): Writer {\n    this.bufs.push([\n      n & 0xFF, // lowest byte\n      (n >> 8) & 0xFF,\n      (n >> 16) & 0xFF,\n      (n >> 24) & 0xFF // highest byte\n    ])\n    return this\n  }\n\n  writeInt32LE (n: number): Writer {\n    return this.writeUInt32LE(n >>> 0) // Using unsigned right shift to handle negative numbers\n  }\n\n  writeUInt64BEBn (bn: BigNumber): Writer {\n    const buf = bn.toArray('be', 8)\n    this.write(buf)\n    return this\n  }\n\n  writeUInt64LEBn (bn: BigNumber): Writer {\n    const buf = bn.toArray('be', 8)\n    this.writeReverse(buf)\n    return this\n  }\n\n  writeUInt64LE (n: number): Writer {\n    const buf = new BigNumber(n).toArray('be', 8)\n    this.writeReverse(buf)\n    return this\n  }\n\n  writeVarIntNum (n: number): Writer {\n    const buf = Writer.varIntNum(n)\n    this.write(buf)\n    return this\n  }\n\n  writeVarIntBn (bn: BigNumber): Writer {\n    const buf = Writer.varIntBn(bn)\n    this.write(buf)\n    return this\n  }\n\n  static varIntNum (n: number): number[] {\n    let buf: number[]\n    if (n < 253) {\n      buf = [n] // 1 byte\n    } else if (n < 0x10000) {\n      // 253 followed by the number in little-endian format\n      buf = [\n        253, // 0xfd\n        n & 0xFF, // low byte\n        (n >> 8) & 0xFF // high byte\n      ]\n    } else if (n < 0x100000000) {\n      // 254 followed by the number in little-endian format\n      buf = [\n        254, // 0xfe\n        n & 0xFF,\n        (n >> 8) & 0xFF,\n        (n >> 16) & 0xFF,\n        (n >> 24) & 0xFF\n      ]\n    } else {\n      // 255 followed by the number in little-endian format\n      // Since JavaScript bitwise operations work on 32 bits, we need to handle 64-bit numbers in two parts\n      const low = n & 0xFFFFFFFF\n      const high = Math.floor(n / 0x100000000) & 0xFFFFFFFF\n      buf = [\n        255, // 0xff\n        low & 0xFF,\n        (low >> 8) & 0xFF,\n        (low >> 16) & 0xFF,\n        (low >> 24) & 0xFF,\n        high & 0xFF,\n        (high >> 8) & 0xFF,\n        (high >> 16) & 0xFF,\n        (high >> 24) & 0xFF\n      ]\n    }\n    return buf\n  }\n\n  static varIntBn (bn: BigNumber): number[] {\n    let buf: number[]\n    if (bn.ltn(253)) {\n      const n = bn.toNumber()\n      // No need for bitwise operation as the value is within a byte's range\n      buf = [n]\n    } else if (bn.ltn(0x10000)) {\n      const n = bn.toNumber()\n      // Value fits in a uint16\n      buf = [253, n & 0xFF, (n >> 8) & 0xFF]\n    } else if (bn.lt(new BigNumber(0x100000000))) {\n      const n = bn.toNumber()\n      // Value fits in a uint32\n      buf = [254, n & 0xFF, (n >> 8) & 0xFF, (n >> 16) & 0xFF, (n >> 24) & 0xFF]\n    } else {\n      const bw = new Writer()\n      bw.writeUInt8(255)\n      bw.writeUInt64LEBn(bn)\n      buf = bw.toArray()\n    }\n    return buf\n  }\n}\n\nexport class Reader {\n  public bin: number[]\n  public pos: number\n\n  constructor (bin: number[] = [], pos: number = 0) {\n    this.bin = bin\n    this.pos = pos\n  }\n\n  public eof (): boolean {\n    return this.pos >= this.bin.length\n  }\n\n  public read (len = this.bin.length): number[] {\n    const start = this.pos\n    const end = this.pos + len\n    this.pos = end\n    return this.bin.slice(start, end)\n  }\n\n  public readReverse (len = this.bin.length): number[] {\n    const buf2 = new Array(len)\n    for (let i = 0; i < len; i++) {\n      buf2[i] = this.bin[this.pos + len - 1 - i]\n    }\n    this.pos += len\n    return buf2\n  }\n\n  public readUInt8 (): number {\n    const val = this.bin[this.pos]\n    this.pos += 1\n    return val\n  }\n\n  public readInt8 (): number {\n    const val = this.bin[this.pos]\n    this.pos += 1\n    // If the sign bit is set, convert to negative value\n    return (val & 0x80) !== 0 ? val - 0x100 : val\n  }\n\n  public readUInt16BE (): number {\n    const val = (this.bin[this.pos] << 8) | this.bin[this.pos + 1]\n    this.pos += 2\n    return val\n  }\n\n  public readInt16BE (): number {\n    const val = this.readUInt16BE()\n    // If the sign bit is set, convert to negative value\n    return (val & 0x8000) !== 0 ? val - 0x10000 : val\n  }\n\n  public readUInt16LE (): number {\n    const val = this.bin[this.pos] | (this.bin[this.pos + 1] << 8)\n    this.pos += 2\n    return val\n  }\n\n  public readInt16LE (): number {\n    const val = this.readUInt16LE()\n    // If the sign bit is set, convert to negative value\n    const x = (val & 0x8000) !== 0 ? val - 0x10000 : val\n    return x\n  }\n\n  public readUInt32BE (): number {\n    const val =\n      (this.bin[this.pos] * 0x1000000) + // Shift the first byte by 24 bits\n      ((this.bin[this.pos + 1] << 16) | // Shift the second byte by 16 bits\n        (this.bin[this.pos + 2] << 8) | // Shift the third byte by 8 bits\n        this.bin[this.pos + 3]) // The fourth byte\n    this.pos += 4\n    return val\n  }\n\n  public readInt32BE (): number {\n    const val = this.readUInt32BE()\n    // If the sign bit is set, convert to negative value\n    return (val & 0x80000000) !== 0 ? val - 0x100000000 : val\n  }\n\n  public readUInt32LE (): number {\n    const val =\n      (this.bin[this.pos] |\n        (this.bin[this.pos + 1] << 8) |\n        (this.bin[this.pos + 2] << 16) |\n        (this.bin[this.pos + 3] << 24)) >>> 0\n    this.pos += 4\n    return val\n  }\n\n  public readInt32LE (): number {\n    const val = this.readUInt32LE()\n    // Explicitly check if the sign bit is set and then convert to a negative value\n    return (val & 0x80000000) !== 0 ? val - 0x100000000 : val\n  }\n\n  public readUInt64BEBn (): BigNumber {\n    const bin = this.bin.slice(this.pos, this.pos + 8)\n    const bn = new BigNumber(bin)\n    this.pos = this.pos + 8\n    return bn\n  }\n\n  public readUInt64LEBn (): BigNumber {\n    const bin = this.readReverse(8)\n    const bn = new BigNumber(bin)\n    return bn\n  }\n\n  public readVarIntNum (): number {\n    const first = this.readUInt8()\n    let bn: BigNumber\n    let n: number\n    switch (first) {\n      case 0xfd:\n        return this.readUInt16LE()\n      case 0xfe:\n        return this.readUInt32LE()\n      case 0xff:\n        bn = this.readUInt64LEBn()\n        if (bn.lte(new BigNumber(2).pow(new BigNumber(53)))) {\n          return bn.toNumber()\n        } else {\n          throw new Error('number too large to retain precision - use readVarIntBn')\n        }\n      default:\n        return first\n    }\n  }\n\n  public readVarInt (): number[] {\n    const first = this.bin[this.pos]\n    switch (first) {\n      case 0xfd:\n        return this.read(1 + 2)\n      case 0xfe:\n        return this.read(1 + 4)\n      case 0xff:\n        return this.read(1 + 8)\n      default:\n        return this.read(1)\n    }\n  }\n\n  public readVarIntBn (): BigNumber {\n    const first = this.readUInt8()\n    switch (first) {\n      case 0xfd:\n        return new BigNumber(this.readUInt16LE())\n      case 0xfe:\n        return new BigNumber(this.readUInt32LE())\n      case 0xff:\n        return this.readUInt64LEBn()\n      default:\n        return new BigNumber(first)\n    }\n  }\n}\n\nexport const minimallyEncode = (buf: number[]): number[] => {\n  if (buf.length === 0) {\n    return buf\n  }\n\n  // If the last byte is not 0x00 or 0x80, we are minimally encoded.\n  const last = buf[buf.length - 1]\n  if ((last & 0x7f) !== 0) {\n    return buf\n  }\n\n  // If the script is one byte long, then we have a zero, which encodes as an\n  // empty array.\n  if (buf.length === 1) {\n    return []\n  }\n\n  // If the next byte has it sign bit set, then we are minimaly encoded.\n  if ((buf[buf.length - 2] & 0x80) !== 0) {\n    return buf\n  }\n\n  // We are not minimally encoded, we need to figure out how much to trim.\n  for (let i = buf.length - 1; i > 0; i--) {\n    // We found a non zero byte, time to encode.\n    if (buf[i - 1] !== 0) {\n      if ((buf[i - 1] & 0x80) !== 0) {\n        // We found a byte with it sign bit set so we need one more\n        // byte.\n        buf[i++] = last\n      } else {\n        // the sign bit is clear, we can use it.\n        buf[i - 1] |= last\n      }\n\n      return buf.slice(0, i)\n    }\n  }\n\n  // If we found the whole thing is zeros, then we have a zero.\n  return []\n}\n","import BasePoint from './BasePoint.js'\nimport JPoint from './JacobianPoint.js'\nimport BigNumber from './BigNumber.js'\nimport { toArray, toHex } from './utils.js'\nimport ReductionContext from './ReductionContext.js'\n\n/**\n * `Point` class is a representation of an elliptic curve point with affine coordinates.\n * It extends the functionality of BasePoint and carries x, y coordinates of point on the curve.\n * It also introduces new methods for handling Point operations in elliptic curve.\n *\n * @class Point\n * @extends {BasePoint}\n *\n * @property x - The x-coordinate of the point.\n * @property y - The y-coordinate of the point.\n * @property inf - Flag to record if the point is at infinity in the Elliptic Curve.\n */\nexport default class Point extends BasePoint {\n  private static readonly red: any = new ReductionContext('k256')\n  private static readonly a: BigNumber = new BigNumber(0).toRed(Point.red)\n  private static readonly b: BigNumber = new BigNumber(7).toRed(Point.red)\n  private static readonly zero: BigNumber = new BigNumber(0).toRed(Point.red)\n  x: BigNumber | null\n  y: BigNumber | null\n  inf: boolean\n\n  /**\n   * Creates a point object from a given Array. These numbers can represent coordinates in hex format, or points\n   * in multiple established formats.\n   * The function verifies the integrity of the provided data and throws errors if inconsistencies are found.\n   *\n   * @method fromDER\n   * @static\n   * @param bytes - The point representation number array.\n   * @returns Returns a new point representing the given string.\n   * @throws `Error` If the point number[] value has a wrong length.\n   * @throws `Error` If the point format is unknown.\n   *\n   * @example\n   * const derPoint = [ 2, 18, 123, 108, 125, 83, 1, 251, 164, 214, 16, 119, 200, 216, 210, 193, 251, 193, 129, 67, 97, 146, 210, 216, 77, 254, 18, 6, 150, 190, 99, 198, 128 ];\n   * const point = Point.fromDER(derPoint);\n   */\n  static fromDER (bytes: number[]): Point {\n    const len = 32\n    // uncompressed, hybrid-odd, hybrid-even\n    if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n      if (bytes[0] === 0x06) {\n        if (bytes[bytes.length - 1] % 2 !== 0) {\n          throw new Error('Point string value is wrong length')\n        }\n      } else if (bytes[0] === 0x07) {\n        if (bytes[bytes.length - 1] % 2 !== 1) {\n          throw new Error('Point string value is wrong length')\n        }\n      }\n\n      const res = new Point(\n        bytes.slice(1, 1 + len),\n        bytes.slice(1 + len, 1 + 2 * len)\n      )\n\n      return res\n    } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n      bytes.length - 1 === len) {\n      return Point.fromX(bytes.slice(1, 1 + len), bytes[0] === 0x03)\n    }\n    throw new Error('Unknown point format')\n  }\n\n  /**\n   * Creates a point object from a given string. This string can represent coordinates in hex format, or points\n   * in multiple established formats.\n   * The function verifies the integrity of the provided data and throws errors if inconsistencies are found.\n   *\n   * @method fromString\n   * @static\n   *\n   * @param str The point representation string.\n   * @returns Returns a new point representing the given string.\n   * @throws `Error` If the point string value has a wrong length.\n   * @throws `Error` If the point format is unknown.\n   *\n   * @example\n   * const pointStr = 'abcdef';\n   * const point = Point.fromString(pointStr);\n   */\n  static fromString (str: string): Point {\n    const bytes = toArray(str, 'hex')\n    return Point.fromDER(bytes)\n  }\n\n  static redSqrtOptimized (y2: BigNumber): BigNumber {\n    const red = Point.red\n    const p = red.m // The modulus\n    const exponent = p.addn(1).iushrn(2) // (p + 1) / 4\n    return y2.redPow(exponent)\n  }\n\n  /**\n   * Generates a point from an x coordinate and a boolean indicating whether the corresponding\n   * y coordinate is odd.\n   *\n   * @method fromX\n   * @static\n   * @param x - The x coordinate of the point.\n   * @param odd - Boolean indicating whether the corresponding y coordinate is odd or not.\n   * @returns Returns the new point.\n   * @throws `Error` If the point is invalid.\n   *\n   * @example\n   * const xCoordinate = new BigNumber('10');\n   * const point = Point.fromX(xCoordinate, true);\n   */\n  static fromX (x: BigNumber | number | number[] | string, odd: boolean): Point {\n    if (typeof BigInt === 'function') {\n      function mod (a: bigint, n: bigint): bigint {\n        return ((a % n) + n) % n\n      }\n      function modPow (base: bigint, exponent: bigint, modulus: bigint): bigint {\n        let result = BigInt(1)\n        base = mod(base, modulus)\n        while (exponent > BigInt(0)) {\n          if ((exponent & BigInt(1)) === BigInt(1)) {\n            result = mod(result * base, modulus)\n          }\n          exponent >>= BigInt(1)\n          base = mod(base * base, modulus)\n        }\n        return result\n      }\n      function sqrtMod (a: bigint, p: bigint): bigint | null {\n        const exponent = (p + BigInt(1)) >> BigInt(2) // Precomputed exponent\n        const sqrtCandidate = modPow(a, exponent, p)\n        if (mod(sqrtCandidate * sqrtCandidate, p) === mod(a, p)) {\n          return sqrtCandidate\n        } else {\n          // No square root exists\n          return null\n        }\n      }\n\n      // Curve parameters for secp256k1\n      const p = BigInt(\n        '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'\n      )\n      const a = BigInt(0)\n      const b = BigInt(7)\n\n      // Convert x to BigInt\n      let xBigInt: bigint\n      if (x instanceof BigNumber) {\n        xBigInt = BigInt('0x' + x.toString(16))\n      } else if (typeof x === 'string') {\n        xBigInt = BigInt('0x' + x)\n      } else if (Array.isArray(x)) {\n        xBigInt = BigInt(\n          '0x' +\n          Buffer.from(x).toString('hex').padStart(64, '0')\n        )\n      } else if (typeof x === 'number') {\n        xBigInt = BigInt(x)\n      } else {\n        throw new Error('Invalid x-coordinate type')\n      }\n\n      // Ensure x is within field range\n      xBigInt = mod(xBigInt, p)\n\n      // Compute y^2 = x^3 + a x + b mod p\n      const y2 = mod(modPow(xBigInt, BigInt(3), p) + b, p)\n\n      // Compute modular square root y = sqrt(y2) mod p\n      let y = sqrtMod(y2, p)\n\n      if (y === null) {\n        throw new Error('Invalid point')\n      }\n\n      // Adjust y to match the oddness\n      const isYOdd = (y % BigInt(2)) === BigInt(1)\n      if ((odd && !isYOdd) || (!odd && isYOdd)) {\n        y = p - y\n      }\n\n      // Convert x and y to BigNumber\n      const xBN = new BigNumber(xBigInt.toString(16), 16)\n      const yBN = new BigNumber(y.toString(16), 16)\n      return new Point(xBN, yBN)\n    } else {\n      const red = new ReductionContext('k256')\n      const a = new BigNumber(0).toRed(red)\n      const b = new BigNumber(7).toRed(red)\n      const zero = new BigNumber(0).toRed(red)\n      if (!BigNumber.isBN(x)) {\n        x = new BigNumber(x as number, 16)\n      }\n      x = x as BigNumber\n      if (x.red == null) {\n        x = x.toRed(red)\n      }\n\n      const y2 = x.redSqr().redMul(x).redIAdd(x.redMul(a)).redIAdd(b)\n      let y = y2.redSqrt()\n      if (y.redSqr().redSub(y2).cmp(zero) !== 0) {\n        throw new Error('invalid point')\n      }\n\n      // XXX Is there any way to tell if the number is odd without converting it\n      // to non-red form?\n      const isOdd = y.fromRed().isOdd()\n      if ((odd && !isOdd) || (!odd && isOdd)) {\n        y = y.redNeg()\n      }\n      return new Point(x, y)\n    }\n  }\n\n  /**\n   * Generates a point from a serialized JSON object. The function accounts for different options in the JSON object,\n   * including precomputed values for optimization of EC operations, and calls another helper function to turn nested\n   * JSON points into proper Point objects.\n   *\n   * @method fromJSON\n   * @static\n   * @param obj - An object or array that holds the data for the point.\n   * @param isRed - A boolean to direct how the Point is constructed from the JSON object.\n   * @returns Returns a new point based on the deserialized JSON object.\n   *\n   * @example\n   * const serializedPoint = '{\"x\":52,\"y\":15}';\n   * const point = Point.fromJSON(serializedPoint, true);\n   */\n  static fromJSON (\n    obj: string | any[], isRed: boolean\n  ): Point {\n    if (typeof obj === 'string') {\n      obj = JSON.parse(obj)\n    }\n    const res = new Point(obj[0], obj[1], isRed)\n    if (typeof obj[2] !== 'object') {\n      return res\n    }\n\n    const obj2point = (obj): Point => {\n      return new Point(obj[0], obj[1], isRed)\n    }\n\n    const pre = obj[2]\n    res.precomputed = {\n      beta: null,\n      doubles: typeof pre.doubles === 'object' && pre.doubles !== null\n        ? {\n            step: pre.doubles.step,\n            points: [res].concat(pre.doubles.points.map(obj2point))\n          }\n        : undefined,\n      naf: typeof pre.naf === 'object' && pre.naf !== null\n        ? {\n            wnd: pre.naf.wnd,\n            points: [res].concat(pre.naf.points.map(obj2point))\n          }\n        : undefined\n    }\n    return res\n  }\n\n  /**\n   * @constructor\n   * @param x - The x-coordinate of the point. May be a number, a BigNumber, a string (which will be interpreted as hex), a number array, or null. If null, an \"Infinity\" point is constructed.\n   * @param y - The y-coordinate of the point, similar to x.\n   * @param isRed - A boolean indicating if the point is a member of the field of integers modulo the k256 prime. Default is true.\n   *\n   * @example\n   * new Point('abc123', 'def456');\n   * new Point(null, null); // Generates Infinity point.\n   */\n  constructor (\n    x: BigNumber | number | number[] | string | null,\n    y: BigNumber | number | number[] | string | null,\n    isRed: boolean = true\n  ) {\n    super('affine')\n    this.precomputed = null\n    if (x === null && y === null) {\n      this.x = null\n      this.y = null\n      this.inf = true\n    } else {\n      if (!BigNumber.isBN(x)) {\n        x = new BigNumber(x as number, 16)\n      }\n      this.x = x as BigNumber\n      if (!BigNumber.isBN(y)) {\n        y = new BigNumber(y as number, 16)\n      }\n      this.y = y as BigNumber\n      // Force redgomery representation when loading from JSON\n      if (isRed) {\n        this.x.forceRed(this.curve.red)\n        this.y.forceRed(this.curve.red)\n      }\n      if (this.x.red === null) { this.x = this.x.toRed(this.curve.red) }\n      if (this.y.red === null) { this.y = this.y.toRed(this.curve.red) }\n      this.inf = false\n    }\n  }\n\n  /**\n   * Validates if a point belongs to the curve. Follows the short Weierstrass\n   * equation for elliptic curves: y^2 = x^3 + ax + b.\n   *\n   * @method validate\n   * @returns {boolean} true if the point is on the curve, false otherwise.\n   *\n   * @example\n   * const aPoint = new Point(x, y);\n   * const isValid = aPoint.validate();\n   */\n  validate (): boolean {\n    return this.curve.validate(this)\n  }\n\n  /**\n   * Encodes the coordinates of a point into an array or a hexadecimal string.\n   * The details of encoding are determined by the optional compact and enc parameters.\n   *\n   * @method encode\n   * @param compact - If true, an additional prefix byte 0x02 or 0x03 based on the 'y' coordinate being even or odd respectively is used. If false, byte 0x04 is used.\n   * @param enc - Expects the string 'hex' if hexadecimal string encoding is required instead of an array of numbers.\n   * @throws Will throw an error if the specified encoding method is not recognized. Expects 'hex'.\n   * @returns If enc is undefined, a byte array representation of the point will be returned. if enc is 'hex', a hexadecimal string representation of the point will be returned.\n   *\n   * @example\n   * const aPoint = new Point(x, y);\n   * const encodedPointArray = aPoint.encode();\n   * const encodedPointHex = aPoint.encode(true, 'hex');\n   */\n  encode (compact: boolean = true, enc?: 'hex'): number[] | string {\n    const len = this.curve.p.byteLength()\n    const x = this.getX().toArray('be', len)\n    let res: number[]\n    if (compact) {\n      res = [this.getY().isEven() ? 0x02 : 0x03].concat(x)\n    } else {\n      res = [0x04].concat(x, this.getY().toArray('be', len))\n    }\n    if (enc !== 'hex') {\n      return res\n    } else {\n      return toHex(res)\n    }\n  }\n\n  /**\n   * Converts the point coordinates to a hexadecimal string. A wrapper method\n   * for encode. Byte 0x02 or 0x03 is used as prefix based on the 'y' coordinate being even or odd respectively.\n   *\n   * @method toString\n   * @returns {string} A hexadecimal string representation of the point coordinates.\n   *\n   * @example\n   * const aPoint = new Point(x, y);\n   * const stringPoint = aPoint.toString();\n   */\n  toString (): string {\n    return this.encode(true, 'hex') as string\n  }\n\n  /**\n   * Exports the x and y coordinates of the point, and the precomputed doubles and non-adjacent form (NAF) for optimization. The output is an array.\n   *\n   * @method toJSON\n   * @returns An Array where first two elements are the coordinates of the point and optional third element is an object with doubles and NAF points.\n   *\n   * @example\n   * const aPoint = new Point(x, y);\n   * const jsonPoint = aPoint.toJSON();\n   */\n  toJSON (): [BigNumber | null, BigNumber | null, { doubles: { step: any, points: any[] } | undefined, naf: { wnd: any, points: any[] } | undefined }?] {\n    if (this.precomputed == null) { return [this.x, this.y] }\n\n    return [this.x, this.y, typeof this.precomputed === 'object' && this.precomputed !== null\n      ? {\n          doubles: (this.precomputed.doubles != null)\n            ? {\n                step: this.precomputed.doubles.step,\n                points: this.precomputed.doubles.points.slice(1)\n              }\n            : undefined,\n          naf: (this.precomputed.naf != null)\n            ? {\n                wnd: this.precomputed.naf.wnd,\n                points: this.precomputed.naf.points.slice(1)\n              }\n            : undefined\n        }\n      : undefined]\n  }\n\n  /**\n   * Provides the point coordinates in a human-readable string format for debugging purposes.\n   *\n   * @method inspect\n   * @returns String of the format '<EC Point x: x-coordinate y: y-coordinate>', or '<EC Point Infinity>' if the point is at infinity.\n   *\n   * @example\n   * const aPoint = new Point(x, y);\n   * console.log(aPoint.inspect());\n   */\n  inspect (): string {\n    if (this.isInfinity()) {\n      return '<EC Point Infinity>'\n    }\n    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>'\n  }\n\n  /**\n   * Checks if the point is at infinity.\n   * @method isInfinity\n   * @returns Returns whether or not the point is at infinity.\n   *\n   * @example\n   * const p = new Point(null, null);\n   * console.log(p.isInfinity()); // outputs: true\n   */\n  isInfinity (): boolean {\n    return this.inf\n  }\n\n  /**\n   * Adds another Point to this Point, returning a new Point.\n   *\n   * @method add\n   * @param p - The Point to add to this one.\n   * @returns A new Point that results from the addition.\n   *\n   * @example\n   * const p1 = new Point(1, 2);\n   * const p2 = new Point(2, 3);\n   * const result = p1.add(p2);\n   */\n  add (p: Point): Point {\n    // O + P = P\n    if (this.inf) { return p }\n\n    // P + O = P\n    if (p.inf) { return this }\n\n    // P + P = 2P\n    if (this.eq(p)) { return this.dbl() }\n\n    // P + (-P) = O\n    if (this.neg().eq(p)) { return new Point(null, null) }\n\n    // P + Q = O\n    if (this.x.cmp(p.x) === 0) { return new Point(null, null) }\n\n    let c = this.y.redSub(p.y)\n    if (c.cmpn(0) !== 0) { c = c.redMul(this.x.redSub(p.x).redInvm()) }\n    const nx = c.redSqr().redISub(this.x).redISub(p.x)\n    const ny = c.redMul(this.x.redSub(nx)).redISub(this.y)\n    return new Point(nx, ny)\n  }\n\n  /**\n   * Doubles the current point.\n   *\n   * @method dbl\n   *\n   * @example\n   * const P = new Point('123', '456');\n   * const result = P.dbl();\n   * */\n  dbl (): Point {\n    if (this.inf) { return this }\n\n    // 2P = O\n    const ys1 = this.y.redAdd(this.y)\n    if (ys1.cmpn(0) === 0) {\n      return new Point(null, null)\n    }\n\n    const a = this.curve.a\n\n    const x2 = this.x.redSqr()\n    const dyinv = ys1.redInvm()\n    const c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv)\n\n    const nx = c.redSqr().redISub(this.x.redAdd(this.x))\n    const ny = c.redMul(this.x.redSub(nx)).redISub(this.y)\n    return new Point(nx, ny)\n  }\n\n  /**\n   * Returns X coordinate of point\n   *\n   * @example\n   * const P = new Point('123', '456');\n   * const x = P.getX();\n   */\n  getX (): BigNumber {\n    return this.x.fromRed()\n  }\n\n  /**\n   * Returns X coordinate of point\n   *\n   * @example\n   * const P = new Point('123', '456');\n   * const x = P.getX();\n   */\n  getY (): BigNumber {\n    return this.y.fromRed()\n  }\n\n  /**\n   * Multiplies this Point by a scalar value, returning a new Point.\n   *\n   * @method mul\n   * @param k - The scalar value to multiply this Point by.\n   * @returns  A new Point that results from the multiplication.\n   *\n   * @example\n   * const p = new Point(1, 2);\n   * const result = p.mul(2); // this doubles the Point\n   */\n  mul (k: BigNumber | number | number[] | string): Point {\n    if (!BigNumber.isBN(k)) {\n      k = new BigNumber(k as number, 16)\n    }\n    k = k as BigNumber\n    if (this.isInfinity()) {\n      return this\n    } else if (this._hasDoubles(k)) {\n      return this._fixedNafMul(k)\n    } else {\n      return this._endoWnafMulAdd([this], [k]) as Point\n    }\n  }\n\n  /**\n   * Performs a multiplication and addition operation in a single step.\n   * Multiplies this Point by k1, adds the resulting Point to the result of p2 multiplied by k2.\n   *\n   * @method mulAdd\n   * @param k1 - The scalar value to multiply this Point by.\n   * @param p2 - The other Point to be involved in the operation.\n   * @param k2 - The scalar value to multiply the Point p2 by.\n   * @returns A Point that results from the combined multiplication and addition operations.\n   *\n   * @example\n   * const p1 = new Point(1, 2);\n   * const p2 = new Point(2, 3);\n   * const result = p1.mulAdd(2, p2, 3);\n   */\n  mulAdd (k1: BigNumber, p2: Point, k2: BigNumber): Point {\n    const points = [this, p2]\n    const coeffs = [k1, k2]\n    return this._endoWnafMulAdd(points, coeffs) as Point\n  }\n\n  /**\n   * Performs the Jacobian multiplication and addition operation in a single\n   * step. Instead of returning a regular Point, the result is a JacobianPoint.\n   *\n   * @method jmulAdd\n   * @param k1 - The scalar value to multiply this Point by.\n   * @param p2 - The other Point to be involved in the operation\n   * @param k2 - The scalar value to multiply the Point p2 by.\n   * @returns A JacobianPoint that results from the combined multiplication and addition operation.\n   *\n   * @example\n   * const p1 = new Point(1, 2);\n   * const p2 = new Point(2, 3);\n   * const result = p1.jmulAdd(2, p2, 3);\n   */\n  jmulAdd (k1: BigNumber, p2: Point, k2: BigNumber): JPoint {\n    const points = [this, p2]\n    const coeffs = [k1, k2]\n    return this._endoWnafMulAdd(points, coeffs, true) as JPoint\n  }\n\n  /**\n   * Checks if the Point instance is equal to another given Point.\n   *\n   * @method eq\n   * @param p - The Point to be checked if equal to the current instance.\n   *\n   * @returns Whether the two Point instances are equal. Both the 'x' and 'y' coordinates have to match, and both points have to either be valid or at infinity for equality. If both conditions are true, it returns true, else it returns false.\n   *\n   * @example\n   * const p1 = new Point(5, 20);\n   * const p2 = new Point(5, 20);\n   * const areEqual = p1.eq(p2); // returns true\n   */\n  eq (p: Point): boolean {\n    return this === p || (\n      (this.inf === p.inf) &&\n      (this.inf || (this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0)))\n  }\n\n  /**\n   * Negate a point. The negation of a point P is the mirror of P about x-axis.\n   *\n   * @method neg\n   *\n   * @example\n   * const P = new Point('123', '456');\n   * const result = P.neg();\n   */\n  neg (_precompute?: boolean): Point {\n    if (this.inf) { return this }\n\n    const res = new Point(this.x, this.y.redNeg())\n    if (_precompute && (this.precomputed != null)) {\n      const pre = this.precomputed\n      const negate = (p: Point): Point => p.neg()\n      res.precomputed = {\n        naf: (pre.naf != null) && {\n          wnd: pre.naf.wnd,\n          points: pre.naf.points.map(negate)\n        },\n        doubles: (pre.doubles != null) && {\n          step: pre.doubles.step,\n          points: pre.doubles.points.map((p) => p.neg())\n        },\n        beta: undefined\n      }\n    }\n    return res\n  }\n\n  /**\n   * Performs the \"doubling\" operation on the Point a given number of times.\n   * This is used in elliptic curve operations to perform multiplication by 2, multiple times.\n   * If the point is at infinity, it simply returns the point because doubling\n   * a point at infinity is still infinity.\n   *\n   * @method dblp\n   * @param k - The number of times the \"doubling\" operation is to be performed on the Point.\n   * @returns The Point after 'k' \"doubling\" operations have been performed.\n   *\n   * @example\n   * const p = new Point(5, 20);\n   * const doubledPoint = p.dblp(10); // returns the point after \"doubled\" 10 times\n   */\n  dblp (k: number): Point {\n    /* eslint-disable @typescript-eslint/no-this-alias */\n    let r: Point = this\n    for (let i = 0; i < k; i++) { r = r.dbl() }\n    return r\n  }\n\n  /**\n   * Converts the point to a Jacobian point. If the point is at infinity, the corresponding Jacobian point\n   * will also be at infinity.\n   *\n   * @method toJ\n   * @returns Returns a new Jacobian point based on the current point.\n   *\n   * @example\n   * const point = new Point(xCoordinate, yCoordinate);\n   * const jacobianPoint = point.toJ();\n   */\n  toJ (): JPoint {\n    if (this.inf) {\n      return new JPoint(null, null, null)\n    }\n    const res = new JPoint(this.x, this.y, this.curve.one)\n    return res\n  }\n\n  private _getBeta (): undefined | Point {\n    if (typeof this.curve.endo !== 'object') { return }\n\n    const pre = this.precomputed\n    if (typeof pre === 'object' && pre !== null && typeof pre.beta === 'object' && pre.beta !== null) {\n      return pre.beta as Point\n    }\n\n    const beta = new Point(this.x.redMul(this.curve.endo.beta), this.y)\n    if (pre != null) {\n      const curve = this.curve\n      const endoMul = (p: Point): Point => {\n        return new Point(p.x.redMul(curve.endo.beta), p.y)\n      }\n      pre.beta = beta\n      beta.precomputed = {\n        beta: null,\n        naf: (pre.naf != null)\n          ? {\n              wnd: pre.naf.wnd,\n              points: pre.naf.points.map(endoMul)\n            }\n          : undefined,\n        doubles: (pre.doubles != null)\n          ? {\n              step: pre.doubles.step,\n              points: pre.doubles.points.map(endoMul)\n            }\n          : undefined\n      }\n    }\n    return beta\n  }\n\n  private _fixedNafMul (k: BigNumber): Point {\n    if (typeof this.precomputed !== 'object' || this.precomputed === null) {\n      throw new Error('_fixedNafMul requires precomputed values for the point')\n    }\n    const doubles = this._getDoubles()\n\n    const naf = this.curve.getNAF(k, 1, this.curve._bitLength)\n    let I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1)\n    I /= 3\n\n    // Translate into more windowed form\n    const repr: number[] = []\n    for (let j = 0; j < naf.length; j += doubles.step) {\n      let nafW = 0\n      for (let k = j + doubles.step - 1; k >= j; k--) {\n        nafW = (nafW << 1) + naf[k]\n      }\n      repr.push(nafW)\n    }\n\n    let a = new JPoint(null, null, null)\n    let b = new JPoint(null, null, null)\n    for (let i = I; i > 0; i--) {\n      for (let j = 0; j < repr.length; j++) {\n        const nafW = repr[j]\n        if (nafW === i) {\n          b = b.mixedAdd(doubles.points[j])\n        } else if (nafW === -i) {\n          b = b.mixedAdd((doubles.points[j]).neg())\n        }\n      }\n      a = a.add(b)\n    }\n    return a.toP()\n  }\n\n  private _wnafMulAdd (\n    defW: number,\n    points: Point[],\n    coeffs: BigNumber[],\n    len: number,\n    jacobianResult?: boolean\n  ): BasePoint {\n    const wndWidth = this.curve._wnafT1\n    const wnd = this.curve._wnafT2\n    const naf = this.curve._wnafT3\n\n    // Fill all arrays\n    let max = 0\n    for (let i = 0; i < len; i++) {\n      const p = points[i]\n      const nafPoints = p._getNAFPoints(defW)\n      wndWidth[i] = nafPoints.wnd\n      wnd[i] = nafPoints.points\n    }\n\n    // Comb small window NAFs\n    for (let i = len - 1; i >= 1; i -= 2) {\n      const a = i - 1\n      const b = i\n      if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n        naf[a] = this.curve\n          .getNAF(coeffs[a], wndWidth[a], this.curve._bitLength)\n        naf[b] = this.curve\n          .getNAF(coeffs[b], wndWidth[b], this.curve._bitLength)\n        max = Math.max(naf[a].length, max)\n        max = Math.max(naf[b].length, max)\n        continue\n      }\n\n      const comb: any[] = [\n        points[a], /* 1 */\n        null, /* 3 */\n        null, /* 5 */\n        points[b] /* 7 */\n      ]\n\n      // Try to avoid Projective points, if possible\n      if (points[a].y.cmp(points[b].y) === 0) {\n        comb[1] = points[a].add(points[b])\n        comb[2] = points[a].toJ().mixedAdd(points[b].neg())\n      } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n        comb[1] = points[a].toJ().mixedAdd(points[b])\n        comb[2] = points[a].add(points[b].neg())\n      } else {\n        comb[1] = points[a].toJ().mixedAdd(points[b])\n        comb[2] = points[a].toJ().mixedAdd(points[b].neg())\n      }\n\n      const index = [\n        -3, /* -1 -1 */\n        -1, /* -1 0 */\n        -5, /* -1 1 */\n        -7, /* 0 -1 */\n        0, /* 0 0 */\n        7, /* 0 1 */\n        5, /* 1 -1 */\n        1, /* 1 0 */\n        3 /* 1 1 */\n      ]\n\n      const jsf = this.curve.getJSF(coeffs[a], coeffs[b])\n      max = Math.max(jsf[0].length, max)\n      naf[a] = new Array(max)\n      naf[b] = new Array(max)\n      for (let j = 0; j < max; j++) {\n        const ja = jsf[0][j] | 0\n        const jb = jsf[1][j] | 0\n\n        naf[a][j] = index[(ja + 1) * 3 + (jb + 1)]\n        naf[b][j] = 0\n        wnd[a] = comb\n      }\n    }\n\n    let acc = new JPoint(null, null, null)\n    const tmp = this.curve._wnafT4\n    for (let i = max; i >= 0; i--) {\n      let k = 0\n\n      while (i >= 0) {\n        let zero = true\n        for (let j = 0; j < len; j++) {\n          tmp[j] = naf[j][i] | 0\n          if (tmp[j] !== 0) { zero = false }\n        }\n        if (!zero) { break }\n        k++\n        i--\n      }\n      if (i >= 0) { k++ }\n      acc = acc.dblp(k)\n      if (i < 0) { break }\n\n      for (let j = 0; j < len; j++) {\n        const z = tmp[j]\n        let p\n        if (z === 0) {\n          continue\n        } else if (z > 0) {\n          p = wnd[j][(z - 1) >> 1]\n        } else if (z < 0) {\n          p = wnd[j][(-z - 1) >> 1].neg()\n        }\n\n        if (p.type === 'affine') {\n          acc = acc.mixedAdd(p)\n        } else {\n          acc = acc.add(p)\n        }\n      }\n    }\n    // Zeroify references\n    for (let i = 0; i < len; i++) { wnd[i] = null }\n\n    if (jacobianResult) {\n      return acc\n    } else {\n      return acc.toP()\n    }\n  }\n\n  private _endoWnafMulAdd (points: Point[], coeffs, jacobianResult?: boolean): BasePoint {\n    const npoints = this.curve._endoWnafT1\n    const ncoeffs = this.curve._endoWnafT2\n    let i\n    for (i = 0; i < points.length; i++) {\n      const split = this.curve._endoSplit(coeffs[i])\n      let p = points[i]\n      let beta = p._getBeta()\n\n      if (split.k1.negative !== 0) {\n        split.k1.ineg()\n        p = p.neg(true)\n      }\n      if (split.k2.negative !== 0) {\n        split.k2.ineg()\n        beta = beta.neg(true)\n      }\n\n      npoints[i * 2] = p\n      npoints[i * 2 + 1] = beta\n      ncoeffs[i * 2] = split.k1\n      ncoeffs[i * 2 + 1] = split.k2\n    }\n    const res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult)\n\n    // Clean-up references to points and coefficients\n    for (let j = 0; j < i * 2; j++) {\n      npoints[j] = null\n      ncoeffs[j] = null\n    }\n    return res\n  }\n\n  private _hasDoubles (k: BigNumber): boolean {\n    if (this.precomputed == null) { return false }\n\n    const doubles = this.precomputed.doubles\n    if (typeof doubles !== 'object') { return false }\n\n    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step)\n  };\n\n  private _getDoubles (\n    step?: number,\n    power?: number\n  ): { step: number, points: any[] } {\n    if (\n      typeof this.precomputed === 'object' && this.precomputed !== null &&\n      typeof this.precomputed.doubles === 'object' &&\n      this.precomputed.doubles !== null\n    ) {\n      return this.precomputed.doubles\n    }\n\n    const doubles = [this]\n    /* eslint-disable @typescript-eslint/no-this-alias */\n    let acc: Point = this\n    for (let i = 0; i < power; i += step) {\n      for (let j = 0; j < step; j++) { acc = acc.dbl() }\n      doubles.push(acc as this)\n    }\n    return {\n      step,\n      points: doubles\n    }\n  };\n\n  private _getNAFPoints (wnd: number): { wnd: number, points: any[] } {\n    if (\n      typeof this.precomputed === 'object' && this.precomputed !== null &&\n      typeof this.precomputed.naf === 'object' && this.precomputed.naf !== null\n    ) {\n      return this.precomputed.naf\n    }\n\n    const res = [this]\n    const max = (1 << wnd) - 1\n    const dbl = max === 1 ? null : this.dbl()\n    for (let i = 1; i < max; i++) { res[i] = res[i - 1].add(dbl) as this }\n    return {\n      wnd,\n      points: res\n    }\n  }\n}\n","import BigNumber from './BigNumber.js'\nimport ReductionContext from './ReductionContext.js'\nimport MontgomoryMethod from './MontgomoryMethod.js'\nimport Point from './Point.js'\nimport { toArray } from './utils.js'\n\n// This ensures that only one curve is ever created, enhancing performance.\n// This assumes there is never a need to have multiple distinct Curve instances.\n// So far, this assumption has proven to be valid.\nlet globalCurve: Curve\n\nexport default class Curve {\n  p: BigNumber\n  red: ReductionContext\n  redN: BigNumber | null\n  zero: BigNumber\n  one: BigNumber\n  two: BigNumber\n  g: Point\n  n: BigNumber\n  a: BigNumber\n  b: BigNumber\n  tinv: BigNumber\n  zeroA: boolean\n  threeA: boolean\n  endo: any // beta, lambda, basis\n  _endoWnafT1: any[]\n  _endoWnafT2: any[]\n  _wnafT1: any[]\n  _wnafT2: any[]\n  _wnafT3: any[]\n  _wnafT4: any[]\n  _bitLength: number\n\n  // Represent num in a w-NAF form\n  static assert (\n    expression: unknown,\n    message: string = 'Elliptic curve assertion failed'\n  ): void {\n    if (!(expression as boolean)) {\n      throw new Error(message)\n    }\n  }\n\n  getNAF (num: BigNumber, w: number, bits: number): number[] {\n    const naf = new Array(Math.max(num.bitLength(), bits) + 1)\n    naf.fill(0)\n\n    const ws = 1 << (w + 1)\n    const k = num.clone()\n\n    for (let i = 0; i < naf.length; i++) {\n      let z\n      const mod = k.andln(ws - 1)\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) { z = (ws >> 1) - mod } else { z = mod }\n        k.isubn(z)\n      } else {\n        z = 0\n      }\n\n      naf[i] = z\n      k.iushrn(1)\n    }\n\n    return naf\n  }\n\n  // Represent k1, k2 in a Joint Sparse Form\n  getJSF (k1: BigNumber, k2: BigNumber): number[][] {\n    const jsf: any[][] = [\n      [],\n      []\n    ]\n\n    k1 = k1.clone()\n    k2 = k2.clone()\n    let d1 = 0\n    let d2 = 0\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      let m14 = (k1.andln(3) + d1) & 3\n      let m24 = (k2.andln(3) + d2) & 3\n      if (m14 === 3) { m14 = -1 }\n      if (m24 === 3) { m24 = -1 }\n      let u1: number\n      if ((m14 & 1) === 0) {\n        u1 = 0\n      } else {\n        const m8 = (k1.andln(7) + d1) & 7\n        if ((m8 === 3 || m8 === 5) && m24 === 2) {\n          u1 = -m14\n        } else {\n          u1 = m14\n        }\n      }\n      jsf[0].push(u1)\n\n      let u2: number\n      if ((m24 & 1) === 0) {\n        u2 = 0\n      } else {\n        const m8 = (k2.andln(7) + d2) & 7\n        if ((m8 === 3 || m8 === 5) && m14 === 2) { u2 = -m24 } else { u2 = m24 }\n      }\n      jsf[1].push(u2)\n\n      // Second phase\n      if (2 * d1 === u1 + 1) { d1 = 1 - d1 }\n      if (2 * d2 === u2 + 1) { d2 = 1 - d2 }\n      k1.iushrn(1)\n      k2.iushrn(1)\n    }\n\n    return jsf\n  }\n\n  static cachedProperty (obj, name: string, computer): void {\n    const key = '_' + name\n    obj.prototype[name] = function cachedProperty () {\n      const r = this[key] !== undefined\n        ? this[key]\n        : this[key] = computer.call(this)\n      return r\n    }\n  }\n\n  static parseBytes (bytes: string | number[]): number[] {\n    return typeof bytes === 'string'\n      ? toArray(bytes, 'hex')\n      : bytes\n  }\n\n  static intFromLE (bytes: number[]): BigNumber {\n    return new BigNumber(bytes, 'hex', 'le')\n  }\n\n  constructor () {\n    if (typeof globalCurve !== 'undefined') {\n      return globalCurve\n    } else {\n      /* eslint-disable @typescript-eslint/no-this-alias */\n      globalCurve = this\n    }\n\n    const precomputed = {\n      doubles: {\n        step: 4,\n        points: [\n          [\n            'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n            'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n          ],\n          [\n            '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n            '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n          ],\n          [\n            '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n            'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n          ],\n          [\n            '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n            '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n          ],\n          [\n            '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n            '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n          ],\n          [\n            '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n            '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n          ],\n          [\n            'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n            '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n          ],\n          [\n            '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n            'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n          ],\n          [\n            'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n            '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n          ],\n          [\n            'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n            'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n          ],\n          [\n            'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n            '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n          ],\n          [\n            '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n            '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n          ],\n          [\n            '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n            '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n          ],\n          [\n            '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n            '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n          ],\n          [\n            '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n            '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n          ],\n          [\n            '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n            '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n          ],\n          [\n            '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n            '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n          ],\n          [\n            '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n            '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n          ],\n          [\n            '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n            'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n          ],\n          [\n            'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n            '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n          ],\n          [\n            'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n            '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n          ],\n          [\n            '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n            '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n          ],\n          [\n            '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n            '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n          ],\n          [\n            'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n            '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n          ],\n          [\n            '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n            'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n          ],\n          [\n            'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n            '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n          ],\n          [\n            'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n            'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n          ],\n          [\n            'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n            '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n          ],\n          [\n            'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n            'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n          ],\n          [\n            'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n            '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n          ],\n          [\n            '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n            'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n          ],\n          [\n            '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n            '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n          ],\n          [\n            'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n            '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n          ],\n          [\n            '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n            'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n          ],\n          [\n            'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n            '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n          ],\n          [\n            'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n            '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n          ],\n          [\n            'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n            'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n          ],\n          [\n            '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n            '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n          ],\n          [\n            '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n            '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n          ],\n          [\n            '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n            'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n          ],\n          [\n            '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n            '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n          ],\n          [\n            'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n            '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n          ],\n          [\n            '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n            '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n          ],\n          [\n            '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n            'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n          ],\n          [\n            '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n            '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n          ],\n          [\n            'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n            '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n          ],\n          [\n            '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n            'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n          ],\n          [\n            'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n            'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n          ],\n          [\n            'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n            '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n          ],\n          [\n            '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n            'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n          ],\n          [\n            '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n            'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n          ],\n          [\n            'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n            '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n          ],\n          [\n            'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n            '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n          ],\n          [\n            'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n            '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n          ],\n          [\n            '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n            'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n          ],\n          [\n            '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n            '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n          ],\n          [\n            'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n            'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n          ],\n          [\n            '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n            'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n          ],\n          [\n            '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n            '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n          ],\n          [\n            '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n            '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n          ],\n          [\n            'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n            'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n          ],\n          [\n            '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n            '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n          ],\n          [\n            '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n            '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n          ],\n          [\n            'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n            '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n          ],\n          [\n            'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n            'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n          ]\n        ]\n      },\n      naf: {\n        wnd: 7,\n        points: [\n          [\n            'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n            '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n          ],\n          [\n            '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n            'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n          ],\n          [\n            '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n            '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n          ],\n          [\n            'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n            'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n          ],\n          [\n            '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n            'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n          ],\n          [\n            'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n            'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n          ],\n          [\n            'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n            '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n          ],\n          [\n            'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n            '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n          ],\n          [\n            '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n            '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n          ],\n          [\n            '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n            '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n          ],\n          [\n            '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n            '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n          ],\n          [\n            '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n            '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n          ],\n          [\n            'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n            'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n          ],\n          [\n            'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n            '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n          ],\n          [\n            '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n            'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n          ],\n          [\n            '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n            'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n          ],\n          [\n            '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n            '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n          ],\n          [\n            '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n            '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n          ],\n          [\n            '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n            '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n          ],\n          [\n            '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n            'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n          ],\n          [\n            'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n            'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n          ],\n          [\n            '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n            '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n          ],\n          [\n            '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n            '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n          ],\n          [\n            'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n            'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n          ],\n          [\n            '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n            '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n          ],\n          [\n            'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n            'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n          ],\n          [\n            'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n            'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n          ],\n          [\n            '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n            '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n          ],\n          [\n            '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n            '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n          ],\n          [\n            '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n            '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n          ],\n          [\n            'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n            '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n          ],\n          [\n            '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n            '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n          ],\n          [\n            'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n            '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n          ],\n          [\n            '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n            'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n          ],\n          [\n            '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n            'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n          ],\n          [\n            'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n            'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n          ],\n          [\n            '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n            '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n          ],\n          [\n            '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n            'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n          ],\n          [\n            'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n            'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n          ],\n          [\n            '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n            '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n          ],\n          [\n            '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n            'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n          ],\n          [\n            '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n            '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n          ],\n          [\n            '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n            'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n          ],\n          [\n            'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n            '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n          ],\n          [\n            '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n            '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n          ],\n          [\n            '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n            'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n          ],\n          [\n            '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n            'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n          ],\n          [\n            'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n            'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n          ],\n          [\n            'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n            'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n          ],\n          [\n            '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n            '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n          ],\n          [\n            '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n            '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n          ],\n          [\n            'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n            '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n          ],\n          [\n            'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n            'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n          ],\n          [\n            '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n            '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n          ],\n          [\n            '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n            '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n          ],\n          [\n            'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n            '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n          ],\n          [\n            '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n            '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n          ],\n          [\n            'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n            'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n          ],\n          [\n            '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n            'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n          ],\n          [\n            '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n            '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n          ],\n          [\n            'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n            '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n          ],\n          [\n            'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n            '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n          ],\n          [\n            '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n            '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n          ],\n          [\n            '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n            '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n          ],\n          [\n            '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n            'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n          ],\n          [\n            '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n            'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n          ],\n          [\n            '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n            '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n          ],\n          [\n            '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n            '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n          ],\n          [\n            '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n            '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n          ],\n          [\n            '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n            'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n          ],\n          [\n            'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n            'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n          ],\n          [\n            '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n            'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n          ],\n          [\n            'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n            '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n          ],\n          [\n            'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n            '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n          ],\n          [\n            'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n            '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n          ],\n          [\n            'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n            '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n          ],\n          [\n            '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n            'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n          ],\n          [\n            '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n            '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n          ],\n          [\n            '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n            'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n          ],\n          [\n            'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n            'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n          ],\n          [\n            'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n            '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n          ],\n          [\n            'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n            'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n          ],\n          [\n            'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n            '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n          ],\n          [\n            '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n            '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n          ],\n          [\n            'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n            '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n          ],\n          [\n            'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n            '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n          ],\n          [\n            '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n            '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n          ],\n          [\n            '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n            'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n          ],\n          [\n            'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n            '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n          ],\n          [\n            'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n            '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n          ],\n          [\n            'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n            '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n          ],\n          [\n            '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n            '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n          ],\n          [\n            'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n            'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n          ],\n          [\n            '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n            'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n          ],\n          [\n            'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n            'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n          ],\n          [\n            'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n            '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n          ],\n          [\n            '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n            'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n          ],\n          [\n            'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n            '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n          ],\n          [\n            'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n            '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n          ],\n          [\n            'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n            '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n          ],\n          [\n            '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n            'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n          ],\n          [\n            '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n            'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n          ],\n          [\n            'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n            '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n          ],\n          [\n            '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n            'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n          ],\n          [\n            '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n            '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n          ],\n          [\n            '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n            'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n          ],\n          [\n            'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n            'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n          ],\n          [\n            '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n            'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n          ],\n          [\n            '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n            '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n          ],\n          [\n            '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n            'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n          ],\n          [\n            '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n            '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n          ],\n          [\n            'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n            'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n          ],\n          [\n            '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n            '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n          ],\n          [\n            'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n            '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n          ],\n          [\n            '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n            '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n          ],\n          [\n            'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n            'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n          ],\n          [\n            'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n            '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n          ],\n          [\n            'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n            'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n          ],\n          [\n            '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n            'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n          ],\n          [\n            '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n            '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n          ],\n          [\n            '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n            'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n          ],\n          [\n            '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n            '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n          ],\n          [\n            '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n            '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n          ],\n          [\n            '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n            'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n          ],\n          [\n            '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n            '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n          ],\n          [\n            '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n            '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n          ],\n          [\n            '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n            '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n          ]\n        ]\n      }\n    }\n    const conf = {\n      prime: 'k256',\n      p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n      a: '0',\n      b: '7',\n      n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n      h: '1',\n\n      // Precomputed endomorphism\n      beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n      lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n      basis: [\n        {\n          a: '3086d221a7d46bcde86c90e49284eb15',\n          b: '-e4437ed6010e88286f547fa90abfe4c3'\n        },\n        {\n          a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n          b: '3086d221a7d46bcde86c90e49284eb15'\n        }\n      ],\n\n      gRed: false,\n      g: [\n        '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n        '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n        precomputed\n      ]\n    }\n\n    this.p = new BigNumber(conf.p, 16)\n\n    // Use Montgomery, when there is no fast reduction for the prime\n    this.red = new ReductionContext(conf.prime as 'k256')\n\n    // Useful for many curves\n    this.zero = new BigNumber(0).toRed(this.red)\n    this.one = new BigNumber(1).toRed(this.red)\n    this.two = new BigNumber(2).toRed(this.red)\n\n    // Curve configuration, optional\n    this.n = new BigNumber(conf.n, 16)\n    this.g = Point.fromJSON(conf.g, conf.gRed)\n\n    // Temporary arrays\n    this._wnafT1 = new Array(4)\n    this._wnafT2 = new Array(4)\n    this._wnafT3 = new Array(4)\n    this._wnafT4 = new Array(4)\n\n    this._bitLength = this.n.bitLength()\n    this.redN = this.n.toRed(this.red)\n    this.a = new BigNumber(conf.a, 16).toRed(this.red)\n    this.b = new BigNumber(conf.b, 16).toRed(this.red)\n    this.tinv = this.two.redInvm()\n\n    this.zeroA = this.a.fromRed().cmpn(0) === 0\n    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0\n\n    // If the curve is endomorphic, precalculate beta and lambda\n    this.endo = this._getEndomorphism(conf)\n    this._endoWnafT1 = new Array(4)\n    this._endoWnafT2 = new Array(4)\n  }\n\n  _getEndomorphism (conf): {\n    beta: BigNumber\n    lambda: BigNumber\n    basis: Array<{ a: BigNumber, b: BigNumber }>\n  } | undefined {\n    // No efficient endomorphism\n    if (!this.zeroA || this.p.modrn(3) !== 1) { return }\n\n    // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n    let beta: BigNumber\n    let lambda: BigNumber\n    if (conf.beta !== undefined) {\n      beta = new BigNumber(conf.beta, 16).toRed(this.red)\n    } else {\n      const betas = this._getEndoRoots(this.p)\n      // Choose the smallest beta\n      beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1]\n      beta = beta.toRed(this.red)\n    }\n    if (conf.lambda !== undefined) {\n      lambda = new BigNumber(conf.lambda, 16)\n    } else {\n      // Choose the lambda that is matching selected beta\n      const lambdas = this._getEndoRoots(this.n)\n      if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n        lambda = lambdas[0]\n      } else {\n        lambda = lambdas[1]\n        Curve.assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0)\n      }\n    }\n\n    // Get basis vectors, used for balanced length-two representation\n    let basis: Array<{ a: BigNumber, b: BigNumber }>\n    if (typeof conf.basis === 'object' && conf.basis !== null) {\n      basis = conf.basis.map(function (vec) {\n        return {\n          a: new BigNumber(vec.a, 16),\n          b: new BigNumber(vec.b, 16)\n        }\n      })\n    } else {\n      basis = this._getEndoBasis(lambda)\n    }\n\n    return {\n      beta,\n      lambda,\n      basis\n    }\n  };\n\n  _getEndoRoots (num: BigNumber): [BigNumber, BigNumber] {\n    // Find roots of for x^2 + x + 1 in F\n    // Root = (-1 +- Sqrt(-3)) / 2\n    //\n    const red = num === this.p ? this.red : new MontgomoryMethod(num)\n    const tinv = new BigNumber(2).toRed(red).redInvm()\n    const ntinv = tinv.redNeg()\n\n    const s = new BigNumber(3).toRed(red).redNeg().redSqrt().redMul(tinv)\n\n    const l1 = ntinv.redAdd(s).fromRed()\n    const l2 = ntinv.redSub(s).fromRed()\n    return [l1, l2]\n  };\n\n  _getEndoBasis (lambda: BigNumber): [{ a: BigNumber, b: BigNumber }, { a: BigNumber, b: BigNumber }] {\n    // aprxSqrt >= sqrt(this.n)\n    const aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2))\n\n    // 3.74\n    // Run EGCD, until r(L + 1) < aprxSqrt\n    let u = lambda\n    let v = this.n.clone()\n    let x1 = new BigNumber(1)\n    let y1 = new BigNumber(0)\n    let x2 = new BigNumber(0)\n    let y2 = new BigNumber(1)\n\n    // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n    let a0: BigNumber\n    let b0: BigNumber\n    // First vector\n    let a1: BigNumber\n    let b1: BigNumber\n    // Second vector\n    let a2: BigNumber\n    let b2: BigNumber\n\n    let prevR\n    let i = 0\n    let r\n    let x\n    while (u.cmpn(0) !== 0) {\n      const q = v.div(u)\n      r = v.sub(q.mul(u))\n      x = x2.sub(q.mul(x1))\n      const y = y2.sub(q.mul(y1))\n\n      if (typeof a1 !== 'object' && r.cmp(aprxSqrt) < 0) {\n        a0 = prevR.neg()\n        b0 = x1\n        a1 = r.neg()\n        b1 = x\n      } else if (typeof a1 === 'object' && ++i === 2) {\n        break\n      }\n      prevR = r\n\n      v = u\n      u = r\n      x2 = x1\n      x1 = x\n      y2 = y1\n      y1 = y\n    }\n    a2 = r.neg()\n    b2 = x\n\n    const len1 = a1.sqr().add(b1.sqr())\n    const len2 = a2.sqr().add(b2.sqr())\n    if (len2.cmp(len1) >= 0) {\n      a2 = a0\n      b2 = b0\n    }\n\n    // Normalize signs\n    if (a1.negative !== 0) {\n      a1 = a1.neg()\n      b1 = b1.neg()\n    }\n    if (a2.negative !== 0) {\n      a2 = a2.neg()\n      b2 = b2.neg()\n    }\n\n    return [\n      { a: a1, b: b1 },\n      { a: a2, b: b2 }\n    ]\n  }\n\n  _endoSplit (k: BigNumber): { k1: BigNumber, k2: BigNumber } {\n    const basis = this.endo.basis\n    const v1 = basis[0]\n    const v2 = basis[1]\n\n    const c1 = v2.b.mul(k).divRound(this.n)\n    const c2 = v1.b.neg().mul(k).divRound(this.n)\n\n    const p1 = c1.mul(v1.a)\n    const p2 = c2.mul(v2.a)\n    const q1 = c1.mul(v1.b)\n    const q2 = c2.mul(v2.b)\n\n    // Calculate answer\n    const k1 = k.sub(p1).sub(p2)\n    const k2 = q1.add(q2).neg()\n    return { k1, k2 }\n  }\n\n  validate (point: Point): boolean {\n    if (point.inf) { return true }\n\n    const x = point.x\n    const y = point.y\n\n    const ax = this.a.redMul(x)\n    const rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b)\n    return y.redSqr().redISub(rhs).cmpn(0) === 0\n  };\n}\n","import BigNumber from './BigNumber.js'\nimport PublicKey from './PublicKey.js'\nimport { verify } from './ECDSA.js'\nimport { sha256 } from './Hash.js'\nimport { toArray, toHex, toBase64 } from './utils.js'\nimport Point from './Point.js'\nimport Curve from './Curve.js'\n\n/**\n * Represents a digital signature.\n *\n * A digital signature is a mathematical scheme for verifying the authenticity of\n * digital messages or documents. In many scenarios, it is equivalent to a handwritten signature or stamped seal.\n * The signature pair (R, S) corresponds to the raw ECDSA ([Elliptic Curve Digital Signature Algorithm](https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm)) signature.\n * Signatures are often serialized into a format known as '[DER encoding](https://en.wikipedia.org/wiki/X.690#DER_encoding)' for transmission.\n *\n * @class Signature\n */\nexport default class Signature {\n  /**\n   * @property Represents the \"r\" component of the digital signature\n   */\n  r: BigNumber\n\n  /**\n   * @property Represents the \"s\" component of the digital signature\n   */\n  s: BigNumber\n\n  /**\n   * Takes an array of numbers or a string and returns a new Signature instance.\n   * This method will throw an error if the DER encoding is invalid.\n   * If a string is provided, it is assumed to represent a hexadecimal sequence.\n   *\n   * @static\n   * @method fromDER\n   * @param data - The sequence to decode from DER encoding.\n   * @param enc - The encoding of the data string.\n   * @returns The decoded data in the form of Signature instance.\n   *\n   * @example\n   * const signature = Signature.fromDER('30440220018c1f5502f8...', 'hex');\n   */\n  static fromDER (data: number[] | string, enc?: 'hex' | 'base64'): Signature {\n    const getLength = (buf, p): number => {\n      const initial = buf[p.place++]\n      if ((initial & 0x80) === 0) {\n        return initial\n      } else {\n        throw new Error('Invalid DER entity length')\n      }\n    }\n\n    class Position {\n      place: number\n      constructor () {\n        this.place = 0\n      }\n    }\n    data = toArray(data, enc)\n\n    const p = new Position()\n    if (data[p.place++] !== 0x30) {\n      throw new Error('Signature DER must start with 0x30')\n    }\n    const len = getLength(data, p)\n    if ((len + p.place) !== data.length) {\n      throw new Error('Signature DER invalid')\n    }\n    if (data[p.place++] !== 0x02) {\n      throw new Error('Signature DER invalid')\n    }\n    const rlen = getLength(data, p)\n    let r = data.slice(p.place, rlen + p.place)\n    p.place += rlen\n    if (data[p.place++] !== 0x02) {\n      throw new Error('Signature DER invalid')\n    }\n    const slen = getLength(data, p)\n    if (data.length !== slen + p.place) {\n      throw new Error('Invalid R-length in signature DER')\n    }\n    let s = data.slice(p.place, slen + p.place)\n    if (r[0] === 0) {\n      if ((r[1] & 0x80) !== 0) {\n        r = r.slice(1)\n      } else {\n        throw new Error('Invalid R-value in signature DER')\n      }\n    }\n    if (s[0] === 0) {\n      if ((s[1] & 0x80) !== 0) {\n        s = s.slice(1)\n      } else {\n        throw new Error('Invalid S-value in signature DER')\n      }\n    }\n\n    return new Signature(\n      new BigNumber(r),\n      new BigNumber(s)\n    )\n  }\n\n  /**\n   * Takes an array of numbers or a string and returns a new Signature instance.\n   * This method will throw an error if the Compact encoding is invalid.\n   * If a string is provided, it is assumed to represent a hexadecimal sequence.\n   * compactByte value 27-30 means uncompressed public key.\n   * 31-34 means compressed public key.\n   * The range represents the recovery param which can be 0,1,2,3.\n   * We could support recovery functions in future if there's demand.\n   *\n   * @static\n   * @method fromCompact\n   * @param data - The sequence to decode from Compact encoding.\n   * @param enc - The encoding of the data string.\n   * @returns The decoded data in the form of Signature instance.\n   *\n   * @example\n   * const signature = Signature.fromCompact('1b18c1f5502f8...', 'hex');\n   */\n  static fromCompact (data: number[] | string, enc?: 'hex' | 'base64'): Signature {\n    data = toArray(data, enc)\n    if (data.length !== 65) {\n      throw new Error('Invalid Compact Signature')\n    }\n    const compactByte = data[0]\n    if (compactByte < 27 || compactByte >= 35) {\n      throw new Error('Invalid Compact Byte')\n    }\n    return new Signature(\n      new BigNumber(data.slice(1, 33)),\n      new BigNumber(data.slice(33, 65))\n    )\n  }\n\n  /**\n   * Creates an instance of the Signature class.\n   *\n   * @constructor\n   * @param r - The R component of the signature.\n   * @param s - The S component of the signature.\n   *\n   * @example\n   * const r = new BigNumber('208755674028...');\n   * const s = new BigNumber('564745627577...');\n   * const signature = new Signature(r, s);\n   */\n  constructor (r: BigNumber, s: BigNumber) {\n    this.r = r\n    this.s = s\n  }\n\n  /**\n   * Verifies a digital signature.\n   *\n   * This method will return true if the signature, key, and message hash match.\n   * If the data or key do not match the signature, the function returns false.\n   *\n   * @method verify\n   * @param msg - The message to verify.\n   * @param key - The public key used to sign the original message.\n   * @param enc - The encoding of the msg string.\n   * @returns A boolean representing whether the signature is valid.\n   *\n   * @example\n   * const msg = 'The quick brown fox jumps over the lazy dog';\n   * const publicKey = PublicKey.fromString('04188ca1050...');\n   * const isVerified = signature.verify(msg, publicKey);\n   */\n  verify (msg: number[] | string, key: PublicKey, enc?: 'hex'): boolean {\n    const msgHash = new BigNumber(sha256(msg, enc), 16)\n    return verify(msgHash, this, key)\n  }\n\n  /**\n   * Converts an instance of Signature into DER encoding.\n   * An alias for the toDER method.\n   *\n   * If the encoding parameter is set to 'hex', the function will return a hex string.\n   * If 'base64', it will return a base64 string.\n   * Otherwise, it will return an array of numbers.\n   *\n   * @method toDER\n   * @param enc - The encoding to use for the output.\n   * @returns The current instance in DER encoding.\n   *\n   * @example\n   * const der = signature.toString('base64');\n   */\n  toString (enc?: 'hex' | 'base64') {\n    return this.toDER(enc)\n  }\n\n  /**\n   * Converts an instance of Signature into DER encoding.\n   *\n   * If the encoding parameter is set to 'hex', the function will return a hex string.\n   * If 'base64', it will return a base64 string.\n   * Otherwise, it will return an array of numbers.\n   *\n   * @method toDER\n   * @param enc - The encoding to use for the output.\n   * @returns The current instance in DER encoding.\n   *\n   * @example\n   * const der = signature.toDER('hex');\n   */\n  toDER (enc?: 'hex' | 'base64'): number[] | string {\n    const constructLength = (arr, len): void => {\n      if (len < 0x80) {\n        arr.push(len)\n      } else {\n        throw new Error('len must be < 0x80')\n      }\n    }\n\n    const rmPadding = (buf: number[]): number[] => {\n      let i = 0\n      const len = buf.length - 1\n      while ((buf[i] === 0) && ((buf[i + 1] & 0x80) === 0) && i < len) {\n        i++\n      }\n      if (i === 0) {\n        return buf\n      }\n      return buf.slice(i)\n    }\n\n    let r = this.r.toArray()\n    let s = this.s.toArray()\n\n    // Pad values\n    if ((r[0] & 0x80) !== 0) { r = [0].concat(r) }\n    // Pad values\n    if ((s[0] & 0x80) !== 0) { s = [0].concat(s) }\n\n    r = rmPadding(r)\n    s = rmPadding(s)\n\n    while ((s[0] === 0) && (s[1] & 0x80) === 0) {\n      s = s.slice(1)\n    }\n    let arr = [0x02]\n    constructLength(arr, r.length)\n    arr = arr.concat(r)\n    arr.push(0x02)\n    constructLength(arr, s.length)\n    const backHalf = arr.concat(s)\n    let res = [0x30]\n    constructLength(res, backHalf.length)\n    res = res.concat(backHalf)\n    if (enc === 'hex') {\n      return toHex(res)\n    } else if (enc === 'base64') {\n      return toBase64(res)\n    } else {\n      return res\n    }\n  }\n\n  /**\n   * Converts an instance of Signature into Compact encoding.\n   *\n   * If the encoding parameter is set to 'hex', the function will return a hex string.\n   * If 'base64', it will return a base64 string.\n   * Otherwise, it will return an array of numbers.\n   *\n   * @method toCompact\n   * @param enc - The encoding to use for the output.\n   * @returns The current instance in DER encoding.\n   *\n   * @example\n   * const compact = signature.toCompact(3, true, 'base64');\n   */\n  toCompact (recovery: number, compressed: boolean, enc?: 'hex' | 'base64'): number[] | string {\n    if (recovery < 0 || recovery > 3) throw new Error('Invalid recovery param')\n    if (typeof compressed !== 'boolean') throw new Error('Invalid compressed param')\n    let compactByte = 27 + recovery\n    if (compressed) {\n      compactByte += 4\n    }\n    let arr = [compactByte]\n    arr = arr.concat(this.r.toArray('be', 32))\n    arr = arr.concat(this.s.toArray('be', 32))\n    if (enc === 'hex') {\n      return toHex(arr)\n    } else if (enc === 'base64') {\n      return toBase64(arr)\n    } else {\n      return arr\n    }\n  }\n\n  /**\n   * Recovers the public key from a signature.\n   * This method will return the public key if it finds a valid public key.\n   * If it does not find a valid public key, it will throw an error.\n   * The recovery factor is a number between 0 and 3.\n   * @method RecoverPublicKey\n   * @param recovery - The recovery factor.\n   * @param e - The message hash.\n   * @returns The public key associated with the signature.\n   *\n   * @example\n   * const publicKey = signature.RecoverPublicKey(0, msgHash);\n   */\n  RecoverPublicKey (recovery: number, e: BigNumber): PublicKey {\n    const r = this.r\n    const s = this.s\n\n    // A set LSB signifies that the y-coordinate is odd\n    const isYOdd = !!(recovery & 1)\n\n    // The more significant bit specifies whether we should use the\n    // first or second candidate key.\n    const isSecondKey = recovery >> 1\n\n    const curve = new Curve()\n    const n = curve.n\n    const G = curve.g\n\n    // 1.1 LEt x = r + jn\n    const x = isSecondKey ? r.add(n) : r\n    const R = Point.fromX(x, isYOdd)\n\n    // 1.4 Check that nR is at infinity\n    const nR = R.mul(n)\n    if (!nR.isInfinity()) {\n      throw new Error('nR is not at infinity')\n    }\n\n    // Compute -e from e\n    const eNeg = e.neg().umod(n)\n\n    // 1.6.1 Compute Q = r^-1 (sR - eG)\n    // Q = r^-1 (sR + -eG)\n    const rInv = r.invm(n)\n\n    // const Q = R.multiplyTwo(s, G, eNeg).mul(rInv)\n    const srInv = rInv.mul(s).umod(n)\n    const eInvrInv = rInv.mul(eNeg).umod(n)\n    const Q = G.mul(eInvrInv).add(R.mul(srInv))\n\n    const pubKey = new PublicKey(Q)\n    pubKey.validate()\n\n    return pubKey\n  }\n\n  /**\n   * Calculates the recovery factor which will work for a particular public key and message hash.\n   * This method will return the recovery factor if it finds a valid recovery factor.\n   * If it does not find a valid recovery factor, it will throw an error.\n   * The recovery factor is a number between 0 and 3.\n   *\n   * @method CalculateRecoveryFactor\n   * @param msgHash - The message hash.\n   * @returns the recovery factor: number\n   * /\n   * @example\n   * const recovery = signature.CalculateRecoveryFactor(publicKey, msgHash);\n   */\n  CalculateRecoveryFactor (pubkey: PublicKey, msgHash: BigNumber): number {\n    for (let recovery = 0; recovery < 4; recovery++) {\n      let Qprime\n      try {\n        Qprime = this.RecoverPublicKey(recovery, msgHash)\n      } catch (e) {\n        continue\n      }\n      if (pubkey.eq(Qprime)) {\n        return recovery\n      }\n    }\n    throw new Error('Unable to find valid recovery factor')\n  }\n}\n","import { SHA256HMAC } from './Hash.js'\nimport { toHex, toArray } from './utils.js'\n\n/**\n * This class behaves as a HMAC-based deterministic random bit generator (DRBG). It implements a deterministic random number generator using SHA256HMAC HASH function. It takes an initial entropy and nonce when instantiated for seeding purpose.\n * @class DRBG\n *\n * @constructor\n * @param entropy - Initial entropy either in number array or hexadecimal string.\n * @param nonce - Initial nonce either in number array or hexadecimal string.\n *\n * @throws Throws an error message 'Not enough entropy. Minimum is 256 bits' when entropy's length is less than 32.\n *\n * @example\n * const drbg = new DRBG('af12de...', '123ef...');\n */\nexport default class DRBG {\n  K: number[]\n  V: number[]\n\n  constructor (entropy: number[] | string, nonce: number[] | string) {\n    entropy = toArray(entropy, 'hex')\n    nonce = toArray(nonce, 'hex')\n\n    if (entropy.length < 32) {\n      throw new Error('Not enough entropy. Minimum is 256 bits')\n    }\n    const seed = entropy.concat(nonce)\n\n    this.K = new Array(32)\n    this.V = new Array(32)\n    for (let i = 0; i < 32; i++) {\n      this.K[i] = 0x00\n      this.V[i] = 0x01\n    }\n    this.update(seed)\n  }\n\n  /**\n   * Generates HMAC using the K value of the instance. This method is used internally for operations.\n   *\n   * @method hmac\n   * @returns The SHA256HMAC object created with K value.\n   *\n   * @example\n   * const hmac = drbg.hmac();\n   */\n  hmac (): SHA256HMAC {\n    return new SHA256HMAC(this.K)\n  }\n\n  /**\n   * Updates the `K` and `V` values of the instance based on the seed.\n   * The seed if not provided uses `V` as seed.\n   *\n   * @method update\n   * @param seed - an optional value that used to update `K` and `V`. Default is `undefined`.\n   * @returns Nothing, but updates the internal state `K` and `V` value.\n   *\n   * @example\n   * drbg.update('e13af...');\n   */\n  update (seed?): void {\n    let kmac = this.hmac()\n      .update(this.V)\n      .update([0x00])\n    if (seed !== undefined) { kmac = kmac.update(seed) }\n    this.K = kmac.digest()\n    this.V = this.hmac().update(this.V).digest()\n    if (seed === undefined) { return }\n\n    this.K = this.hmac()\n      .update(this.V)\n      .update([0x01])\n      .update(seed)\n      .digest()\n    this.V = this.hmac().update(this.V).digest()\n  }\n\n  /**\n   * Generates deterministic random hexadecimal string of given length.\n   * In every generation process, it also updates the internal state `K` and `V`.\n   *\n   * @method generate\n   * @param len - The length of required random number.\n   * @returns The required deterministic random hexadecimal string.\n   *\n   * @example\n   * const randomHex = drbg.generate(256);\n   */\n  generate (len: number): string {\n    let temp = []\n    while (temp.length < len) {\n      this.V = this.hmac().update(this.V).digest()\n      temp = temp.concat(this.V)\n    }\n\n    const res = temp.slice(0, len)\n    this.update()\n    return toHex(res)\n  }\n}\n","import BigNumber from './BigNumber.js'\nimport Signature from './Signature.js'\nimport Curve from './Curve.js'\nimport Point from './Point.js'\nimport DRBG from './DRBG.js'\n\n/**\n * Truncates a BigNumber message to the length of the curve order n, in the context of the Elliptic Curve Digital Signature Algorithm (ECDSA).\n * This method is used as part of ECDSA signing and verification.\n *\n * The method calculates `delta`, which is a difference obtained by subtracting the bit length of the curve order `n` from the byte length of the message in bits.\n * If `delta` is greater than zero, logical shifts msg to the right by `delta`, retaining the sign.\n *\n * Another condition is tested, but only if `truncOnly` is false. This condition compares the value of msg to curve order `n`.\n * If msg is greater or equal to `n`, it is decreased by `n` and returned.\n *\n * @method truncateToN\n * @param msg - The BigNumber message to be truncated.\n * @param truncOnly - An optional boolean parameter that if set to true, the method will only perform truncation of the BigNumber without doing the additional subtraction from the curve order.\n * @returns Returns the truncated BigNumber value, potentially subtracted by the curve order n.\n *\n * @example\n * let msg = new BigNumber('1234567890abcdef', 16);\n * let truncatedMsg = truncateToN(msg);\n */\nfunction truncateToN (msg: BigNumber, truncOnly?: boolean, curve = new Curve()): BigNumber {\n  const delta = msg.byteLength() * 8 - curve.n.bitLength()\n  if (delta > 0) { msg.iushrn(delta) }\n  if (!truncOnly && msg.cmp(curve.n) >= 0) {\n    return msg.sub(curve.n)\n  } else {\n    return msg\n  }\n}\n\n/**\n * Generates a digital signature for a given message.\n *\n * @function sign\n * @param msg - The BigNumber message for which the signature has to be computed.\n * @param key - Private key in BigNumber.\n * @param forceLowS - Optional boolean flag if True forces \"s\" to be the lower of two possible values.\n * @param customK - Optional specification for k value, which can be a function or BigNumber.\n * @returns Returns the elliptic curve digital signature of the message.\n *\n * @example\n * const msg = new BigNumber('2664878')\n * const key = new BigNumber('123456')\n * const signature = sign(msg, key)\n */\nexport const sign = (msg: BigNumber, key: BigNumber, forceLowS: boolean = false, customK?: BigNumber | Function): Signature => {\n  if (typeof BigInt === 'function') {\n    // Curve parameters for secp256k1\n    const zero = BigInt(0)\n    const one = BigInt(1)\n    const two = BigInt(2)\n    const n = BigInt(\n      '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'\n    ) // Order of the curve\n    const p = BigInt(\n      '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'\n    ) // Field prime\n    const Gx = BigInt(\n      '0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798'\n    )\n    const Gy = BigInt(\n      '0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8'\n    )\n    const G = { x: Gx, y: Gy }\n\n    // Convert msg and key to BigInt\n    const z = BigInt('0x' + msg.toString(16))\n    const d = BigInt('0x' + key.toString(16))\n\n    // Validate private key\n    if (d <= zero || d >= n) {\n      throw new Error('Invalid private key')\n    }\n\n    // Helper function to convert BigInt to byte array\n    function bigIntToBytes (value: bigint, length: number): Uint8Array {\n      const hex = value.toString(16).padStart(length * 2, '0')\n      const bytes = new Uint8Array(length)\n      for (let i = 0; i < length; i++) {\n        bytes[i] = parseInt(hex.substr(i * 2, 2), 16)\n      }\n      return bytes\n    }\n\n    // Zero-extend key to provide enough entropy\n    const bytes = 32 // Assuming 256-bit curve\n    const bkey = bigIntToBytes(d, bytes) // 'd' is the private key BigInt\n\n    // Zero-extend nonce to have the same byte size as N\n    const nonce = bigIntToBytes(z, bytes) // 'z' is the message hash BigInt\n\n    // Instantiate Hmac_DRBG\n    const drbg = new DRBG(Array.from(bkey), Array.from(nonce))\n\n    // Number of bytes to generate\n    const ns1 = n - one\n\n    let iter = 0\n\n    // Truncate to N function for BigInt\n    function truncateToN (k: bigint, n: bigint, truncOnly: boolean = true): bigint {\n      const kBitLength = k.toString(2).length\n      const nBitLength = n.toString(2).length\n      const delta = kBitLength - nBitLength\n      if (delta > 0) {\n        k = k >> BigInt(delta)\n      }\n      if (!truncOnly && k >= n) {\n        return k - n\n      } else {\n        return k\n      }\n    }\n\n    function generateK (): bigint {\n      if (typeof customK === 'function') {\n        // Call customK function to get k as BigNumber\n        const k_bn = customK(iter)\n        // Convert k_bn (BigNumber) to BigInt\n        const k_str = k_bn.toString(16)\n        return BigInt('0x' + k_str)\n      } else if (BigNumber.isBN(customK)) {\n        // Use customK provided, convert to BigInt\n        const k_str = customK.toString(16)\n        return BigInt('0x' + k_str)\n      } else {\n        // Use DRBG to generate k\n        const k_hex = drbg.generate(bytes) // Generate hex string\n        return BigInt('0x' + k_hex)\n      }\n    }\n\n    // Modular arithmetic functions\n    function mod (a: bigint, m: bigint): bigint {\n      return ((a % m) + m) % m\n    }\n\n    function modInv (a: bigint, m: bigint): bigint {\n      let lm = one\n      let hm = zero\n      let low = mod(a, m)\n      let high = m\n      while (low > one) {\n        const r = high / low\n        const nm = hm - lm * r\n        const neww = high - low * r\n        hm = lm\n        lm = nm\n        high = low\n        low = neww\n      }\n      return mod(lm, m)\n    }\n\n    function pointAdd (\n      P: { x: bigint, y: bigint } | null,\n      Q: { x: bigint, y: bigint } | null\n    ): { x: bigint, y: bigint } | null {\n      if (P === null) return Q\n      if (Q === null) return P\n\n      if (P.x === Q.x && P.y === mod(-Q.y, p)) {\n        return null // Point at infinity\n      }\n\n      let m: bigint\n      if (P.x === Q.x && P.y === Q.y) {\n        // Point doubling\n        if (P.y === zero) {\n          return null // Point at infinity\n        }\n        const numerator = mod(BigInt(3) * P.x * P.x, p) // 3 * x^2\n        const denominator = modInv(two * P.y, p)\n        m = mod(numerator * denominator, p)\n      } else {\n        const numerator = mod(Q.y - P.y, p)\n        const denominator = modInv(Q.x - P.x, p)\n        m = mod(numerator * denominator, p)\n      }\n\n      const xR = mod(m * m - P.x - Q.x, p)\n      const yR = mod(m * (P.x - xR) - P.y, p)\n\n      return { x: xR, y: yR }\n    }\n\n    function scalarMul (\n      k: bigint,\n      P: { x: bigint, y: bigint }\n    ): { x: bigint, y: bigint } | null {\n      let N = P\n      let Q = null // Point at infinity\n\n      while (k > zero) {\n        if (k % two === one) {\n          Q = pointAdd(Q, N)\n        }\n        N = pointAdd(N, N)\n        k >>= one\n      }\n      return Q\n    }\n\n    while (true) {\n      let k = generateK()\n      iter += 1\n\n      // Truncate k to n bits\n      k = truncateToN(k, n, true)\n\n      if (k <= one || k >= ns1) {\n        if (customK instanceof BigNumber) {\n          throw new Error(\n            'Invalid fixed custom K value (must be more than 1 and less than N-1)'\n          )\n        } else {\n          continue\n        }\n      }\n\n      const R = scalarMul(k, G)\n      if (R === null) {\n        if (customK instanceof BigNumber) {\n          throw new Error(\n            'Invalid fixed custom K value (must not create a point at infinity when multiplied by the generator point)'\n          )\n        } else {\n          continue\n        }\n      }\n\n      const r = mod(R.x, n)\n      if (r === zero) {\n        if (customK instanceof BigNumber) {\n          throw new Error(\n            'Invalid fixed custom K value (when multiplied by G, the resulting x coordinate mod N must not be zero)'\n          )\n        } else {\n          continue\n        }\n      }\n\n      const kInv = modInv(k, n)\n      const rd = mod(r * d, n)\n      let s = mod(kInv * (z + rd), n)\n      if (s === zero) {\n        if (customK instanceof BigNumber) {\n          throw new Error(\n            'Invalid fixed custom K value (when used with the key, it cannot create a zero value for S)'\n          )\n        } else {\n          continue\n        }\n      }\n\n      // Use complement of `s` if it is > n / 2\n      if (forceLowS && s > n / two) {\n        s = n - s\n      }\n\n      // Return signature as BigNumbers\n      const r_bn = new BigNumber(r.toString(16), 16)\n      const s_bn = new BigNumber(s.toString(16), 16)\n      return new Signature(r_bn, s_bn)\n    }\n  } else {\n    const curve = new Curve()\n    msg = truncateToN(msg)\n\n    // Zero-extend key to provide enough entropy\n    const bytes = curve.n.byteLength()\n    const bkey = key.toArray('be', bytes)\n\n    // Zero-extend nonce to have the same byte size as N\n    const nonce = msg.toArray('be', bytes)\n\n    // Instantiate Hmac_DRBG\n    const drbg = new DRBG(bkey, nonce)\n\n    // Number of bytes to generate\n    const ns1 = curve.n.subn(1)\n\n    for (let iter = 0; ; iter++) {\n      // Compute the k-value\n      let k = typeof customK === 'function'\n        ? customK(iter)\n        : BigNumber.isBN(customK)\n          ? customK\n          : new BigNumber(drbg.generate(bytes), 16)\n      k = truncateToN(k, true)\n      if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) {\n        if (BigNumber.isBN(customK)) {\n          throw new Error('Invalid fixed custom K value (must be more than 1 and less than N-1)')\n        } else {\n          continue\n        }\n      }\n\n      const kp = curve.g.mul(k)\n      if (kp.isInfinity()) {\n        if (BigNumber.isBN(customK)) {\n          throw new Error('Invalid fixed custom K value (must not create a point at infinity when multiplied by the generator point)')\n        } else {\n          continue\n        }\n      }\n\n      const kpX = kp.getX()\n      const r = kpX.umod(curve.n)\n      if (r.cmpn(0) === 0) {\n        if (BigNumber.isBN(customK)) {\n          throw new Error('Invalid fixed custom K value (when multiplied by G, the resulting x coordinate mod N must not be zero)')\n        } else {\n          continue\n        }\n      }\n\n      let s = k.invm(curve.n).mul(r.mul(key).iadd(msg))\n      s = s.umod(curve.n)\n      if (s.cmpn(0) === 0) {\n        if (BigNumber.isBN(customK)) {\n          throw new Error('Invalid fixed custom K value (when used with the key, it cannot create a zero value for S)')\n        } else {\n          continue\n        }\n      }\n\n      // Use complement of `s`, if it is > `n / 2`\n      if (forceLowS && s.cmp(curve.n.ushrn(1)) > 0) {\n        s = curve.n.sub(s)\n      }\n      return new Signature(r, s)\n    }\n  }\n}\n\n/**\n * Verifies a digital signature of a given message.\n *\n * Message and key used during the signature generation process, and the previously computed signature\n * are used to validate the authenticity of the digital signature.\n *\n * @function verify\n * @param msg - The BigNumber message for which the signature has to be verified.\n * @param sig - Signature object consisting of parameters 'r' and 's'.\n * @param key - Public key in Point.\n * @returns Returns true if the signature is valid and false otherwise.\n *\n * @example\n * const msg = new BigNumber('2664878', 16)\n * const key = new Point(new BigNumber(10), new BigNumber(20)\n * const signature = sign(msg, new BigNumber('123456'))\n * const isVerified = verify(msg, sig, key)\n */\nexport const verify = (msg: BigNumber, sig: Signature, key: Point): boolean => {\n  // Use BigInt for verification opportunistically\n  if (typeof BigInt === 'function') {\n    // Curve parameters for secp256k1\n    const zero = BigInt(0)\n    const one = BigInt(1)\n    const two = BigInt(2)\n    const three = BigInt(3)\n    const p = BigInt(\n      '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F'\n    ) // Field prime\n    const n = BigInt(\n      '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141'\n    ) // Order of the curve\n    const G = {\n      x: BigInt(\n        '0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798'\n      ),\n      y: BigInt(\n        '0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8'\n      )\n    }\n\n    // Modular arithmetic functions\n    const mod = (a: bigint, m: bigint): bigint => ((a % m) + m) % m\n    const modInv = (a: bigint, m: bigint): bigint => {\n      // Extended Euclidean Algorithm for modular inverse\n      let [old_r, r] = [a, m]\n      let [old_s, s] = [BigInt(1), BigInt(0)]\n      while (r !== zero) {\n        const q = old_r / r;\n        [old_r, r] = [r, old_r - q * r];\n        [old_s, s] = [s, old_s - q * s]\n      }\n      if (old_r > one) return zero // No inverse\n      return mod(old_s, m)\n    }\n    const modMul = (a: bigint, b: bigint, m: bigint): bigint =>\n      mod(a * b, m)\n    const modSub = (a: bigint, b: bigint, m: bigint): bigint =>\n      mod(a - b, m)\n    const modAdd = (a: bigint, b: bigint, m: bigint): bigint =>\n      mod(a + b, m)\n\n    // Define constants\n    const four = BigInt(4)\n    const eight = BigInt(8)\n\n    // Elliptic curve point operations in Jacobian coordinates\n    interface JacobianPoint {\n      X: bigint\n      Y: bigint\n      Z: bigint\n    }\n\n    // Point Doubling\n    const pointDouble = (P: JacobianPoint): JacobianPoint => {\n      const { X: X1, Y: Y1, Z: Z1 } = P\n\n      if (Y1 === zero) {\n        return { X: zero, Y: one, Z: zero } // Point at infinity\n      }\n\n      const Y1_sq = modMul(Y1, Y1, p) // Y1^2\n      const S = modMul(four, modMul(X1, Y1_sq, p), p) // S = 4 * X1 * Y1^2\n      const M = modMul(three, modMul(X1, X1, p), p) // M = 3 * X1^2\n      const X3 = modSub(modMul(M, M, p), modMul(two, S, p), p) // X3 = M^2 - 2 * S\n      const Y3 = modSub(\n        modMul(M, modSub(S, X3, p), p),\n        modMul(eight, modMul(Y1_sq, Y1_sq, p), p),\n        p\n      ) // Y3 = M * (S - X3) - 8 * Y1^4\n      const Z3 = modMul(two, modMul(Y1, Z1, p), p) // Z3 = 2 * Y1 * Z1\n\n      return { X: X3, Y: Y3, Z: Z3 }\n    }\n\n    // Point Addition\n    const pointAdd = (P: JacobianPoint, Q: JacobianPoint): JacobianPoint => {\n      if (P.Z === zero) return Q\n      if (Q.Z === zero) return P\n\n      const Z1Z1 = modMul(P.Z, P.Z, p)\n      const Z2Z2 = modMul(Q.Z, Q.Z, p)\n      const U1 = modMul(P.X, Z2Z2, p)\n      const U2 = modMul(Q.X, Z1Z1, p)\n      const S1 = modMul(P.Y, modMul(Z2Z2, Q.Z, p), p)\n      const S2 = modMul(Q.Y, modMul(Z1Z1, P.Z, p), p)\n\n      const H = modSub(U2, U1, p)\n      const r = modSub(S2, S1, p)\n\n      if (H === zero) {\n        if (r === zero) {\n          // P == Q\n          return pointDouble(P)\n        } else {\n          // Point at infinity\n          return { X: zero, Y: one, Z: zero }\n        }\n      }\n\n      const HH = modMul(H, H, p)\n      const HHH = modMul(H, HH, p)\n      const V = modMul(U1, HH, p)\n\n      const X3 = modSub(modSub(modMul(r, r, p), HHH, p), modMul(two, V, p), p)\n      const Y3 = modSub(\n        modMul(r, modSub(V, X3, p), p),\n        modMul(S1, HHH, p),\n        p\n      )\n      const Z3 = modMul(H, modMul(P.Z, Q.Z, p), p)\n\n      return { X: X3, Y: Y3, Z: Z3 }\n    }\n\n    // Scalar Multiplication\n    const scalarMultiply = (k: bigint, P: { x: bigint, y: bigint }): JacobianPoint => {\n      const N: JacobianPoint = { X: P.x, Y: P.y, Z: one }\n      let Q: JacobianPoint = { X: zero, Y: one, Z: zero } // Point at infinity\n\n      const kBin = k.toString(2)\n      for (let i = 0; i < kBin.length; i++) {\n        Q = pointDouble(Q)\n        if (kBin[i] === '1') {\n          Q = pointAdd(Q, N)\n        }\n      }\n      return Q\n    }\n\n    // Verify Function Using Jacobian Coordinates\n    const verifyECDSA = (\n      hash: bigint,\n      publicKey: { x: bigint, y: bigint },\n      signature: { r: bigint, s: bigint }\n    ): boolean => {\n      const { r, s } = signature\n      const z = hash\n\n      // Check r and s are in [1, n - 1]\n      if (r <= zero || r >= n || s <= zero || s >= n) {\n        return false\n      }\n\n      const w = modInv(s, n) // w = s^-1 mod n\n      if (w === zero) {\n        return false // No inverse exists\n      }\n      const u1 = modMul(z, w, n)\n      const u2 = modMul(r, w, n)\n\n      // Compute point R = u1 * G + u2 * Q\n      const RG = scalarMultiply(u1, G)\n      const RQ = scalarMultiply(u2, publicKey)\n      const R = pointAdd(RG, RQ)\n\n      if (R.Z === zero) {\n        // Point at infinity\n        return false\n      }\n\n      // Compute affine x-coordinate x1 = X / Z^2 mod p\n      const ZInv = modInv(R.Z, p)\n      if (ZInv === zero) {\n        return false // No inverse exists\n      }\n      const ZInv2 = modMul(ZInv, ZInv, p)\n      const x1_affine = modMul(R.X, ZInv2, p)\n\n      // Compute v = x1_affine mod n\n      const v = mod(x1_affine, n)\n\n      // Signature is valid if v == r mod n\n      return v === r\n    }\n\n    // Convert inputs to BigInt\n    const hash = BigInt('0x' + msg.toString(16))\n    const publicKey = {\n      x: BigInt('0x' + key.x.toString(16)),\n      y: BigInt('0x' + key.y.toString(16))\n    }\n    const signature = {\n      r: BigInt('0x' + sig.r.toString(16)),\n      s: BigInt('0x' + sig.s.toString(16))\n    }\n\n    return verifyECDSA(hash, publicKey, signature)\n  } else {\n    const curve = new Curve()\n    msg = truncateToN(msg)\n    // Perform primitive values validation\n    const r = sig.r\n    const s = sig.s\n    if (r.cmpn(1) < 0 || r.cmp(curve.n) >= 0) { return false }\n    if (s.cmpn(1) < 0 || s.cmp(curve.n) >= 0) { return false }\n\n    // Validate signature\n    const sinv = s.invm(curve.n)\n    const u1 = sinv.mul(msg).umod(curve.n)\n    const u2 = sinv.mul(r).umod(curve.n)\n\n    // NOTE: Greg Maxwell's trick, inspired by:\n    // https://git.io/vad3K\n    const p = curve.g.jmulAdd(u1, key, u2)\n    if (p.isInfinity()) { return false }\n\n    // Compare `p.x` of Jacobian point with `r`,\n    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n    // inverse of `p.z^2`\n    return p.eqXToP(r)\n  }\n}\n","import Point from './Point.js'\nimport PrivateKey from './PrivateKey.js'\nimport Curve from './Curve.js'\nimport { verify } from './ECDSA.js'\nimport BigNumber from './BigNumber.js'\nimport { sha256, sha256hmac, hash160 } from './Hash.js'\nimport Signature from './Signature.js'\nimport { toArray, toBase58Check, toHex } from './utils.js'\n\n/**\n * The PublicKey class extends the Point class. It is used in public-key cryptography to derive shared secret, verify message signatures, and encode the public key in the DER format.\n * The class comes with static methods to generate PublicKey instances from private keys or from strings.\n *\n * @extends {Point}\n * @see {@link Point} for more information on Point.\n */\nexport default class PublicKey extends Point {\n  /**\n   * Static factory method to derive a public key from a private key.\n   * It multiplies the generator point 'g' on the elliptic curve by the private key.\n   *\n   * @static\n   * @method fromPrivateKey\n   *\n   * @param key - The private key from which to derive the public key.\n   *\n   * @returns Returns the PublicKey derived from the given PrivateKey.\n   *\n   * @example\n   * const myPrivKey = new PrivateKey(...)\n   * const myPubKey = PublicKey.fromPrivateKey(myPrivKey)\n   */\n  static fromPrivateKey (key: PrivateKey): PublicKey {\n    const c = new Curve()\n    const p = c.g.mul(key)\n    return new PublicKey(p.x, p.y)\n  }\n\n  /**\n   * Static factory method to create a PublicKey instance from a string.\n   *\n   * @param str - A string representing a public key.\n   *\n   * @returns Returns the PublicKey created from the string.\n   *\n   * @example\n   * const myPubKey = PublicKey.fromString(\"03....\")\n   */\n  static fromString (str: string): PublicKey {\n    const p = Point.fromString(str)\n    return new PublicKey(p.x, p.y)\n  }\n\n  /**\n   * Static factory method to create a PublicKey instance from a number array.\n   *\n   * @param bytes - A number array representing a public key.\n   *\n   * @returns Returns the PublicKey created from the number array.\n   *\n   * @example\n   * const myPubKey = PublicKey.fromString(\"03....\")\n   */\n  static fromDER (bytes: number[]): PublicKey {\n    const p = Point.fromDER(bytes)\n    return new PublicKey(p.x, p.y)\n  }\n\n  /**\n   * @constructor\n   * @param x - A point or the x-coordinate of the point. May be a number, a BigNumber, a string (which will be interpreted as hex), a number array, or null. If null, an \"Infinity\" point is constructed.\n   * @param y - If x is not a point, the y-coordinate of the point, similar to x.\n   * @param isRed - A boolean indicating if the point is a member of the field of integers modulo the k256 prime. Default is true.\n   *\n   * @example\n   * new PublicKey(point1);\n   * new PublicKey('abc123', 'def456');\n   */\n  constructor (\n    x: Point | BigNumber | number | number[] | string | null,\n    y: BigNumber | number | number[] | string | null = null,\n    isRed: boolean = true\n  ) {\n    if (x instanceof Point) {\n      super(x.getX(), x.getY())\n    } else {\n      super(x, y, isRed)\n    }\n  }\n\n  /**\n   * Derive a shared secret from a public key and a private key for use in symmetric encryption.\n   * This method multiplies the public key (an instance of Point) with a private key.\n   *\n   * @param priv - The private key to use in deriving the shared secret.\n   *\n   * @returns Returns the Point representing the shared secret.\n   *\n   * @throws Will throw an error if the public key is not valid for ECDH secret derivation.\n   *\n   * @example\n   * const myPrivKey = new PrivateKey(...)\n   * const sharedSecret = myPubKey.deriveSharedSecret(myPrivKey)\n   */\n  deriveSharedSecret (priv: PrivateKey): Point {\n    if (!this.validate()) {\n      throw new Error('Public key not valid for ECDH secret derivation')\n    }\n    return this.mul(priv)\n  }\n\n  /**\n   * Verify a signature of a message using this public key.\n   *\n   * @param msg - The message to verify. It can be a string or an array of numbers.\n   * @param sig - The Signature of the message that needs verification.\n   * @param enc - The encoding of the message. It defaults to 'utf8'.\n   *\n   * @returns Returns true if the signature is verified successfully, otherwise false.\n   *\n   * @example\n   * const myMessage = \"Hello, world!\"\n   * const mySignature = new Signature(...)\n   * const isVerified = myPubKey.verify(myMessage, mySignature)\n   */\n  verify (msg: number[] | string, sig: Signature, enc?: 'hex' | 'utf8'): boolean {\n    const msgHash = new BigNumber(sha256(msg, enc), 16)\n    return verify(msgHash, sig, this)\n  }\n\n  /**\n   * Encode the public key to DER (Distinguished Encoding Rules) format.\n   *\n   * @returns Returns the DER-encoded public key in number array or string.\n   *\n   * @param enc - The encoding of the DER string. undefined = number array, 'hex' = hex string.\n   *\n   * @example\n   * const derPublicKey = myPubKey.toDER()\n   */\n  toDER (enc?: 'hex' | undefined): number[] | string {\n    if (enc === 'hex') return this.encode(true, enc) as string\n    return this.encode(true) as number[]\n  }\n\n  /**\n   * Hash sha256 and ripemd160 of the public key.\n   *\n   * @returns Returns the hash of the public key.\n   *\n   * @example\n   * const publicKeyHash = pubkey.toHash()\n   */\n  toHash (enc?: 'hex'): number[] | string {\n    const pkh = hash160(this.encode(true))\n    if (enc === 'hex') {\n      return toHex(pkh)\n    }\n    return pkh\n  }\n\n  /**\n   * Base58Check encodes the hash of the public key with a prefix to indicate locking script type.\n   * Defaults to P2PKH for mainnet, otherwise known as a \"Bitcoin Address\".\n   *\n   * @param prefix defaults to [0x00] for mainnet, set to [0x6f] for testnet or use the strings 'mainnet' or 'testnet'\n   *\n   * @returns Returns the address encoding associated with the hash of the public key.\n   *\n   * @example\n   * const address = pubkey.toAddress()\n   * const address = pubkey.toAddress('mainnet')\n   * const testnetAddress = pubkey.toAddress([0x6f])\n   * const testnetAddress = pubkey.toAddress('testnet')\n   */\n  toAddress (prefix: number[] | string = [0x00]): string {\n    if (typeof prefix === 'string') {\n      if (prefix === 'testnet' || prefix === 'test') {\n        prefix = [0x6f]\n      } else if (prefix === 'mainnet' || prefix === 'main') {\n        prefix = [0x00]\n      } else {\n        throw new Error(`Invalid prefix ${prefix}`)\n      }\n    }\n    return toBase58Check(this.toHash() as number[], prefix)\n  }\n\n  /**\n   * Derives a child key with BRC-42.\n   * @param privateKey The private key of the other party\n   * @param invoiceNumber The invoice number used to derive the child key\n   * @returns The derived child key.\n   */\n  deriveChild (privateKey: PrivateKey, invoiceNumber: string): PublicKey {\n    const sharedSecret = this.deriveSharedSecret(privateKey)\n    const invoiceNumberBin = toArray(invoiceNumber, 'utf8')\n    const hmac = sha256hmac(sharedSecret.encode(true), invoiceNumberBin)\n    const curve = new Curve()\n    const point = curve.g.mul(new BigNumber(hmac))\n    const finalPoint = this.add(point)\n    return new PublicKey(finalPoint.x, finalPoint.y)\n  }\n\n  /**\n   * Takes an array of numbers or a string and returns a new PublicKey instance.\n   * This method will throw an error if the Compact encoding is invalid.\n   * If a string is provided, it is assumed to represent a hexadecimal sequence.\n   * compactByte value 27-30 means uncompressed public key.\n   * 31-34 means compressed public key.\n   * The range represents the recovery param which can be 0,1,2,3.\n   *\n   * @static\n   * @method fromMsgHashAndCompactSignature\n   * @param msgHash - The message hash which was signed.\n   * @param signature - The signature in compact format.\n   * @param enc - The encoding of the signature string.\n   * @returns A PublicKey instance derived from the message hash and compact signature.\n   * @example\n   * const publicKey = Signature.fromMsgHashAndCompactSignature(msgHash, 'IMOl2mVKfDgsSsHT4uIYBNN4e...', 'base64');\n   */\n  static fromMsgHashAndCompactSignature (msgHash: BigNumber, signature: number[] | string, enc?: 'hex' | 'base64'): PublicKey {\n    const data = toArray(signature, enc)\n    if (data.length !== 65) {\n      throw new Error('Invalid Compact Signature')\n    }\n    const compactByte = data[0]\n    if (compactByte < 27 || compactByte >= 35) {\n      throw new Error('Invalid Compact Byte')\n    }\n    let r = data[0] - 27\n    let compressed = false // we don't really use this in the modern era, always use compressed.\n    if (r > 3) {\n      compressed = true\n      r -= 4\n    }\n    const s = new Signature(\n      new BigNumber(data.slice(1, 33)),\n      new BigNumber(data.slice(33, 65))\n    )\n    return s.RecoverPublicKey(r, msgHash)\n  }\n}\n","import PrivateKey from './PrivateKey.js'\nimport BigNumber from './BigNumber.js'\nimport Curve from './Curve.js'\nimport Random from './Random.js'\nimport { fromBase58, toBase58 } from './utils.js'\n\nexport class PointInFiniteField {\n  x: BigNumber\n  y: BigNumber\n\n  constructor (x: BigNumber, y: BigNumber) {\n    const P = new Curve().p // arithmetic is mod P\n    this.x = x.umod(P)\n    this.y = y.umod(P)\n  }\n\n  toString (): string {\n    return toBase58(this.x.toArray()) + '.' + toBase58(this.y.toArray())\n  }\n\n  static fromString (str: string): PointInFiniteField {\n    const [x, y] = str.split('.')\n    return new PointInFiniteField(new BigNumber(fromBase58(x)), new BigNumber(fromBase58(y)))\n  }\n}\n\n/**\n * Polynomial class\n *\n * This class is used to create a polynomial with a given threshold and a private key.\n * The polynomial is used to create shares of the private key.\n *\n * @param key - The private key to split\n * @param threshold - The number of shares required to recombine the private key\n *\n * @example\n * const key = new PrivateKey()\n * const threshold = 2\n * const polynomial = new Polynomial(key, threshold)\n *\n */\nexport default class Polynomial {\n  readonly points: PointInFiniteField[]\n  readonly threshold: number\n\n  constructor (points: PointInFiniteField[], threshold?: number) {\n    this.points = points\n    this.threshold = threshold || points.length\n  }\n\n  static fromPrivateKey (key: PrivateKey, threshold: number): Polynomial {\n    const P = new Curve().p // arithmetic is mod P\n    // The key is the y-intercept of the polynomial where x=0.\n    const points = [new PointInFiniteField(new BigNumber(0), new BigNumber(key.toArray()))]\n\n    // The other values are random\n    for (let i = 1; i < threshold; i++) {\n      const randomX = new BigNumber(Random(32)).umod(P)\n      const randomY = new BigNumber(Random(32)).umod(P)\n      points.push(new PointInFiniteField(randomX, randomY))\n    }\n\n    return new Polynomial(points)\n  }\n\n  // Evaluate the polynomial at x by using Lagrange interpolation\n  valueAt (x: BigNumber): BigNumber {\n    const P = new Curve().p // arithmetic is mod P\n    let y = new BigNumber(0)\n    for (let i = 0; i < this.threshold; i++) {\n      let term = this.points[i].y\n      for (let j = 0; j < this.threshold; j++) {\n        if (i !== j) {\n          const xj = this.points[j].x\n          const xi = this.points[i].x\n\n          const numerator = x.sub(xj).umod(P)\n          const denominator = xi.sub(xj).umod(P)\n          const denominatorInverse = denominator.invm(P)\n\n          const fraction = numerator.mul(denominatorInverse).umod(P)\n          term = term.mul(fraction).umod(P)\n        }\n      }\n      y = y.add(term).umod(P)\n    }\n    return y\n  }\n}\n","import BigNumber from './BigNumber.js'\nimport Signature from './Signature.js'\nimport PublicKey from './PublicKey.js'\nimport Point from './Point.js'\nimport Curve from './Curve.js'\nimport { sign, verify } from './ECDSA.js'\nimport { sha256, sha256hmac } from './Hash.js'\nimport Random from './Random.js'\nimport { fromBase58Check, toArray, toBase58, toBase58Check } from './utils.js'\nimport Polynomial, { PointInFiniteField } from './Polynomial.js'\n\n/**\n * @class KeyShares\n *\n * This class is used to store the shares of a private key.\n *\n * @param shares - An array of shares\n * @param threshold - The number of shares required to recombine the private key\n *\n * @returns KeyShares\n *\n * @example\n * const key = PrivateKey.fromShares(shares)\n *\n */\n\nexport class KeyShares {\n  points: PointInFiniteField[]\n  threshold: number\n  integrity: string\n\n  constructor (points: PointInFiniteField[], threshold: number, integrity: string) {\n    this.points = points\n    this.threshold = threshold\n    this.integrity = integrity\n  }\n\n  static fromBackupFormat (shares: string[]): KeyShares {\n    let threshold = 0\n    let integrity = ''\n    const points = shares.map((share, idx) => {\n      const shareParts = share.split('.')\n      if (shareParts.length !== 4) throw Error('Invalid share format in share ' + idx + '. Expected format: \"x.y.t.i\" - received ' + share)\n      const [x, y, t, i] = shareParts\n      if (!t) throw Error('Threshold not found in share ' + idx)\n      if (!i) throw Error('Integrity not found in share ' + idx)\n      const tInt = parseInt(t)\n      if (idx !== 0 && threshold !== tInt) throw Error('Threshold mismatch in share ' + idx)\n      if (idx !== 0 && integrity !== i) throw Error('Integrity mismatch in share ' + idx)\n      threshold = tInt\n      integrity = i\n      return PointInFiniteField.fromString([x, y].join('.'))\n    })\n    return new KeyShares(points, threshold, integrity)\n  }\n\n  toBackupFormat () {\n    return this.points.map(share => share.toString() + '.' + this.threshold + '.' + this.integrity)\n  }\n}\n\n/**\n * Represents a Private Key, which is a secret that can be used to generate signatures in a cryptographic system.\n *\n * The `PrivateKey` class extends from the `BigNumber` class. It offers methods to create signatures, verify them,\n * create a corresponding public key and derive a shared secret from a public key.\n *\n * @extends {BigNumber}\n * @see {@link BigNumber} for more information on BigNumber.\n */\nexport default class PrivateKey extends BigNumber {\n  /**\n   * Generates a private key randomly.\n   *\n   * @method fromRandom\n   * @static\n   * @returns The newly generated Private Key.\n   *\n   * @example\n   * const privateKey = PrivateKey.fromRandom();\n   */\n  static fromRandom (): PrivateKey {\n    return new PrivateKey(Random(32))\n  }\n\n  /**\n   * Generates a private key from a string.\n   *\n   * @method fromString\n   * @static\n   * @param str - The string to generate the private key from.\n   * @param base - The base of the string.\n   * @returns The generated Private Key.\n   * @throws Will throw an error if the string is not valid.\n   **/\n  static fromString (str: string, base: number | 'hex'): PrivateKey {\n    return new PrivateKey(BigNumber.fromString(str, base).toArray())\n  }\n\n  /**\n   * Generates a private key from a WIF (Wallet Import Format) string.\n   *\n   * @method fromWif\n   * @static\n   * @param wif - The WIF string to generate the private key from.\n   * @param base - The base of the string.\n   * @returns The generated Private Key.\n   * @throws Will throw an error if the string is not a valid WIF.\n   **/\n  static fromWif (wif: string, prefixLength: number = 1): PrivateKey {\n    const decoded = fromBase58Check(wif, null, prefixLength)\n    if (decoded.data.length !== 33) {\n      throw new Error('Invalid WIF length')\n    }\n    if (decoded.data[32] !== 1) {\n      throw new Error('Invalid WIF padding')\n    }\n    return new PrivateKey(decoded.data.slice(0, 32))\n  }\n\n  /**\n   * @constructor\n   *\n   * @param number - The number (various types accepted) to construct a BigNumber from. Default is 0.\n   *\n   * @param base - The base of number provided. By default is 10. Ignored if number is BigNumber.\n   *\n   * @param endian - The endianness provided. By default is 'big endian'. Ignored if number is BigNumber.\n   *\n   * @param modN - Optional. Default 'apply. If 'apply', apply modN to input to guarantee a valid PrivateKey. If 'error', if input is out of field throw Error('Input is out of field'). If 'nocheck', assumes input is in field.\n   *\n   * @example\n   * import PrivateKey from './PrivateKey';\n   * import BigNumber from './BigNumber';\n   * const privKey = new PrivateKey(new BigNumber('123456', 10, 'be'));\n   */\n  constructor (\n    number: BigNumber | number | string | number[] = 0,\n    base: number | 'be' | 'le' | 'hex' = 10,\n    endian: 'be' | 'le' = 'be',\n    modN: 'apply' | 'nocheck' | 'error' = 'apply'\n  ) {\n    if (number instanceof BigNumber) {\n      super()\n      number.copy(this)\n    } else {\n      super(number, base, endian)\n    }\n\n    if (modN !== 'nocheck') {\n      const check = this.checkInField()\n      if (!check.inField) {\n        if (modN === 'error') {\n          throw new Error('Input is out of field')\n        }\n        // Force the PrivateKey BigNumber value to lie in the field limited by curve.n\n        BigNumber.move(this, check.modN)\n      }\n    }\n  }\n\n  /**\n   * A utility function to check that the value of this PrivateKey lies in the field limited by curve.n\n   * @returns { inField, modN } where modN is this PrivateKey's current BigNumber value mod curve.n, and inField is true only if modN equals current BigNumber value.\n   */\n  checkInField (): { inField: boolean, modN: BigNumber } {\n    const curve = new Curve()\n    const modN = this.mod(curve.n)\n    const inField = this.cmp(modN) === 0\n    return { inField, modN }\n  }\n\n  /**\n   * @returns true if the PrivateKey's current BigNumber value lies in the field limited by curve.n\n   */\n  isValid (): boolean {\n    return this.checkInField().inField\n  }\n\n  /**\n   * Signs a message using the private key.\n   *\n   * @method sign\n   * @param msg - The message (array of numbers or string) to be signed.\n   * @param enc - If 'hex' the string will be treated as hex, utf8 otherwise.\n   * @param forceLowS - If true (the default), the signature will be forced to have a low S value.\n   * @param customK — If provided, uses a custom K-value for the signature. Provie a function that returns a BigNumber, or the BigNumber itself.\n   * @returns A digital signature generated from the hash of the message and the private key.\n   *\n   * @example\n   * const privateKey = PrivateKey.fromRandom();\n   * const signature = privateKey.sign('Hello, World!');\n   */\n  sign (msg: number[] | string, enc?: 'hex' | 'utf8', forceLowS: boolean = true, customK?: Function | BigNumber): Signature {\n    const msgHash = new BigNumber(sha256(msg, enc), 16)\n    return sign(msgHash, this, forceLowS, customK)\n  }\n\n  /**\n   * Verifies a message's signature using the public key associated with this private key.\n   *\n   * @method verify\n   * @param msg - The original message which has been signed.\n   * @param sig - The signature to be verified.\n   * @param enc - The data encoding method.\n   * @returns Whether or not the signature is valid.\n   *\n   * @example\n   * const privateKey = PrivateKey.fromRandom();\n   * const signature = privateKey.sign('Hello, World!');\n   * const isSignatureValid = privateKey.verify('Hello, World!', signature);\n   */\n  verify (msg: number[] | string, sig: Signature, enc?: 'hex'): boolean {\n    const msgHash = new BigNumber(sha256(msg, enc), 16)\n    return verify(msgHash, sig, this.toPublicKey())\n  }\n\n  /**\n   * Converts the private key to its corresponding public key.\n   *\n   * The public key is generated by multiplying the base point G of the curve and the private key.\n   *\n   * @method toPublicKey\n   * @returns The generated PublicKey.\n   *\n   * @example\n   * const privateKey = PrivateKey.fromRandom();\n   * const publicKey = privateKey.toPublicKey();\n   */\n  toPublicKey (): PublicKey {\n    const c = new Curve()\n    const p = c.g.mul(this)\n    return new PublicKey(p.x, p.y)\n  }\n\n  /**\n   * Converts the private key to a Wallet Import Format (WIF) string.\n   *\n   * Base58Check encoding is used for encoding the private key.\n   * The prefix\n   *\n   * @method toWif\n   * @returns The WIF string.\n   *\n   * @param prefix defaults to [0x80] for mainnet, set it to [0xef] for testnet.\n   *\n   * @throws Error('Value is out of field') if current BigNumber value is out of field limited by curve.n\n   *\n   * @example\n   * const privateKey = PrivateKey.fromRandom();\n   * const wif = privateKey.toWif();\n   * const testnetWif = privateKey.toWif([0xef]);\n   */\n  toWif (prefix: number[] = [0x80]): string {\n    if (!this.isValid()) { throw new Error('Value is out of field') }\n    return toBase58Check([...this.toArray('be', 32), 1], prefix)\n  }\n\n  /**\n   * Base58Check encodes the hash of the public key associated with this private key with a prefix to indicate locking script type.\n   * Defaults to P2PKH for mainnet, otherwise known as a \"Bitcoin Address\".\n   *\n   * @param prefix defaults to [0x00] for mainnet, set to [0x6f] for testnet or use the strings 'testnet' or 'mainnet'\n   *\n   * @returns Returns the address encoding associated with the hash of the public key associated with this private key.\n   *\n   * @example\n   * const address = privkey.toAddress()\n   * const address = privkey.toAddress('mainnet')\n   * const testnetAddress = privkey.toAddress([0x6f])\n   * const testnetAddress = privkey.toAddress('testnet')\n   */\n  toAddress (prefix: number[] | string = [0x00]): string {\n    return this.toPublicKey().toAddress(prefix)\n  }\n\n  /**\n   * Derives a shared secret from the public key.\n   *\n   * @method deriveSharedSecret\n   * @param key - The public key to derive the shared secret from.\n   * @returns The derived shared secret (a point on the curve).\n   * @throws Will throw an error if the public key is not valid.\n   *\n   * @example\n   * const privateKey = PrivateKey.fromRandom();\n   * const publicKey = privateKey.toPublicKey();\n   * const sharedSecret = privateKey.deriveSharedSecret(publicKey);\n   */\n  deriveSharedSecret (key: PublicKey): Point {\n    if (!key.validate()) {\n      throw new Error('Public key not valid for ECDH secret derivation')\n    }\n    return key.mul(this)\n  }\n\n  /**\n   * Derives a child key with BRC-42.\n   * @param publicKey The public key of the other party\n   * @param invoiceNumber The invoice number used to derive the child key\n   * @returns The derived child key.\n   */\n  deriveChild (publicKey: PublicKey, invoiceNumber: string): PrivateKey {\n    const sharedSecret = this.deriveSharedSecret(publicKey)\n    const invoiceNumberBin = toArray(invoiceNumber, 'utf8')\n    const hmac = sha256hmac(sharedSecret.encode(true), invoiceNumberBin)\n    const curve = new Curve()\n    return new PrivateKey(this.add(new BigNumber(hmac)).mod(curve.n).toArray())\n  }\n\n  /**\n   * Splits the private key into shares using Shamir's Secret Sharing Scheme.\n   *\n   * @param threshold The minimum number of shares required to reconstruct the private key.\n   * @param totalShares The total number of shares to generate.\n   * @param prime The prime number to be used in Shamir's Secret Sharing Scheme.\n   * @returns An array of shares.\n   *\n   * @example\n   * const key = PrivateKey.fromRandom()\n   * const shares = key.toKeyShares(2, 5)\n   */\n  toKeyShares (threshold: number, totalShares: number): KeyShares {\n    if (typeof threshold !== 'number' || typeof totalShares !== 'number') throw new Error('threshold and totalShares must be numbers')\n    if (threshold < 2) throw new Error('threshold must be at least 2')\n    if (totalShares < 2) throw new Error('totalShares must be at least 2')\n    if (threshold > totalShares) throw new Error('threshold should be less than or equal to totalShares')\n\n    const poly = Polynomial.fromPrivateKey(this, threshold)\n\n    const points = []\n    for (let i = 0; i < totalShares; i++) {\n      const x = new BigNumber(PrivateKey.fromRandom().toArray())\n      const y = poly.valueAt(x)\n      points.push(new PointInFiniteField(x, y))\n    }\n\n    const integrity = (this.toPublicKey().toHash('hex') as string).slice(0, 8)\n\n    return new KeyShares(points, threshold, integrity)\n  }\n\n  /**\n   * @method toBackupShares\n   *\n   * Creates a backup of the private key by splitting it into shares.\n   *\n   *\n   * @param threshold The number of shares which will be required to reconstruct the private key.\n   * @param totalShares The number of shares to generate for distribution.\n   * @returns\n   */\n  toBackupShares (threshold: number, totalShares: number): string[] {\n    return this.toKeyShares(threshold, totalShares).toBackupFormat()\n  }\n\n  /**\n   *\n   * @method fromBackupShares\n   *\n   * Creates a private key from backup shares.\n   *\n   * @param shares\n   * @returns PrivateKey\n   *\n   * @example\n   *\n   * const share1 = '3znuzt7DZp8HzZTfTh5MF9YQKNX3oSxTbSYmSRGrH2ev.2Nm17qoocmoAhBTCs8TEBxNXCskV9N41rB2PckcgYeqV.2.35449bb9'\n   * const share2 = 'Cm5fuUc39X5xgdedao8Pr1kvCSm8Gk7Cfenc7xUKcfLX.2juyK9BxCWn2DiY5JUAgj9NsQ77cc9bWksFyW45haXZm.2.35449bb9'\n   *\n   * const recoveredKey = PrivateKey.fromBackupShares([share1, share2])\n   */\n  static fromBackupShares (shares: string[]): PrivateKey {\n    return PrivateKey.fromKeyShares(KeyShares.fromBackupFormat(shares))\n  }\n\n  /**\n   * Combines shares to reconstruct the private key.\n   *\n   * @param shares An array of points (shares) to be used to reconstruct the private key.\n   * @param threshold The minimum number of shares required to reconstruct the private key.\n   *\n   * @returns The reconstructed private key.\n   *\n   **/\n  static fromKeyShares (keyShares: KeyShares): PrivateKey {\n    const { points, threshold, integrity } = keyShares\n    if (threshold < 2) throw new Error('threshold must be at least 2')\n    if (points.length < threshold) throw new Error(`At least ${threshold} shares are required to reconstruct the private key`)\n    // check to see if two points have the same x value\n    for (let i = 0; i < threshold; i++) {\n      for (let j = i + 1; j < threshold; j++) {\n        if (points[i].x.eq(points[j].x)) {\n          throw new Error('Duplicate share detected, each must be unique.')\n        }\n      }\n    }\n    const poly = new Polynomial(points, threshold)\n    const privateKey = new PrivateKey(poly.valueAt(new BigNumber(0)).toArray())\n    const integrityHash = privateKey.toPublicKey().toHash('hex').slice(0, 8)\n    if (integrityHash !== integrity) {\n      throw new Error('Integrity hash mismatch')\n    }\n\n    return privateKey\n  }\n}\n","const SBox = [[0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76],\n  [0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0],\n  [0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15],\n  [0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75],\n  [0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84],\n  [0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf],\n  [0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8],\n  [0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2],\n  [0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73],\n  [0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb],\n  [0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79],\n  [0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08],\n  [0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a],\n  [0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e],\n  [0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf],\n  [0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]]\nconst Rcon = [[0x00, 0x00, 0x00, 0x00], [0x01, 0x00, 0x00, 0x00], [0x02, 0x00, 0x00, 0x00], [0x04, 0x00, 0x00, 0x00],\n  [0x08, 0x00, 0x00, 0x00], [0x10, 0x00, 0x00, 0x00], [0x20, 0x00, 0x00, 0x00], [0x40, 0x00, 0x00, 0x00],\n  [0x80, 0x00, 0x00, 0x00], [0x1b, 0x00, 0x00, 0x00], [0x36, 0x00, 0x00, 0x00]]\n\nfunction addRoundKey (\n  state: number[][],\n  roundKeyArray: number[][],\n  offset: number\n): void {\n  let i\n  let j: number\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 4; j++) {\n      state[i][j] = state[i][j] ^ roundKeyArray[offset + j][i]\n    }\n  }\n}\n\nfunction subBytes (state: number[][]): void {\n  let i\n  let j\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 4; j++) {\n      state[i][j] = SBox[(state[i][j] & 0xF0) >> 4][(state[i][j] & 0x0F)]\n    }\n  }\n}\n\nfunction subWord (value: number[]): void {\n  let i\n  for (i = 0; i < 4; i++) {\n    value[i] = SBox[(value[i] & 0xF0) >> 4][(value[i] & 0x0F)]\n  }\n}\n\nfunction rotWord (value: number[]): void {\n  const temp = value[0]\n\n  value[0] = value[1]\n  value[1] = value[2]\n  value[2] = value[3]\n  value[3] = temp\n}\n\nfunction shiftRows (state: number[][]): void {\n  let i: number\n  let j: number\n  let k: number\n  let l: number\n  let temp\n\n  for (i = 1; i < 4; i++) {\n    for (j = 0; j < ((i - 1) % 2) + 1; j++) {\n      temp = state[i][j]\n      k = j\n      while (true) {\n        l = k + i\n        if (l >= 4) {\n          l = l - 4\n        }\n\n        if (l === j) {\n          break\n        }\n\n        state[i][k] = state[i][l]\n        k = l\n      }\n\n      state[i][k] = temp\n    }\n  }\n}\n\nfunction finiteFieldMultiplication (value0: number, value1: number): number {\n  let i\n  let result = 0\n\n  for (i = 0; i < 8; i++) {\n    if ((value1 & 1) !== 0) {\n      result = result ^ value0\n    }\n\n    if ((value0 & 0x80) !== 0) {\n      value0 = value0 << 1\n      value0 = value0 ^ 0x11b\n    } else {\n      value0 = value0 << 1\n    }\n\n    value1 = value1 >> 1\n  }\n\n  return result\n}\n\nfunction mixColumns (state: number[][]): void {\n  let i\n  let j\n  const temp: number[][] = [[], [], [], []]\n\n  for (i = 0; i < 4; i++) {\n    temp[0][i] = finiteFieldMultiplication(0x02, state[0][i]) ^ finiteFieldMultiplication(0x03, state[1][i]) ^\n      state[2][i] ^ state[3][i]\n    temp[1][i] = state[0][i] ^ finiteFieldMultiplication(0x02, state[1][i]) ^\n      finiteFieldMultiplication(0x03, state[2][i]) ^ state[3][i]\n    temp[2][i] = state[0][i] ^ state[1][i] ^ finiteFieldMultiplication(0x02, state[2][i]) ^\n      finiteFieldMultiplication(0x03, state[3][i])\n    temp[3][i] = finiteFieldMultiplication(0x03, state[0][i]) ^ state[1][i] ^ state[2][i] ^\n      finiteFieldMultiplication(0x02, state[3][i])\n  }\n\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 4; j++) {\n      state[i][j] = temp[i][j]\n    }\n  }\n}\n\nfunction keyExpansion (roundLimit: number, key: number[]): number[][] {\n  let i\n  let j\n  const nK = parseInt(String(key.length / 4))\n  const result = []\n\n  for (i = 0; i < key.length; i++) {\n    if (i % 4 === 0) {\n      result.push([])\n    }\n\n    result[parseInt(String(i / 4))].push(key[i])\n  }\n\n  for (i = nK; i < 4 * roundLimit; i++) {\n    result[i] = []\n    const temp = result[i - 1].slice()\n\n    if (i % nK === 0) {\n      rotWord(temp)\n      subWord(temp)\n\n      for (j = 0; j < 4; j++) {\n        temp[j] = temp[j] ^ Rcon[parseInt(String(i / nK))][j]\n      }\n    } else if (nK > 6 && (i % nK) === 4) {\n      subWord(temp)\n    }\n\n    for (j = 0; j < 4; j++) {\n      result[i][j] = result[i - nK][j] ^ temp[j]\n    }\n  }\n\n  return result\n}\n\nexport function AES (input: number[], key: number[]): number[] {\n  let i\n  let j\n  let round: number\n  let roundLimit\n  const state = [[], [], [], []]\n  const output = []\n\n  // Since the BigNumber representation of keys ignores big endian zeroes,\n  // extend incoming key arrays with zeros to the smallest standard key size.\n  const ekey = Array.from(key)\n  if (ekey.length <= 16) {\n    while (ekey.length < 16) ekey.unshift(0)\n    roundLimit = 11\n  } else if (ekey.length <= 24) {\n    while (ekey.length < 24) ekey.unshift(0)\n    roundLimit = 13\n  } else if (key.length <= 32) {\n    while (ekey.length < 32) ekey.unshift(0)\n    roundLimit = 15\n  } else {\n    throw new Error('Illegal key length: ' + String(key.length))\n  }\n\n  const w = keyExpansion(roundLimit, ekey)\n\n  for (i = 0; i < 15; i++) {\n    state[parseInt(String(i / 4))].push(input[(i * 4) % 15])\n  }\n  state[3].push(input[15])\n\n  addRoundKey(state, w, 0)\n  for (round = 1; round < roundLimit; round++) {\n    subBytes(state)\n    shiftRows(state)\n\n    if (round + 1 < roundLimit) {\n      mixColumns(state)\n    }\n\n    addRoundKey(state, w, round * 4)\n  }\n\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 4; j++) {\n      output.push(state[j][i])\n    }\n  }\n\n  return output\n}\n\nexport const checkBit = function (\n  byteArray: number[],\n  byteIndex: number,\n  bitIndex: number\n): 1 | 0 {\n  return (byteArray[byteIndex] & (0x01 << bitIndex)) !== 0 ? 1 : 0\n}\n\nexport const getBytes = function (numericValue: number): number[] {\n  return [\n    (numericValue & 0xFF000000) >>> 24,\n    (numericValue & 0x00FF0000) >> 16,\n    (numericValue & 0x0000FF00) >> 8,\n    numericValue & 0x000000FF\n  ]\n}\n\nconst createZeroBlock = function (length: number): number[] {\n  let i\n  const result = []\n\n  for (i = 0; i < length; i++) {\n    result.push(0x00)\n  }\n\n  return result\n}\n\nconst R = [0xe1].concat(createZeroBlock(15))\n\nexport const exclusiveOR = function (block0: number[], block1: number[]): number[] {\n  let i\n  const result = []\n\n  for (i = 0; i < block0.length; i++) {\n    result[i] = block0[i] ^ block1[i]\n  }\n\n  return result\n}\n\nexport const rightShift = function (block: number[]): number[] {\n  let i: number\n  let carry = 0\n  let oldCarry = 0\n\n  for (i = 0; i < block.length; i++) {\n    oldCarry = carry\n    carry = block[i] & 0x01\n    block[i] = block[i] >> 1\n\n    if (oldCarry !== 0) {\n      block[i] = block[i] | 0x80\n    }\n  }\n\n  return block\n}\n\nexport const multiply = function (block0: number[], block1: number[]): number[] {\n  let i\n  let j\n  let v = block1.slice()\n  let z = createZeroBlock(16)\n\n  for (i = 0; i < 16; i++) {\n    for (j = 7; j !== -1; j--) {\n      if (checkBit(block0, i, j) !== 0) {\n        z = exclusiveOR(z, v)\n      }\n\n      if (checkBit(v, 15, 0) !== 0) {\n        v = exclusiveOR(rightShift(v), R)\n      } else {\n        v = rightShift(v)\n      }\n    }\n  }\n\n  return z\n}\n\nexport const incrementLeastSignificantThirtyTwoBits = function (\n  block: number[]\n): number[] {\n  let i\n  const result = block.slice()\n  for (i = 15; i !== 11; i--) {\n    result[i] = result[i] + 1\n\n    if (result[i] === 256) {\n      result[i] = 0\n    } else {\n      break\n    }\n  }\n\n  return result\n}\n\nexport function ghash (input: number[], hashSubKey: number[]): number[] {\n  let i: number\n  let result = createZeroBlock(16)\n\n  for (i = 0; i < input.length; i += 16) {\n    result = multiply(\n      exclusiveOR(\n        result,\n        input.slice(i, Math.min(i + 16, input.length))\n      ),\n      hashSubKey\n    )\n  }\n\n  return result\n}\n\nfunction gctr (\n  input: number[],\n  initialCounterBlock: number[],\n  key: number[]\n): number[] {\n  let i: number\n  let j\n  let y\n  let counterBlock = initialCounterBlock\n  const output = []\n\n  if (input.length === 0) {\n    return input\n  }\n\n  const n = Math.ceil(input.length / 16)\n  for (i = 0; i < n; i++) {\n    y = exclusiveOR(input.slice(i * 16, Math.min((i + 1) * 16, input.length)),\n      AES(counterBlock, key))\n\n    for (j = 0; j < y.length; j++) {\n      output.push(y[j])\n    }\n\n    if (i + 1 < n) {\n      counterBlock = incrementLeastSignificantThirtyTwoBits(counterBlock)\n    }\n  }\n\n  return output\n}\n\nexport function AESGCM (\n  plainText: number[],\n  additionalAuthenticatedData: number[],\n  initializationVector: number[],\n  key: number[]\n): { result: number[], authenticationTag: number[] } {\n  let preCounterBlock\n  let plainTag\n  const hashSubKey = AES(createZeroBlock(16), key)\n  preCounterBlock = [...initializationVector]\n  if (initializationVector.length === 12) {\n    preCounterBlock = preCounterBlock.concat(createZeroBlock(3)).concat([0x01])\n  } else {\n    if (initializationVector.length % 16 !== 0) {\n      preCounterBlock = preCounterBlock.concat(\n        createZeroBlock(16 - (initializationVector.length % 16))\n      )\n    }\n\n    preCounterBlock = preCounterBlock.concat(createZeroBlock(8))\n\n    preCounterBlock = ghash(preCounterBlock.concat(createZeroBlock(4))\n      .concat(getBytes(initializationVector.length * 8)), hashSubKey)\n  }\n\n  const cipherText = gctr(plainText, incrementLeastSignificantThirtyTwoBits(preCounterBlock), key)\n\n  plainTag = additionalAuthenticatedData.slice()\n\n  if (additionalAuthenticatedData.length === 0) {\n    plainTag = plainTag.concat(createZeroBlock(16))\n  } else if (additionalAuthenticatedData.length % 16 !== 0) {\n    plainTag = plainTag.concat(createZeroBlock(16 - (additionalAuthenticatedData.length % 16)))\n  }\n\n  plainTag = plainTag.concat(cipherText)\n\n  if (cipherText.length === 0) {\n    plainTag = plainTag.concat(createZeroBlock(16))\n  } else if (cipherText.length % 16 !== 0) {\n    plainTag = plainTag.concat(createZeroBlock(16 - (cipherText.length % 16)))\n  }\n\n  plainTag = plainTag.concat(createZeroBlock(4))\n    .concat(getBytes(additionalAuthenticatedData.length * 8))\n    .concat(createZeroBlock(4)).concat(getBytes(cipherText.length * 8))\n\n  return {\n    result: cipherText,\n    authenticationTag: gctr(ghash(plainTag, hashSubKey), preCounterBlock, key)\n  }\n}\n\nexport function AESGCMDecrypt (\n  cipherText: number[],\n  additionalAuthenticatedData: number[],\n  initializationVector: number[],\n  authenticationTag: number[],\n  key: number[]\n): number[] | null {\n  let preCounterBlock\n  let compareTag\n\n  // Generate the hash subkey\n  const hashSubKey = AES(createZeroBlock(16), key)\n\n  preCounterBlock = [...initializationVector]\n  if (initializationVector.length === 12) {\n    preCounterBlock = preCounterBlock.concat(createZeroBlock(3)).concat([0x01])\n  } else {\n    if (initializationVector.length % 16 !== 0) {\n      preCounterBlock = preCounterBlock.concat(createZeroBlock(16 - (initializationVector.length % 16)))\n    }\n\n    preCounterBlock = preCounterBlock.concat(createZeroBlock(8))\n\n    preCounterBlock = ghash(preCounterBlock.concat(createZeroBlock(4)).concat(getBytes(initializationVector.length * 8)), hashSubKey)\n  }\n\n  // Decrypt to obtain the plain text\n  const plainText = gctr(cipherText, incrementLeastSignificantThirtyTwoBits(preCounterBlock), key)\n\n  compareTag = additionalAuthenticatedData.slice()\n\n  if (additionalAuthenticatedData.length === 0) {\n    compareTag = compareTag.concat(createZeroBlock(16))\n  } else if (additionalAuthenticatedData.length % 16 !== 0) {\n    compareTag = compareTag.concat(createZeroBlock(16 - (additionalAuthenticatedData.length % 16)))\n  }\n\n  compareTag = compareTag.concat(cipherText)\n\n  if (cipherText.length === 0) {\n    compareTag = compareTag.concat(createZeroBlock(16))\n  } else if (cipherText.length % 16 !== 0) {\n    compareTag = compareTag.concat(createZeroBlock(16 - (cipherText.length % 16)))\n  }\n\n  compareTag = compareTag.concat(createZeroBlock(4))\n    .concat(getBytes(additionalAuthenticatedData.length * 8))\n    .concat(createZeroBlock(4)).concat(getBytes(cipherText.length * 8))\n\n  // Generate the authentication tag\n  const calculatedTag = gctr(ghash(compareTag, hashSubKey), preCounterBlock, key)\n\n  // If the calculated tag does not match the provided tag, return null - the decryption failed.\n  if (calculatedTag.join() !== authenticationTag.join()) {\n    return null\n  }\n\n  return plainText\n}\n","import Signature from './Signature.js'\nimport BigNumber from './BigNumber.js'\nimport * as Hash from './Hash.js'\nimport { toArray, Writer } from './utils.js'\nimport Script from '../script/Script.js'\nimport TransactionInput from '../transaction/TransactionInput.js'\nimport TransactionOutput from '../transaction/TransactionOutput.js'\n\nexport default class TransactionSignature extends Signature {\n  public static readonly SIGHASH_ALL = 0x00000001\n  public static readonly SIGHASH_NONE = 0x00000002\n  public static readonly SIGHASH_SINGLE = 0x00000003\n  public static readonly SIGHASH_FORKID = 0x00000040\n  public static readonly SIGHASH_ANYONECANPAY = 0x00000080\n\n  scope: number\n\n  static format (params: {\n    sourceTXID: string\n    sourceOutputIndex: number\n    sourceSatoshis: number\n    transactionVersion: number\n    otherInputs: TransactionInput[]\n    outputs: TransactionOutput[]\n    inputIndex: number\n    subscript: Script\n    inputSequence: number\n    lockTime: number\n    scope: number\n  }): number[] {\n    const currentInput = {\n      sourceTXID: params.sourceTXID,\n      sourceOutputIndex: params.sourceOutputIndex,\n      sequence: params.inputSequence\n    }\n    const inputs = [...params.otherInputs]\n    inputs.splice(params.inputIndex, 0, currentInput)\n\n    const getPrevoutHash = (): number[] => {\n      const writer = new Writer()\n      for (const input of inputs) {\n        if (typeof input.sourceTXID === 'undefined') {\n          writer.write(input.sourceTransaction.hash() as number[])\n        } else {\n          writer.writeReverse(toArray(input.sourceTXID, 'hex'))\n        }\n        writer.writeUInt32LE(input.sourceOutputIndex)\n      }\n\n      const buf = writer.toArray()\n      const ret = Hash.hash256(buf)\n      return ret\n    }\n\n    const getSequenceHash = (): number[] => {\n      const writer = new Writer()\n\n      for (const input of inputs) {\n        writer.writeUInt32LE(input.sequence)\n      }\n\n      const buf = writer.toArray()\n      const ret = Hash.hash256(buf)\n      return ret\n    }\n\n    function getOutputsHash (outputIndex?: number): number[] {\n      const writer = new Writer()\n\n      if (typeof outputIndex === 'undefined') {\n        let script: number[]\n        for (const output of params.outputs) {\n          writer.writeUInt64LE(output.satoshis)\n          script = output.lockingScript.toBinary()\n          writer.writeVarIntNum(script.length)\n          writer.write(script)\n        }\n      } else {\n        const output = params.outputs[outputIndex]\n        writer.writeUInt64LE(output.satoshis)\n        const script = output.lockingScript.toBinary()\n        writer.writeVarIntNum(script.length)\n        writer.write(script)\n      }\n\n      const buf = writer.toArray()\n      const ret = Hash.hash256(buf)\n      return ret\n    }\n\n    let hashPrevouts = new Array(32).fill(0)\n    let hashSequence = new Array(32).fill(0)\n    let hashOutputs = new Array(32).fill(0)\n\n    if ((params.scope & TransactionSignature.SIGHASH_ANYONECANPAY) === 0) {\n      hashPrevouts = getPrevoutHash()\n    }\n\n    if ((params.scope & TransactionSignature.SIGHASH_ANYONECANPAY) === 0 &&\n      (params.scope & 31) !== TransactionSignature.SIGHASH_SINGLE &&\n      (params.scope & 31) !== TransactionSignature.SIGHASH_NONE) {\n      hashSequence = getSequenceHash()\n    }\n\n    if ((params.scope & 31) !== TransactionSignature.SIGHASH_SINGLE && (params.scope & 31) !== TransactionSignature.SIGHASH_NONE) {\n      hashOutputs = getOutputsHash()\n    } else if ((params.scope & 31) === TransactionSignature.SIGHASH_SINGLE && params.inputIndex < params.outputs.length) {\n      hashOutputs = getOutputsHash(params.inputIndex)\n    }\n\n    const writer = new Writer()\n\n    // Version\n    writer.writeInt32LE(params.transactionVersion)\n\n    // Input prevouts/nSequence (none/all, depending on flags)\n    writer.write(hashPrevouts)\n    writer.write(hashSequence)\n\n    //  outpoint (32-byte hash + 4-byte little endian)\n    writer.writeReverse(toArray(params.sourceTXID, 'hex'))\n    writer.writeUInt32LE(params.sourceOutputIndex)\n\n    // scriptCode of the input (serialized as scripts inside CTxOuts)\n    const subscriptBin = params.subscript.toBinary()\n    writer.writeVarIntNum(subscriptBin.length)\n    writer.write(subscriptBin)\n\n    // value of the output spent by this input (8-byte little endian)\n    writer.writeUInt64LE(params.sourceSatoshis)\n\n    // nSequence of the input (4-byte little endian)\n    const sequenceNumber = currentInput.sequence\n    writer.writeUInt32LE(sequenceNumber)\n\n    // Outputs (none/one/all, depending on flags)\n    writer.write(hashOutputs)\n\n    // Locktime\n    writer.writeUInt32LE(params.lockTime)\n\n    // sighashType\n    writer.writeUInt32LE(params.scope >>> 0)\n\n    const buf = writer.toArray()\n    return buf\n  }\n\n  // The format used in a tx\n  static fromChecksigFormat (buf: number[]): TransactionSignature {\n    if (buf.length === 0) {\n      // allow setting a \"blank\" signature\n      const r = new BigNumber(1)\n      const s = new BigNumber(1)\n      const scope = 1\n      return new TransactionSignature(r, s, scope)\n    }\n    const scope = buf[buf.length - 1]\n    const derbuf = buf.slice(0, buf.length - 1)\n    const tempSig = Signature.fromDER(derbuf)\n    return new TransactionSignature(tempSig.r, tempSig.s, scope)\n  }\n\n  constructor (r: BigNumber, s: BigNumber, scope: number) {\n    super(r, s)\n    this.scope = scope\n  }\n\n  /**\n     * Compares to bitcoind's IsLowDERSignature\n     * See also Ecdsa signature algorithm which enforces this.\n     * See also Bip 62, \"low S values in signatures\"\n     */\n  public hasLowS (): boolean {\n    if (\n      this.s.ltn(1) ||\n      this.s.gt(new BigNumber(\n        '7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'\n      ))\n    ) {\n      return false\n    }\n    return true\n  }\n\n  toChecksigFormat (): number[] {\n    const derbuf = this.toDER() as number[]\n    return [...derbuf, this.scope]\n  }\n}\n","/**\n * An object mapping opcode names (such as OP_DUP) to their corresponding numbers (such as 0x76), and vice versa.\n */\nconst OP = {\n  // push value\n  OP_FALSE: 0x00,\n  OP_0: 0x00,\n  OP_PUSHDATA1: 0x4c,\n  OP_PUSHDATA2: 0x4d,\n  OP_PUSHDATA4: 0x4e,\n  OP_1NEGATE: 0x4f,\n  OP_RESERVED: 0x50,\n  OP_TRUE: 0x51,\n  OP_1: 0x51,\n  OP_2: 0x52,\n  OP_3: 0x53,\n  OP_4: 0x54,\n  OP_5: 0x55,\n  OP_6: 0x56,\n  OP_7: 0x57,\n  OP_8: 0x58,\n  OP_9: 0x59,\n  OP_10: 0x5a,\n  OP_11: 0x5b,\n  OP_12: 0x5c,\n  OP_13: 0x5d,\n  OP_14: 0x5e,\n  OP_15: 0x5f,\n  OP_16: 0x60,\n\n  // control\n  OP_NOP: 0x61,\n  OP_VER: 0x62,\n  OP_IF: 0x63,\n  OP_NOTIF: 0x64,\n  OP_VERIF: 0x65,\n  OP_VERNOTIF: 0x66,\n  OP_ELSE: 0x67,\n  OP_ENDIF: 0x68,\n  OP_VERIFY: 0x69,\n  OP_RETURN: 0x6a,\n\n  // stack ops\n  OP_TOALTSTACK: 0x6b,\n  OP_FROMALTSTACK: 0x6c,\n  OP_2DROP: 0x6d,\n  OP_2DUP: 0x6e,\n  OP_3DUP: 0x6f,\n  OP_2OVER: 0x70,\n  OP_2ROT: 0x71,\n  OP_2SWAP: 0x72,\n  OP_IFDUP: 0x73,\n  OP_DEPTH: 0x74,\n  OP_DROP: 0x75,\n  OP_DUP: 0x76,\n  OP_NIP: 0x77,\n  OP_OVER: 0x78,\n  OP_PICK: 0x79,\n  OP_ROLL: 0x7a,\n  OP_ROT: 0x7b,\n  OP_SWAP: 0x7c,\n  OP_TUCK: 0x7d,\n\n  // data manipulation ops\n  OP_CAT: 0x7e,\n  OP_SUBSTR: 0x7f, // Replaced in BSV\n  OP_SPLIT: 0x7f,\n  OP_LEFT: 0x80, // Replaced in BSV\n  OP_NUM2BIN: 0x80,\n  OP_RIGHT: 0x81, // Replaced in BSV\n  OP_BIN2NUM: 0x81,\n  OP_SIZE: 0x82,\n\n  // bit logic\n  OP_INVERT: 0x83,\n  OP_AND: 0x84,\n  OP_OR: 0x85,\n  OP_XOR: 0x86,\n  OP_EQUAL: 0x87,\n  OP_EQUALVERIFY: 0x88,\n  OP_RESERVED1: 0x89,\n  OP_RESERVED2: 0x8a,\n\n  // numeric\n  OP_1ADD: 0x8b,\n  OP_1SUB: 0x8c,\n  OP_2MUL: 0x8d,\n  OP_2DIV: 0x8e,\n  OP_NEGATE: 0x8f,\n  OP_ABS: 0x90,\n  OP_NOT: 0x91,\n  OP_0NOTEQUAL: 0x92,\n\n  OP_ADD: 0x93,\n  OP_SUB: 0x94,\n  OP_MUL: 0x95,\n  OP_DIV: 0x96,\n  OP_MOD: 0x97,\n  OP_LSHIFT: 0x98,\n  OP_RSHIFT: 0x99,\n\n  OP_BOOLAND: 0x9a,\n  OP_BOOLOR: 0x9b,\n  OP_NUMEQUAL: 0x9c,\n  OP_NUMEQUALVERIFY: 0x9d,\n  OP_NUMNOTEQUAL: 0x9e,\n  OP_LESSTHAN: 0x9f,\n  OP_GREATERTHAN: 0xa0,\n  OP_LESSTHANOREQUAL: 0xa1,\n  OP_GREATERTHANOREQUAL: 0xa2,\n  OP_MIN: 0xa3,\n  OP_MAX: 0xa4,\n\n  OP_WITHIN: 0xa5,\n\n  // crypto\n  OP_RIPEMD160: 0xa6,\n  OP_SHA1: 0xa7,\n  OP_SHA256: 0xa8,\n  OP_HASH160: 0xa9,\n  OP_HASH256: 0xaa,\n  OP_CODESEPARATOR: 0xab,\n  OP_CHECKSIG: 0xac,\n  OP_CHECKSIGVERIFY: 0xad,\n  OP_CHECKMULTISIG: 0xae,\n  OP_CHECKMULTISIGVERIFY: 0xaf,\n\n  // expansion\n  OP_NOP1: 0xb0,\n  OP_NOP2: 0xb1,\n  OP_NOP3: 0xb2,\n  OP_NOP4: 0xb3,\n  OP_NOP5: 0xb4,\n  OP_NOP6: 0xb5,\n  OP_NOP7: 0xb6,\n  OP_NOP8: 0xb7,\n  OP_NOP9: 0xb8,\n  OP_NOP10: 0xb9,\n  OP_NOP11: 0xba,\n  OP_NOP12: 0xbb,\n  OP_NOP13: 0xbc,\n  OP_NOP14: 0xbd,\n  OP_NOP15: 0xbe,\n  OP_NOP16: 0xbf,\n  OP_NOP17: 0xc0,\n  OP_NOP18: 0xc1,\n  OP_NOP19: 0xc2,\n  OP_NOP20: 0xc3,\n  OP_NOP21: 0xc4,\n  OP_NOP22: 0xc5,\n  OP_NOP23: 0xc6,\n  OP_NOP24: 0xc7,\n  OP_NOP25: 0xc8,\n  OP_NOP26: 0xc9,\n  OP_NOP27: 0xca,\n  OP_NOP28: 0xcb,\n  OP_NOP29: 0xcc,\n  OP_NOP30: 0xcd,\n  OP_NOP31: 0xce,\n  OP_NOP32: 0xcf,\n  OP_NOP33: 0xd0,\n  OP_NOP34: 0xd1,\n  OP_NOP35: 0xd2,\n  OP_NOP36: 0xd3,\n  OP_NOP37: 0xd4,\n  OP_NOP38: 0xd5,\n  OP_NOP39: 0xd6,\n  OP_NOP40: 0xd7,\n  OP_NOP41: 0xd8,\n  OP_NOP42: 0xd9,\n  OP_NOP43: 0xda,\n  OP_NOP44: 0xdb,\n  OP_NOP45: 0xdc,\n  OP_NOP46: 0xdd,\n  OP_NOP47: 0xde,\n  OP_NOP48: 0xdf,\n  OP_NOP49: 0xe0,\n  OP_NOP50: 0xe1,\n  OP_NOP51: 0xe2,\n  OP_NOP52: 0xe3,\n  OP_NOP53: 0xe4,\n  OP_NOP54: 0xe5,\n  OP_NOP55: 0xe6,\n  OP_NOP56: 0xe7,\n  OP_NOP57: 0xe8,\n  OP_NOP58: 0xe9,\n  OP_NOP59: 0xea,\n  OP_NOP60: 0xeb,\n  OP_NOP61: 0xec,\n  OP_NOP62: 0xed,\n  OP_NOP63: 0xee,\n  OP_NOP64: 0xef,\n  OP_NOP65: 0xf0,\n  OP_NOP66: 0xf1,\n  OP_NOP67: 0xf2,\n  OP_NOP68: 0xf3,\n  OP_NOP69: 0xf4,\n  OP_NOP70: 0xf5,\n  OP_NOP71: 0xf6,\n  OP_NOP72: 0xf7,\n  OP_NOP73: 0xf8,\n  OP_NOP77: 0xfc,\n\n  // template matching params\n  OP_SMALLDATA: 0xf9,\n  OP_SMALLINTEGER: 0xfa,\n  OP_PUBKEYS: 0xfb,\n  OP_PUBKEYHASH: 0xfd,\n  OP_PUBKEY: 0xfe,\n\n  OP_INVALIDOPCODE: 0xff\n}\n\nfor (const name in OP) {\n  OP[OP[name]] = name\n}\n\nexport default OP\n","import ScriptChunk from './ScriptChunk.js'\nimport OP from './OP.js'\nimport { encode, toHex, Reader, Writer, toArray } from '../primitives/utils.js'\nimport BigNumber from '../primitives/BigNumber.js'\n\n/**\n * The Script class represents a script in a Bitcoin SV transaction,\n * encapsulating the functionality to construct, parse, and serialize\n * scripts used in both locking (output) and unlocking (input) scripts.\n *\n * @property {ScriptChunk[]} chunks - An array of script chunks that make up the script.\n */\nexport default class Script {\n  chunks: ScriptChunk[]\n\n  /**\n   * @method fromASM\n   * Static method to construct a Script instance from an ASM (Assembly) formatted string.\n   * @param asm - The script in ASM string format.\n   * @returns A new Script instance.\n   * @example\n   * const script = Script.fromASM(\"OP_DUP OP_HASH160 abcd... OP_EQUALVERIFY OP_CHECKSIG\")\n   */\n  static fromASM (asm: string): Script {\n    const chunks: ScriptChunk[] = []\n    const tokens = asm.split(' ')\n    let i = 0\n    while (i < tokens.length) {\n      const token = tokens[i]\n      let opCode\n      let opCodeNum: number\n      if (token.startsWith('OP_') && typeof OP[token] !== 'undefined') {\n        opCode = token\n        opCodeNum = OP[token]\n      }\n\n      // we start with two special cases, 0 and -1, which are handled specially in\n      // toASM. see _chunkToString.\n      if (token === '0') {\n        opCodeNum = 0\n        chunks.push({\n          op: opCodeNum\n        })\n        i = i + 1\n      } else if (token === '-1') {\n        opCodeNum = OP.OP_1NEGATE\n        chunks.push({\n          op: opCodeNum\n        })\n        i = i + 1\n      } else if (opCode === undefined) {\n        let hex = tokens[i]\n        if (hex.length % 2 !== 0) {\n          hex = '0' + hex\n        }\n        const arr = toArray(hex, 'hex')\n        if (encode(arr, 'hex') !== hex) {\n          throw new Error('invalid hex string in script')\n        }\n        const len = arr.length\n        if (len >= 0 && len < OP.OP_PUSHDATA1) {\n          opCodeNum = len\n        } else if (len < Math.pow(2, 8)) {\n          opCodeNum = OP.OP_PUSHDATA1\n        } else if (len < Math.pow(2, 16)) {\n          opCodeNum = OP.OP_PUSHDATA2\n        } else if (len < Math.pow(2, 32)) {\n          opCodeNum = OP.OP_PUSHDATA4\n        }\n        chunks.push({\n          data: arr,\n          op: opCodeNum\n        })\n        i = i + 1\n      } else if (\n        opCodeNum === OP.OP_PUSHDATA1 ||\n        opCodeNum === OP.OP_PUSHDATA2 ||\n        opCodeNum === OP.OP_PUSHDATA4\n      ) {\n        chunks.push({\n          data: toArray(tokens[i + 2], 'hex'),\n          op: opCodeNum\n        })\n        i = i + 3\n      } else {\n        chunks.push({\n          op: opCodeNum\n        })\n        i = i + 1\n      }\n    }\n    return new Script(chunks)\n  }\n\n  /**\n   * @method fromHex\n   * Static method to construct a Script instance from a hexadecimal string.\n   * @param hex - The script in hexadecimal format.\n   * @returns A new Script instance.\n   * @example\n   * const script = Script.fromHex(\"76a9...\");\n   */\n  static fromHex (hex: string): Script {\n    if (hex.length === 0) return Script.fromBinary([])\n    if (hex.length % 2 !== 0) throw new Error('There is an uneven number of characters in the string which suggests it is not hex encoded.')\n    if (!/^[0-9a-fA-F]+$/.test(hex)) throw new Error('Some elements in this string are not hex encoded.')\n    return Script.fromBinary(toArray(hex, 'hex'))\n  }\n\n  /**\n   * @method fromBinary\n   * Static method to construct a Script instance from a binary array.\n   * @param bin - The script in binary array format.\n   * @returns A new Script instance.\n   * @example\n   * const script = Script.fromBinary([0x76, 0xa9, ...])\n   */\n  static fromBinary (bin: number[]): Script {\n    bin = [...bin]\n    const chunks: ScriptChunk[] = []\n\n    const br = new Reader(bin)\n    while (!br.eof()) {\n      const op = br.readUInt8()\n\n      let len = 0\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      let data: number[] = []\n      if (op > 0 && op < OP.OP_PUSHDATA1) {\n        len = op\n        chunks.push({\n          data: br.read(len),\n          op\n        })\n      } else if (op === OP.OP_PUSHDATA1) {\n        try {\n          len = br.readUInt8()\n          data = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        chunks.push({\n          data,\n          op\n        })\n      } else if (op === OP.OP_PUSHDATA2) {\n        try {\n          len = br.readUInt16LE()\n          data = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        chunks.push({\n          data,\n          op\n        })\n      } else if (op === OP.OP_PUSHDATA4) {\n        try {\n          len = br.readUInt32LE()\n          data = br.read(len)\n        } catch (err) {\n          br.read()\n        }\n        chunks.push({\n          data,\n          op\n        })\n      } else {\n        chunks.push({\n          op\n        })\n      }\n    }\n    return new Script(chunks)\n  }\n\n  /**\n   * @constructor\n   * Constructs a new Script object.\n   * @param chunks=[] - An array of script chunks to directly initialize the script.\n   */\n  constructor (chunks: ScriptChunk[] = []) {\n    this.chunks = chunks\n  }\n\n  /**\n   * @method toASM\n   * Serializes the script to an ASM formatted string.\n   * @returns The script in ASM string format.\n   */\n  toASM (): string {\n    let str = ''\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      str += this._chunkToString(chunk)\n    }\n\n    return str.slice(1)\n  }\n\n  /**\n   * @method toHex\n   * Serializes the script to a hexadecimal string.\n   * @returns The script in hexadecimal format.\n   */\n  toHex (): string {\n    return encode(this.toBinary(), 'hex') as string\n  }\n\n  /**\n   * @method toBinary\n   * Serializes the script to a binary array.\n   * @returns The script in binary array format.\n   */\n  toBinary (): number[] {\n    const writer = new Writer()\n\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const op = chunk.op\n      writer.writeUInt8(op)\n      if (chunk.data) {\n        if (op < OP.OP_PUSHDATA1) {\n          writer.write(chunk.data)\n        } else if (op === OP.OP_PUSHDATA1) {\n          writer.writeUInt8(chunk.data.length)\n          writer.write(chunk.data)\n        } else if (op === OP.OP_PUSHDATA2) {\n          writer.writeUInt16LE(chunk.data.length)\n          writer.write(chunk.data)\n        } else if (op === OP.OP_PUSHDATA4) {\n          writer.writeUInt32LE(chunk.data.length)\n          writer.write(chunk.data)\n        }\n      }\n    }\n\n    return writer.toArray()\n  }\n\n  /**\n   * @method writeScript\n   * Appends another script to this script.\n   * @param script - The script to append.\n   * @returns This script instance for chaining.\n   */\n  writeScript (script: Script): Script {\n    this.chunks = this.chunks.concat(script.chunks)\n    return this\n  }\n\n  /**\n   * @method writeOpCode\n   * Appends an opcode to the script.\n   * @param op - The opcode to append.\n   * @returns This script instance for chaining.\n   */\n  writeOpCode (op: number): Script {\n    this.chunks.push({ op })\n    return this\n  }\n\n  /**\n   * @method setChunkOpCode\n   * Sets the opcode of a specific chunk in the script.\n   * @param i - The index of the chunk.\n   * @param op - The opcode to set.\n   * @returns This script instance for chaining.\n   */\n  setChunkOpCode (i: number, op: number): Script {\n    this.chunks[i] = { op }\n    return this\n  }\n\n  /**\n   * @method writeBn\n  * Appends a BigNumber to the script as an opcode.\n  * @param bn - The BigNumber to append.\n  * @returns This script instance for chaining.\n   */\n  writeBn (bn: BigNumber): Script {\n    if (bn.cmpn(0) === OP.OP_0) {\n      this.chunks.push({\n        op: OP.OP_0\n      })\n    } else if (bn.cmpn(-1) === 0) {\n      this.chunks.push({\n        op: OP.OP_1NEGATE\n      })\n    } else if (bn.cmpn(1) >= 0 && bn.cmpn(16) <= 0) {\n      // see OP_1 - OP_16\n      this.chunks.push({\n        op: bn.toNumber() + OP.OP_1 - 1\n      })\n    } else {\n      const buf = bn.toSm('little')\n      this.writeBin(buf)\n    }\n    return this\n  }\n\n  /**\n   * @method writeBin\n   * Appends binary data to the script, determining the appropriate opcode based on length.\n   * @param bin - The binary data to append.\n   * @returns This script instance for chaining.\n   * @throws {Error} Throws an error if the data is too large to be pushed.\n   */\n  writeBin (bin: number[]): Script {\n    let op\n    if (bin.length > 0 && bin.length < OP.OP_PUSHDATA1) {\n      op = bin.length\n    } else if (bin.length === 0) {\n      op = OP.OP_0\n    } else if (bin.length < Math.pow(2, 8)) {\n      op = OP.OP_PUSHDATA1\n    } else if (bin.length < Math.pow(2, 16)) {\n      op = OP.OP_PUSHDATA2\n    } else if (bin.length < Math.pow(2, 32)) {\n      op = OP.OP_PUSHDATA4\n    } else {\n      throw new Error(\"You can't push that much data\")\n    }\n    this.chunks.push({\n      data: bin,\n      op\n    })\n    return this\n  }\n\n  /**\n   * @method writeNumber\n   * Appends a number to the script.\n   * @param num - The number to append.\n   * @returns This script instance for chaining.\n   */\n  writeNumber (num: number): Script {\n    this.writeBn(new BigNumber(num))\n    return this\n  }\n\n  /**\n   * @method removeCodeseparators\n   * Removes all OP_CODESEPARATOR opcodes from the script.\n   * @returns This script instance for chaining.\n   */\n  removeCodeseparators (): Script {\n    const chunks = []\n    for (let i = 0; i < this.chunks.length; i++) {\n      if (this.chunks[i].op !== OP.OP_CODESEPARATOR) {\n        chunks.push(this.chunks[i])\n      }\n    }\n    this.chunks = chunks\n    return this\n  }\n\n  /**\n   * Deletes the given item wherever it appears in the current script.\n   *\n   * @param script - The script containing the item to delete from the current script.\n   *\n   * @returns This script instance for chaining.\n   */\n  findAndDelete (script: Script): Script {\n    const buf = script.toHex()\n    for (let i = 0; i < this.chunks.length; i++) {\n      const script2 = new Script([this.chunks[i]])\n      const buf2 = script2.toHex()\n      if (buf === buf2) {\n        this.chunks.splice(i, 1)\n      }\n    }\n    return this\n  }\n\n  /**\n   * @method isPushOnly\n   * Checks if the script contains only push data operations.\n   * @returns True if the script is push-only, otherwise false.\n   */\n  isPushOnly (): boolean {\n    for (let i = 0; i < this.chunks.length; i++) {\n      const chunk = this.chunks[i]\n      const opCodeNum = chunk.op\n      if (opCodeNum > OP.OP_16) {\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * @method isLockingScript\n   * Determines if the script is a locking script.\n   * @returns True if the script is a locking script, otherwise false.\n   */\n  isLockingScript (): boolean {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * @method isUnlockingScript\n   * Determines if the script is an unlocking script.\n   * @returns True if the script is an unlocking script, otherwise false.\n   */\n  isUnlockingScript (): boolean {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * @private\n   * @method _chunkToString\n   * Converts a script chunk to its string representation.\n   * @param chunk - The script chunk.\n   * @returns The string representation of the chunk.\n   */\n  private _chunkToString (chunk: ScriptChunk): string {\n    const op = chunk.op\n    let str = ''\n    if (typeof chunk.data === 'undefined') {\n      const val = (OP[op] as string)\n      str = `${str} ${val}`\n    } else {\n      str = `${str} ${toHex(chunk.data)}`\n    }\n    return str\n  }\n}\n","import Script from './Script.js'\n\n/**\n * The LockingScript class represents a locking script in a Bitcoin SV transaction.\n * It extends the Script class and is used specifically for output scripts that lock funds.\n *\n * Inherits all properties and methods from the Script class.\n *\n * @extends {Script}\n * @see {@link Script} for more information on Script.\n */\nexport default class LockingScript extends Script {\n  /**\n   * @method isLockingScript\n   * Determines if the script is a locking script.\n   * @returns {boolean} Always returns true for a LockingScript instance.\n   */\n  isLockingScript (): boolean {\n    return true\n  }\n\n  /**\n   * @method isUnlockingScript\n   * Determines if the script is an unlocking script.\n   * @returns {boolean} Always returns false for a LockingScript instance.\n   */\n  isUnlockingScript (): boolean {\n    return false\n  }\n}\n","import Script from './Script.js'\n\n/**\n * The UnlockingScript class represents an unlocking script in a Bitcoin SV transaction.\n * It extends the Script class and is used specifically for input scripts that unlock funds.\n *\n * Inherits all properties and methods from the Script class.\n *\n * @extends {Script}\n * @see {@link Script} for more information on Script.\n */\nexport default class UnlockingScript extends Script {\n  /**\n   * @method isLockingScript\n   * Determines if the script is a locking script.\n   * @returns {boolean} Always returns false for an UnlockingScript instance.\n   */\n  isLockingScript (): boolean {\n    return false\n  }\n\n  /**\n   * @method isUnlockingScript\n   * Determines if the script is an unlocking script.\n   * @returns {boolean} Always returns true for an UnlockingScript instance.\n   */\n  isUnlockingScript (): boolean {\n    return true\n  }\n}\n","import LockingScript from './LockingScript.js'\nimport UnlockingScript from './UnlockingScript.js'\nimport Script from './Script.js'\nimport BigNumber from '../primitives/BigNumber.js'\nimport OP from './OP.js'\nimport ScriptChunk from './ScriptChunk.js'\nimport { toHex, minimallyEncode } from '../primitives/utils.js'\nimport * as Hash from '../primitives/Hash.js'\nimport TransactionSignature from '../primitives/TransactionSignature.js'\nimport PublicKey from '../primitives/PublicKey.js'\nimport { verify } from '../primitives/ECDSA.js'\nimport TransactionInput from '../transaction/TransactionInput.js'\nimport TransactionOutput from '../transaction/TransactionOutput.js'\n\n// These constants control the current behavior of the interpreter.\n// In the future, all of them will go away.\nconst maxScriptElementSize = 1024 * 1024 * 1024\nconst maxMultisigKeyCount = Math.pow(2, 31) - 1\nconst requireMinimalPush = true\nconst requirePushOnlyUnlockingScripts = true\nconst requireLowSSignatures = true\nconst requireCleanStack = true\n\n/**\n * The Spend class represents a spend action within a Bitcoin SV transaction.\n * It encapsulates all the necessary data required for spending a UTXO (Unspent Transaction Output)\n * and includes details about the source transaction, output, and the spending transaction itself.\n *\n * @property {string} sourceTXID - The transaction ID of the source UTXO.\n * @property {number} sourceOutputIndex - The index of the output in the source transaction.\n * @property {BigNumber} sourceSatoshis - The amount of satoshis in the source UTXO.\n * @property {LockingScript} lockingScript - The locking script associated with the UTXO.\n * @property {number} transactionVersion - The version of the current transaction.\n * @property {Array<{ sourceTXID: string, sourceOutputIndex: number, sequence: number }>} otherInputs -\n *           An array of other inputs in the transaction, each with a txid, outputIndex, and sequence number.\n * @property {Array<{ satoshis: BigNumber, lockingScript: LockingScript }>} outputs -\n *           An array of outputs of the current transaction, including the satoshi value and locking script for each.\n * @property {number} inputIndex - The index of this input in the current transaction.\n * @property {UnlockingScript} unlockingScript - The unlocking script that unlocks the UTXO for spending.\n * @property {number} inputSequence - The sequence number of this input.\n */\nexport default class Spend {\n  sourceTXID: string\n  sourceOutputIndex: number\n  sourceSatoshis: number\n  lockingScript: LockingScript\n  transactionVersion: number\n  otherInputs: TransactionInput[]\n  outputs: TransactionOutput[]\n  inputIndex: number\n  unlockingScript: UnlockingScript\n  inputSequence: number\n  lockTime: number\n  context: 'UnlockingScript' | 'LockingScript'\n  programCounter: number\n  lastCodeSeparator: number | null\n  stack: number[][]\n  altStack: number[][]\n  ifStack: boolean[]\n\n  /**\n   * @constructor\n   * Constructs the Spend object with necessary transaction details.\n   * @param {string} params.sourceTXID - The transaction ID of the source UTXO.\n   * @param {number} params.sourceOutputIndex - The index of the output in the source transaction.\n   * @param {BigNumber} params.sourceSatoshis - The amount of satoshis in the source UTXO.\n   * @param {LockingScript} params.lockingScript - The locking script associated with the UTXO.\n   * @param {number} params.transactionVersion - The version of the current transaction.\n   * @param {Array<{ sourceTXID: string, sourceOutputIndex: number, sequence: number }>} params.otherInputs -\n   *        An array of other inputs in the transaction.\n   * @param {Array<{ satoshis: BigNumber, lockingScript: LockingScript }>} params.outputs -\n   *        The outputs of the current transaction.\n   * @param {number} params.inputIndex - The index of this input in the current transaction.\n   * @param {UnlockingScript} params.unlockingScript - The unlocking script for this spend.\n   * @param {number} params.inputSequence - The sequence number of this input.\n   * @param {number} params.lockTime - The lock time of the transaction.\n   *\n   * @example\n   * const spend = new Spend({\n   *   sourceTXID: \"abcd1234\", // sourceTXID\n   *   sourceOutputIndex: 0, // sourceOutputIndex\n   *   sourceSatoshis: new BigNumber(1000), // sourceSatoshis\n   *   lockingScript: LockingScript.fromASM(\"OP_DUP OP_HASH160 abcd1234... OP_EQUALVERIFY OP_CHECKSIG\"),\n   *   transactionVersion: 1, // transactionVersion\n   *   otherInputs: [{ sourceTXID: \"abcd1234\", sourceOutputIndex: 1, sequence: 0xffffffff }], // otherInputs\n   *   outputs: [{ satoshis: new BigNumber(500), lockingScript: LockingScript.fromASM(\"OP_DUP...\") }], // outputs\n   *   inputIndex: 0, // inputIndex\n   *   unlockingScript: UnlockingScript.fromASM(\"3045... 02ab...\"),\n   *   inputSequence: 0xffffffff // inputSequence\n   * });\n   */\n  constructor (params: {\n    sourceTXID: string\n    sourceOutputIndex: number\n    sourceSatoshis: number\n    lockingScript: LockingScript\n    transactionVersion: number\n    otherInputs: TransactionInput[]\n    outputs: TransactionOutput[]\n    unlockingScript: UnlockingScript\n    inputSequence: number\n    inputIndex: number\n    lockTime: number\n  }) {\n    this.sourceTXID = params.sourceTXID\n    this.sourceOutputIndex = params.sourceOutputIndex\n    this.sourceSatoshis = params.sourceSatoshis\n    this.lockingScript = params.lockingScript\n    this.transactionVersion = params.transactionVersion\n    this.otherInputs = params.otherInputs\n    this.outputs = params.outputs\n    this.inputIndex = params.inputIndex\n    this.unlockingScript = params.unlockingScript\n    this.inputSequence = params.inputSequence\n    this.lockTime = params.lockTime\n    this.reset()\n  }\n\n  reset (): void {\n    this.context = 'UnlockingScript'\n    this.programCounter = 0\n    this.lastCodeSeparator = null\n    this.stack = []\n    this.altStack = []\n    this.ifStack = []\n  }\n\n  step (): void {\n    // If the context is UnlockingScript and we have reached the end,\n    // set the context to LockingScript and zero the program counter\n    if (\n      this.context === 'UnlockingScript' &&\n      this.programCounter >= this.unlockingScript.chunks.length\n    ) {\n      this.context = 'LockingScript'\n      this.programCounter = 0\n    }\n\n    let operation: ScriptChunk\n    if (this.context === 'UnlockingScript') {\n      operation = this.unlockingScript.chunks[this.programCounter]\n    } else {\n      operation = this.lockingScript.chunks[this.programCounter]\n    }\n\n    const isOpcodeDisabled = (op: number): boolean => {\n      return op === OP.OP_2MUL ||\n        op === OP.OP_2DIV ||\n        op === OP.OP_VERIF ||\n        op === OP.OP_VERNOTIF ||\n        op === OP.OP_VER\n    }\n\n    const isChunkMinimal = (chunk: ScriptChunk): boolean => {\n      const data = chunk.data\n      const op = chunk.op\n      if (!Array.isArray(data)) {\n        return true\n      }\n      if (data.length === 0) {\n        // Could have used OP_0.\n        return op === OP.OP_0\n      } else if (data.length === 1 && data[0] >= 1 && data[0] <= 16) {\n        // Could have used OP_1 .. OP_16.\n        return op === OP.OP_1 + (data[0] - 1)\n      } else if (data.length === 1 && data[0] === 0x81) {\n        // Could have used OP_1NEGATE.\n        return op === OP.OP_1NEGATE\n      } else if (data.length <= 75) {\n        // Could have used a direct push (opCode indicating number of bytes pushed + those bytes).\n        return op === data.length\n      } else if (data.length <= 255) {\n        // Could have used OP_PUSHDATA.\n        return op === OP.OP_PUSHDATA1\n      } else if (data.length <= 65535) {\n        // Could have used OP_PUSHDATA2.\n        return op === OP.OP_PUSHDATA2\n      }\n      return true\n    }\n\n    // Following example from sCrypt now using Number.MAX_SAFE_INTEGER (bsv/lib/transaction/input/input.js).\n    const isMinimallyEncoded = (buf: number[], maxNumSize: number = Number.MAX_SAFE_INTEGER): boolean => {\n      if (buf.length > maxNumSize) {\n        return false\n      }\n\n      if (buf.length > 0) {\n        // Check that the number is encoded with the minimum possible number\n        // of bytes.\n        //\n        // If the most-significant-byte - excluding the sign bit - is zero\n        // then we're not minimal. Note how this test also rejects the\n        // negative-zero encoding, 0x80.\n        if ((buf[buf.length - 1] & 0x7f) === 0) {\n          // One exception: if there's more than one byte and the most\n          // significant bit of the second-most-significant-byte is set it\n          // would conflict with the sign bit. An example of this case is\n          // +-255, which encode to 0xff00 and 0xff80 respectively.\n          // (big-endian).\n          if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n            return false\n          }\n        }\n      }\n      return true\n    }\n\n    const padDataToSize = (buf: number[], len: number): number[] => {\n      const b = buf\n      while (b.length < len) {\n        b.unshift(0)\n      }\n      return b\n    }\n\n    /**\n     * This function is translated from bitcoind's IsDERSignature and is used in\n     * the script interpreter.  This \"DER\" format actually includes an extra byte,\n     * the nHashType, at the end. It is really the tx format, not DER format.\n     *\n     * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n     * Where R and S are not negative (their first byte has its highest bit not set), and not\n     * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n     * in which case a single 0 byte is necessary and even required).\n     *\n     * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n     */\n    const isChecksigFormat = (buf: number[]): boolean => {\n      if (buf.length < 9) {\n        //  Non-canonical signature: too short\n        return false\n      }\n      if (buf.length > 73) {\n        // Non-canonical signature: too long\n        return false\n      }\n      if (buf[0] !== 0x30) {\n        //  Non-canonical signature: wrong type\n        return false\n      }\n      if (buf[1] !== buf.length - 3) {\n        //  Non-canonical signature: wrong length marker\n        return false\n      }\n      const nLEnR = buf[3]\n      if (5 + nLEnR >= buf.length) {\n        //  Non-canonical signature: S length misplaced\n        return false\n      }\n      const nLEnS = buf[5 + nLEnR]\n      if (nLEnR + nLEnS + 7 !== buf.length) {\n        //  Non-canonical signature: R+S length mismatch\n        return false\n      }\n\n      const R = buf.slice(4)\n      if (buf[4 - 2] !== 0x02) {\n        //  Non-canonical signature: R value type mismatch\n        return false\n      }\n      if (nLEnR === 0) {\n        //  Non-canonical signature: R length is zero\n        return false\n      }\n      if ((R[0] & 0x80) !== 0) {\n        //  Non-canonical signature: R value negative\n        return false\n      }\n      if (nLEnR > 1 && R[0] === 0x00 && (R[1] & 0x80) === 0) {\n        //  Non-canonical signature: R value excessively padded\n        return false\n      }\n\n      const S = buf.slice(6 + nLEnR)\n      if (buf[6 + nLEnR - 2] !== 0x02) {\n        //  Non-canonical signature: S value type mismatch\n        return false\n      }\n      if (nLEnS === 0) {\n        //  Non-canonical signature: S length is zero\n        return false\n      }\n      if ((S[0] & 0x80) !== 0) {\n        //  Non-canonical signature: S value negative\n        return false\n      }\n      if (nLEnS > 1 && S[0] === 0x00 && (S[1] & 0x80) === 0) {\n        //  Non-canonical signature: S value excessively padded\n        return false\n      }\n      return true\n    }\n\n    const checkSignatureEncoding = (buf: number[]): boolean => {\n      // Empty signature. Not strictly DER encoded, but allowed to provide a\n      // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n      if (buf.length === 0) {\n        return true\n      }\n\n      if (!isChecksigFormat(buf)) {\n        this.scriptEvaluationError('The signature format is invalid.')\n      }\n      const sig = TransactionSignature.fromChecksigFormat(buf)\n      if (requireLowSSignatures && !sig.hasLowS()) {\n        this.scriptEvaluationError('The signature must have a low S value.')\n      }\n      if ((sig.scope & TransactionSignature.SIGHASH_FORKID) === 0) {\n        this.scriptEvaluationError('The signature must use SIGHASH_FORKID.')\n        return false\n      }\n\n      return true\n    }\n\n    const checkPublicKeyEncoding = (buf: number[]): boolean => {\n      if (buf.length < 33) {\n        this.scriptEvaluationError('The public key is too short, it must be at least 33 bytes.')\n      }\n      if (buf[0] === 0x04) {\n        if (buf.length !== 65) {\n          this.scriptEvaluationError('The non-compressed public key must be 65 bytes.')\n        }\n      } else if ((buf[0] === 0x02 || buf[0] === 0x03)) {\n        if (buf.length !== 33) {\n          this.scriptEvaluationError('The compressed public key must be 33 bytes.')\n        }\n      } else {\n        this.scriptEvaluationError('The public key is in an unknown format.')\n      }\n      return true\n    }\n\n    const verifySignature = (\n      sig: TransactionSignature,\n      pubkey: PublicKey,\n      subscript: Script\n    ): boolean => {\n      const preimage = TransactionSignature.format({\n        sourceTXID: this.sourceTXID,\n        sourceOutputIndex: this.sourceOutputIndex,\n        sourceSatoshis: this.sourceSatoshis,\n        transactionVersion: this.transactionVersion,\n        otherInputs: this.otherInputs,\n        outputs: this.outputs,\n        inputIndex: this.inputIndex,\n        subscript,\n        inputSequence: this.inputSequence,\n        lockTime: this.lockTime,\n        scope: sig.scope\n      })\n      const hash = new BigNumber(Hash.hash256(preimage))\n      return verify(hash, sig, pubkey)\n    }\n\n    const isScriptExecuting = !this.ifStack.includes(false)\n    let buf: number[], buf1: number[], buf2: number[], buf3: number[], spliced: number[][], n: number, size: number, rawnum: number[], num: number[], signbit: number, x1: number[], x2: number[], x3: number[], bn: BigNumber, bn1: BigNumber, bn2: BigNumber, bn3: BigNumber, bufSig: number[], bufPubkey: number[], subscript, bufHash: number[]\n    let sig, pubkey, i: number, fOk: boolean, nKeysCount: number, ikey: number, ikey2: number, nSigsCount: number, isig: number\n    let fValue: boolean, fEqual: boolean, fSuccess: boolean\n\n    // Read instruction\n    const currentOpcode = operation.op\n    if (typeof currentOpcode === 'undefined') {\n      this.scriptEvaluationError(`An opcode is missing in this chunk of the ${this.context}!`)\n    }\n    if (\n      Array.isArray(operation.data) &&\n      operation.data.length > maxScriptElementSize\n    ) {\n      this.scriptEvaluationError(`It's not currently possible to push data larger than ${maxScriptElementSize} bytes.`)\n    }\n\n    if (isScriptExecuting && isOpcodeDisabled(currentOpcode)) {\n      this.scriptEvaluationError('This opcode is currently disabled.')\n    }\n\n    if (\n      isScriptExecuting && currentOpcode >= 0 &&\n      currentOpcode <= OP.OP_PUSHDATA4\n    ) {\n      if (requireMinimalPush && !isChunkMinimal(operation)) {\n        this.scriptEvaluationError('This data is not minimally-encoded.')\n      }\n\n      if (!Array.isArray(operation.data)) {\n        this.stack.push([])\n      } else {\n        this.stack.push(operation.data)\n      }\n    } else if (isScriptExecuting || (OP.OP_IF <= currentOpcode && currentOpcode <= OP.OP_ENDIF)) {\n      switch (currentOpcode) {\n        case OP.OP_1NEGATE:\n        case OP.OP_1:\n        case OP.OP_2:\n        case OP.OP_3:\n        case OP.OP_4:\n        case OP.OP_5:\n        case OP.OP_6:\n        case OP.OP_7:\n        case OP.OP_8:\n        case OP.OP_9:\n        case OP.OP_10:\n        case OP.OP_11:\n        case OP.OP_12:\n        case OP.OP_13:\n        case OP.OP_14:\n        case OP.OP_15:\n        case OP.OP_16:\n          n = currentOpcode - (OP.OP_1 - 1)\n          buf = new BigNumber(n).toScriptNum()\n          this.stack.push(buf)\n          break\n\n        case OP.OP_NOP:\n        case OP.OP_NOP2:\n        case OP.OP_NOP3:\n        case OP.OP_NOP1:\n        case OP.OP_NOP4:\n        case OP.OP_NOP5:\n        case OP.OP_NOP6:\n        case OP.OP_NOP7:\n        case OP.OP_NOP8:\n        case OP.OP_NOP9:\n        case OP.OP_NOP10:\n        case OP.OP_NOP11:\n        case OP.OP_NOP12:\n        case OP.OP_NOP13:\n        case OP.OP_NOP14:\n        case OP.OP_NOP15:\n        case OP.OP_NOP16:\n        case OP.OP_NOP17:\n        case OP.OP_NOP18:\n        case OP.OP_NOP19:\n        case OP.OP_NOP20:\n        case OP.OP_NOP21:\n        case OP.OP_NOP22:\n        case OP.OP_NOP23:\n        case OP.OP_NOP24:\n        case OP.OP_NOP25:\n        case OP.OP_NOP26:\n        case OP.OP_NOP27:\n        case OP.OP_NOP28:\n        case OP.OP_NOP29:\n        case OP.OP_NOP30:\n        case OP.OP_NOP31:\n        case OP.OP_NOP32:\n        case OP.OP_NOP33:\n        case OP.OP_NOP34:\n        case OP.OP_NOP35:\n        case OP.OP_NOP36:\n        case OP.OP_NOP37:\n        case OP.OP_NOP38:\n        case OP.OP_NOP39:\n        case OP.OP_NOP40:\n        case OP.OP_NOP41:\n        case OP.OP_NOP42:\n        case OP.OP_NOP43:\n        case OP.OP_NOP44:\n        case OP.OP_NOP45:\n        case OP.OP_NOP46:\n        case OP.OP_NOP47:\n        case OP.OP_NOP48:\n        case OP.OP_NOP49:\n        case OP.OP_NOP50:\n        case OP.OP_NOP51:\n        case OP.OP_NOP52:\n        case OP.OP_NOP53:\n        case OP.OP_NOP54:\n        case OP.OP_NOP55:\n        case OP.OP_NOP56:\n        case OP.OP_NOP57:\n        case OP.OP_NOP58:\n        case OP.OP_NOP59:\n        case OP.OP_NOP60:\n        case OP.OP_NOP61:\n        case OP.OP_NOP62:\n        case OP.OP_NOP63:\n        case OP.OP_NOP64:\n        case OP.OP_NOP65:\n        case OP.OP_NOP66:\n        case OP.OP_NOP67:\n        case OP.OP_NOP68:\n        case OP.OP_NOP69:\n        case OP.OP_NOP70:\n        case OP.OP_NOP71:\n        case OP.OP_NOP72:\n        case OP.OP_NOP73:\n        case OP.OP_NOP77:\n          break\n\n        case OP.OP_IF:\n        case OP.OP_NOTIF:\n          fValue = false\n          if (isScriptExecuting) {\n            if (this.stack.length < 1) {\n              this.scriptEvaluationError('OP_IF and OP_NOTIF require at least one item on the stack when they are used!')\n            }\n            buf = this.stacktop(-1)\n\n            fValue = this.castToBool(buf)\n            if (currentOpcode === OP.OP_NOTIF) {\n              fValue = !fValue\n            }\n            this.stack.pop()\n          }\n          this.ifStack.push(fValue)\n          break\n\n        case OP.OP_ELSE:\n          if (this.ifStack.length === 0) {\n            this.scriptEvaluationError('OP_ELSE requires a preceeding OP_IF.')\n          }\n          this.ifStack[this.ifStack.length - 1] = !this.ifStack[this.ifStack.length - 1]\n          break\n\n        case OP.OP_ENDIF:\n          if (this.ifStack.length === 0) {\n            this.scriptEvaluationError('OP_ENDIF requires a preceeding OP_IF.')\n          }\n          this.ifStack.pop()\n          break\n\n        case OP.OP_VERIFY:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_VERIFY requires at least one item to be on the stack.')\n          }\n          buf = this.stacktop(-1)\n          fValue = this.castToBool(buf)\n          if (fValue) {\n            this.stack.pop()\n          } else {\n            this.scriptEvaluationError('OP_VERIFY requires the top stack value to be truthy.')\n          }\n          break\n\n        case OP.OP_RETURN:\n          if (this.context === 'UnlockingScript') {\n            this.programCounter = this.unlockingScript.chunks.length\n          } else {\n            this.programCounter = this.lockingScript.chunks.length\n          }\n          this.ifStack = []\n          break\n\n        case OP.OP_TOALTSTACK:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_TOALTSTACK requires at oeast one item to be on the stack.')\n          }\n          this.altStack.push(this.stack.pop())\n          break\n\n        case OP.OP_FROMALTSTACK:\n          if (this.altStack.length < 1) {\n            this.scriptEvaluationError('OP_FROMALTSTACK requires at least one item to be on the stack.')\n          }\n          this.stack.push(this.altStack.pop())\n          break\n\n        case OP.OP_2DROP:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_2DROP requires at least two items to be on the stack.')\n          }\n          this.stack.pop()\n          this.stack.pop()\n          break\n\n        case OP.OP_2DUP:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_2DUP requires at least two items to be on the stack.')\n          }\n          buf1 = this.stacktop(-2)\n          buf2 = this.stacktop(-1)\n          this.stack.push([...buf1])\n          this.stack.push([...buf2])\n          break\n\n        case OP.OP_3DUP:\n          if (this.stack.length < 3) {\n            this.scriptEvaluationError('OP_3DUP requires at least three items to be on the stack.')\n          }\n          buf1 = this.stacktop(-3)\n          buf2 = this.stacktop(-2)\n          buf3 = this.stacktop(-1)\n          this.stack.push([...buf1])\n          this.stack.push([...buf2])\n          this.stack.push([...buf3])\n          break\n\n        case OP.OP_2OVER:\n          if (this.stack.length < 4) {\n            this.scriptEvaluationError('OP_2OVER requires at least four items to be on the stack.')\n          }\n          buf1 = this.stacktop(-4)\n          buf2 = this.stacktop(-3)\n          this.stack.push([...buf1])\n          this.stack.push([...buf2])\n          break\n\n        case OP.OP_2ROT:\n          if (this.stack.length < 6) {\n            this.scriptEvaluationError('OP_2ROT requires at least six items to be on the stack.')\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2)\n          this.stack.push(spliced[0])\n          this.stack.push(spliced[1])\n          break\n\n        case OP.OP_2SWAP:\n          if (this.stack.length < 4) {\n            this.scriptEvaluationError('OP_2SWAP requires at least four items to be on the stack.')\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2)\n          this.stack.push(spliced[0])\n          this.stack.push(spliced[1])\n          break\n\n        case OP.OP_IFDUP:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_IFDUP requires at least one item to be on the stack.')\n          }\n          buf = this.stacktop(-1)\n          fValue = this.castToBool(buf)\n          if (fValue) {\n            this.stack.push([...buf])\n          }\n          break\n\n        case OP.OP_DEPTH:\n          buf = new BigNumber(this.stack.length).toScriptNum()\n          this.stack.push(buf)\n          break\n\n        case OP.OP_DROP:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_DROP requires at least one item to be on the stack.')\n          }\n          this.stack.pop()\n          break\n\n        case OP.OP_DUP:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_DUP requires at least one item to be on the stack.')\n          }\n          this.stack.push([...this.stacktop(-1)])\n          break\n\n        case OP.OP_NIP:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_NIP requires at least two items to be on the stack.')\n          }\n          this.stack.splice(this.stack.length - 2, 1)\n          break\n\n        case OP.OP_OVER:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_OVER requires at least two items to be on the stack.')\n          }\n          this.stack.push([...this.stacktop(-2)])\n          break\n\n        case OP.OP_PICK:\n        case OP.OP_ROLL:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least two items to be on the stack.`)\n          }\n          buf = this.stacktop(-1)\n          bn = BigNumber.fromScriptNum(buf, requireMinimalPush)\n          n = bn.toNumber()\n          this.stack.pop()\n          if (n < 0 || n >= this.stack.length) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the top stack element to be 0 or a positive number less than the current size of the stack.`)\n          }\n          buf = this.stacktop(-n - 1)\n          if (currentOpcode === OP.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1)\n          }\n          this.stack.push([...buf])\n          break\n\n        case OP.OP_ROT:\n          if (this.stack.length < 3) {\n            this.scriptEvaluationError('OP_ROT requires at least three items to be on the stack.')\n          }\n          x1 = this.stacktop(-3)\n          x2 = this.stacktop(-2)\n          x3 = this.stacktop(-1)\n          this.stack[this.stack.length - 3] = x2\n          this.stack[this.stack.length - 2] = x3\n          this.stack[this.stack.length - 1] = x1\n          break\n\n        case OP.OP_SWAP:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_SWAP requires at least two items to be on the stack.')\n          }\n          x1 = this.stacktop(-2)\n          x2 = this.stacktop(-1)\n          this.stack[this.stack.length - 2] = x2\n          this.stack[this.stack.length - 1] = x1\n          break\n\n        case OP.OP_TUCK:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_TUCK requires at least two items to be on the stack.')\n          }\n          this.stack.splice(this.stack.length - 2, 0, [...this.stacktop(-1)])\n          break\n\n        case OP.OP_SIZE:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_SIZE requires at least one item to be on the stack.')\n          }\n          bn = new BigNumber(this.stacktop(-1).length)\n          this.stack.push(bn.toScriptNum())\n          break\n\n        case OP.OP_AND:\n        case OP.OP_OR:\n        case OP.OP_XOR:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least one item to be on the stack.`)\n          }\n          buf1 = this.stacktop(-2)\n          buf2 = this.stacktop(-1)\n\n          if (buf1.length !== buf2.length) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the top two stack items to be the same size.`)\n          }\n\n          switch (currentOpcode) {\n            case OP.OP_AND:\n              for (let i = 0; i < buf1.length; i++) {\n                buf1[i] &= buf2[i]\n              }\n              break\n            case OP.OP_OR:\n              for (let i = 0; i < buf1.length; i++) {\n                buf1[i] |= buf2[i]\n              }\n              break\n            case OP.OP_XOR:\n              for (let i = 0; i < buf1.length; i++) {\n                buf1[i] ^= buf2[i]\n              }\n              break\n          }\n\n          // And pop vch2.\n          this.stack.pop()\n          break\n\n        case OP.OP_INVERT:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_INVERT requires at least one item to be on the stack.')\n          }\n          buf = this.stacktop(-1)\n          for (let i = 0; i < buf.length; i++) {\n            buf[i] = ~buf[i]\n          }\n          break\n\n        case OP.OP_LSHIFT:\n        case OP.OP_RSHIFT:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least two items to be on the stack.`)\n          }\n          buf1 = this.stacktop(-2)\n          if (buf1.length === 0) {\n            this.stack.pop()\n          } else {\n            bn1 = new BigNumber(buf1)\n            bn2 = BigNumber.fromScriptNum(this.stacktop(-1), requireMinimalPush)\n            n = bn2.toNumber()\n            if (n < 0) {\n              this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the top item on the stack not to be negative.`)\n            }\n            this.stack.pop()\n            this.stack.pop()\n            let shifted\n            if (currentOpcode === OP.OP_LSHIFT) {\n              shifted = bn1.ushln(n)\n            }\n            if (currentOpcode === OP.OP_RSHIFT) {\n              shifted = bn1.ushrn(n)\n            }\n            const bufShifted = padDataToSize(\n              shifted.toArray().slice(buf1.length * -1),\n              buf1.length\n            )\n            this.stack.push(bufShifted)\n          }\n          break\n\n        case OP.OP_EQUAL:\n        case OP.OP_EQUALVERIFY:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least two items to be on the stack.`)\n          }\n          buf1 = this.stacktop(-2)\n          buf2 = this.stacktop(-1)\n          fEqual = toHex(buf1) === toHex(buf2)\n          this.stack.pop()\n          this.stack.pop()\n          this.stack.push(fEqual ? [1] : [])\n          if (currentOpcode === OP.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop()\n            } else {\n              this.scriptEvaluationError('OP_EQUALVERIFY requires the top two stack items to be equal.')\n            }\n          }\n          break\n\n        case OP.OP_1ADD:\n        case OP.OP_1SUB:\n        case OP.OP_NEGATE:\n        case OP.OP_ABS:\n        case OP.OP_NOT:\n        case OP.OP_0NOTEQUAL:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least one items to be on the stack.`)\n          }\n          buf = this.stacktop(-1)\n          bn = BigNumber.fromScriptNum(buf, requireMinimalPush)\n          switch (currentOpcode) {\n            case OP.OP_1ADD:\n              bn = bn.addn(1)\n              break\n            case OP.OP_1SUB:\n              bn = bn.subn(1)\n              break\n            case OP.OP_NEGATE:\n              bn = bn.neg()\n              break\n            case OP.OP_ABS:\n              if (bn.cmpn(0) < 0) {\n                bn = bn.neg()\n              }\n              break\n            case OP.OP_NOT:\n              bn = new BigNumber((bn.cmpn(0) === 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_0NOTEQUAL:\n              bn = new BigNumber((bn.cmpn(0) !== 0) ? 1 : 0 + 0)\n              break\n          }\n          this.stack.pop()\n          this.stack.push(bn.toScriptNum())\n          break\n\n        case OP.OP_ADD:\n        case OP.OP_SUB:\n        case OP.OP_MUL:\n        case OP.OP_MOD:\n        case OP.OP_DIV:\n        case OP.OP_BOOLAND:\n        case OP.OP_BOOLOR:\n        case OP.OP_NUMEQUAL:\n        case OP.OP_NUMEQUALVERIFY:\n        case OP.OP_NUMNOTEQUAL:\n        case OP.OP_LESSTHAN:\n        case OP.OP_GREATERTHAN:\n        case OP.OP_LESSTHANOREQUAL:\n        case OP.OP_GREATERTHANOREQUAL:\n        case OP.OP_MIN:\n        case OP.OP_MAX:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least two items to be on the stack.`)\n          }\n          bn1 = BigNumber.fromScriptNum(this.stacktop(-2), requireMinimalPush)\n          bn2 = BigNumber.fromScriptNum(this.stacktop(-1), requireMinimalPush)\n          bn = new BigNumber(0)\n\n          switch (currentOpcode) {\n            case OP.OP_ADD:\n              bn = bn1.add(bn2)\n              break\n            case OP.OP_SUB:\n              bn = bn1.sub(bn2)\n              break\n            case OP.OP_MUL:\n              bn = bn1.mul(bn2)\n              break\n            case OP.OP_DIV:\n              if (bn2.cmpn(0) === 0) {\n                this.scriptEvaluationError('OP_DIV cannot divide by zero!')\n              }\n              bn = bn1.div(bn2)\n              break\n            case OP.OP_MOD:\n              if (bn2.cmpn(0) === 0) {\n                this.scriptEvaluationError('OP_MOD cannot divide by zero!')\n              }\n              bn = bn1.mod(bn2)\n              break\n            case OP.OP_BOOLAND:\n              bn = new BigNumber(\n                ((bn1.cmpn(0) !== 0) && (bn2.cmpn(0) !== 0)) ? 1 : 0 + 0\n              )\n              break\n            case OP.OP_BOOLOR:\n              bn = new BigNumber(\n                ((bn1.cmpn(0) !== 0) || (bn2.cmpn(0) !== 0)) ? 1 : 0 + 0\n              )\n              break\n            case OP.OP_NUMEQUAL:\n              bn = new BigNumber((bn1.cmp(bn2) === 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_NUMEQUALVERIFY:\n              bn = new BigNumber((bn1.cmp(bn2) === 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_NUMNOTEQUAL:\n              bn = new BigNumber((bn1.cmp(bn2) !== 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_LESSTHAN:\n              bn = new BigNumber((bn1.cmp(bn2) < 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_GREATERTHAN:\n              bn = new BigNumber((bn1.cmp(bn2) > 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_LESSTHANOREQUAL:\n              bn = new BigNumber((bn1.cmp(bn2) <= 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_GREATERTHANOREQUAL:\n              bn = new BigNumber((bn1.cmp(bn2) >= 0) ? 1 : 0 + 0)\n              break\n            case OP.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2)\n              break\n            case OP.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2)\n              break\n          }\n          this.stack.pop()\n          this.stack.pop()\n          this.stack.push(bn.toScriptNum())\n\n          if (currentOpcode === OP.OP_NUMEQUALVERIFY) {\n            if (this.castToBool(this.stacktop(-1))) {\n              this.stack.pop()\n            } else {\n              this.scriptEvaluationError('OP_NUMEQUALVERIFY requires the top stack item to be truthy.')\n            }\n          }\n          break\n\n        case OP.OP_WITHIN:\n          if (this.stack.length < 3) {\n            this.scriptEvaluationError('OP_WITHIN requires at least three items to be on the stack.')\n          }\n          bn1 = BigNumber.fromScriptNum(this.stacktop(-3), requireMinimalPush)\n          bn2 = BigNumber.fromScriptNum(this.stacktop(-2), requireMinimalPush)\n          bn3 = BigNumber.fromScriptNum(this.stacktop(-1), requireMinimalPush)\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0)\n          this.stack.pop()\n          this.stack.pop()\n          this.stack.pop()\n          this.stack.push(fValue ? [1] : [])\n          break\n\n        case OP.OP_RIPEMD160:\n        case OP.OP_SHA1:\n        case OP.OP_SHA256:\n        case OP.OP_HASH160:\n        case OP.OP_HASH256:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least one item to be on the stack.`)\n          }\n          buf = this.stacktop(-1)\n          if (currentOpcode === OP.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf)\n          } else if (currentOpcode === OP.OP_SHA1) {\n            bufHash = Hash.sha1(buf)\n          } else if (currentOpcode === OP.OP_SHA256) {\n            bufHash = Hash.sha256(buf)\n          } else if (currentOpcode === OP.OP_HASH160) {\n            bufHash = Hash.hash160(buf)\n          } else if (currentOpcode === OP.OP_HASH256) {\n            bufHash = Hash.hash256(buf)\n          }\n          this.stack.pop()\n          this.stack.push(bufHash)\n          break\n\n        case OP.OP_CODESEPARATOR:\n          this.lastCodeSeparator = this.programCounter\n          break\n\n        case OP.OP_CHECKSIG:\n        case OP.OP_CHECKSIGVERIFY:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least two items to be on the stack.`)\n          }\n\n          bufSig = this.stacktop(-2)\n          bufPubkey = this.stacktop(-1)\n\n          if (\n            !checkSignatureEncoding(bufSig) ||\n            !checkPublicKeyEncoding(bufPubkey)\n          ) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires correct encoding for the public key and signature.`)\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          if (this.context === 'UnlockingScript') {\n            subscript = new Script(this.unlockingScript.chunks.slice(this.lastCodeSeparator))\n          } else {\n            subscript = new Script(this.lockingScript.chunks.slice(this.lastCodeSeparator))\n          }\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          subscript.findAndDelete(new Script().writeBin(bufSig))\n\n          try {\n            sig = TransactionSignature.fromChecksigFormat(bufSig)\n            pubkey = PublicKey.fromDER(bufPubkey)\n            fSuccess = verifySignature(sig, pubkey, subscript)\n          } catch (e) {\n            // invalid sig or pubkey\n            fSuccess = false\n          }\n\n          if (!fSuccess && bufSig.length > 0) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} failed to verify the signature, and requires an empty signature when verification fails.`)\n          }\n\n          this.stack.pop()\n          this.stack.pop()\n\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? [1] : [])\n          if (currentOpcode === OP.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop()\n            } else {\n              this.scriptEvaluationError('OP_CHECKSIGVERIFY requires that a valid signature is provided.')\n            }\n          }\n          break\n\n        case OP.OP_CHECKMULTISIG:\n        case OP.OP_CHECKMULTISIGVERIFY:\n\n          i = 1\n          if (this.stack.length < i) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires at least 1 item to be on the stack.`)\n          }\n\n          nKeysCount = BigNumber.fromScriptNum(this.stacktop(-i), requireMinimalPush).toNumber()\n          // TODO: Keys and opcount are parameterized in client. No magic numbers!\n          if (nKeysCount < 0 || nKeysCount > maxMultisigKeyCount) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires a key count between 0 and ${maxMultisigKeyCount}.`)\n          }\n          ikey = ++i\n          i += nKeysCount\n\n          // ikey2 is the position of last non-signature item in\n          // the stack. Top stack item = 1. With\n          // SCRIPT_VERIFY_NULLFAIL, this is used for cleanup if\n          // operation fails.\n          ikey2 = nKeysCount + 2\n\n          if (this.stack.length < i) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the number of stack items not to be less than the number of keys used.`)\n          }\n\n          nSigsCount = BigNumber.fromScriptNum(this.stacktop(-i), requireMinimalPush).toNumber()\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the number of signatures to be no greater than the number of keys.`)\n          }\n          isig = ++i\n          i += nSigsCount\n          if (this.stack.length < i) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the number of stack items not to be less than the number of signatures provided.`)\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          if (this.context === 'UnlockingScript') {\n            subscript = new Script(this.unlockingScript.chunks.slice(this.lastCodeSeparator))\n          } else {\n            subscript = new Script(this.lockingScript.chunks.slice(this.lastCodeSeparator))\n          }\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (let k = 0; k < nSigsCount; k++) {\n            bufSig = this.stacktop(-isig - k)\n            subscript.findAndDelete(new Script().writeBin(bufSig))\n          }\n\n          fSuccess = true\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = this.stacktop(-isig);\n            bufSig = this.stacktop(-isig)\n            // valtype& vchPubKey = this.stacktop(-ikey);\n            bufPubkey = this.stacktop(-ikey)\n\n            if (\n              !checkSignatureEncoding(bufSig) ||\n              !checkPublicKeyEncoding(bufPubkey)\n            ) {\n              this.scriptEvaluationError(`${OP[currentOpcode] as string} requires correct encoding for the public key and signature.`)\n            }\n\n            try {\n              sig = TransactionSignature.fromChecksigFormat(bufSig)\n              pubkey = PublicKey.fromString(toHex(bufPubkey))\n              fOk = verifySignature(sig, pubkey, subscript)\n            } catch (e) {\n              // invalid sig or pubkey\n              fOk = false\n            }\n\n            if (fOk) {\n              isig++\n              nSigsCount--\n            }\n            ikey++\n            nKeysCount--\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            if (\n              !fSuccess && !ikey2 && (this.stacktop(-1).length > 0)\n            ) {\n              this.scriptEvaluationError(`${OP[currentOpcode] as string} failed to verify a signature, and requires an empty signature when verification fails.`)\n            }\n\n            if (ikey2 > 0) {\n              ikey2--\n            }\n\n            this.stack.pop()\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires an extra item to be on the stack.`)\n          }\n          if (this.stacktop(-1).length > 0) { // NOTE: Is this necessary? We don't care about malleability.\n            this.scriptEvaluationError(`${OP[currentOpcode] as string} requires the extra stack item to be empty.`)\n          }\n          this.stack.pop()\n\n          this.stack.push(fSuccess ? [1] : [])\n\n          if (currentOpcode === OP.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop()\n            } else {\n              this.scriptEvaluationError('OP_CHECKMULTISIGVERIFY requires that a sufficient number of valid signatures are provided.')\n            }\n          }\n          break\n\n        case OP.OP_CAT:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_CAT requires at least two items to be on the stack.')\n          }\n\n          buf1 = this.stacktop(-2)\n          buf2 = this.stacktop(-1)\n          if (buf1.length + buf2.length > maxScriptElementSize) {\n            this.scriptEvaluationError(`It's not currently possible to push data larger than ${maxScriptElementSize} bytes.`)\n          }\n          this.stack[this.stack.length - 2] = [...buf1, ...buf2]\n          this.stack.pop()\n          break\n\n        case OP.OP_SPLIT:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_SPLIT requires at least two items to be on the stack.')\n          }\n          buf1 = this.stacktop(-2)\n\n          // Make sure the split point is apropriate.\n          n = BigNumber.fromScriptNum(this.stacktop(-1), requireMinimalPush).toNumber()\n          if (n < 0 || n > buf1.length) {\n            this.scriptEvaluationError('OP_SPLIT requires the first stack item to be a non-negative number less than or equal to the size of the second-from-top stack item.')\n          }\n\n          // Prepare the results in their own buffer as `data`\n          // will be invalidated.\n          // Copy buffer data, to slice it before\n          buf2 = [...buf1]\n\n          // Replace existing stack values by the new values.\n          this.stack[this.stack.length - 2] = buf2.slice(0, n)\n          this.stack[this.stack.length - 1] = buf2.slice(n)\n          break\n\n        case OP.OP_NUM2BIN:\n          if (this.stack.length < 2) {\n            this.scriptEvaluationError('OP_NUM2BIN requires at least two items to be on the stack.')\n          }\n\n          size = BigNumber.fromScriptNum(this.stacktop(-1), requireMinimalPush).toNumber()\n          if (size > maxScriptElementSize) {\n            this.scriptEvaluationError(`It's not currently possible to push data larger than ${maxScriptElementSize} bytes.`)\n          }\n\n          this.stack.pop()\n          rawnum = this.stacktop(-1)\n\n          // Try to see if we can fit that number in the number of\n          // byte requested.\n          rawnum = minimallyEncode(rawnum)\n\n          if (rawnum.length > size) {\n            this.scriptEvaluationError('OP_NUM2BIN requires that the size expressed in the top stack item is large enough to hold the value expressed in the second-from-top stack item.')\n          }\n\n          // We already have an element of the right size, we\n          // don't need to do anything.\n          if (rawnum.length === size) {\n            this.stack[this.stack.length - 1] = rawnum\n            break\n          }\n\n          signbit = 0x00\n          if (rawnum.length > 0) {\n            signbit = rawnum[rawnum.length - 1] & 0x80\n            rawnum[rawnum.length - 1] &= 0x7f\n          }\n\n          num = new Array(size)\n          num.fill(0)\n          for (n = 0; n < size; n++) {\n            num[n] = rawnum[n]\n          }\n          n = rawnum.length - 1\n          while (n++ < size - 2) {\n            num[n] = 0x00\n          }\n\n          num[n] = signbit\n\n          this.stack[this.stack.length - 1] = num\n          break\n\n        case OP.OP_BIN2NUM:\n          if (this.stack.length < 1) {\n            this.scriptEvaluationError('OP_BIN2NUM requires at least one item to be on the stack.')\n          }\n\n          buf1 = this.stacktop(-1)\n          buf2 = minimallyEncode(buf1)\n\n          this.stack[this.stack.length - 1] = buf2\n\n          // The resulting number must be a valid number.\n          if (!isMinimallyEncoded(buf2)) {\n            this.scriptEvaluationError('OP_BIN2NUM requires that the resulting number is valid.')\n          }\n          break\n\n        default:\n          this.scriptEvaluationError('Invalid opcode!')\n      }\n    }\n\n    // Finally, increment the program counter\n    this.programCounter++\n  }\n\n  /**\n   * @method validate\n   * Validates the spend action by interpreting the locking and unlocking scripts.\n   * @returns {boolean} Returns true if the scripts are valid and the spend is legitimate, otherwise false.\n   * @example\n   * if (spend.validate()) {\n   *   console.log(\"Spend is valid!\");\n   * } else {\n   *   console.log(\"Invalid spend!\");\n   * }\n   */\n  validate (): boolean {\n    if (requirePushOnlyUnlockingScripts && !this.unlockingScript.isPushOnly()) {\n      this.scriptEvaluationError('Unlocking scripts can only contain push operations, and no other opcodes.')\n    }\n    while (true) {\n      this.step()\n      if (this.context === 'LockingScript' && this.programCounter >= this.lockingScript.chunks.length) {\n        break\n      }\n    }\n    if (this.ifStack.length > 0) {\n      this.scriptEvaluationError('Every OP_IF must be terminated prior to the end of the script.')\n    }\n    if (requireCleanStack) {\n      if (this.stack.length !== 1) {\n        this.scriptEvaluationError('The clean stack rule requires exactly one item to be on the stack after script execution.')\n      }\n    }\n    if (!this.castToBool(this.stacktop(-1))) {\n      this.scriptEvaluationError('The top stack element must be truthy after script evaluation.')\n    }\n    return true\n  }\n\n  private stacktop (i: number): number[] {\n    return this.stack[this.stack.length + i]\n  }\n\n  private castToBool (val: number[]): boolean {\n    for (let i = 0; i < val.length; i++) {\n      if (val[i] !== 0) {\n        // can be negative zero\n        if (i === val.length - 1 && val[i] === 0x80) {\n          return false\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  private scriptEvaluationError (str: string): void {\n    throw new Error(`Script evaluation error: ${str}\\n\\nSource TXID: ${this.sourceTXID}\\nSource output index: ${this.sourceOutputIndex}\\nContext: ${this.context}\\nProgram counter: ${this.programCounter}\\nStack size: ${this.stack.length}\\nAlt stack size: ${this.altStack.length}`)\n  }\n}\n","import { Reader, Writer, toHex, toArray } from '../primitives/utils.js'\nimport { hash256 } from '../primitives/Hash.js'\nimport ChainTracker from './ChainTracker.js'\n\nexport interface MerklePathLeaf {\n  offset: number\n  hash?: string\n  txid?: boolean\n  duplicate?: boolean\n}\n\n/**\n * Represents a Merkle Path, which is used to provide a compact proof of inclusion for a\n * transaction in a block. This class encapsulates all the details required for creating\n * and verifying Merkle Proofs.\n *\n * @class MerklePath\n * @property {number} blockHeight - The height of the block in which the transaction is included.\n * @property {Array<Array<{offset: number, hash?: string, txid?: boolean, duplicate?: boolean}>>} path -\n *           A tree structure representing the Merkle Path, with each level containing information\n *           about the nodes involved in constructing the proof.\n *\n * @example\n * // Creating and verifying a Merkle Path\n * const merklePath = MerklePath.fromHex('...');\n * const isValid = merklePath.verify(txid, chainTracker);\n *\n * @description\n * The MerklePath class is useful for verifying transactions in a lightweight and efficient manner without\n * needing the entire block data. This class offers functionalities for creating, converting,\n * and verifying these proofs.\n */\nexport default class MerklePath {\n  blockHeight: number\n  path: Array<Array<{\n    offset: number\n    hash?: string\n    txid?: boolean\n    duplicate?: boolean\n  }>>\n\n  /**\n   * Creates a MerklePath instance from a hexadecimal string.\n   *\n   * @static\n   * @param {string} hex - The hexadecimal string representation of the Merkle Path.\n   * @returns {MerklePath} - A new MerklePath instance.\n   */\n  static fromHex (hex: string): MerklePath {\n    return MerklePath.fromBinary(toArray(hex, 'hex'))\n  }\n\n  static fromReader (reader: Reader): MerklePath {\n    const blockHeight = reader.readVarIntNum()\n    const treeHeight = reader.readUInt8()\n    const path = Array(treeHeight).fill(0).map(() => ([]))\n    let flags, offset, nLeavesAtThisHeight\n    for (let level = 0; level < treeHeight; level++) {\n      nLeavesAtThisHeight = reader.readVarIntNum()\n      while (nLeavesAtThisHeight) {\n        offset = reader.readVarIntNum()\n        flags = reader.readUInt8()\n        const leaf: {\n          offset: number\n          hash?: string\n          txid?: boolean\n          duplicate?: boolean\n        } = { offset }\n        if (flags & 1) {\n          leaf.duplicate = true\n        } else {\n          if (flags & 2) {\n            leaf.txid = true\n          }\n          leaf.hash = toHex(reader.read(32).reverse())\n        }\n        path[level].push(leaf)\n        nLeavesAtThisHeight--\n      }\n      path[level].sort((a, b) => a.offset - b.offset)\n    }\n    return new MerklePath(blockHeight, path)\n  }\n\n  /**\n   * Creates a MerklePath instance from a binary array.\n   *\n   * @static\n   * @param {number[]} bump - The binary array representation of the Merkle Path.\n   * @returns {MerklePath} - A new MerklePath instance.\n   */\n  static fromBinary (bump: number[]): MerklePath {\n    const reader = new Reader(bump)\n    return MerklePath.fromReader(reader)\n  }\n\n  constructor (blockHeight: number, path: Array<Array<{\n    offset: number\n    hash?: string\n    txid?: boolean\n    duplicate?: boolean\n  }>>) {\n    this.blockHeight = blockHeight\n    this.path = path\n\n    // store all of the legal offsets which we expect given the txid indices.\n    const legalOffsets = Array(this.path.length).fill(0).map(() => new Set())\n    this.path.map((leaves, height) => {\n      if (leaves.length === 0 && height === 0) {\n        throw new Error(`Empty level at height: ${height}`)\n      }\n      const offsetsAtThisHeight = new Set()\n      leaves.map(leaf => {\n        if (offsetsAtThisHeight.has(leaf.offset)) throw new Error(`Duplicate offset: ${leaf.offset}, at height: ${height}`)\n        offsetsAtThisHeight.add(leaf.offset)\n        if (height === 0) {\n          if (!leaf.duplicate) {\n            for (let h = 1; h < this.path.length; h++) {\n              legalOffsets[h].add(leaf.offset >> h ^ 1)\n            }\n          }\n        } else {\n          if (!legalOffsets[height].has(leaf.offset)) {\n            throw new Error(`Invalid offset: ${leaf.offset}, at height: ${height}, with legal offsets: ${Array.from(legalOffsets[height]).join(', ')}`)\n          }\n        }\n      })\n    })\n\n    let root: string\n    // every txid must calculate to the same root.\n    this.path[0].map((leaf, idx) => {\n      if (idx === 0) root = this.computeRoot(leaf.hash)\n      if (root !== this.computeRoot(leaf.hash)) {\n        throw new Error('Mismatched roots')\n      }\n    })\n  }\n\n  /**\n   * Converts the MerklePath to a binary array format.\n   *\n   * @returns {number[]} - The binary array representation of the Merkle Path.\n   */\n  toBinary (): number[] {\n    const writer = new Writer()\n    writer.writeVarIntNum(this.blockHeight)\n    const treeHeight = this.path.length\n    writer.writeUInt8(treeHeight)\n    for (let level = 0; level < treeHeight; level++) {\n      const nLeaves = Object.keys(this.path[level]).length\n      writer.writeVarIntNum(nLeaves)\n      for (const leaf of this.path[level]) {\n        writer.writeVarIntNum(leaf.offset)\n        let flags = 0\n        if (leaf?.duplicate) {\n          flags |= 1\n        }\n        if (leaf?.txid) {\n          flags |= 2\n        }\n        writer.writeUInt8(flags)\n        if ((flags & 1) === 0) {\n          writer.write(toArray(leaf.hash, 'hex').reverse())\n        }\n      }\n    }\n    return writer.toArray()\n  }\n\n  /**\n   * Converts the MerklePath to a hexadecimal string format.\n   *\n   * @returns {string} - The hexadecimal string representation of the Merkle Path.\n   */\n  toHex (): string {\n    return toHex(this.toBinary())\n  }\n\n  /**\n   * Computes the Merkle root from the provided transaction ID.\n   *\n   * @param {string} txid - The transaction ID to compute the Merkle root for. If not provided, the root will be computed from an unspecified branch, and not all branches will be validated!\n   * @returns {string} - The computed Merkle root as a hexadecimal string.\n   * @throws {Error} - If the transaction ID is not part of the Merkle Path.\n   */\n  computeRoot (txid?: string): string {\n    if (typeof txid !== 'string') {\n      txid = this.path[0].find(leaf => Boolean(leaf?.hash)).hash\n    }\n    // Find the index of the txid at the lowest level of the Merkle tree\n    const index = this.path[0].find(l => l.hash === txid).offset\n    if (typeof index !== 'number') {\n      throw new Error(`This proof does not contain the txid: ${txid}`)\n    }\n    // Calculate the root using the index as a way to determine which direction to concatenate.\n    const hash = (m: string): string => toHex((\n      hash256(toArray(m, 'hex').reverse())\n    ).reverse())\n    let workingHash = txid\n    for (let height = 0; height < this.path.length; height++) {\n      const leaves = this.path[height]\n      const offset = index >> height ^ 1\n      const leaf = this.findOrComputeLeaf(height, offset)\n      if (typeof leaf !== 'object') {\n        throw new Error(`Missing hash for index ${index} at height ${height}`)\n      }\n      if (leaf.duplicate) {\n        workingHash = hash(workingHash + workingHash)\n      } else if (offset % 2 !== 0) {\n        workingHash = hash(leaf.hash + workingHash)\n      } else {\n        workingHash = hash(workingHash + leaf.hash)\n      }\n    }\n    return workingHash\n  }\n\n  /**\n   * Find leaf with `offset` at `height` or compute from level below, recursively.\n   *\n   * Does not add computed leaves to path.\n   *\n   * @param height\n   * @param offset\n   */\n  findOrComputeLeaf (height: number, offset: number): MerklePathLeaf | undefined {\n    const hash = (m: string): string => toHex((\n      hash256(toArray(m, 'hex').reverse())\n    ).reverse())\n\n    let leaf: MerklePathLeaf | undefined = this.path[height].find(l => l.offset === offset)\n\n    if (leaf) return leaf\n\n    if (height === 0) return undefined\n\n    const h = height - 1\n    const l = offset << 1\n\n    const leaf0 = this.findOrComputeLeaf(h, l)\n    if (!leaf0 || !leaf0.hash) return undefined\n\n    const leaf1 = this.findOrComputeLeaf(h, l + 1)\n    if (!leaf1) return undefined\n\n    let workinghash: string\n    if (leaf1.duplicate) { workinghash = hash(leaf0.hash + leaf0.hash) } else { workinghash = hash(leaf1.hash + leaf0.hash) }\n    leaf = {\n      offset,\n      hash: workinghash\n    }\n\n    return leaf\n  }\n\n  /**\n   * Verifies if the given transaction ID is part of the Merkle tree at the specified block height.\n   *\n   * @param {string} txid - The transaction ID to verify.\n   * @param {ChainTracker} chainTracker - The ChainTracker instance used to verify the Merkle root.\n   * @returns {boolean} - True if the transaction ID is valid within the Merkle Path at the specified block height.\n   */\n  async verify (txid: string, chainTracker: ChainTracker): Promise<boolean> {\n    const root = this.computeRoot(txid)\n    // Use the chain tracker to determine whether this is a valid merkle root at the given block height\n    return await chainTracker.isValidRootForHeight(root, this.blockHeight)\n  }\n\n  /**\n   * Combines this MerklePath with another to create a compound proof.\n   *\n   * @param {MerklePath} other - Another MerklePath to combine with this path.\n   * @throws {Error} - If the paths have different block heights or roots.\n   */\n  combine (other: MerklePath): void {\n    if (this.blockHeight !== other.blockHeight) {\n      throw new Error('You cannot combine paths which do not have the same block height.')\n    }\n    const root1 = this.computeRoot()\n    const root2 = other.computeRoot()\n    if (root1 !== root2) {\n      throw new Error('You cannot combine paths which do not have the same root.')\n    }\n    const combinedPath = []\n    for (let h = 0; h < this.path.length; h++) {\n      combinedPath.push([])\n      for (let l = 0; l < this.path[h].length; l++) {\n        combinedPath[h].push(this.path[h][l])\n      }\n      for (let l = 0; l < other.path[h].length; l++) {\n        if (!(combinedPath[h].find(leaf => leaf.offset === other.path[h][l].offset) as boolean)) {\n          combinedPath[h].push(other.path[h][l])\n        } else {\n          // Ensure that any elements which appear in both are not downgraded to a non txid.\n          if (other.path[h][l]?.txid) {\n            const target = combinedPath[h].find(leaf => leaf.offset === other.path[h][l].offset)\n            target.txid = true\n          }\n        }\n      }\n    }\n    this.path = combinedPath\n    this.trim()\n  }\n\n  /**\n   * Remove all internal nodes that are not required by level zero txid nodes.\n   * Assumes that at least all required nodes are present.\n   * Leaves all levels sorted by increasing offset.\n   */\n  trim () {\n    const pushIfNew = (v: number, a: number[]) => {\n      if (a.length === 0 || a.slice(-1)[0] !== v) { a.push(v) }\n    }\n\n    const dropOffsetsFromLevel = (dropOffsets: number[], level: number) => {\n      for (let i = dropOffsets.length; i >= 0; i--) {\n        const l = this.path[level].findIndex(n => n.offset === dropOffsets[i])\n        if (l >= 0) { this.path[level].splice(l, 1) }\n      }\n    }\n\n    const nextComputedOffsets = (cos: number[]): number[] => {\n      const ncos: number[] = []\n      for (const o of cos) {\n        pushIfNew(o >> 1, ncos)\n      }\n      return ncos\n    }\n\n    let computedOffsets: number[] = [] // in next level\n    let dropOffsets: number[] = []\n    for (let h = 0; h < this.path.length; h++) {\n      // Sort each level by increasing offset order\n      this.path[h].sort((a, b) => a.offset - b.offset)\n    }\n    for (let l = 0; l < this.path[0].length; l++) {\n      const n = this.path[0][l]\n      if (n.txid) {\n        // level 0 must enable computing level 1 for txid nodes\n        pushIfNew(n.offset >> 1, computedOffsets)\n      } else {\n        const isOdd = n.offset % 2 === 1\n        const peer = this.path[0][l + (isOdd ? -1 : 1)]\n        if (!peer.txid) {\n          // drop non-txid level 0 nodes without a txid peer\n          pushIfNew(peer.offset, dropOffsets)\n        }\n      }\n    }\n    dropOffsetsFromLevel(dropOffsets, 0)\n    for (let h = 1; h < this.path.length; h++) {\n      dropOffsets = computedOffsets\n      computedOffsets = nextComputedOffsets(computedOffsets)\n      dropOffsetsFromLevel(dropOffsets, h)\n    }\n  }\n}\n","import { HttpClient, HttpClientRequestOptions, HttpClientResponse } from './HttpClient.js'\n\n/** Node.js Https module interface limited to options needed by ts-sdk */\nexport interface HttpsNodejs {\n  request: (url: string, options: HttpClientRequestOptions, callback: (res: any) => void) => NodejsHttpClientRequest\n}\n\n/** Nodejs result of the Node.js https.request call limited to options needed by ts-sdk */\nexport interface NodejsHttpClientRequest {\n  write: (chunk: string) => void\n\n  on: (event: string, callback: (data: any) => void) => void\n\n  end: (() => void) & (() => void)\n}\n\n/**\n * Adapter for Node.js Https module to be used as HttpClient\n */\nexport class NodejsHttpClient implements HttpClient {\n  constructor (private readonly https: HttpsNodejs) {}\n\n  async request (url: string, requestOptions: HttpClientRequestOptions): Promise<HttpClientResponse> {\n    return await new Promise((resolve, reject) => {\n      const req = this.https.request(url, requestOptions, (res) => {\n        let body = ''\n        res.on('data', (chunk: string) => {\n          body += chunk\n        })\n        res.on('end', () => {\n          const ok = res.statusCode >= 200 && res.statusCode <= 299\n          const mediaType = res.headers['content-type']\n          const data = body && mediaType.startsWith('application/json') ? JSON.parse(body) : body\n          resolve({\n            status: res.statusCode,\n            statusText: res.statusMessage,\n            ok,\n            data\n          })\n        })\n      })\n\n      req.on('error', (error) => {\n        reject(error)\n      })\n\n      if (requestOptions.data) {\n        req.write(JSON.stringify(requestOptions.data))\n      }\n      req.end()\n    })\n  }\n}\n","import { HttpClient, HttpClientRequestOptions, HttpClientResponse } from './HttpClient.js'\n\n/** fetch function interface limited to options needed by ts-sdk */\n/**\n   * Makes a request to the server.\n   * @param url The URL to make the request to.\n   * @param options The request configuration.\n   */\nexport type Fetch = (url: string, options: FetchOptions) => Promise<Response>\n\n/**\n * An interface for configuration of the request to be passed to the fetch method\n * limited to options needed by ts-sdk.\n */\nexport interface FetchOptions {\n  /** A string to set request's method. */\n  method?: string\n  /** An object literal set request's headers. */\n  headers?: Record<string, string>\n  /** An object or null to set request's body. */\n  body?: string | null\n}\n\n/**\n * Adapter for Node.js Https module to be used as HttpClient\n */\nexport class FetchHttpClient implements HttpClient {\n  constructor (private readonly fetch: Fetch) {}\n\n  async request<D>(url: string, options: HttpClientRequestOptions): Promise<HttpClientResponse<D>> {\n    const fetchOptions: FetchOptions = {\n      method: options.method,\n      headers: options.headers,\n      body: JSON.stringify(options.data)\n    }\n\n    const res = await this.fetch(url, fetchOptions)\n    const mediaType = res.headers.get('Content-Type')\n    const data = mediaType.startsWith('application/json') ? await res.json() : await res.text()\n\n    return {\n      ok: res.ok,\n      status: res.status,\n      statusText: res.statusText,\n      data: data as D\n    }\n  }\n}\n","import { HttpClient, HttpClientResponse } from './HttpClient.js'\nimport { NodejsHttpClient } from './NodejsHttpClient.js'\nimport { FetchHttpClient } from './FetchHttpClient.js'\n\n/**\n * Returns a default HttpClient implementation based on the environment that it is run on.\n * This method will attempt to use `window.fetch` if available (in browser environments).\n * If running in a Node.js environment, it falls back to using the Node.js `https` module\n */\nexport function defaultHttpClient (): HttpClient {\n  const noHttpClient: HttpClient = {\n    async request (..._): Promise<HttpClientResponse> {\n      throw new Error('No method available to perform HTTP request')\n    }\n  }\n\n  if (typeof window !== 'undefined' && typeof window.fetch === 'function') {\n    // Use fetch in a browser environment\n    return new FetchHttpClient(window.fetch)\n  } else if (typeof require !== 'undefined') {\n    // Use Node.js https module\n    // eslint-disable-next-line\n    try {\n      const https = require('https')\n      return new NodejsHttpClient(https)\n    } catch (e) {\n      return noHttpClient\n    }\n  } else {\n    return noHttpClient\n  }\n}\n","import { BroadcastResponse, BroadcastFailure, Broadcaster } from '../Broadcaster.js'\nimport Transaction from '../Transaction.js'\nimport { HttpClient, HttpClientRequestOptions } from '../http/HttpClient.js'\nimport { defaultHttpClient } from '../http/DefaultHttpClient.js'\nimport Random from '../../primitives/Random.js'\nimport { toHex } from '../../primitives/utils.js'\n\n/** Configuration options for the ARC broadcaster. */\nexport interface ArcConfig {\n  /** Authentication token for the ARC API */\n  apiKey?: string\n  /** The HTTP client used to make requests to the ARC API. */\n  httpClient?: HttpClient\n  /** Deployment id used annotating api calls in XDeployment-ID header - this value will be randomly generated if not set */\n  deploymentId?: string\n  /** notification callback endpoint for proofs and double spend notification */\n  callbackUrl?: string\n  /** default access token for notification callback endpoint. It will be used as a Authorization header for the http callback */\n  callbackToken?: string\n  /** additional headers to be attached to all tx submissions. */\n  headers?: Record<string, string>\n}\n\nfunction defaultDeploymentId () {\n  return `ts-sdk-${toHex(Random(16))}`\n}\n\n/**\n * Represents an ARC transaction broadcaster.\n */\nexport default class ARC implements Broadcaster {\n  readonly URL: string\n  readonly apiKey: string | undefined\n  readonly deploymentId: string\n  readonly callbackUrl: string | undefined\n  readonly callbackToken: string | undefined\n  readonly headers: Record<string, string> | undefined\n  private readonly httpClient: HttpClient\n\n  /**\n   * Constructs an instance of the ARC broadcaster.\n   *\n   * @param {string} URL - The URL endpoint for the ARC API.\n   * @param {ArcConfig} config - Configuration options for the ARC broadcaster.\n   */\n  constructor (URL: string, config?: ArcConfig)\n  /**\n   * Constructs an instance of the ARC broadcaster.\n   *\n   * @param {string} URL - The URL endpoint for the ARC API.\n   * @param {string} apiKey - The API key used for authorization with the ARC API.\n   */\n  constructor (URL: string, apiKey?: string)\n\n  constructor (URL: string, config?: string | ArcConfig) {\n    this.URL = URL\n    if (typeof config === 'string') {\n      this.apiKey = config\n      this.httpClient = defaultHttpClient()\n      this.deploymentId = defaultDeploymentId()\n      this.callbackToken = undefined\n      this.callbackUrl = undefined\n    } else {\n      const { apiKey, deploymentId, httpClient, callbackToken, callbackUrl, headers } = config ?? {} as ArcConfig\n      this.apiKey = apiKey\n      this.httpClient = httpClient ?? defaultHttpClient()\n      this.deploymentId = deploymentId ?? defaultDeploymentId()\n      this.callbackToken = callbackToken\n      this.callbackUrl = callbackUrl\n      this.headers = headers\n    }\n  }\n\n  /**\n   * Broadcasts a transaction via ARC.\n   *\n   * @param {Transaction} tx - The transaction to be broadcasted.\n   * @returns {Promise<BroadcastResponse | BroadcastFailure>} A promise that resolves to either a success or failure response.\n   */\n  async broadcast (tx: Transaction): Promise<BroadcastResponse | BroadcastFailure> {\n    let rawTx\n    try {\n      rawTx = tx.toHexEF()\n    } catch (error) {\n      if (error.message === 'All inputs must have source transactions when serializing to EF format') {\n        rawTx = tx.toHex()\n      } else {\n        throw error\n      }\n    }\n\n    const requestOptions: HttpClientRequestOptions = {\n      method: 'POST',\n      headers: this.requestHeaders(),\n      data: { rawTx }\n    }\n\n    try {\n      const response = await this.httpClient.request<ArcResponse>(`${this.URL}/v1/tx`, requestOptions)\n      if (response.ok) {\n        const { txid, extraInfo, txStatus, competingTxs } = response.data\n        let broadcastRes : BroadcastResponse = {\n          status: 'success',\n          txid,\n          message: `${txStatus} ${extraInfo}`\n        }\n        if (competingTxs) {\n          broadcastRes.competingTxs = competingTxs\n        }\n        return broadcastRes\n      } else {\n        const st = typeof response.status\n        const r: BroadcastFailure = {\n          status: 'error',\n          code: st === 'number' || st === 'string' ? response.status.toString() : 'ERR_UNKNOWN',\n          description: 'Unknown error'\n        }\n        let d = response.data\n        if (typeof d === 'string') {\n          try {\n            d = JSON.parse(response.data)\n          } catch { }\n        }\n        if (typeof d === 'object') {\n          r.more = d\n          if (typeof d.txid === 'string') {\n            r.txid = d.txid\n          }\n          if (typeof d.detail === 'string') {\n            r.description = d.detail\n          }\n        }\n        return r\n      }\n    } catch (error) {\n      return {\n        status: 'error',\n        code: '500',\n        description: typeof error.message === 'string'\n          ? error.message\n          : 'Internal Server Error'\n      }\n    }\n  }\n\n  private requestHeaders () {\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      'XDeployment-ID': this.deploymentId\n    }\n\n    if (this.apiKey) {\n      headers.Authorization = `Bearer ${this.apiKey}`\n    }\n\n    if (this.callbackUrl) {\n      headers['X-CallbackUrl'] = this.callbackUrl\n    }\n\n    if (this.callbackToken) {\n      headers['X-CallbackToken'] = this.callbackToken\n    }\n\n    if (this.headers) {\n      for (const key in this.headers) {\n        headers[key] = this.headers[key]\n      }\n    }\n\n    return headers\n  }\n}\n\ninterface ArcResponse {\n  txid: string\n  extraInfo: string\n  txStatus: string\n  competingTxs?: string[]\n}\n","import ChainTracker from '../ChainTracker.js'\nimport { HttpClient } from '../http/HttpClient.js'\nimport { defaultHttpClient } from '../http/DefaultHttpClient.js'\n\n/** Configuration options for the WhatsOnChain ChainTracker. */\nexport interface WhatsOnChainConfig {\n  /** Authentication token for the WhatsOnChain API */\n  apiKey?: string\n  /** The HTTP client used to make requests to the API. */\n  httpClient?: HttpClient\n}\n\ninterface WhatsOnChainBlockHeader {\n  merkleroot: string\n}\n\n/**\n * Represents a chain tracker based on What's On Chain .\n */\nexport default class WhatsOnChain implements ChainTracker {\n  readonly network: string\n  readonly apiKey: string\n  private readonly URL: string\n  private readonly httpClient: HttpClient\n\n  /**\n   * Constructs an instance of the WhatsOnChain ChainTracker.\n   *\n   * @param {'main' | 'test' | 'stn'} network - The BSV network to use when calling the WhatsOnChain API.\n   * @param {WhatsOnChainConfig} config - Configuration options for the WhatsOnChain ChainTracker.\n   */\n  constructor (network: 'main' | 'test' | 'stn' = 'main', config: WhatsOnChainConfig = {}) {\n    const { apiKey, httpClient } = config\n    this.network = network\n    this.URL = `https://api.whatsonchain.com/v1/bsv/${network}`\n    this.httpClient = httpClient ?? defaultHttpClient()\n    this.apiKey = apiKey\n  }\n\n  async isValidRootForHeight (root: string, height: number): Promise<boolean> {\n    const requestOptions = {\n      method: 'GET',\n      headers: this.getHeaders()\n    }\n\n    const response = await this.httpClient.request<WhatsOnChainBlockHeader>(`${this.URL}/block/${height}/header`, requestOptions)\n    if (response.ok) {\n      const { merkleroot } = response.data\n      return merkleroot === root\n    } else if (response.status === 404) {\n      return false\n    } else {\n      throw new Error(`Failed to verify merkleroot for height ${height} because of an error: ${JSON.stringify(response.data)} `)\n    }\n  }\n\n  private getHeaders () {\n    const headers: Record<string, string> = {\n      Accept: 'application/json'\n    }\n\n    if (this.apiKey) {\n      headers.Authorization = this.apiKey\n    }\n\n    return headers\n  }\n}\n","import MerklePath from './MerklePath.js'\nimport Transaction from './Transaction.js'\nimport ChainTracker from './ChainTracker.js'\nimport BeefTx from './BeefTx.js'\nimport { Reader, Writer, toHex, toArray } from '../primitives/utils.js'\n\nexport const BEEF_MAGIC = 4022206465 // 0100BEEF in LE order\nexport const BEEF_MAGIC_V2 = 4022206466 // 0200BEEF in LE order\nexport const BEEF_MAGIC_TXID_ONLY_EXTENSION = 4022206465 // 0100BEEF in LE order\n\nexport type BeefVersion = undefined | 'V1' | 'V2'\n\n/*\n * BEEF standard: BRC-62: Background Evaluation Extended Format (BEEF) Transactions\n * https://github.com/bitcoin-sv/BRCs/blob/master/transactions/0062.md\n *\n * BUMP standard: BRC-74: BSV Unified Merkle Path (BUMP) Format\n * https://github.com/bitcoin-sv/BRCs/blob/master/transactions/0074.md\n *\n * A valid serialized BEEF is the cornerstone of Simplified Payment Validation (SPV)\n * where they are exchanged between two non-trusting parties to establish the\n * validity of a newly constructed bitcoin transaction and its inputs from prior\n * transactions.\n *\n * A `Beef` is fundamentally an list of `BUMP`s and a list of transactions.\n *\n * A `BUMP` is a partial merkle tree for a 'mined' bitcoin block.\n * It can therefore be used to prove the validity of transaction data\n * for each transaction txid whose merkle path is included in the tree.\n *\n * To be valid, the list of transactions must be sorted in dependency order:\n * oldest transaction first;\n * and each transaction must either\n * have a merkle path in one of the BUMPs, or\n * have all of its input transactions included in the list of transactions.\n *\n * The `Beef` class supports the construction of valid BEEFs by allowing BUMPs\n * (merkle paths) and transactions to be merged sequentially.\n *\n * The `Beef` class also extends the standard by supporting 'known' transactions.\n * A 'known' transaction is represented solely by its txid.\n * To become valid, all the 'known' transactions in a `Beef` must be replaced by full\n * transactions and merkle paths, if they are mined.\n *\n * The purpose of supporting 'known' transactions is that one or both parties\n * generating and exchanging BEEFs often possess partial knowledge of valid transactions\n * due to their history.\n *\n * A valid `Beef` is only required when sent to a party with no shared history,\n * such as a transaction processor.\n */\nexport class Beef {\n  bumps: MerklePath[] = []\n  txs: BeefTx[] = []\n  version: BeefVersion = undefined\n\n  constructor (version?: BeefVersion) {\n    this.version = version\n  }\n\n  /**\n     * BEEF_MAGIC is the original V1 version.\n     * BEEF_MAGIC_V2 includes support for txidOnly transactions in serialized beefs.\n     * @returns version magic value based on current contents and constructor version parameter.\n     */\n  get magic (): number {\n    if (this.version === 'V1') { return BEEF_MAGIC }\n\n    if (this.version === 'V2') { return BEEF_MAGIC_V2 }\n\n    const hasTxidOnly = this.txs.findIndex(tx => tx.isTxidOnly) > -1\n    if (hasTxidOnly) { return BEEF_MAGIC_V2 }\n\n    return BEEF_MAGIC\n  }\n\n  /**\n     * @param txid of `beefTx` to find\n     * @returns `BeefTx` in `txs` with `txid`.\n     */\n  findTxid (txid: string): BeefTx | undefined {\n    return this.txs.find(tx => tx.txid === txid)\n  }\n\n  /**\n     * Merge a MerklePath that is assumed to be fully valid.\n     * @param bump\n     * @returns index of merged bump\n     */\n  mergeBump (bump: MerklePath): number {\n    let bumpIndex: number | undefined\n    // If this proof is identical to another one previously added, we use that first. Otherwise, we try to merge it with proofs from the same block.\n    for (let i = 0; i < this.bumps.length; i++) {\n      const b = this.bumps[i]\n      if (b === bump) { // Literally the same\n        return i\n      }\n      if (b.blockHeight === bump.blockHeight) {\n        // Probably the same...\n        const rootA = b.computeRoot()\n        const rootB = bump.computeRoot()\n        if (rootA === rootB) {\n          // Definitely the same... combine them to save space\n          b.combine(bump)\n          bumpIndex = i\n          break\n        }\n      }\n    }\n\n    // if the proof is not yet added, add a new path.\n    if (bumpIndex === undefined) {\n      bumpIndex = this.bumps.length\n      this.bumps.push(bump)\n    }\n\n    // review if any transactions are proven by this bump\n    const b = this.bumps[bumpIndex]\n    for (const tx of this.txs) {\n      const txid = tx.txid\n      if (!tx.bumpIndex) {\n        for (const n of b.path[0]) {\n          if (n.hash === txid) {\n            tx.bumpIndex = bumpIndex\n            n.txid = true\n            break\n          }\n        }\n      }\n    }\n\n    return bumpIndex\n  }\n\n  /**\n     * Merge a serialized transaction.\n     *\n     * Checks that a transaction with the same txid hasn't already been merged.\n     *\n     * Replaces existing transaction with same txid.\n     *\n     * @param rawTx\n     * @param bumpIndex Optional. If a number, must be valid index into bumps array.\n     * @returns txid of rawTx\n     */\n  mergeRawTx (rawTx: number[], bumpIndex?: number): BeefTx {\n    const newTx: BeefTx = new BeefTx(rawTx, bumpIndex)\n    this.removeExistingTxid(newTx.txid)\n    this.txs.push(newTx)\n    this.tryToValidateBumpIndex(newTx)\n    return newTx\n  }\n\n  /**\n     * Merge a `Transaction` and any referenced `merklePath` and `sourceTransaction`, recursifely.\n     *\n     * Replaces existing transaction with same txid.\n     *\n     * Attempts to match an existing bump to the new transaction.\n     *\n     * @param tx\n     * @returns txid of tx\n     */\n  mergeTransaction (tx: Transaction): BeefTx {\n    const txid = tx.id('hex')\n    this.removeExistingTxid(txid)\n    let bumpIndex: number | undefined\n    if (tx.merklePath) { bumpIndex = this.mergeBump(tx.merklePath) }\n    const newTx = new BeefTx(tx, bumpIndex)\n    this.txs.push(newTx)\n    this.tryToValidateBumpIndex(newTx)\n    bumpIndex = newTx.bumpIndex\n    if (bumpIndex === undefined) {\n      for (const input of tx.inputs) {\n        if (input.sourceTransaction) { this.mergeTransaction(input.sourceTransaction) }\n      }\n    }\n    return newTx\n  }\n\n  /**\n     * Removes an existing transaction from the BEEF, given its TXID\n     * @param txid TXID of the transaction to remove\n     */\n  removeExistingTxid (txid: string) {\n    const existingTxIndex = this.txs.findIndex(t => t.txid === txid)\n    if (existingTxIndex >= 0) { this.txs.splice(existingTxIndex, 1) }\n  }\n\n  mergeTxidOnly (txid: string): BeefTx {\n    if (this.version === 'V1') { throw new Error('BEEF V1 format does not support txid only transactions.') }\n\n    let tx = this.txs.find(t => t.txid === txid)\n    if (!tx) {\n      tx = new BeefTx(txid)\n      this.txs.push(tx)\n      this.tryToValidateBumpIndex(tx)\n    }\n    return tx\n  }\n\n  mergeBeefTx (btx: BeefTx): BeefTx {\n    let beefTx = this.findTxid(btx.txid)\n    if (!beefTx && btx.isTxidOnly) { beefTx = this.mergeTxidOnly(btx.txid) } else if (!beefTx || beefTx.isTxidOnly) {\n      if (btx._tx) { beefTx = this.mergeTransaction(btx._tx) } else { beefTx = this.mergeRawTx(btx._rawTx) }\n    }\n    return beefTx\n  }\n\n  mergeBeef (beef: number[] | Beef) {\n    const b: Beef = Array.isArray(beef) ? Beef.fromBinary(beef) : beef\n\n    for (const bump of b.bumps) { this.mergeBump(bump) }\n\n    for (const tx of b.txs) { this.mergeBeefTx(tx) }\n  }\n\n  /**\n     * Sorts `txs` and checks structural validity of beef.\n     *\n     * Does NOT verify merkle roots.\n     *\n     * Validity requirements:\n     * 1. No 'known' txids, unless `allowTxidOnly` is true.\n     * 2. All transactions have bumps or their inputs chain back to bumps (or are known).\n     * 3. Order of transactions satisfies dependencies before dependents.\n     * 4. No transactions with duplicate txids.\n     *\n     * @param allowTxidOnly optional. If true, transaction txid only is assumed valid\n     */\n  isValid (allowTxidOnly?: boolean): boolean {\n    return this.verifyValid(allowTxidOnly).valid\n  }\n\n  /**\n     * Sorts `txs` and confirms validity of transaction data contained in beef\n     * by validating structure of this beef and confirming computed merkle roots\n     * using `chainTracker`.\n     *\n     * Validity requirements:\n     * 1. No 'known' txids, unless `allowTxidOnly` is true.\n     * 2. All transactions have bumps or their inputs chain back to bumps (or are known).\n     * 3. Order of transactions satisfies dependencies before dependents.\n     * 4. No transactions with duplicate txids.\n     *\n     * @param chainTracker Used to verify computed merkle path roots for all bump txids.\n     * @param allowTxidOnly optional. If true, transaction txid is assumed valid\n     */\n  async verify (chainTracker: ChainTracker, allowTxidOnly?: boolean): Promise<boolean> {\n    const r = this.verifyValid(allowTxidOnly)\n    if (!r.valid) return false\n\n    for (const height of Object.keys(r.roots)) {\n      const isValid = await chainTracker.isValidRootForHeight(r.roots[height], Number(height))\n      if (!isValid) { return false }\n    }\n\n    return true\n  }\n\n  private verifyValid (allowTxidOnly?: boolean): { valid: boolean, roots: Record<number, string> } {\n    const r: { valid: boolean, roots: Record<number, string> } = { valid: false, roots: {} }\n\n    this.sortTxs()\n\n    // valid txids: only txids if allowed, bump txids, then txids with input's in txids\n    const txids: Record<string, boolean> = {}\n\n    for (const tx of this.txs) {\n      if (tx.isTxidOnly) {\n        if (!allowTxidOnly) return r\n        txids[tx.txid] = true\n      }\n    }\n\n    const confirmComputedRoot = (b: MerklePath, txid: string): boolean => {\n      const root = b.computeRoot(txid)\n      if (!r.roots[b.blockHeight]) {\n        // accept the root as valid for this block and reuse for subsequent txids\n        r.roots[b.blockHeight] = root\n      }\n      if (r.roots[b.blockHeight] !== root) { return false }\n      return true\n    }\n\n    for (const b of this.bumps) {\n      for (const n of b.path[0]) {\n        if (n.txid && n.hash) {\n          txids[n.hash] = true\n          // all txid hashes in all bumps must have agree on computed merkle path roots\n          if (!confirmComputedRoot(b, n.hash)) { return r }\n        }\n      }\n    }\n\n    for (const t of this.txs) {\n      for (const i of t.inputTxids)\n      // all input txids must be included before they are referenced\n      { if (!txids[i]) return r }\n      txids[t.txid] = true\n    }\n\n    r.valid = true\n    return r\n  }\n\n  /**\n     * Returns a binary array representing the serialized BEEF\n     * @returns A binary array representing the BEEF\n     */\n  toBinary (): number[] {\n    const writer = new Writer()\n    writer.writeUInt32LE(this.magic)\n\n    writer.writeVarIntNum(this.bumps.length)\n    for (const b of this.bumps) {\n      writer.write(b.toBinary())\n    }\n\n    writer.writeVarIntNum(this.txs.length)\n    for (const tx of this.txs) {\n      tx.toWriter(writer, this.magic)\n    }\n\n    return writer.toArray()\n  }\n\n  /**\n     * Returns a hex string representing the serialized BEEF\n     * @returns A hex string representing the BEEF\n     */\n  toHex (): string {\n    return toHex(this.toBinary())\n  }\n\n  static fromReader (br: Reader): Beef {\n    const version = br.readUInt32LE()\n    if (version !== BEEF_MAGIC && version !== BEEF_MAGIC_V2) { throw new Error(`Serialized BEEF must start with ${BEEF_MAGIC} or ${BEEF_MAGIC_V2} but starts with ${version}`) }\n    const beef = new Beef(version === BEEF_MAGIC_V2 ? 'V2' : undefined)\n    const bumpsLength = br.readVarIntNum()\n    for (let i = 0; i < bumpsLength; i++) {\n      const bump = MerklePath.fromReader(br)\n      beef.bumps.push(bump)\n    }\n    const txsLength = br.readVarIntNum()\n    for (let i = 0; i < txsLength; i++) {\n      const beefTx = BeefTx.fromReader(br, version)\n      beef.txs.push(beefTx)\n    }\n    return beef\n  }\n\n  /**\n     * Constructs an instance of the Beef class based on the provided binary array\n     * @param bin The binary array from which to construct BEEF\n     * @returns An instance of the Beef class constructed from the binary data\n     */\n  static fromBinary (bin: number[]): Beef {\n    const br = new Reader(bin)\n    return Beef.fromReader(br)\n  }\n\n  /**\n     * Constructs an instance of the Beef class based on the provided string\n     * @param s The string value from which to construct BEEF\n     * @param enc The encoding of the string value from which BEEF should be constructed\n     * @returns An instance of the Beef class constructed from the string\n     */\n  static fromString (s: string, enc?: 'hex' | 'utf8' | 'base64'): Beef {\n    enc ||= 'hex'\n    const bin = toArray(s, enc)\n    const br = new Reader(bin)\n    return Beef.fromReader(br)\n  }\n\n  /**\n     * Try to validate newTx.bumpIndex by looking for an existing bump\n     * that proves newTx.txid\n     *\n     * @param newTx A new `BeefTx` that has been added to this.txs\n     * @returns true if a bump was found, false otherwise\n     */\n  private tryToValidateBumpIndex (newTx: BeefTx): boolean {\n    if (newTx.bumpIndex !== undefined) { return true }\n    const txid = newTx.txid\n    for (let i = 0; i < this.bumps.length; i++) {\n      const j = this.bumps[i].path[0].findIndex(b => b.hash === txid)\n      if (j >= 0) {\n        newTx.bumpIndex = i\n        this.bumps[i].path[0][j].txid = true\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n     * Sort the `txs` by input txid dependency order.\n     * @returns array of input txids of unproven transactions that aren't included in txs.\n     */\n  sortTxs (): string[] {\n    const missingInputs: Record<string, boolean> = {}\n\n    const txidToTx: Record<string, BeefTx> = {}\n\n    for (const tx of this.txs) {\n      txidToTx[tx.txid] = tx\n      // All transactions in this beef start at degree zero.\n      tx.degree = 0\n    }\n\n    for (const tx of this.txs) {\n      if (tx.bumpIndex === undefined) {\n        // For all the unproven transactions,\n        // link their inputs that exist in this beef,\n        // make a note of missing inputs.\n        for (const inputTxid of tx.inputTxids) {\n          if (!txidToTx[inputTxid]) { missingInputs[inputTxid] = true }\n        }\n      }\n    }\n\n    // queue of transactions that no unsorted transactions depend upon...\n    const queue: BeefTx[] = []\n    // sorted transactions\n    const result: BeefTx[] = []\n\n    // Increment each txid's degree for every input reference to it by another txid\n    for (const tx of this.txs) {\n      for (const inputTxid of tx.inputTxids) {\n        const tx = txidToTx[inputTxid]\n        if (tx) { tx.degree++ }\n      }\n    }\n    // Since circular dependencies aren't possible, start with the txids no one depends on.\n    // These are the transactions that should be sent last...\n    for (const tx of this.txs) {\n      if (tx.degree === 0) {\n        queue.push(tx)\n      }\n    }\n    // As long as we have transactions to send...\n    while (queue.length > 0) {\n      const tx = queue.shift()!\n      // Add it as new first to send\n      result.unshift(tx)\n      // And remove its impact on degree\n      // noting that any tx achieving a\n      // value of zero can be sent...\n      for (const inputTxid of tx.inputTxids) {\n        const inputTx = txidToTx[inputTxid]\n        if (inputTx) {\n          inputTx.degree--\n          if (inputTx.degree === 0) {\n            queue.push(inputTx)\n          }\n        }\n      }\n    }\n    this.txs = result\n\n    return Object.keys(missingInputs)\n  }\n\n  /**\n     * @returns a shallow copy of this beef\n     */\n  clone (): Beef {\n    const c = new Beef()\n    c.bumps = Array.from(this.bumps)\n    c.txs = Array.from(this.txs)\n    return c\n  }\n\n  /**\n     * Ensure that all the txids in `knownTxids` are txidOnly\n     * @param knownTxids\n     */\n  trimKnownTxids (knownTxids: string[]) {\n    for (let i = 0; i < this.txs.length;) {\n      const tx = this.txs[i]\n      if (tx.isTxidOnly && knownTxids.includes(tx.txid)) {\n        this.txs.splice(i, 1)\n      } else {\n        i++\n      }\n    }\n    // TODO: bumps could be trimmed to eliminate unreferenced proofs.\n  }\n\n  /**\n     * @returns Summary of `Beef` contents as multi-line string.\n     */\n  toLogString (): string {\n    let log = ''\n    log += `BEEF with ${this.bumps.length} BUMPS and ${this.txs.length} Transactions, isValid ${this.isValid()}\\n`\n    let i = -1\n    for (const b of this.bumps) {\n      i++\n      log += `  BUMP ${i}\\n    block: ${b.blockHeight}\\n    txids: [\\n${b.path[0].filter(n => !!n.txid).map(n => `      '${n.hash}'`).join(',\\n')}\\n    ]\\n`\n    }\n    i = -1\n    for (const t of this.txs) {\n      i++\n      log += `  TX ${i}\\n    txid: ${t.txid}\\n`\n      if (t.bumpIndex !== undefined) {\n        log += `    bumpIndex: ${t.bumpIndex}\\n`\n      }\n      if (t.isTxidOnly) {\n        log += '    txidOnly\\n'\n      } else {\n        log += `    rawTx length=${t.rawTx.length}\\n`\n      }\n      if (t.inputTxids.length > 0) {\n        log += `    inputs: [\\n${t.inputTxids.map(it => `      '${it}'`).join(',\\n')}\\n    ]\\n`\n      }\n    }\n    return log\n  }\n}\n\nexport default Beef\n","import TransactionInput from './TransactionInput.js'\nimport TransactionOutput from './TransactionOutput.js'\nimport UnlockingScript from '../script/UnlockingScript.js'\nimport LockingScript from '../script/LockingScript.js'\nimport { Reader, Writer, toHex, toArray } from '../primitives/utils.js'\nimport { hash256 } from '../primitives/Hash.js'\nimport FeeModel from './FeeModel.js'\nimport SatoshisPerKilobyte from './fee-models/SatoshisPerKilobyte.js'\nimport { Broadcaster, BroadcastResponse, BroadcastFailure } from './Broadcaster.js'\nimport MerklePath from './MerklePath.js'\nimport Spend from '../script/Spend.js'\nimport ChainTracker from './ChainTracker.js'\nimport { defaultBroadcaster } from './broadcasters/DefaultBroadcaster.js'\nimport { defaultChainTracker } from './chaintrackers/DefaultChainTracker.js'\nimport { BEEF_MAGIC } from './Beef.js'\n\n/**\n * Represents a complete Bitcoin transaction. This class encapsulates all the details\n * required for creating, signing, and processing a Bitcoin transaction, including\n * inputs, outputs, and various transaction-related methods.\n *\n * @class Transaction\n * @property {number} version - The version number of the transaction. Used to specify\n *           which set of rules this transaction follows.\n * @property {TransactionInput[]} inputs - An array of TransactionInput objects, representing\n *           the inputs for the transaction. Each input references a previous transaction's output.\n * @property {TransactionOutput[]} outputs - An array of TransactionOutput objects, representing\n *           the outputs for the transaction. Each output specifies the amount of satoshis to be\n *           transferred and the conditions under which they can be spent.\n * @property {number} lockTime - The lock time of the transaction. If non-zero, it specifies the\n *           earliest time or block height at which the transaction can be added to the block chain.\n * @property {Record<string, any>} metadata - A key-value store for attaching additional data to\n *           the transaction object, not included in the transaction itself. Useful for adding descriptions, internal reference numbers, or other information.\n * @property {MerkleProof} [merklePath] - Optional. A merkle proof demonstrating the transaction's\n *           inclusion in a block. Useful for transaction verification using SPV.\n *\n * @example\n * // Creating a new transaction\n * let tx = new Transaction();\n * tx.addInput(...);\n * tx.addOutput(...);\n * await tx.fee();\n * await tx.sign();\n * await tx.broadcast();\n *\n * @description\n * The Transaction class provides comprehensive\n * functionality to handle various aspects of transaction creation, including\n * adding inputs and outputs, computing fees, signing the transaction, and\n * generating its binary or hexadecimal representation.\n */\nexport default class Transaction {\n  version: number\n  inputs: TransactionInput[]\n  outputs: TransactionOutput[]\n  lockTime: number\n  metadata: Record<string, any>\n  merklePath?: MerklePath\n  private cachedHash?: number[]\n\n  /**\n   * Creates a new transaction, linked to its inputs and their associated merkle paths, from a BEEF (BRC-62) structure.\n   * Optionally, you can provide a specific TXID to retrieve a particular transaction from the BEEF data.\n   * If the TXID is provided but not found in the BEEF data, an error will be thrown.\n   * If no TXID is provided, the last transaction in the BEEF data is returned.\n   * @param beef A binary representation of transactions in BEEF format.\n   * @param txid Optional TXID of the transaction to retrieve from the BEEF data.\n   * @returns An anchored transaction, linked to its associated inputs populated with merkle paths.\n   */\n  static fromBEEF (beef: number[], txid?: string): Transaction {\n    const reader = new Reader(beef)\n    const { transactions, BUMPs } = Transaction.parseBEEFData(reader)\n\n    // The last transaction in the BEEF data can be used if txid is not provided\n    const txids = Object.keys(transactions)\n    const lastTXID = txids[txids.length - 1]\n    const targetTXID = txid || lastTXID\n\n    if (!transactions[targetTXID]) {\n      throw new Error(`Transaction with TXID ${targetTXID} not found in BEEF data.`)\n    }\n\n    // Recursive function for adding merkle proofs or input transactions\n    const addPathOrInputs = (obj: { pathIndex?: number, tx: Transaction }): void => {\n      if (typeof obj.pathIndex === 'number') {\n        const path = BUMPs[obj.pathIndex]\n        if (typeof path !== 'object') {\n          throw new Error('Invalid merkle path index found in BEEF!')\n        }\n        obj.tx.merklePath = path\n      } else {\n        for (let i = 0; i < obj.tx.inputs.length; i++) {\n          const input = obj.tx.inputs[i]\n          const sourceObj = transactions[input.sourceTXID]\n          if (typeof sourceObj !== 'object') {\n            throw new Error(`Reference to unknown TXID in BEEF: ${input.sourceTXID}`)\n          }\n          input.sourceTransaction = sourceObj.tx\n          addPathOrInputs(sourceObj)\n        }\n      }\n    }\n\n    addPathOrInputs(transactions[targetTXID])\n\n    return transactions[targetTXID].tx\n  }\n\n  /**\n   * Creates a new transaction from an Atomic BEEF (BRC-95) structure.\n   * Extracts the subject transaction and ensures that all transactions within the BEEF data\n   * are part of the dependency graph of the subject transaction.\n   * Throws errors if the Atomic BEEF data does not strictly adhere to the BRC-95 specification.\n   *\n   * @param beef A binary representation of an Atomic BEEF structure.\n   * @returns The subject transaction, linked to its associated inputs populated with merkle paths.\n   */\n  static fromAtomicBEEF (beef: number[]): Transaction {\n    const reader = new Reader(beef)\n    // Read the Atomic BEEF prefix\n    const prefix = reader.readUInt32LE()\n    if (prefix !== 0x01010101) {\n      throw new Error(`Invalid Atomic BEEF prefix. Expected 0x01010101, received ${prefix.toString(16)}.`)\n    }\n\n    // Read the subject TXID\n    const subjectTXIDArray = reader.read(32)\n    const subjectTXID = toHex(subjectTXIDArray)\n\n    // The remaining data is the BEEF data\n    const beefReader = new Reader(reader.read())\n    const { transactions, BUMPs } = Transaction.parseBEEFData(beefReader)\n\n    // Ensure that the subject transaction exists\n    if (!transactions[subjectTXID]) {\n      throw new Error(`Subject transaction with TXID ${subjectTXID} not found in Atomic BEEF data.`)\n    }\n\n    // Ensure that all transactions are part of the dependency graph of the subject transaction\n    const validTxids = new Set<string>()\n    const traverseDependencies = (txid: string) => {\n      if (validTxids.has(txid)) {\n        return\n      }\n      validTxids.add(txid)\n      const tx = transactions[txid].tx\n      for (const input of tx.inputs) {\n        const inputTxid = input.sourceTXID\n        if (!transactions[inputTxid]) {\n          throw new Error(`Input transaction with TXID ${inputTxid} is missing in Atomic BEEF data.`)\n        }\n        traverseDependencies(inputTxid)\n      }\n    }\n\n    traverseDependencies(subjectTXID)\n\n    // Check for any unrelated transactions\n    for (const txid in transactions) {\n      if (!validTxids.has(txid)) {\n        throw new Error(`Unrelated transaction with TXID ${txid} found in Atomic BEEF data.`)\n      }\n    }\n\n    // Build the transaction by linking inputs and merkle paths\n    const addPathOrInputs = (obj: { pathIndex?: number, tx: Transaction }): void => {\n      if (typeof obj.pathIndex === 'number') {\n        const path = BUMPs[obj.pathIndex]\n        if (typeof path !== 'object') {\n          throw new Error('Invalid merkle path index found in BEEF!')\n        }\n        obj.tx.merklePath = path\n      } else {\n        for (let i = 0; i < obj.tx.inputs.length; i++) {\n          const input = obj.tx.inputs[i]\n          const sourceObj = transactions[input.sourceTXID]\n          if (typeof sourceObj !== 'object') {\n            throw new Error(`Reference to unknown TXID in BEEF: ${input.sourceTXID}`)\n          }\n          input.sourceTransaction = sourceObj.tx\n          addPathOrInputs(sourceObj)\n        }\n      }\n    }\n\n    addPathOrInputs(transactions[subjectTXID])\n\n    return transactions[subjectTXID].tx\n  }\n\n  /**\n   * Parses BEEF data from a Reader and returns the transactions and BUMPs.\n   *\n   * @param reader The Reader positioned at the start of BEEF data.\n   * @returns An object containing the transactions and BUMPs.\n   */\n  private static parseBEEFData (reader: Reader): { transactions: Record<string, { pathIndex?: number, tx: Transaction }>, BUMPs: MerklePath[] } {\n    // Read the version\n    const version = reader.readUInt32LE()\n    if (version !== BEEF_MAGIC) {\n      throw new Error(`Invalid BEEF version. Expected ${BEEF_MAGIC}, received ${version}.`)\n    }\n\n    // Read the BUMPs\n    const numberOfBUMPs = reader.readVarIntNum()\n    const BUMPs = []\n    for (let i = 0; i < numberOfBUMPs; i++) {\n      BUMPs.push(MerklePath.fromReader(reader))\n    }\n\n    // Read all transactions into an object\n    // The object has keys of TXIDs and values of objects with transactions and BUMP indexes\n    const numberOfTransactions = reader.readVarIntNum()\n    const transactions: Record<string, { pathIndex?: number, tx: Transaction }> = {}\n    for (let i = 0; i < numberOfTransactions; i++) {\n      const tx = Transaction.fromReader(reader)\n      const obj: { pathIndex?: number, tx: Transaction } = { tx }\n      const txid = tx.id('hex')\n      const hasBump = Boolean(reader.readUInt8())\n      if (hasBump) {\n        obj.pathIndex = reader.readVarIntNum()\n      }\n      transactions[txid] = obj\n    }\n\n    return { transactions, BUMPs }\n  }\n\n  /**\n   * Creates a new transaction, linked to its inputs and their associated merkle paths, from a EF (BRC-30) structure.\n   * @param ef A binary representation of a transaction in EF format.\n   * @returns An extended transaction, linked to its associated inputs by locking script and satoshis amounts only.\n   */\n  static fromEF (ef: number[]): Transaction {\n    const br = new Reader(ef)\n    const version = br.readUInt32LE()\n    if (toHex(br.read(6)) !== '0000000000ef') throw new Error('Invalid EF marker')\n    const inputsLength = br.readVarIntNum()\n    const inputs: TransactionInput[] = []\n    for (let i = 0; i < inputsLength; i++) {\n      const sourceTXID = toHex(br.readReverse(32))\n      const sourceOutputIndex = br.readUInt32LE()\n      const scriptLength = br.readVarIntNum()\n      const scriptBin = br.read(scriptLength)\n      const unlockingScript = UnlockingScript.fromBinary(scriptBin)\n      const sequence = br.readUInt32LE()\n      const satoshis = br.readUInt64LEBn().toNumber()\n      const lockingScriptLength = br.readVarIntNum()\n      const lockingScriptBin = br.read(lockingScriptLength)\n      const lockingScript = LockingScript.fromBinary(lockingScriptBin)\n      const sourceTransaction = new Transaction(null, [], [], null)\n      sourceTransaction.outputs = Array(sourceOutputIndex + 1).fill(null)\n      sourceTransaction.outputs[sourceOutputIndex] = {\n        satoshis,\n        lockingScript\n      }\n      inputs.push({\n        sourceTransaction,\n        sourceTXID,\n        sourceOutputIndex,\n        unlockingScript,\n        sequence\n      })\n    }\n    const outputsLength = br.readVarIntNum()\n    const outputs: TransactionOutput[] = []\n    for (let i = 0; i < outputsLength; i++) {\n      const satoshis = br.readUInt64LEBn().toNumber()\n      const scriptLength = br.readVarIntNum()\n      const scriptBin = br.read(scriptLength)\n      const lockingScript = LockingScript.fromBinary(scriptBin)\n      outputs.push({\n        satoshis,\n        lockingScript\n      })\n    }\n    const lockTime = br.readUInt32LE()\n    return new Transaction(version, inputs, outputs, lockTime)\n  }\n\n  /**\n   * Since the validation of blockchain data is atomically transaction data validation,\n   * any application seeking to validate data in output scripts must store the entire transaction as well.\n   * Since the transaction data includes the output script data, saving a second copy of potentially\n   * large scripts can bloat application storage requirements.\n   *\n   * This function efficiently parses binary transaction data to determine the offsets and lengths of each script.\n   * This supports the efficient retreival of script data from transaction data.\n   *\n   * @param bin binary transaction data\n   * @returns {\n   *   inputs: { vin: number, offset: number, length: number }[]\n   *   outputs: { vout: number, offset: number, length: number }[]\n   * }\n   */\n  static parseScriptOffsets (bin: number[]): {\n    inputs: Array<{ vin: number, offset: number, length: number }>\n    outputs: Array<{ vout: number, offset: number, length: number }>\n  } {\n    const br = new Reader(bin)\n    const inputs: Array<{ vin: number, offset: number, length: number }> = []\n    const outputs: Array<{ vout: number, offset: number, length: number }> = []\n\n    br.pos += 4 // version\n    const inputsLength = br.readVarIntNum()\n    for (let i = 0; i < inputsLength; i++) {\n      br.pos += 36 // txid and vout\n      const scriptLength = br.readVarIntNum()\n      inputs.push({ vin: i, offset: br.pos, length: scriptLength })\n      br.pos += scriptLength + 4 // script and sequence\n    }\n    const outputsLength = br.readVarIntNum()\n    for (let i = 0; i < outputsLength; i++) {\n      br.pos += 8 // satoshis\n      const scriptLength = br.readVarIntNum()\n      outputs.push({ vout: i, offset: br.pos, length: scriptLength })\n      br.pos += scriptLength\n    }\n    return { inputs, outputs }\n  }\n\n  static fromReader (br: Reader): Transaction {\n    const version = br.readUInt32LE()\n    const inputsLength = br.readVarIntNum()\n    const inputs: TransactionInput[] = []\n    for (let i = 0; i < inputsLength; i++) {\n      const sourceTXID = toHex(br.readReverse(32))\n      const sourceOutputIndex = br.readUInt32LE()\n      const scriptLength = br.readVarIntNum()\n      const scriptBin = br.read(scriptLength)\n      const unlockingScript = UnlockingScript.fromBinary(scriptBin)\n      const sequence = br.readUInt32LE()\n      inputs.push({\n        sourceTXID,\n        sourceOutputIndex,\n        unlockingScript,\n        sequence\n      })\n    }\n    const outputsLength = br.readVarIntNum()\n    const outputs: TransactionOutput[] = []\n    for (let i = 0; i < outputsLength; i++) {\n      const satoshis = br.readUInt64LEBn().toNumber()\n      const scriptLength = br.readVarIntNum()\n      const scriptBin = br.read(scriptLength)\n      const lockingScript = LockingScript.fromBinary(scriptBin)\n      outputs.push({\n        satoshis,\n        lockingScript\n      })\n    }\n    const lockTime = br.readUInt32LE()\n    return new Transaction(version, inputs, outputs, lockTime)\n  }\n\n  /**\n   * Creates a Transaction instance from a binary array.\n   *\n   * @static\n   * @param {number[]} bin - The binary array representation of the transaction.\n   * @returns {Transaction} - A new Transaction instance.\n   */\n  static fromBinary (bin: number[]): Transaction {\n    const br = new Reader(bin)\n    return Transaction.fromReader(br)\n  }\n\n  /**\n   * Creates a Transaction instance from a hexadecimal string.\n   *\n   * @static\n   * @param {string} hex - The hexadecimal string representation of the transaction.\n   * @returns {Transaction} - A new Transaction instance.\n   */\n  static fromHex (hex: string): Transaction {\n    return Transaction.fromBinary(toArray(hex, 'hex'))\n  }\n\n  /**\n   * Creates a Transaction instance from a hexadecimal string encoded EF.\n   *\n   * @static\n   * @param {string} hex - The hexadecimal string representation of the transaction EF.\n   * @returns {Transaction} - A new Transaction instance.\n   */\n  static fromHexEF (hex: string): Transaction {\n    return Transaction.fromEF(toArray(hex, 'hex'))\n  }\n\n  /**\n   * Creates a Transaction instance from a hexadecimal string encoded BEEF.\n   * Optionally, you can provide a specific TXID to retrieve a particular transaction from the BEEF data.\n   * If the TXID is provided but not found in the BEEF data, an error will be thrown.\n   * If no TXID is provided, the last transaction in the BEEF data is returned.\n   *\n   * @static\n   * @param {string} hex - The hexadecimal string representation of the transaction BEEF.\n   * @param {string} [txid] - Optional TXID of the transaction to retrieve from the BEEF data.\n   * @returns {Transaction} - A new Transaction instance.\n   */\n  static fromHexBEEF (hex: string, txid?: string): Transaction {\n    return Transaction.fromBEEF(toArray(hex, 'hex'), txid)\n  }\n\n  constructor (\n    version: number = 1,\n    inputs: TransactionInput[] = [],\n    outputs: TransactionOutput[] = [],\n    lockTime: number = 0,\n    metadata: Record<string, any> = {},\n    merklePath?: MerklePath\n  ) {\n    this.version = version\n    this.inputs = inputs\n    this.outputs = outputs\n    this.lockTime = lockTime\n    this.metadata = metadata\n    this.merklePath = merklePath\n  }\n\n  /**\n   * Adds a new input to the transaction.\n   *\n   * @param {TransactionInput} input - The TransactionInput object to add to the transaction.\n   * @throws {Error} - If the input does not have a sourceTXID or sourceTransaction defined.\n   */\n  addInput (input: TransactionInput): void {\n    if (\n      typeof input.sourceTXID === 'undefined' &&\n      typeof input.sourceTransaction === 'undefined'\n    ) {\n      throw new Error('A reference to an an input transaction is required. If the input transaction itself cannot be referenced, its TXID must still be provided.')\n    }\n    // If the input sequence number hasn't been set, the expectation is that it is final.\n    if (typeof input.sequence === 'undefined') {\n      input.sequence = 0xFFFFFFFF\n    }\n    this.cachedHash = undefined\n    this.inputs.push(input)\n  }\n\n  /**\n   * Adds a new output to the transaction.\n   *\n   * @param {TransactionOutput} output - The TransactionOutput object to add to the transaction.\n   */\n  addOutput (output: TransactionOutput): void {\n    this.cachedHash = undefined\n    this.outputs.push(output)\n  }\n\n  /**\n   * Updates the transaction's metadata.\n   *\n   * @param {Record<string, any>} metadata - The metadata object to merge into the existing metadata.\n   */\n  updateMetadata (metadata: Record<string, any>): void {\n    this.metadata = {\n      ...this.metadata,\n      ...metadata\n    }\n  }\n\n  /**\n   * Computes fees prior to signing.\n   * If no fee model is provided, uses a SatoshisPerKilobyte fee model that pays 10 sat/kb.\n   * If fee is a number, the transaction uses that value as fee.\n   *\n   * @param modelOrFee - The initialized fee model to use or fixed fee for the transaction\n   * @param changeDistribution - Specifies how the change should be distributed\n   * amongst the change outputs\n   *\n   * TODO: Benford's law change distribution.\n   */\n  async fee (modelOrFee?: FeeModel | number, changeDistribution: 'equal' | 'random' = 'equal'): Promise<void> {\n    this.cachedHash = undefined\n    if (typeof modelOrFee === 'undefined') {\n      modelOrFee = new SatoshisPerKilobyte(10)\n    }\n    if (typeof modelOrFee === 'number') {\n      const sats = modelOrFee\n      modelOrFee = {\n        computeFee: async () => sats\n      }\n    }\n    const fee = await modelOrFee.computeFee(this)\n    // change = inputs - fee - non-change outputs\n    let change = 0\n    for (const input of this.inputs) {\n      if (typeof input.sourceTransaction !== 'object') {\n        throw new Error('Source transactions are required for all inputs during fee computation')\n      }\n      change += input.sourceTransaction.outputs[input.sourceOutputIndex].satoshis\n    }\n    change -= fee\n    let changeCount = 0\n    for (const out of this.outputs) {\n      if (!out.change) {\n        change -= out.satoshis\n      } else {\n        changeCount++\n      }\n    }\n\n    if (change <= changeCount) {\n      // There is not enough change to distribute among the change outputs.\n      // We'll remove all change outputs and leave the extra for the miners.\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (this.outputs[i].change) {\n          this.outputs.splice(i, 1)\n          i--\n        }\n      }\n      return\n    }\n\n    // Distribute change among change outputs\n    if (changeDistribution === 'random') {\n      // TODO\n      throw new Error('Not yet implemented')\n    } else if (changeDistribution === 'equal') {\n      const perOutput = Math.floor(change / changeCount)\n      for (const out of this.outputs) {\n        if (out.change) {\n          out.satoshis = perOutput\n        }\n      }\n    }\n  }\n\n  /**\n   * Utility method that returns the current fee based on inputs and outputs\n   *\n   * @returns The current transaction fee\n   */\n  getFee (): number {\n    let totalIn = 0\n    for (const input of this.inputs) {\n      if (typeof input.sourceTransaction !== 'object') {\n        throw new Error('Source transactions or sourceSatoshis are required for all inputs to calculate fee')\n      }\n      totalIn += input.sourceTransaction.outputs[input.sourceOutputIndex].satoshis\n    }\n    let totalOut = 0\n    for (const output of this.outputs) {\n      totalOut += output.satoshis || 0\n    }\n    return totalIn - totalOut\n  }\n\n  /**\n   * Signs a transaction, hydrating all its unlocking scripts based on the provided script templates where they are available.\n   */\n  async sign (): Promise<void> {\n    this.cachedHash = undefined\n    for (const out of this.outputs) {\n      if (typeof out.satoshis === 'undefined') {\n        if (out.change) {\n          throw new Error('There are still change outputs with uncomputed amounts. Use the fee() method to compute the change amounts and transaction fees prior to signing.')\n        } else {\n          throw new Error('One or more transaction outputs is missing an amount. Ensure all output amounts are provided before signing.')\n        }\n      }\n    }\n    const unlockingScripts = await Promise.all(this.inputs.map(async (x, i): Promise<UnlockingScript | undefined> => {\n      if (typeof this.inputs[i].unlockingScriptTemplate === 'object') {\n        return await this.inputs[i].unlockingScriptTemplate.sign(this, i)\n      } else {\n        return await Promise.resolve(undefined)\n      }\n    }))\n    for (let i = 0, l = this.inputs.length; i < l; i++) {\n      if (typeof this.inputs[i].unlockingScriptTemplate === 'object') {\n        this.inputs[i].unlockingScript = unlockingScripts[i]\n      }\n    }\n  }\n\n  /**\n   * Broadcasts a transaction.\n   *\n   * @param broadcaster The Broadcaster instance wwhere the transaction will be sent\n   * @returns A BroadcastResponse or BroadcastFailure from the Broadcaster\n   */\n  async broadcast (broadcaster: Broadcaster = defaultBroadcaster()): Promise<BroadcastResponse | BroadcastFailure> {\n    return await broadcaster.broadcast(this)\n  }\n\n  /**\n   * Converts the transaction to a binary array format.\n   *\n   * @returns {number[]} - The binary array representation of the transaction.\n   */\n  toBinary (): number[] {\n    const writer = new Writer()\n    writer.writeUInt32LE(this.version)\n    writer.writeVarIntNum(this.inputs.length)\n    for (const i of this.inputs) {\n      if (typeof i.sourceTXID === 'undefined') {\n        writer.write(i.sourceTransaction.hash() as number[])\n      } else {\n        writer.writeReverse(toArray(i.sourceTXID, 'hex'))\n      }\n      writer.writeUInt32LE(i.sourceOutputIndex)\n      const scriptBin = i.unlockingScript.toBinary()\n      writer.writeVarIntNum(scriptBin.length)\n      writer.write(scriptBin)\n      writer.writeUInt32LE(i.sequence)\n    }\n    writer.writeVarIntNum(this.outputs.length)\n    for (const o of this.outputs) {\n      writer.writeUInt64LE(o.satoshis)\n      const scriptBin = o.lockingScript.toBinary()\n      writer.writeVarIntNum(scriptBin.length)\n      writer.write(scriptBin)\n    }\n    writer.writeUInt32LE(this.lockTime)\n    return writer.toArray()\n  }\n\n  /**\n   * Converts the transaction to a BRC-30 EF format.\n   *\n   * @returns {number[]} - The BRC-30 EF representation of the transaction.\n   */\n  toEF (): number[] {\n    const writer = new Writer()\n    writer.writeUInt32LE(this.version)\n    writer.write([0, 0, 0, 0, 0, 0xef])\n    writer.writeVarIntNum(this.inputs.length)\n    for (const i of this.inputs) {\n      if (typeof i.sourceTransaction === 'undefined') {\n        throw new Error('All inputs must have source transactions when serializing to EF format')\n      }\n      if (typeof i.sourceTXID === 'undefined') {\n        writer.write(i.sourceTransaction.hash() as number[])\n      } else {\n        writer.write(toArray(i.sourceTXID, 'hex').reverse() as number[])\n      }\n      writer.writeUInt32LE(i.sourceOutputIndex)\n      const scriptBin = i.unlockingScript.toBinary()\n      writer.writeVarIntNum(scriptBin.length)\n      writer.write(scriptBin)\n      writer.writeUInt32LE(i.sequence)\n      writer.writeUInt64LE(i.sourceTransaction.outputs[i.sourceOutputIndex].satoshis)\n      const lockingScriptBin = i.sourceTransaction.outputs[i.sourceOutputIndex].lockingScript.toBinary()\n      writer.writeVarIntNum(lockingScriptBin.length)\n      writer.write(lockingScriptBin)\n    }\n    writer.writeVarIntNum(this.outputs.length)\n    for (const o of this.outputs) {\n      writer.writeUInt64LE(o.satoshis)\n      const scriptBin = o.lockingScript.toBinary()\n      writer.writeVarIntNum(scriptBin.length)\n      writer.write(scriptBin)\n    }\n    writer.writeUInt32LE(this.lockTime)\n    return writer.toArray()\n  }\n\n  /**\n   * Converts the transaction to a hexadecimal string EF.\n   *\n   * @returns {string} - The hexadecimal string representation of the transaction EF.\n   */\n  toHexEF (): string {\n    return toHex(this.toEF())\n  }\n\n  /**\n   * Converts the transaction to a hexadecimal string format.\n   *\n   * @returns {string} - The hexadecimal string representation of the transaction.\n   */\n  toHex (): string {\n    return toHex(this.toBinary())\n  }\n\n  /**\n   * Converts the transaction to a hexadecimal string BEEF.\n   *\n   * @returns {string} - The hexadecimal string representation of the transaction BEEF.\n   */\n  toHexBEEF (): string {\n    return toHex(this.toBEEF())\n  }\n\n  /**\n   * Converts the transaction to a hexadecimal string Atomic BEEF.\n   *\n   * @returns {string} - The hexadecimal string representation of the transaction Atomic BEEF.\n   */\n  toHexAtomicBEEF (): string {\n    return toHex(this.toAtomicBEEF())\n  }\n\n  /**\n   * Calculates the transaction's hash.\n   *\n   * @param {'hex' | undefined} enc - The encoding to use for the hash. If 'hex', returns a hexadecimal string; otherwise returns a binary array.\n   * @returns {string | number[]} - The hash of the transaction in the specified format.\n   */\n  hash (enc?: 'hex'): number[] | string {\n    let hash\n    if (this.cachedHash) {\n      hash = this.cachedHash\n    } else {\n      hash = hash256(this.toBinary())\n      this.cachedHash = hash\n    }\n    if (enc === 'hex') {\n      return toHex(hash)\n    }\n    return hash\n  }\n\n  /**\n   * Calculates the transaction's ID in binary array.\n   *\n   * @returns {number[]} - The ID of the transaction in the binary array format.\n   */\n  id (): number[]\n  /**\n   * Calculates the transaction's ID in hexadecimal format.\n   *\n   * @param {'hex'} enc - The encoding to use for the ID. If 'hex', returns a hexadecimal string.\n   * @returns {string} - The ID of the transaction in the hex format.\n   */\n  id (enc: 'hex'): string\n  /**\n   * Calculates the transaction's ID.\n   *\n   * @param {'hex' | undefined} enc - The encoding to use for the ID. If 'hex', returns a hexadecimal string; otherwise returns a binary array.\n   * @returns {string | number[]} - The ID of the transaction in the specified format.\n   */\n  id (enc?: 'hex'): number[] | string {\n    const id = [...this.hash() as number[]]\n    id.reverse()\n    if (enc === 'hex') {\n      return toHex(id)\n    }\n    return id\n  }\n\n  /**\n   * Verifies the legitimacy of the Bitcoin transaction according to the rules of SPV by ensuring all the input transactions link back to valid block headers, the chain of spends for all inputs are valid, and the sum of inputs is not less than the sum of outputs.\n   *\n   * @param chainTracker - An instance of ChainTracker, a Bitcoin block header tracker. If the value is set to 'scripts only', headers will not be verified. If not provided then the default chain tracker will be used.\n   *\n   * @returns Whether the transaction is valid according to the rules of SPV.\n   *\n   * @example tx.verify(new WhatsOnChain(), new SatoshisPerKilobyte(1))\n   */\n  async verify (\n    chainTracker: ChainTracker | 'scripts only' = defaultChainTracker(),\n    feeModel?: FeeModel\n  ): Promise<boolean> {\n    const verifiedTxids = new Set<string>()\n    const txQueue: Transaction[] = [this]\n\n    while (txQueue.length > 0) {\n      const tx = txQueue.shift()\n      const txid = tx.id('hex')\n      if (verifiedTxids.has(txid)) {\n        continue\n      }\n\n      // If the transaction has a valid merkle path, verification is complete.\n      if (typeof tx.merklePath === 'object') {\n        if (chainTracker === 'scripts only') {\n          verifiedTxids.add(txid)\n          continue\n        } else {\n          const proofValid = await tx.merklePath.verify(\n            txid,\n            chainTracker\n          )\n          // If the proof is valid, no need to verify inputs.\n          if (proofValid) {\n            verifiedTxids.add(txid)\n            continue\n          }\n        }\n      }\n\n      // Verify fee if feeModel is provided\n      if (typeof feeModel !== 'undefined') {\n        const cpTx = Transaction.fromEF(tx.toEF())\n        delete cpTx.outputs[0].satoshis\n        cpTx.outputs[0].change = true\n        await cpTx.fee(feeModel)\n        if (tx.getFee() < cpTx.getFee()) {\n          throw new Error(`Verification failed because the transaction ${txid} has an insufficient fee and has not been mined.`)\n        }\n      }\n\n      // Verify each input transaction and evaluate the spend events.\n      // Also, keep a total of the input amounts for later.\n      let inputTotal = 0\n      for (let i = 0; i < tx.inputs.length; i++) {\n        const input = tx.inputs[i]\n        if (typeof input.sourceTransaction !== 'object') {\n          throw new Error(`Verification failed because the input at index ${i} of transaction ${txid} is missing an associated source transaction. This source transaction is required for transaction verification because there is no merkle proof for the transaction spending a UTXO it contains.`)\n        }\n        if (typeof input.unlockingScript !== 'object') {\n          throw new Error(`Verification failed because the input at index ${i} of transaction ${txid} is missing an associated unlocking script. This script is required for transaction verification because there is no merkle proof for the transaction spending the UTXO.`)\n        }\n        const sourceOutput = input.sourceTransaction.outputs[input.sourceOutputIndex]\n        inputTotal += sourceOutput.satoshis\n\n        const sourceTxid = input.sourceTransaction.id('hex')\n        if (!verifiedTxids.has(sourceTxid)) {\n          txQueue.push(input.sourceTransaction)\n        }\n\n        const otherInputs = tx.inputs.filter((_, idx) => idx !== i)\n        if (typeof input.sourceTXID === 'undefined') {\n          input.sourceTXID = sourceTxid\n        }\n\n        const spend = new Spend({\n          sourceTXID: input.sourceTXID,\n          sourceOutputIndex: input.sourceOutputIndex,\n          lockingScript: sourceOutput.lockingScript,\n          sourceSatoshis: sourceOutput.satoshis,\n          transactionVersion: tx.version,\n          otherInputs,\n          unlockingScript: input.unlockingScript,\n          inputSequence: input.sequence,\n          inputIndex: i,\n          outputs: tx.outputs,\n          lockTime: tx.lockTime\n        })\n        const spendValid = spend.validate()\n\n        if (!spendValid) {\n          return false\n        }\n      }\n\n      // Total the outputs to ensure they don't amount to more than the inputs\n      let outputTotal = 0\n      for (const out of tx.outputs) {\n        if (typeof out.satoshis !== 'number') {\n          throw new Error('Every output must have a defined amount during transaction verification.')\n        }\n        outputTotal += out.satoshis\n      }\n\n      if (outputTotal > inputTotal) {\n        return false\n      }\n\n      verifiedTxids.add(txid)\n    }\n\n    return true\n  }\n\n  /**\n   * Serializes this transaction, together with its inputs and the respective merkle proofs, into the BEEF (BRC-62) format. This enables efficient verification of its compliance with the rules of SPV.\n   *\n   * @returns The serialized BEEF structure\n   */\n  toBEEF (): number[] {\n    const writer = new Writer()\n    writer.writeUInt32LE(4022206465)\n    const BUMPs: MerklePath[] = []\n    const txs: Array<{ tx: Transaction, pathIndex?: number }> = []\n\n    // Recursive function to add paths and input transactions for a TX\n    const addPathsAndInputs = (tx: Transaction): void => {\n      const obj: { tx: Transaction, pathIndex?: number } = { tx }\n      const hasProof = typeof tx.merklePath === 'object'\n      if (hasProof) {\n        let added = false\n        // If this proof is identical to another one previously added, we use that first. Otherwise, we try to merge it with proofs from the same block.\n        for (let i = 0; i < BUMPs.length; i++) {\n          if (BUMPs[i] === tx.merklePath) { // Literally the same\n            obj.pathIndex = i\n            added = true\n            break\n          }\n          if (BUMPs[i].blockHeight === tx.merklePath.blockHeight) {\n            // Probably the same...\n            const rootA = BUMPs[i].computeRoot()\n            const rootB = tx.merklePath.computeRoot()\n            if (rootA === rootB) {\n              // Definitely the same... combine them to save space\n              BUMPs[i].combine(tx.merklePath)\n              obj.pathIndex = i\n              added = true\n              break\n            }\n          }\n        }\n        // Finally, if the proof is not yet added, add a new path.\n        if (!added) {\n          obj.pathIndex = BUMPs.length\n          BUMPs.push(tx.merklePath)\n        }\n      }\n      const duplicate = txs.some(x => x.tx.id('hex') === tx.id('hex'))\n      if (!duplicate) {\n        txs.unshift(obj)\n      }\n      if (!hasProof) {\n        for (let i = 0; i < tx.inputs.length; i++) {\n          const input = tx.inputs[i]\n          if (typeof input.sourceTransaction !== 'object') {\n            throw new Error('A required source transaction is missing!')\n          }\n          addPathsAndInputs(input.sourceTransaction)\n        }\n      }\n    }\n\n    addPathsAndInputs(this)\n\n    writer.writeVarIntNum(BUMPs.length)\n    for (const b of BUMPs) {\n      writer.write(b.toBinary())\n    }\n    writer.writeVarIntNum(txs.length)\n    for (const t of txs) {\n      writer.write(t.tx.toBinary())\n      if (typeof t.pathIndex === 'number') {\n        writer.writeUInt8(1)\n        writer.writeVarIntNum(t.pathIndex)\n      } else {\n        writer.writeUInt8(0)\n      }\n    }\n    return writer.toArray()\n  }\n\n  /**\n   * Serializes this transaction and its inputs into the Atomic BEEF (BRC-95) format.\n   * The Atomic BEEF format starts with a 4-byte prefix `0x01010101`, followed by the TXID of the subject transaction,\n   * and then the BEEF data containing only the subject transaction and its dependencies.\n   * This format ensures that the BEEF structure is atomic and contains no unrelated transactions.\n   *\n   * @returns {number[]} - The serialized Atomic BEEF structure.\n   */\n  toAtomicBEEF (): number[] {\n    const writer = new Writer()\n    // Write the Atomic BEEF prefix\n    writer.writeUInt32LE(0x01010101)\n    // Write the subject TXID (big-endian)\n    writer.write(this.id())\n    // Append the BEEF data\n    const beefData = this.toBEEF()\n    writer.write(beefData)\n    return writer.toArray()\n  }\n}\n","import { Broadcaster } from '../Broadcaster.js'\nimport ARC from './ARC.js'\n\nexport function defaultBroadcaster (): Broadcaster {\n  return new ARC('https://arc.taal.com')\n}\n","import WhatsOnChain from './WhatsOnChain.js'\nimport ChainTracker from '../ChainTracker.js'\n\nexport function defaultChainTracker (): ChainTracker {\n  return new WhatsOnChain()\n}\n","import Transaction from './Transaction.js'\n\n/**\n * Defines the structure of a successful broadcast response.\n *\n * @interface\n * @property {string} status - The status of the response, indicating success.\n * @property {string} txid - The transaction ID of the broadcasted transaction.\n * @property {string} message - A human-readable success message.\n */\nexport interface BroadcastResponse {\n  status: 'success'\n  txid: string\n  message: string\n  competingTxs?: string[]\n}\n\n/**\n * Defines the structure of a failed broadcast response.\n *\n * @interface\n * @property {string} status - The status of the response, indicating an error.\n * @property {string} code - A machine-readable error code representing the type of error encountered.\n * @property {string} txid - The transaction ID of the broadcasted transaction.\n * @property {string} description - A detailed description of the error.\n * @property {object} more - The unparsed response data from the underlying broadcast service.\n */\nexport interface BroadcastFailure {\n  status: 'error'\n  code: string\n  txid?: string\n  description: string\n  more?: object\n}\n\n/**\n * Represents the interface for a transaction broadcaster.\n * This interface defines a standard method for broadcasting transactions.\n *\n * @interface\n * @property {function} broadcast - A function that takes a Transaction object and returns a promise.\n *                                  The promise resolves to either a BroadcastResponse or a BroadcastFailure.\n */\nexport interface Broadcaster {\n  broadcast: (transaction: Transaction) =>\n  Promise<BroadcastResponse | BroadcastFailure>\n}\n\n/**\n * Convenience type guard for response from `Broadcaster.broadcast`\n */\nexport function isBroadcastResponse (r: BroadcastResponse | BroadcastFailure): r is BroadcastResponse {\n  return r.status === 'success'\n}\n\n/**\n * Convenience type guard for response from `Broadcaster.broadcast`\n */\nexport function isBroadcastFailure (r: BroadcastResponse | BroadcastFailure): r is BroadcastFailure {\n  return r.status === 'error'\n}\n","import { Beef } from './Beef.js'\n\n/**\n * Extends `Beef` that is used to exchange transaction validity data with more than one external party.\n *\n * Use `addKnownTxidsForParty` to keep track of who knows what to reduce re-transmission of potentially large transactions.\n *\n * Use `getTrimmedBeefForParty` to obtain a `Beef` trimmed of transaction validity data known to a specific party.\n *\n * Typical usage scenario:\n *\n * 1. Query a wallet storage provider for spendable outputs.\n * 2. The provider replies with a Beef validating the returned outputs.\n * 3. Construct a new transaction using some of the queried outputs as inputs, including Beef validating all the inputs.\n * 4. Receive new valid raw transaction after processing and Beef validating change outputs added to original inputs.\n * 5. Return to step 1, continuing to build on old and new spendable outputs.\n *\n * By default, each Beef is required to be complete and valid: All transactions appear as full serialized bitcoin transactions and\n * each transaction either has a merkle path proof (it has been mined) or all of its input transactions are included.\n *\n * The size and redundancy of these Beefs becomes a problem when chained transaction creation out-paces the block mining rate.\n *\n */\nexport class BeefParty extends Beef {\n  /**\n     * keys are party identifiers.\n     * values are records of txids with truthy value for which the party already has validity proof.\n     */\n  knownTo: Record<string, Record<string, boolean>> = {}\n\n  /**\n     *\n     * @param parties Optional array of initial unique party identifiers.\n     */\n  constructor (parties?: string[]) {\n    super()\n    if (parties) {\n      for (const party of parties) { this.addParty(party) }\n    }\n  }\n\n  /**\n     * @param party\n     * @returns `true` if `party` has already beed added to this `BeefParty`.\n     */\n  isParty (party: string) {\n    const r = Object.keys(this.knownTo).includes(party)\n    return r\n  }\n\n  /**\n     * Adds a new unique party identifier to this `BeefParty`.\n     * @param party\n     */\n  addParty (party: string) {\n    if (this.isParty(party)) { throw new Error(`Party ${party} already exists.`) }\n    this.knownTo[party] = {}\n  }\n\n  /**\n     * @param party\n     * @returns Array of txids \"known\" to `party`.\n     */\n  getKnownTxidsForParty (party: string): string[] {\n    const knownTxids = this.knownTo[party]\n    if (!knownTxids) { throw new Error(`Party ${party} is unknown.`) }\n    return Object.keys(knownTxids)\n  }\n\n  /**\n     * @param party\n     * @returns trimmed beef of unknown transactions and proofs for `party`\n     */\n  getTrimmedBeefForParty (party: string): Beef {\n    const knownTxids = this.getKnownTxidsForParty(party)\n    const prunedBeef = this.clone()\n    prunedBeef.trimKnownTxids(knownTxids)\n    return prunedBeef\n  }\n\n  /**\n     * Make note of additional txids \"known\" to `party`.\n     * @param party unique identifier, added if new.\n     * @param knownTxids\n     */\n  addKnownTxidsForParty (party: string, knownTxids: string[]) {\n    if (!this.isParty(party)) { this.addParty(party) }\n    const kts = this.knownTo[party]\n    for (const txid of knownTxids) {\n      kts[txid] = true\n      this.mergeTxidOnly(txid)\n    }\n  }\n}\n\nexport default BeefParty\n","import BigNumber from '../primitives/BigNumber.js'\nimport { Writer, toArray } from '../primitives/utils.js'\nimport * as ECDSA from '../primitives/ECDSA.js'\nimport * as Hash from '../primitives/Hash.js'\nimport PrivateKey from '../primitives/PrivateKey.js'\nimport PublicKey from '../primitives/PublicKey.js'\nimport Signature from '../primitives/Signature.js'\n\nconst prefix = 'Bitcoin Signed Message:\\n'\n\n/**\n * Generates a SHA256 double-hash of the prefixed message.\n * @deprecated Replaced by BRC-77 which uses a more secure and private method for message signing.\n * @param messageBuf The message buffer to be hashed.\n * @returns The double-hash of the prefixed message as a number array.\n */\nexport const magicHash = (messageBuf: number[]): number[] => {\n  const bw = new Writer()\n  bw.writeVarIntNum(prefix.length)\n  bw.write(toArray(prefix, 'utf8'))\n  bw.writeVarIntNum(messageBuf.length)\n  bw.write(messageBuf)\n  const buf = bw.toArray()\n  const hashBuf = Hash.hash256(buf)\n  return hashBuf\n}\n\n/**\n * Signs a BSM message using the given private key.\n * @deprecated Replaced by BRC-77 which employs BRC-42 key derivation and BRC-43 invoice numbers for enhanced security and privacy.\n * @param message The message to be signed as a number array.\n * @param privateKey The private key used for signing the message.\n * @param mode The mode of operation. When \"base64\", the BSM format signature is returned. When \"raw\", a Signature object is returned. Default: \"base64\".\n * @returns The signature object when in raw mode, or the BSM base64 string when in base64 mode.\n */\nexport const sign = (message: number[], privateKey: PrivateKey, mode: 'raw' | 'base64' = 'base64'): Signature | string => {\n  const hashBuf = magicHash(message)\n  const sig = ECDSA.sign(new BigNumber(hashBuf), privateKey, true)\n  if (mode === 'raw') {\n    return sig\n  }\n  const h = new BigNumber(hashBuf)\n  const r = sig.CalculateRecoveryFactor(privateKey.toPublicKey(), h)\n  return sig.toCompact(r, true, 'base64') as string\n}\n\n/**\n * Verifies a BSM signed message using the given public key.\n * @deprecated Replaced by BRC-77 which provides privately-verifiable signatures and avoids key reuse.\n * @param message The message to be verified as a number array.\n * @param sig The signature object.\n * @param pubKey The public key for verification.\n * @returns True if the signature is valid, false otherwise.\n */\nexport const verify = (message: number[], sig: Signature, pubKey: PublicKey): boolean => {\n  const hashBuf = magicHash(message)\n  return ECDSA.verify(new BigNumber(hashBuf), sig, pubKey)\n}\n","import { fromBase58Check, toBase58Check, Writer, Reader, toArray, toHex } from '../primitives/utils.js'\nimport * as Hash from '../primitives/Hash.js'\nimport Curve from '../primitives/Curve.js'\nimport PrivateKey from '../primitives/PrivateKey.js'\nimport PublicKey from '../primitives/PublicKey.js'\nimport Random from '../primitives/Random.js'\nimport BigNumber from '../primitives/BigNumber.js'\n\n/**\n * @deprecated\n * The HD class implements the Bitcoin Improvement Proposal 32 (BIP32) hierarchical deterministic wallets.\n * It allows the generation of child keys from a master key, ensuring a tree-like structure of keys and addresses.\n * This class is deprecated due to the introduction of BRC-42, which offers an enhanced key derivation scheme.\n * BRC-42 uses invoice numbers for key derivation, improving privacy and scalability compared to BIP32.\n *\n * @class HD\n * @deprecated Replaced by BRC-42 which uses invoice numbers and supports private derivation.\n */\nexport default class HD {\n  versionBytesNum: number\n  depth: number\n  parentFingerPrint: number[]\n  childIndex: number\n  chainCode: number[]\n  privKey: PrivateKey\n  pubKey: PublicKey\n  constants = {\n    pubKey: 0x0488b21e,\n    privKey: 0x0488ade4\n  }\n\n  /**\n     * Constructor for the BIP32 HD wallet.\n     * Initializes an HD wallet with optional parameters for version bytes, depth, parent fingerprint, child index, chain code, private key, and public key.\n     * @param versionBytesNum - Version bytes number for the wallet.\n     * @param depth - Depth of the key in the hierarchy.\n     * @param parentFingerPrint - Fingerprint of the parent key.\n     * @param childIndex - Index of the child key.\n     * @param chainCode - Chain code for key derivation.\n     * @param privKey - Private key of the wallet.\n     * @param pubKey - Public key of the wallet.\n     */\n  constructor (\n    versionBytesNum?: number,\n    depth?: number,\n    parentFingerPrint?: number[],\n    childIndex?: number,\n    chainCode?: number[],\n    privKey?: PrivateKey,\n    pubKey?: PublicKey\n  ) {\n    this.versionBytesNum = versionBytesNum\n    this.depth = depth\n    this.parentFingerPrint = parentFingerPrint\n    this.childIndex = childIndex\n    this.chainCode = chainCode\n    this.privKey = privKey\n    this.pubKey = pubKey\n  }\n\n  /**\n     * Generates a new HD wallet with random keys.\n     * This method creates a root HD wallet with randomly generated private and public keys.\n     * @returns {HD} The current HD instance with generated keys.\n     */\n  public fromRandom (): this {\n    this.versionBytesNum = this.constants.privKey\n    this.depth = 0x00\n    this.parentFingerPrint = [0, 0, 0, 0]\n    this.childIndex = 0\n    this.chainCode = Random(32)\n    this.privKey = PrivateKey.fromRandom()\n    this.pubKey = this.privKey.toPublicKey()\n    return this\n  }\n\n  /**\n     * Generates a new HD wallet with random keys.\n     * This method creates a root HD wallet with randomly generated private and public keys.\n     * @returns {HD} A new HD instance with generated keys.\n     * @static\n     */\n  public static fromRandom (): HD {\n    return new this().fromRandom()\n  }\n\n  /**\n   * Initializes the HD wallet from a given base58 encoded string.\n   * This method decodes a provided string to set up the HD wallet's properties.\n   * @param str - A base58 encoded string representing the wallet.\n   * @returns {HD} The new instance with properties set from the string.\n   */\n  public static fromString (str: string): HD {\n    return new this().fromString(str)\n  }\n\n  /**\n     * Initializes the HD wallet from a given base58 encoded string.\n     * This method decodes a provided string to set up the HD wallet's properties.\n     * @param str - A base58 encoded string representing the wallet.\n     * @returns {HD} The current instance with properties set from the string.\n     */\n  public fromString (str: string): this {\n    const decoded = fromBase58Check(str)\n    return this.fromBinary([...decoded.prefix, ...decoded.data] as number[])\n  }\n\n  /**\n   * Initializes the HD wallet from a seed.\n   * This method generates keys and other properties from a given seed, conforming to the BIP32 specification.\n   * @param bytes - An array of bytes representing the seed.\n   * @returns {HD} The current instance with properties set from the seed.\n   */\n  public static fromSeed (bytes: number[]): HD {\n    return new this().fromSeed(bytes)\n  }\n\n  /**\n     * Initializes the HD wallet from a seed.\n     * This method generates keys and other properties from a given seed, conforming to the BIP32 specification.\n     * @param bytes - An array of bytes representing the seed.\n     * @returns {HD} The current instance with properties set from the seed.\n     */\n  public fromSeed (bytes: number[]): this {\n    if (bytes.length < 128 / 8) {\n      throw new Error('Need more than 128 bits of entropy')\n    }\n    if (bytes.length > 512 / 8) {\n      throw new Error('More than 512 bits of entropy is nonstandard')\n    }\n    const hash: number[] = Hash.sha512hmac(toArray('Bitcoin seed', 'utf8'), bytes)\n\n    this.depth = 0x00\n    this.parentFingerPrint = [0, 0, 0, 0]\n    this.childIndex = 0\n    this.chainCode = hash.slice(32, 64)\n    this.versionBytesNum = this.constants.privKey\n    this.privKey = new PrivateKey(hash.slice(0, 32))\n    this.pubKey = this.privKey.toPublicKey()\n\n    return this\n  }\n\n  /**\n   * Initializes the HD wallet from a binary buffer.\n   * Parses a binary buffer to set up the wallet's properties.\n   * @param buf - A buffer containing the wallet data.\n   * @returns {HD} The new instance with properties set from the buffer.\n   */\n  public static fromBinary (buf: number[]): HD {\n    return new this().fromBinary(buf)\n  }\n\n  /**\n   * Initializes the HD wallet from a binary buffer.\n   * Parses a binary buffer to set up the wallet's properties.\n   * @param buf - A buffer containing the wallet data.\n   * @returns {HD} The current instance with properties set from the buffer.\n   */\n  public fromBinary (buf: number[]): this {\n    // Both pub and private extended keys are 78 buf\n    if (buf.length !== 78) {\n      throw new Error('incorrect bip32 data length')\n    }\n    const reader = new Reader(buf)\n\n    this.versionBytesNum = reader.readUInt32BE()\n    this.depth = reader.readUInt8()\n    this.parentFingerPrint = reader.read(4)\n    this.childIndex = reader.readUInt32BE()\n    this.chainCode = reader.read(32)\n    const keyBytes = reader.read(33)\n\n    const isPrivate = this.versionBytesNum === this.constants.privKey\n    const isPublic = this.versionBytesNum === this.constants.pubKey\n\n    if (isPrivate && keyBytes[0] === 0) {\n      this.privKey = new PrivateKey(keyBytes.slice(1, 33))\n      this.pubKey = this.privKey.toPublicKey()\n    } else if (isPublic && (keyBytes[0] === 0x02 || keyBytes[0] === 0x03)) {\n      this.pubKey = PublicKey.fromString(toHex(keyBytes))\n    } else {\n      throw new Error('Invalid key')\n    }\n\n    return this\n  }\n\n  /**\n   * Converts the HD wallet to a base58 encoded string.\n   * This method provides a string representation of the HD wallet's current state.\n   * @returns {string} A base58 encoded string of the HD wallet.\n   */\n  public toString (): string {\n    const bin = this.toBinary()\n    return toBase58Check(bin, [])\n  }\n\n  /**\n     * Derives a child HD wallet based on a given path.\n     * The path specifies the hierarchy of the child key to be derived.\n     * @param path - A string representing the derivation path (e.g., 'm/0'/1).\n     * @returns {HD} A new HD instance representing the derived child wallet.\n     */\n  public derive (path: string): HD {\n    if (path === 'm') {\n      return this\n    }\n\n    const e = path.split('/')\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let bip32: HD = this\n    for (const i in e) {\n      const c = e[i]\n\n      if (i === '0') {\n        if (c !== 'm') {\n          throw new Error('invalid path')\n        }\n        continue\n      }\n\n      if (parseInt(c.replace(\"'\", ''), 10).toString() !== c.replace(\"'\", '')) {\n        throw new Error('invalid path')\n      }\n\n      const usePrivate = c.length > 1 && c[c.length - 1] === \"'\"\n      let childIndex = parseInt(usePrivate ? c.slice(0, c.length - 1) : c, 10) & 0x7fffffff\n\n      if (usePrivate) {\n        childIndex += 0x80000000\n      }\n\n      bip32 = bip32.deriveChild(childIndex)\n    }\n\n    return bip32\n  }\n\n  /**\n     * Derives a child HD wallet from the current wallet based on an index.\n     * This method generates either a private or public child key depending on the current wallet's state.\n     * @param i - The index of the child key to derive.\n     * @returns {HD} A new HD instance representing the derived child wallet.\n     */\n  public deriveChild (i: number): HD {\n    if (typeof i !== 'number') {\n      throw new Error('i must be a number')\n    }\n\n    const ibc: number[] = []\n    ibc.push((i >> 24) & 0xff)\n    ibc.push((i >> 16) & 0xff)\n    ibc.push((i >> 8) & 0xff)\n    ibc.push(i & 0xff)\n    const ib = [...ibc]\n\n    const usePrivate = (i & 0x80000000) !== 0\n\n    const isPrivate = this.versionBytesNum === this.constants.privKey\n\n    if (usePrivate && (!this.privKey || !isPrivate)) {\n      throw new Error('Cannot do private key derivation without private key')\n    }\n\n    let ret = null\n    if (this.privKey) {\n      let data = null\n\n      if (usePrivate) {\n        data = [0, ...this.privKey.toArray('be', 32), ...ib]\n      } else {\n        data = [...this.pubKey.encode(true) as number[], ...ib]\n      }\n\n      const hash = Hash.sha512hmac(this.chainCode, data)\n      const il = new BigNumber(hash.slice(0, 32))\n      const ir = hash.slice(32, 64)\n\n      // ki = IL + kpar (mod n).\n      const k = il.add(this.privKey).mod(new Curve().n)\n\n      ret = new HD()\n      ret.chainCode = ir\n\n      ret.privKey = new PrivateKey(k.toArray())\n      ret.pubKey = ret.privKey.toPublicKey()\n    } else {\n      const data = [...this.pubKey.encode(true) as number[], ...ib]\n      const hash = Hash.sha512hmac(this.chainCode, data)\n      const il = new BigNumber(hash.slice(0, 32))\n      const ir = hash.slice(32, 64)\n\n      // Ki = (IL + kpar)*G = IL*G + Kpar\n      const ilG = new Curve().g.mul(il)\n      const Kpar = this.pubKey\n      const Ki = ilG.add(Kpar)\n      const newpub = new PublicKey(Ki.x, Ki.y)\n\n      ret = new HD()\n      ret.chainCode = ir\n\n      ret.pubKey = newpub\n    }\n\n    ret.childIndex = i\n    const pubKeyhash = Hash.hash160(this.pubKey.encode(true))\n    ret.parentFingerPrint = pubKeyhash.slice(0, 4)\n    ret.versionBytesNum = this.versionBytesNum\n    ret.depth = this.depth + 1\n\n    return ret\n  }\n\n  /**\n     * Converts the current HD wallet to a public-only wallet.\n     * This method strips away the private key information, leaving only the public part.\n     * @returns {HD} A new HD instance representing the public-only wallet.\n     */\n  public toPublic (): HD {\n    const bip32 = new HD(this.versionBytesNum, this.depth, this.parentFingerPrint, this.childIndex, this.chainCode, this.privKey, this.pubKey)\n    bip32.versionBytesNum = this.constants.pubKey\n    bip32.privKey = undefined\n    return bip32\n  }\n\n  /**\n     * Converts the HD wallet into a binary representation.\n     * This method serializes the wallet's properties into a binary format.\n     * @returns {number[]} An array of numbers representing the binary data of the wallet.\n     */\n  public toBinary (): number[] {\n    const isPrivate = this.versionBytesNum === this.constants.privKey\n    const isPublic = this.versionBytesNum === this.constants.pubKey\n    if (isPrivate) {\n      return new Writer()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .writeUInt8(0)\n        .write(this.privKey.toArray('be', 32))\n        .toArray()\n    } else if (isPublic) {\n      return new Writer()\n        .writeUInt32BE(this.versionBytesNum)\n        .writeUInt8(this.depth)\n        .write(this.parentFingerPrint)\n        .writeUInt32BE(this.childIndex)\n        .write(this.chainCode)\n        .write(this.pubKey.encode(true) as number[])\n        .toArray()\n    } else {\n      throw new Error('bip32: invalid versionBytesNum byte')\n    }\n  }\n\n  /**\n     * Checks if the HD wallet contains a private key.\n     * This method determines whether the wallet is a private key wallet or a public key only wallet.\n     * @returns {boolean} A boolean value indicating whether the wallet has a private key (true) or not (false).\n     */\n  public isPrivate (): boolean {\n    return this.versionBytesNum === this.constants.privKey\n  }\n}\n","// import { AESWrappercbc } from './aescbc'\nimport Random from '../primitives/Random.js'\nimport PrivateKey from '../primitives/PrivateKey.js'\nimport PublicKey from '../primitives/PublicKey.js'\nimport Point from '../primitives/Point.js'\nimport * as Hash from '../primitives/Hash.js'\nimport { toArray, toHex, encode } from '../primitives/utils.js'\n\nfunction AES (key) {\n  if (!this._tables[0][0][0]) this._precompute()\n\n  let tmp, encKey, decKey\n  const sbox = this._tables[0][4]\n  const decTable = this._tables[1]\n  const keyLen = key.length\n  let rcon = 1\n\n  if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n    throw new Error('invalid aes key size')\n  }\n\n  this._key = [encKey = key.slice(0), decKey = []]\n\n  // schedule encryption keys\n  for (var i = keyLen; i < 4 * keyLen + 28; i++) {\n    tmp = encKey[i - 1]\n\n    // apply sbox\n    if (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n      tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]\n\n      // shift rows and add rcon\n      if (i % keyLen === 0) {\n        tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24\n        rcon = rcon << 1 ^ (rcon >> 7) * 283\n      }\n    }\n\n    encKey[i] = encKey[i - keyLen] ^ tmp\n  }\n\n  // schedule decryption keys\n  for (let j = 0; i; j++, i--) {\n    tmp = encKey[j & 3 ? i : i - 4]\n    if (i <= 4 || j < 4) {\n      decKey[j] = tmp\n    } else {\n      decKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n        decTable[1][sbox[tmp >> 16 & 255]] ^\n        decTable[2][sbox[tmp >> 8 & 255]] ^\n        decTable[3][sbox[tmp & 255]]\n    }\n  }\n}\n\nAES.prototype = {\n\n  /**\n     * Encrypt an array of 4 big-endian words.\n     * @param {Array} data The plaintext.\n     * @return {Array} The ciphertext.\n     */\n  encrypt: function (data) { return this._crypt(data, 0) },\n\n  /**\n     * Decrypt an array of 4 big-endian words.\n     * @param {Array} data The ciphertext.\n     * @return {Array} The plaintext.\n     */\n  decrypt: function (data) { return this._crypt(data, 1) },\n\n  /**\n     * The expanded S-box and inverse S-box tables.  These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n  _tables: [\n    [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],\n    [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)]\n  ],\n\n  // Expand the S-box tables.\n  _precompute: function () {\n    const encTable = this._tables[0]; const decTable = this._tables[1]\n    const sbox = encTable[4]; const sboxInv = decTable[4]\n    let i; let x; let xInv; const d = new Uint8Array(256); const th = new Uint8Array(256); let x2; let x4; let x8; let s; let tEnc; let tDec\n\n    // Compute double and third tables\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i\n    }\n\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4\n      s = s >> 8 ^ s & 255 ^ 99\n      sbox[x] = s\n      sboxInv[s] = x\n\n      // Compute MixColumns\n      x8 = d[x4 = d[x2 = d[x]]]\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100\n      tEnc = d[s] * 0x101 ^ s * 0x1010100\n\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8\n      }\n    }\n  },\n\n  /**\n     * Encryption and decryption core.\n     * @param {Array} input Four words to be encrypted or decrypted.\n     * @param dir The direction, 0 for encrypt and 1 for decrypt.\n     * @return {Array} The four encrypted or decrypted words.\n     * @private\n     */\n  _crypt: function (input, dir) {\n    if (input.length !== 4) {\n      throw new Error('invalid aes block size')\n    }\n\n    const key = this._key[dir]\n    // state variables a,b,c,d are loaded with pre-whitened data\n    let a = input[0] ^ key[0]\n    let b = input[dir ? 3 : 1] ^ key[1]\n    let c = input[2] ^ key[2]\n    let d = input[dir ? 1 : 3] ^ key[3]\n    let a2; let b2; let c2\n\n    const nInnerRounds = key.length / 4 - 2\n    let i\n    let kIndex = 4\n    const out = new Uint32Array(4); const // <--- this is slower in Node.js, about the same in Chrome */\n      table = this._tables[dir]\n\n    // load up the tables\n    const t0 = table[0]\n    const t1 = table[1]\n    const t2 = table[2]\n    const t3 = table[3]\n    const sbox = table[4]\n\n    // Inner rounds.  Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex]\n      b2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1]\n      c2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2]\n      d = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3]\n      kIndex += 4\n      a = a2; b = b2; c = c2\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[dir ? 3 & -i : i] =\n        sbox[a >>> 24] << 24 ^\n        sbox[b >> 16 & 255] << 16 ^\n        sbox[c >> 8 & 255] << 8 ^\n        sbox[d & 255] ^\n        key[kIndex++]\n      a2 = a; a = b; b = c; c = d; d = a2\n    }\n\n    return out\n  }\n}\n\nclass AESWrapper {\n  public static encrypt (messageBuf: number[], keyBuf: number[]): number[] {\n    const key = AESWrapper.buf2Words((keyBuf))\n    const message = AESWrapper.buf2Words((messageBuf))\n    const a = new AES(key)\n    const enc = a.encrypt(message)\n    const encBuf = AESWrapper.words2Buf(enc)\n    return encBuf\n  }\n\n  public static decrypt (encBuf: number[], keyBuf: number[]): number[] {\n    const enc = AESWrapper.buf2Words((encBuf))\n    const key = AESWrapper.buf2Words((keyBuf))\n    const a = new AES(key)\n    const message = a.decrypt(enc)\n    const messageBuf = AESWrapper.words2Buf(message)\n    return messageBuf\n  }\n\n  public static buf2Words (buf: number[]): number[] {\n    if (buf.length % 4) {\n      throw new Error('buf length must be a multiple of 4')\n    }\n    const words = []\n    for (let i = 0; i < buf.length / 4; i++) {\n      const val =\n        (buf[i * 4] * 0x1000000) + // Shift the first byte by 24 bits\n        ((buf[i * 4 + 1] << 16) | // Shift the second byte by 16 bits\n          (buf[i * 4 + 2] << 8) | // Shift the third byte by 8 bits\n          buf[i * 4 + 3]) // The fourth byte\n      words.push(val)\n    }\n    return words\n  }\n\n  public static words2Buf (words: number[]): number[] {\n    const buf = new Array(words.length * 4)\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i]\n      buf[i * 4] = (word >>> 24) & 0xFF\n      buf[i * 4 + 1] = (word >>> 16) & 0xFF\n      buf[i * 4 + 2] = (word >>> 8) & 0xFF\n      buf[i * 4 + 3] = word & 0xFF\n    }\n\n    return buf\n  }\n}\n\nclass CBC {\n  public static buf2BlocksBuf (buf: number[], blockSize: number): number[][] {\n    const bytesize = blockSize / 8\n    const blockBufs = []\n\n    for (let i = 0; i <= buf.length / bytesize; i++) {\n      let blockBuf = buf.slice(i * bytesize, i * bytesize + bytesize)\n\n      if (blockBuf.length < blockSize) {\n        blockBuf = CBC.pkcs7Pad(blockBuf, blockSize)\n      }\n\n      blockBufs.push(blockBuf)\n    }\n\n    return blockBufs\n  }\n\n  public static blockBufs2Buf (blockBufs: number[][]): number[] {\n    let last = blockBufs[blockBufs.length - 1]\n    last = CBC.pkcs7Unpad(last)\n    blockBufs[blockBufs.length - 1] = last\n\n    const buf = blockBufs.flat()\n\n    return buf\n  }\n\n  public static encrypt (\n    messageBuf: number[],\n    ivBuf: number[],\n    blockCipher: any /* TODO: type */,\n    cipherKeyBuf: number[]\n  ): number[] {\n    const blockSize = ivBuf.length * 8\n    const blockBufs = CBC.buf2BlocksBuf(messageBuf, blockSize)\n    const encBufs = CBC.encryptBlocks(blockBufs, ivBuf, blockCipher, cipherKeyBuf)\n    const encBuf = encBufs.flat()\n    return encBuf\n  }\n\n  public static decrypt (\n    encBuf: number[],\n    ivBuf: number[],\n    blockCipher: any /* TODO: type */,\n    cipherKeyBuf: number[]\n  ): number[] {\n    const bytesize = ivBuf.length\n    const encBufs = []\n    for (let i = 0; i < encBuf.length / bytesize; i++) {\n      encBufs.push(encBuf.slice(i * bytesize, i * bytesize + bytesize))\n    }\n    const blockBufs = CBC.decryptBlocks(encBufs, ivBuf, blockCipher, cipherKeyBuf)\n    const buf = CBC.blockBufs2Buf(blockBufs)\n    return buf\n  }\n\n  public static encryptBlock (\n    blockBuf: number[],\n    ivBuf: number[],\n    blockCipher: any /* TODO: type */,\n    cipherKeyBuf: number[]\n  ): number[] {\n    const xorbuf = CBC.xorBufs(blockBuf, ivBuf)\n    const encBuf = blockCipher.encrypt(xorbuf, cipherKeyBuf)\n    return encBuf\n  }\n\n  public static decryptBlock (\n    encBuf: number[],\n    ivBuf: number[],\n    blockCipher: any /* TODO: type */,\n    cipherKeyBuf: number[]\n  ): number[] {\n    const xorbuf = blockCipher.decrypt(encBuf, cipherKeyBuf)\n    const blockBuf = CBC.xorBufs(xorbuf, ivBuf)\n    return blockBuf\n  }\n\n  public static encryptBlocks (\n    blockBufs: number[][],\n    ivBuf: number[],\n    blockCipher: any /* TODO: type */,\n    cipherKeyBuf: number[]\n  ): number[][] {\n    const encBufs = []\n\n    for (let i = 0; i < blockBufs.length; i++) {\n      const blockBuf = blockBufs[i]\n      const encBuf = CBC.encryptBlock(blockBuf, ivBuf, blockCipher, cipherKeyBuf)\n\n      encBufs.push(encBuf)\n\n      ivBuf = encBuf\n    }\n\n    return encBufs\n  }\n\n  public static decryptBlocks (\n    encBufs: number[][],\n    ivBuf: number[],\n    blockCipher: any /* TODO: type */,\n    cipherKeyBuf: number[]\n  ): number[][] {\n    const blockBufs = []\n\n    for (let i = 0; i < encBufs.length; i++) {\n      const encBuf = encBufs[i]\n      const blockBuf = CBC.decryptBlock(encBuf, ivBuf, blockCipher, cipherKeyBuf)\n\n      blockBufs.push(blockBuf)\n\n      ivBuf = encBuf\n    }\n\n    return blockBufs\n  }\n\n  public static pkcs7Pad (buf: number[], blockSize: number): number[] {\n    const bytesize = blockSize / 8\n    const padbytesize = bytesize - buf.length\n    const pad = new Array(padbytesize)\n    pad.fill(padbytesize)\n    const paddedbuf = [...buf, ...pad]\n    return paddedbuf\n  }\n\n  public static pkcs7Unpad (paddedbuf: number[]): number[] {\n    const padlength = paddedbuf[paddedbuf.length - 1]\n    const padbuf = paddedbuf.slice(paddedbuf.length - padlength, paddedbuf.length)\n    const padbuf2 = new Array(padlength)\n    padbuf2.fill(padlength)\n    if (toHex(padbuf) !== toHex(padbuf2)) {\n      throw new Error('invalid padding')\n    }\n    return paddedbuf.slice(0, paddedbuf.length - padlength)\n  }\n\n  public static xorBufs (buf1: number[], buf2: number[]): number[] {\n    if (buf1.length !== buf2.length) {\n      throw new Error('bufs must have the same length')\n    }\n\n    const buf = new Array(buf1.length)\n\n    for (let i = 0; i < buf1.length; i++) {\n      buf[i] = buf1[i] ^ buf2[i]\n    }\n\n    return buf\n  }\n}\n\nclass AESCBC {\n  public static encrypt (messageBuf: number[], cipherKeyBuf: number[], ivBuf: number[], concatIvBuf = true): number[] {\n    ivBuf = ivBuf || new Array(128 / 8).fill(0) || Random(128 / 8)\n    const ctBuf = CBC.encrypt(messageBuf, ivBuf, AESWrapper, cipherKeyBuf)\n    if (concatIvBuf) {\n      return [...ivBuf, ...ctBuf]\n    } else {\n      return [...ctBuf]\n    }\n  }\n\n  public static decrypt (encBuf: number[], cipherKeyBuf: number[], ivBuf?: number[]): number[] {\n    if (!ivBuf) {\n      ivBuf = encBuf.slice(0, 128 / 8)\n      const ctBuf = encBuf.slice(128 / 8)\n      return CBC.decrypt(ctBuf, ivBuf, AESWrapper, cipherKeyBuf)\n    } else {\n      const ctBuf = encBuf\n      return CBC.decrypt(ctBuf, ivBuf, AESWrapper, cipherKeyBuf)\n    }\n  }\n}\n\n/**\n * @class ECIES\n * Implements the Electrum ECIES protocol for encrypted communication.\n *\n * @prprecated This class is deprecated in favor of the BRC-78 standard for portable encrypted messages,\n * which provides a more comprehensive and secure solution by integrating with BRC-42 and BRC-43 standards.\n */\nexport default class ECIES {\n  /**\n     * Generates the initialization vector (iv), encryption key (kE), and MAC key (kM)\n     * using the sender's private key and receiver's public key.\n     *\n     * @param {PrivateKey} privKey - The sender's private key.\n     * @param {PublicKey} pubKey - The receiver's public key.\n     * @returns {Object} An object containing the iv, kE, and kM as number arrays.\n     */\n  public static ivkEkM (privKey: PrivateKey, pubKey: PublicKey): { iv: number[], kE: number[], kM: number[] } {\n    const r = privKey\n    const KB = pubKey\n    const P = KB.mul(r)\n    const S = new PublicKey(P.x, P.y)\n    const Sbuf = S.encode(true) as number[]\n    const hash = Hash.sha512(Sbuf)\n    return {\n      iv: hash.slice(0, 16),\n      kE: hash.slice(16, 32),\n      kM: hash.slice(32, 64)\n    }\n  }\n\n  /**\n     * Encrypts a given message using the Electrum ECIES method.\n     *\n     * @param {number[]} messageBuf - The message to be encrypted, in number array format.\n     * @param {PublicKey} toPublicKey - The public key of the recipient.\n     * @param {PrivateKey} [fromPrivateKey] - The private key of the sender. If not provided, a random private key is used.\n     * @param {boolean} [noKey=false] - If true, does not include the sender's public key in the encrypted message.\n     * @returns {number[]} The encrypted message as a number array.\n     */\n  public static electrumEncrypt (messageBuf: number[], toPublicKey: PublicKey, fromPrivateKey?: PrivateKey, noKey = false): number[] {\n    let Rbuf\n    if (!fromPrivateKey) {\n      fromPrivateKey = PrivateKey.fromRandom()\n    }\n    if (!noKey) {\n      Rbuf = fromPrivateKey.toPublicKey().encode(true)\n    }\n    const { iv, kE, kM } = ECIES.ivkEkM(fromPrivateKey, toPublicKey)\n    const ciphertext = AESCBC.encrypt(messageBuf, kE, iv, false)\n    const BIE1 = toArray('BIE1', 'utf8')\n    let encBuf: number[]\n    if (Rbuf) {\n      encBuf = [...BIE1, ...Rbuf, ...ciphertext]\n    } else {\n      encBuf = [...BIE1, ...ciphertext]\n    }\n    const hmac = Hash.sha256hmac(kM, encBuf)\n    return [...encBuf, ...hmac]\n  }\n\n  /**\n     * Decrypts a message encrypted using the Electrum ECIES method.\n     *\n     * @param {number[]} encBuf - The encrypted message buffer.\n     * @param {PrivateKey} toPrivateKey - The private key of the recipient.\n     * @param {PublicKey} [fromPublicKey=null] - The public key of the sender. If not provided, it is extracted from the message.\n     * @returns {number[]} The decrypted message as a number array.\n     */\n  public static electrumDecrypt (encBuf: number[], toPrivateKey: PrivateKey, fromPublicKey?: PublicKey): number[] {\n    const tagLength = 32\n\n    const magic = encBuf.slice(0, 4)\n    if (encode(magic, 'utf8') !== 'BIE1') {\n      throw new Error('Invalid Magic')\n    }\n    let offset = 4\n\n    // Determine if the sender's public key is included in encBuf\n    let Rbuf: number[] | null = null\n    if (encBuf.length - offset - tagLength >= 33) {\n      const firstByte = encBuf[offset]\n      if (firstByte === 0x02 || firstByte === 0x03) {\n        // Compressed public key\n        Rbuf = encBuf.slice(offset, offset + 33)\n        offset += 33\n      } else if (firstByte === 0x04) {\n        // Uncompressed public key\n        Rbuf = encBuf.slice(offset, offset + 65)\n        offset += 65\n      }\n    }\n\n    if (Rbuf) {\n      if (!fromPublicKey) {\n        fromPublicKey = PublicKey.fromString(toHex(Rbuf))\n      }\n    } else {\n      if (!fromPublicKey) {\n        throw new Error('Sender public key is required')\n      }\n    }\n\n    const { iv, kE, kM } = ECIES.ivkEkM(toPrivateKey, fromPublicKey)\n    const ciphertext = encBuf.slice(offset, encBuf.length - tagLength)\n    const hmac = encBuf.slice(encBuf.length - tagLength, encBuf.length)\n\n    const hmac2 = Hash.sha256hmac(kM, encBuf.slice(0, encBuf.length - tagLength))\n\n    if (toHex(hmac) !== toHex(hmac2)) {\n      throw new Error('Invalid checksum')\n    }\n\n    return AESCBC.decrypt(ciphertext, kE, iv)\n  }\n\n  /**\n     * Encrypts a given message using the Bitcore variant of ECIES.\n     *\n     * @param {number[]} messageBuf - The message to be encrypted, in number array format.\n     * @param {PublicKey} toPublicKey - The public key of the recipient.\n     * @param {PrivateKey} [fromPrivateKey] - The private key of the sender. If not provided, a random private key is used.\n     * @param {number[]} [ivBuf] - The initialization vector for encryption. If not provided, a random IV is used.\n     * @returns {number[]} The encrypted message as a number array.\n     */\n  public static bitcoreEncrypt (messageBuf: number[], toPublicKey: PublicKey, fromPrivateKey?: PrivateKey, ivBuf?: number[]): number[] {\n    if (!fromPrivateKey) {\n      fromPrivateKey = PrivateKey.fromRandom()\n    }\n    const r = fromPrivateKey\n    const RPublicKey = fromPrivateKey.toPublicKey()\n    const RBuf = RPublicKey.encode(true) as number[]\n    const KB = toPublicKey\n    const P = KB.mul(r)\n    const S = P.getX()\n    const Sbuf = S.toArray('be', 32)\n    const kEkM = Hash.sha512(Sbuf)\n    const kE = kEkM.slice(0, 32)\n    const kM = kEkM.slice(32, 64)\n    const c = AESCBC.encrypt(messageBuf, kE, ivBuf)\n    const d = Hash.sha256hmac(kM, [...c])\n    const encBuf = [...RBuf, ...c, ...d]\n    return encBuf\n  }\n\n  /**\n     * Decrypts a message encrypted using the Bitcore variant of ECIES.\n     *\n     * @param {number[]} encBuf - The encrypted message buffer.\n     * @param {PrivateKey} toPrivateKey - The private key of the recipient.\n     * @returns {number[]} The decrypted message as a number array.\n     */\n  public static bitcoreDecrypt (encBuf: number[], toPrivateKey: PrivateKey): number[] {\n    const kB = toPrivateKey\n    const fromPublicKey = PublicKey.fromString(toHex(encBuf.slice(0, 33)))\n    const R = fromPublicKey\n    const P = R.mul(kB)\n    if (P.eq(new Point(0, 0))) {\n      throw new Error('P equals 0')\n    }\n    const S = P.getX()\n    const Sbuf = S.toArray('be', 32)\n    const kEkM = Hash.sha512(Sbuf)\n    const kE = kEkM.slice(0, 32)\n    const kM = kEkM.slice(32, 64)\n    const c = encBuf.slice(33, encBuf.length - 32)\n    const d = encBuf.slice(encBuf.length - 32, encBuf.length)\n    const d2 = Hash.sha256hmac(kM, c)\n    if (toHex(d) !== toHex(d2)) {\n      throw new Error('Invalid checksum')\n    }\n    const messageBuf = AESCBC.decrypt(c, kE)\n    return [...messageBuf]\n  }\n}\n","class Rand {\n  _rand: Function\n  constructor () {\n    const noRand = () => {\n      throw new Error('No secure random number generator is available in this environment.')\n    }\n    if (typeof self === 'object') {\n      /* eslint-disable-next-line */\n      if (self.crypto && self.crypto.getRandomValues) {\n        this._rand = n => {\n          const arr = new Uint8Array(n)\n          /* eslint-disable-next-line */\n          self.crypto.getRandomValues(arr)\n          return [...arr]\n        }\n      } else /* if (typeof window === 'object') */ {\n        this._rand = noRand\n      }\n    } else {\n      try {\n        /* eslint-disable-next-line */\n        const crypto = require('crypto')\n        if (typeof crypto.randomBytes === 'function') {\n          this._rand = n => [...crypto.randomBytes(n)]\n        }\n      } catch (e) {\n        this._rand = noRand\n      }\n    }\n  }\n\n  generate (len: number): number[] {\n    return this._rand(len)\n  }\n}\n\nlet ayn: Rand | null = null\n\n/**\n * Generates a sequence of pseudo-random bytes with the given length.\n *\n * @param len - The number of bytes to generate\n *\n * @returns The generated bytes\n *\n * @example\n * import Random from '@bsv/sdk/primitives/Random'\n * const bytes = Random(32) // Produces 32 random bytes\n */\nexport default (len: number): number[] => {\n  if (ayn == null) {\n    ayn = new Rand()\n  }\n  return ayn.generate(len)\n}\n","import FeeModel from '../FeeModel.js'\nimport Transaction from '../Transaction.js'\nimport BigNumber from '../../primitives/BigNumber.js'\n\n/**\n * Represents the \"satoshis per kilobyte\" transaction fee model.\n */\nexport default class SatoshisPerKilobyte implements FeeModel {\n  /**\n   * @property\n   * Denotes the number of satoshis paid per kilobyte of transaction size.\n   */\n  value: number\n\n  /**\n   * Constructs an instance of the sat/kb fee model.\n   *\n   * @param {number} value - The number of satoshis per kilobyte to charge as a fee.\n   */\n  constructor (value: number) {\n    this.value = value\n  }\n\n  /**\n   * Computes the fee for a given transaction.\n   *\n   * @param tx The transaction for which a fee is to be computed.\n   * @returns The fee in satoshis for the transaction, as a BigNumber.\n   */\n  async computeFee (tx: Transaction): Promise<number> {\n    const getVarIntSize = (i: number): number => {\n      if (i > 2 ** 32) {\n        return 9\n      } else if (i > 2 ** 16) {\n        return 5\n      } else if (i > 253) {\n        return 3\n      } else {\n        return 1\n      }\n    }\n    // Compute the (potentially estimated) size of the transaction\n    let size = 4 // version\n    size += getVarIntSize(tx.inputs.length) // number of inputs\n    for (let i = 0; i < tx.inputs.length; i++) {\n      const input = tx.inputs[i]\n      size += 40 // txid, output index, sequence number\n      let scriptLength: number\n      if (typeof input.unlockingScript === 'object') {\n        scriptLength = input.unlockingScript.toBinary().length\n      } else if (typeof input.unlockingScriptTemplate === 'object') {\n        scriptLength = await input.unlockingScriptTemplate.estimateLength(tx, i)\n      } else {\n        throw new Error('All inputs must have an unlocking script or an unlocking script template for sat/kb fee computation.')\n      }\n      size += getVarIntSize(scriptLength) // unlocking script length\n      size += scriptLength // unlocking script\n    }\n    size += getVarIntSize(tx.outputs.length) // number of outputs\n    for (const out of tx.outputs) {\n      size += 8 // satoshis\n      const length = out.lockingScript.toBinary().length\n      size += getVarIntSize(length) // script length\n      size += length // script\n    }\n    size += 4 // lock time\n    // We'll use Math.ceil to ensure the miners get the extra satoshi.\n    const fee = Math.ceil((size / 1000) * this.value)\n    return fee\n  }\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.7\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import {\r\n  type BroadcastFailure,\r\n  type BroadcastResponse,\r\n  Transaction,\r\n} from \"@bsv/sdk\";\r\n\r\nexport enum BroadcastStatus {\r\n  REJECTED = -1,\r\n  MEMPOOL = 0,\r\n  BROADCASTED = 1,\r\n  CONFIRMED = 2,\r\n}\r\n\r\nexport interface BroadcastStatusResponse {\r\n  status: BroadcastStatus;\r\n  proof?: number[];\r\n  message?: string;\r\n}\r\n\r\nexport interface BroadcastService {\r\n  broadcast(tx: Transaction): Promise<BroadcastResponse | BroadcastFailure>;\r\n  status(txid: string): Promise<BroadcastStatusResponse | undefined>;\r\n}\r\n","import { OP, Utils, type Script } from \"@bsv/sdk\";\r\nimport type { Network } from \"../spv-store\";\r\n\r\nexport function parseAddress(script: Script, offset = 0, network: Network = 'mainnet'): string {\r\n  if (script.chunks[0 + offset]?.op != OP.OP_DUP) return \"\";\r\n  if (script.chunks[1 + offset]?.op != OP.OP_HASH160) return \"\";\r\n  if (script.chunks[2 + offset]?.data?.length != 20) return \"\";\r\n  if (script.chunks[3 + offset]?.op != OP.OP_EQUALVERIFY) return \"\";\r\n  if (script.chunks[4 + offset]?.op != OP.OP_CHECKSIG) return \"\";\r\n  return Utils.toBase58Check(script.chunks[2 + offset].data!, network == 'mainnet' ? [0] : [111]);\r\n}\r\n","import { Utils } from \"@bsv/sdk\";\r\n\r\nexport interface BlockHeader {\r\n  hash: string;\r\n  height: number;\r\n  prevHash: string;\r\n  time: number;\r\n  version: number;\r\n  merkleroot: string;\r\n  bits: string;\r\n  nonce: number;\r\n}\r\n\r\nexport const BLOCK_HEADER_SIZE = 116;\r\n\r\nexport function blockHeaderBytes(header: BlockHeader): number[] {\r\n  const writer = new Utils.Writer();\r\n  writeBlockHeader(writer, header);\r\n  return writer.toArray();\r\n}\r\n\r\nexport function writeBlockHeader(writer: Utils.Writer, header: BlockHeader) {\r\n  writer.writeUInt32LE(header.height);\r\n  writer.write(Utils.toArray(header.hash, \"hex\"));\r\n  writer.writeUInt32LE(header.version);\r\n  writer.write(Utils.toArray(header.prevHash, \"hex\").reverse())\r\n  writer.write(Utils.toArray(header.merkleroot, \"hex\").reverse());\r\n  writer.writeUInt32LE(header.time);\r\n  writer.write(Utils.toArray(header.bits, \"hex\"));\r\n  writer.writeUInt32LE(header.nonce);\r\n}\r\n\r\nexport function blockHeaderFromReader(reader: Utils.Reader): BlockHeader {\r\n  return {\r\n    height: reader.readUInt32LE(),\r\n    hash: Utils.toHex(reader.read(32)),\r\n    version: reader.readUInt32LE(),\r\n    prevHash: Utils.toHex(reader.read(32).reverse()),\r\n    merkleroot: Utils.toHex(reader.read(32).reverse()),\r\n    time: reader.readUInt32LE(),\r\n    bits: Utils.toHex(reader.read(4)),\r\n    nonce: reader.readUInt32LE(),\r\n  };\r\n}\r\n","export class Block {\r\n  constructor(public height = Date.now(), public idx = 0n) { }\r\n}\r\n","import type { Transaction } from \"@bsv/sdk\";\r\nimport type { Txo } from \"./txo\";\r\nimport { Block } from \"./block\";\r\n\r\nexport type IndexQueue = { [txid: string]: Block };\r\n\r\n/**\r\n * Represents a summary of indices with associated metadata.\r\n * \r\n * @typedef {Object} IndexSummary\r\n * @property {Object.<string, {id?: string, amount?: bigint, icon?: string}>} [tag] - A mapping of tags to their respective metadata.\r\n * @property {string} [tag.id] - An optional identifier for the tag.\r\n * @property {number} [tag.amount] - An optional amount associated with the tag.\r\n * @property {string} [tag.icon] - Outpoint of optional icon associated with the tag. Can be ordinal or B protocol\r\n * @property {any} [tag.data] - Optional data associated with the tag.\r\n */\r\nexport type IndexSummary = {\r\n  [tag: string]: {\r\n    id?: string;\r\n    amount?: number;\r\n    icon?: string;\r\n    data?: any;\r\n  }\r\n};\r\n\r\n/**\r\n * Represents a log of indexed transactions.\r\n * \r\n * @class TxLog\r\n * \r\n * @property {IndexSummary} [summary] - The summary of the indexed transaction.\r\n * @property {string} [source] - The source of the indexed transaction.\r\n * @property {string} txid - The unique identifier of the transaction.\r\n * @property {number} [height] - The height of the block containing the transaction.\r\n * @property {number} [idx] - The index of the transaction in the block.\r\n */\r\nexport class TxLog {\r\n  summary?: IndexSummary\r\n  source?: string\r\n  constructor(\r\n    public txid: string,\r\n    public height: number = 0,\r\n    public idx = 0,\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Represents the context of an index operation.\r\n * \r\n * @interface IndexContext\r\n * \r\n * @property {Transaction} tx - The transaction being indexed.\r\n * @property {string} txid - The unique identifier of the transaction.\r\n * @property {Block} block - The block containing the transaction.\r\n * @property {Txo[]} spends - The spent transaction outputs (inputs).\r\n * @property {Txo[]} txos - The transaction outputs.\r\n * @property {IndexQueue} queue - The dependency transactions to be ingested.\r\n * @property {IndexSummary} summary - The summary of the transaction after indexing.\r\n */\r\nexport interface IndexContext {\r\n  tx: Transaction;\r\n  txid: string;\r\n  block: Block;\r\n  spends: Txo[]; //spent transaction outputs (inputs)\r\n  txos: Txo[]; //transaction outputs\r\n  queue: IndexQueue; // dependency transactions to be ingested\r\n  summary: IndexSummary // Summary of the transaction after indexing\r\n}\r\n","import type { Event } from \"./event\";\r\nimport type { Outpoint } from \"./outpoint\";\r\n\r\n/**\r\n * Represents the data structure used by the indexer to store parsed data,\r\n * emitted events, and dependencies.\r\n */\r\nexport class IndexData {\r\n  /**\r\n   * Creates an instance of IndexData.\r\n   * \r\n   * @param data - An arbitrary data object to be used by the indexer to store parsed data.\r\n   * @param events - An array of events emitted by the indexer in regard to the output. Events can be searched.\r\n   * @param deps - An array of outpoints that this output depends on.\r\n   */\r\n  constructor(\r\n    public data?: any, public events: Event[] = [], public deps: Outpoint[] = [],) { }\r\n}\r\n","import type { Network } from \"../spv-store\";\r\nimport type { TxoStore } from \"../stores\";\r\nimport type { BlockHeader } from \"./block-header\";\r\nimport type { IndexContext } from \"./index-context\";\r\nimport { IndexData } from \"./index-data\";\r\nimport type { Ingest } from \"./ingest\";\r\n\r\n/**\r\n * Enum representing the different modes of indexing.\r\n * \r\n * @enum {number}\r\n */\r\nexport enum ParseMode {\r\n  /** Parse for preview. Do not load dependencies. */\r\n  Preview = 0,\r\n  /** Parse as dependency. */\r\n  Dependency = 1,\r\n  /** Parse and queue all dependencies for ingestion. */\r\n  Persist = 2,\r\n  /** Process source transaction tree */\r\n  Deep = 3,\r\n}\r\n\r\n/**\r\n * Enum representing the different modes of indexing.\r\n * \r\n * @enum {number}\r\n */\r\nexport enum IndexMode {\r\n  /** Rely on an external indexer. */\r\n  Trust = 1,\r\n  /** Verify all data locally. This requires all dependent data to be indexed as well. */\r\n  Verify = 2,\r\n  /** Initially rely on an external indexer, but also load and verify all data locally. This will allow P2P transactions with other parties using VERIFY mode. */\r\n  TrustAndVerify = 3,\r\n}\r\n\r\n/**\r\n * Abstract class representing an Indexer.\r\n * \r\n * @property {string} tag - Unique identifier for this indexer.\r\n * @property {string} name - Human readable name for this indexer.\r\n */\r\nexport abstract class Indexer {\r\n  tag = \"\"; // unique identifier for this indexer\r\n  name = \"\"; // human readable name for this indexer\r\n \r\n  /**\r\n   * Creates an instance of the Indexer.\r\n   * \r\n   * @param {Set<string>} owners - A set of owners that this indexer is interested in. \r\n   *                 An owner can be an address or any other data the indexer \r\n   *                 wants to use to identify which transactions to include in the index.\r\n   * @param {IndexMode} indexMode - The mode of the indexer.\r\n   * @param {Network} [network=\"mainnet\"] - The network the indexer is operating on. Defaults to \"mainnet\".\r\n   */\r\n  constructor(\r\n    public owners = new Set<string>(),\r\n    public indexMode: IndexMode,\r\n    public network: Network = \"mainnet\",\r\n  ) { }\r\n\r\n  /**\r\n   * Parses an output and returns the index data if it is relevant to this indexer.\r\n   * If the output is not relevant, it returns undefined.\r\n   *\r\n   * @param {IndexContext} ctx - The context for the index operation.\r\n   * @param {number} vout - The output number to be parsed.\r\n   * @param {boolean} [previewOnly=false] - A flag indicating whether to perform a preview-only parse.\r\n   * @returns {Promise<IndexData | undefined>} A promise that resolves to the index data if relevant, or undefined if not.\r\n   */\r\n  async parse(ctx: IndexContext, vout: number, parseMode  = ParseMode.Persist): Promise<IndexData | undefined> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Pre-save hook that evaluates the index data for the entire transaction before it is persisted.\r\n   *\r\n   * @param {IndexContext} ctx - The context of the index operation.\r\n   * @returns {Promise<void>} A promise that resolves when the pre-save evaluation is complete.\r\n   */\r\n  async preSave(ctx: IndexContext): Promise<void> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Synchronize txo data for indexer from a remote source.\r\n   *\r\n   * @param {TxoStore} txoStore - The store containing transaction outputs.\r\n   * @param {{[txid: string]: Ingest}} ingestQueue - A queue of transactions to be ingested, keyed by transaction ID.\r\n   * @returns {Promise<number>} A promise that resolves when the synchronization is complete.\r\n   */\r\n  async sync(txoStore: TxoStore, ingestQueue: {[txid: string]: Ingest}): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Resolve asynchronous validations on new block\r\n   *\r\n   * @returns {Promise<void>} A promise that resolves when the indexer is resolved.\r\n   */\r\n  async resolve(txoStore: TxoStore, block: BlockHeader): Promise<void> {\r\n    return;\r\n  }\r\n}\r\n","import type { ParseMode } from \"./indexer\";\r\n\r\nexport enum IngestStatus {\r\n  FAILED = -1,\r\n  QUEUED = 0,\r\n  DOWNLOADED = 1,\r\n  INGESTED = 2,\r\n  CONFIRMED = 3,\r\n  IMMUTABLE = 4,\r\n}\r\n\r\nexport interface Ingest {\r\n  txid: string;\r\n  height: number;\r\n  idx: number;\r\n  source?: string;\r\n  parseMode: ParseMode;\r\n  // isDep?: boolean;\r\n  downloadOnly?: boolean;\r\n  // validateInputs?: boolean;\r\n  outputs?: number[];\r\n  status?: IngestStatus;\r\n  reprocess?: boolean;\r\n}\r\n","import type { Txo } from \"./txo\";\r\n\r\nexport enum TxoSort {\r\n  ASC = 'asc',\r\n  DESC = 'desc',\r\n}\r\n\r\nexport class TxoLookup {\r\n  /**\r\n   * Constructs a new instance of the search model.\r\n   * \r\n   * @param tag - Tag of the indexer to be searched.\r\n   * @param id - Optional ID of the field to be searched. Required if value populated.\r\n   * @param value - Optional value of the field to be searched.\r\n   * @param owner - Optional owner of the transaction output.\r\n   */\r\n  constructor(\r\n    public tag: string,\r\n    public id?: string,\r\n    public value?: string,\r\n    public owner?: string,\r\n    public includeSpent?: boolean,\r\n  ) { }\r\n\r\n  toQueryKey(): string {\r\n    return TxoLookup.buildQueryKey(this.tag, this.id, this.value);\r\n  }\r\n\r\n  static buildQueryKey(tag: string, id?: string, value?: string): string {\r\n    let key = tag;\r\n    if (id) {\r\n      key += `:${id}`;\r\n      if (value) {\r\n        key += `:${value}`;\r\n      }\r\n    }\r\n    return key;\r\n  }\r\n}\r\n\r\nexport interface TxoResults {\r\n  txos: Txo[];\r\n  nextPage?: string;\r\n}\r\n","import { Block } from \"./block\";\r\nimport { IndexData } from \"./index-data\";\r\nimport { Outpoint } from \"./outpoint\";\r\n\r\n/**\r\n * Enumeration representing the status of a transaction output (Txo).\r\n * \r\n * @enum {number}\r\n * @property {number} Unindexed - The transaction output is not indexed.\r\n * @property {number} Trusted - The transaction output is trusted.\r\n * @property {number} Dependency - The transaction output is a dependency.\r\n * @property {number} Validated - The transaction output is validated.\r\n */\r\nexport enum TxoStatus {\r\n  Unindexed = -1,\r\n  Trusted = 0,\r\n  Dependency = 1,\r\n  Validated = 2,\r\n}\r\n\r\n/**\r\n * Represents a transaction output (Txo).\r\n */\r\nexport class Txo {\r\n  /**\r\n   * The txid in which the output was spent, or and empty string if unspent.\r\n   */\r\n  spend: string = '';\r\n\r\n  /**\r\n   * A dictionary containing index data associated with each indexer tag.\r\n   */\r\n  data: { [tag: string]: IndexData } = {};\r\n\r\n  /**\r\n   * The owner of the transaction output. \r\n   * This is typically and address, but can be populated with any string. \r\n   * An indexer should not overwrite this field if it is already populated.\r\n   */\r\n  owner?: string;\r\n\r\n  /**\r\n   * A list of events associated with the transaction output.\r\n   */\r\n  events: string[] = [];\r\n\r\n  /**\r\n   * A list of events associated with the transaction output.\r\n   */\r\n  logs: string[] = [];\r\n\r\n  /**\r\n   * A list of tags associated with the transaction output. \r\n   */\r\n  tags: string[] = [];\r\n\r\n  /**\r\n   * A list of dependencies associated with the transaction output.\r\n   */\r\n  deps: string[] = [];\r\n\r\n  /**\r\n   * A flag indicating whether the transaction output has events.\r\n   */\r\n  hasEvents = 0;\r\n\r\n  /**\r\n   * Creates an instance of Txo.\r\n   * @param outpoint - The outpoint of the transaction output.\r\n   * @param satoshis - The amount of satoshis in the transaction output.\r\n   * @param script - The script associated with the transaction output.\r\n   * @param status - The status of the transaction output.\r\n   * @param block - The block containing the transaction output.\r\n   */\r\n  constructor(\r\n    public outpoint: Outpoint,\r\n    public satoshis: bigint,\r\n    public script: number[],\r\n    public status: TxoStatus,\r\n    public block = new Block(),\r\n  ) { }\r\n}\r\n","import { Utils } from \"@bsv/sdk\";\r\nexport class Outpoint {\r\n  txid: string;\r\n  vout: number;\r\n\r\n  constructor(txidOrOutpoint: string | number[] | Outpoint, vout?: number) {\r\n    if (vout !== undefined) {\r\n      this.vout = vout;\r\n      if (typeof txidOrOutpoint == \"string\") {\r\n        this.txid = txidOrOutpoint;\r\n      } else if (Array.isArray(txidOrOutpoint)) {\r\n        this.txid = Utils.toHex(txidOrOutpoint);\r\n      } else {\r\n        throw new Error(\"Invalid Outpoint\");\r\n      }\r\n    } else if (Array.isArray(txidOrOutpoint)) {\r\n      const reader = new Utils.Reader(txidOrOutpoint);\r\n      this.txid = Utils.toHex(reader.read(32).reverse());\r\n      this.vout = reader.readInt32LE();\r\n    } else if (typeof txidOrOutpoint == \"string\") {\r\n      const [txid, vout] = txidOrOutpoint.split(\"_\");\r\n      this.txid = txid;\r\n      this.vout = parseInt(vout);\r\n    } else if (typeof txidOrOutpoint == \"object\") {\r\n      this.txid = txidOrOutpoint.txid;\r\n      this.vout = txidOrOutpoint.vout;\r\n    } else {\r\n      throw new Error(\"Invalid Outpoint\");\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    return `${this.txid}_${this.vout}`;\r\n  }\r\n\r\n  toBinary(): number[] {\r\n    const writer = new Utils.Writer();\r\n    writer.write(Utils.toArray(this.txid, \"hex\").reverse());\r\n    writer.writeUInt32LE(this.vout);\r\n    return writer.toArray();\r\n  }\r\n\r\n  toBEBinary(): number[] {\r\n    const writer = new Utils.Writer();\r\n    writer.write(Utils.toArray(this.txid, \"hex\"));\r\n    writer.writeUInt32BE(this.vout);\r\n    return writer.toArray();\r\n  }\r\n\r\n  toJSON(): string {\r\n    return this.toString();\r\n  }\r\n}","interface IEvents {\r\n  [event: string]: Listener[];\r\n}\r\ntype Listener = (...args: any[]) => void;\r\n\r\n// export class EventEmitter<T extends string> {\r\nexport class EventEmitter {\r\n  private readonly events: IEvents = {};\r\n  // private readonly events: IEvents = {[event: T]: Listener};\r\n\r\n  public on(event: string, listener: Listener): () => void {\r\n    if (typeof this.events[event] !== \"object\") {\r\n      this.events[event] = [];\r\n    }\r\n\r\n    this.events[event].push(listener);\r\n    return () => this.removeListener(event, listener);\r\n  }\r\n\r\n  public removeListener(event: string, listener: Listener): void {\r\n    if (typeof this.events[event] !== \"object\") {\r\n      return;\r\n    }\r\n\r\n    const idx: number = this.events[event].indexOf(listener);\r\n    if (idx > -1) {\r\n      this.events[event].splice(idx, 1);\r\n    }\r\n  }\r\n\r\n  public removeAllListeners(): void {\r\n    Object.keys(this.events).forEach((event: string) =>\r\n      this.events[event].splice(0, this.events[event].length),\r\n    );\r\n  }\r\n\r\n  public emit(event: string, ...args: any[]): void {\r\n    if (typeof this.events[event] !== \"object\") {\r\n      return;\r\n    }\r\n\r\n    [...this.events[event]].forEach((listener) => listener.apply(this, args));\r\n  }\r\n\r\n  public once(event: string, listener: Listener): () => void {\r\n    const remove: () => void = this.on(event, (...args: any[]) => {\r\n      remove();\r\n      listener.apply(this, args);\r\n    });\r\n\r\n    return remove;\r\n  }\r\n}\r\n","import {\r\n  isBroadcastResponse,\r\n  Transaction,\r\n  Utils,\r\n  type BroadcastFailure,\r\n  type BroadcastResponse,\r\n} from \"@bsv/sdk\";\r\nimport type { TxoLookup, TxoResults } from \"./models/search\";\r\nimport {\r\n  type AccountService,\r\n  type BlockHeaderService,\r\n  type BroadcastService,\r\n  type TxnService,\r\n  type TxSyncLog,\r\n} from \"./services\";\r\nimport type { BlockStore, Txn, TxnStore, TxoStore } from \"./stores\";\r\nimport {\r\n  blockHeaderFromReader,\r\n  Outpoint,\r\n  ParseMode,\r\n  TxLog,\r\n  Txo,\r\n  TxoSort,\r\n  type BlockHeader,\r\n  type IndexContext,\r\n  type Ingest,\r\n} from \"./models\";\r\nimport { EventEmitter } from \"./lib/event-emitter\";\r\n\r\nexport type Network = \"mainnet\" | \"testnet\";\r\n\r\nexport interface Services {\r\n  account?: AccountService;\r\n  blocks: BlockHeaderService;\r\n  txns?: TxnService;\r\n  broadcast: BroadcastService;\r\n}\r\n\r\nexport interface Stores {\r\n  blocks?: BlockStore;\r\n  txns?: TxnStore;\r\n  txos?: TxoStore;\r\n}\r\n\r\nexport class SPVStore {\r\n  private interval: Timer | undefined;\r\n  constructor(\r\n    public services: Services,\r\n    public stores: Stores,\r\n    public events = new EventEmitter(),\r\n    startSync = false,\r\n    public subscribe = false\r\n  ) {\r\n    if (startSync) this.sync();\r\n  }\r\n\r\n  async destroy(): Promise<void> {\r\n    if (this.interval) clearInterval(this.interval);\r\n\r\n    await this.stores.txos?.destroy();\r\n    await this.stores.blocks?.destroy();\r\n    await this.stores.txns?.destroy();\r\n\r\n    this.events.emit(\r\n      \"destroyed\",\r\n      \"The SPVStore instance has been destroyed!\"\r\n    );\r\n\r\n    this.events.removeAllListeners();\r\n  }\r\n\r\n  async broadcast(\r\n    tx: Transaction,\r\n    source = \"\",\r\n    isBeefy = false\r\n  ): Promise<BroadcastResponse | BroadcastFailure> {\r\n    let resp: BroadcastResponse | BroadcastFailure;\r\n    if (!tx.merklePath) {\r\n      resp = await this.stores.txns!.broadcast(tx);\r\n    } else {\r\n      resp = {\r\n        status: 'success',\r\n        txid: tx.id('hex'),\r\n        message: ''\r\n      }\r\n    }\r\n    if (isBroadcastResponse(resp)) {\r\n      await this.stores.txos!.ingest(tx, source, isBeefy ? ParseMode.Deep : ParseMode.Persist, true)\r\n    }\r\n    return resp;\r\n\r\n  }\r\n\r\n  async sync(): Promise<void> {\r\n    await this.stores.blocks!.sync(true);\r\n    this.events.emit(\"blocksSynced\");\r\n    await this.services.account?.register([...this.stores.txos?.owners || []]);\r\n    const isSynced = await this.stores.txos!.storage.getState(\"lastSync\");\r\n    \r\n    console.log(\"Syncing wallet\", isSynced);\r\n    if (!isSynced) {\r\n      const ingestQueue: { [txid: string]: Ingest } = {};\r\n      let lastSync = 0;\r\n      for (const indexer of this.stores.txos!.indexers) {\r\n        this.events.emit(\"importing\", {tag: indexer.tag, name: indexer.name});\r\n        const score = await indexer.sync(this.stores.txos!, ingestQueue);\r\n        lastSync = Math.max(lastSync, score);\r\n      }\r\n      await this.stores.txos?.queue(Object.values(ingestQueue));\r\n      await this.stores.txos!.storage.setState(\"lastSync\", lastSync.toString());\r\n      this.events.emit(\"txosSynced\");\r\n    }\r\n    \r\n    // This does not work in a service worker and should be disabled\r\n    if (this.subscribe) {\r\n      this.services.account?.subscribe(async (topic, data: string) => {\r\n        switch (topic) {\r\n          case \"tx\":\r\n            const txSyncLog = JSON.parse(data) as TxSyncLog;\r\n            this.stores.txos!.queue([{\r\n              txid: txSyncLog.txid,\r\n              height: Number(txSyncLog.height),\r\n              idx: Number(txSyncLog.idx || 0),\r\n              outputs: txSyncLog.outs,\r\n              source: \"sync\",\r\n              parseMode: ParseMode.Persist,\r\n            }])\r\n            break;\r\n          case \"block\":\r\n            this.stores.blocks!.sync(true);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n    this.stores.blocks!.sync(false);\r\n    this.stores.txns!.processQueue();\r\n    this.stores.txos!.processQueue();\r\n    await this.stores.txos!.syncTxLogs();\r\n    if (this.interval) clearInterval(this.interval);\r\n    this.interval = setInterval(\r\n      () => this.stores.txos!.syncTxLogs(),\r\n      60 * 1000\r\n    );\r\n    this.stores.txos!.resolveBlock();\r\n    this.events.on(\"syncedBlockHeight\", async () => {\r\n      this.stores.txos!.resolveBlock();\r\n    });\r\n  }\r\n\r\n  async search(\r\n    lookup: TxoLookup,\r\n    sort = TxoSort.DESC,\r\n    limit = 100,\r\n    from?: string\r\n  ): Promise<TxoResults> {\r\n    return this.stores.txos!.search(lookup, sort, limit, from);\r\n  }\r\n\r\n  async getTxo(outpoint: Outpoint): Promise<Txo | undefined> {\r\n    return this.stores.txos!.storage.get(outpoint);\r\n  }\r\n\r\n  async getTxos(outpoints: Outpoint[]): Promise<(Txo | undefined)[]> {\r\n    return this.stores.txos!.storage.getMany(outpoints);\r\n  }\r\n\r\n  async getTx(\r\n    txid: string,\r\n    fromRemote = false\r\n  ): Promise<Transaction | undefined> {\r\n    return this.stores.txns!.loadTx(txid, fromRemote);\r\n  }\r\n\r\n  async getRecentTxs(limit = 100): Promise<TxLog[]> {\r\n    return this.stores.txos!.storage.getRecentTxLogs(limit);\r\n  }\r\n\r\n  async parseTx(tx: Transaction): Promise<IndexContext> {\r\n    return this.stores.txos!.ingest(tx, \"\", ParseMode.Preview, true)\r\n  }\r\n\r\n  async getSyncedBlock(): Promise<BlockHeader | undefined> {\r\n    return this.stores.blocks!.storage.getSynced();\r\n  }\r\n\r\n  async getBlock(height: number): Promise<BlockHeader | undefined> {\r\n    return this.stores.blocks!.storage.getByHeight(height);\r\n  }\r\n\r\n  async getChaintip(): Promise<BlockHeader | undefined> {\r\n    return this.services.blocks!.getChaintip();\r\n  }\r\n\r\n  async getBackupTx(txid: string): Promise<number[] | undefined> {\r\n    const txn = await this.stores.txns!.storage.get(txid);\r\n    if (!txn) return;\r\n    const writer = new Utils.Writer();\r\n    writer.writeInt8(Number(txn.status));\r\n    writer.writeUInt32LE(txn.block.height);\r\n    writer.writeUInt64LE(Number(txn.block.idx));\r\n    writer.writeVarIntNum(txn.rawtx.length);\r\n    writer.write(txn.rawtx);\r\n    writer.writeVarIntNum(txn.proof?.length || 0);\r\n    if (txn.proof) {\r\n      writer.write(txn.proof);\r\n    }\r\n    return writer.toArray();\r\n  }\r\n\r\n  async getBlocksBackup(): Promise<number[][]> {\r\n    return await this.stores.blocks!.storage.getBackup();\r\n  }\r\n\r\n  async restoreBlocks(data: number[]): Promise<void> {\r\n    const reader = new Utils.Reader(data);\r\n    let headers: BlockHeader[] = [];\r\n    while (reader.pos < data.length) {\r\n      headers.push(blockHeaderFromReader(reader));\r\n    }\r\n    await this.stores.blocks!.storage.putMany(headers);\r\n  }\r\n\r\n  async restoreBackupTx(txid: string, data: number[]): Promise<void> {\r\n    const reader = new Utils.Reader(data);\r\n    const status = reader.readInt8();\r\n    const height = reader.readUInt32LE();\r\n    const idx = reader.readUInt64LEBn();\r\n    let len = reader.readVarIntNum();\r\n    const txn: Txn = {\r\n      txid,\r\n      status: status as any,\r\n      block: { height, idx: BigInt(idx.toNumber()) },\r\n      rawtx: reader.read(len),\r\n    };\r\n    len = reader.readVarIntNum();\r\n    if (len) txn.proof = reader.read(len);\r\n    await this.stores.txns!.storage.put(txn);\r\n  }\r\n\r\n  async getBackupLogs(): Promise<Ingest[]> {\r\n    return this.stores.txos!.storage.getBackupLogs();\r\n  }\r\n\r\n  async restoreBackupLogs(logs: Ingest[]): Promise<void> {\r\n    await this.stores.txos!.queue(logs);\r\n    let lastHeight = 0;\r\n    for (const log of logs) {\r\n      if (log.height > lastHeight && log.height < 50000000) {\r\n        lastHeight = log.height;\r\n      }\r\n    }\r\n    for (const owner of this.stores.txos!.owners) {\r\n      await this.stores.txos!.storage.setState(\r\n        `sync-${owner}`,\r\n        lastHeight.toString()\r\n      );\r\n    }\r\n    await this.stores.txos!.storage.setState(\r\n      \"lastSync\",\r\n      lastHeight.toString()\r\n    );\r\n  }\r\n}\r\n","import {\r\n  type BroadcastFailure,\r\n  type BroadcastResponse,\r\n  Hash,\r\n  Transaction,\r\n  Utils,\r\n} from \"@bsv/sdk\";\r\nimport {\r\n  type AccountService,\r\n  type BlockHeaderService,\r\n  type BroadcastService,\r\n  BroadcastStatus,\r\n  type BroadcastStatusResponse,\r\n  type TxnService,\r\n  type TxSyncLog,\r\n} from \"../services\";\r\nimport type { BlockHeader } from \"../models/block-header\";\r\nimport type { Network } from \"../spv-store\";\r\nimport type { Outpoint } from \"../models/outpoint\";\r\nimport type { Ordinal, RemoteBsv20 } from \"../indexers/remote-types\";\r\nimport type { Txn } from \"../stores\";\r\n// import { Block, Txo, type IndexQueue } from \"../models\";\r\nimport type { File } from \"../indexers\";\r\n\r\nconst APIS = {\r\n  mainnet: \"https://ordinals.gorillapool.io\",\r\n  testnet: \"https://testnet.ordinals.gorillapool.io\",\r\n};\r\n\r\nexport class OneSatProvider\r\n  implements AccountService, BlockHeaderService, BroadcastService, TxnService {\r\n  // public subscriptions = new Map<string, (topic: string, event: string) => void>();\r\n  public eventSource: EventSource | undefined;\r\n\r\n  public constructor(\r\n    public network: Network,\r\n    public accountId?: string,\r\n    // public authKey?: PrivateKey,\r\n  ) { }\r\n\r\n  async register(addresses: string[]): Promise<void> {\r\n    const resp = await fetch(`${APIS[this.network]}/v5/acct/${this.accountId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(addresses),\r\n    });\r\n    if (!resp.ok) throw new Error(\"Failed to register account\");\r\n  }\r\n\r\n  async broadcast(\r\n    tx: Transaction\r\n  ): Promise<BroadcastResponse | BroadcastFailure> {\r\n    console.log(\"Broadcasting\", tx.id(\"hex\"), tx.toHex());\r\n    const url = `${APIS[this.network]}/v5/tx`;\r\n\r\n    const resp = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/octet-stream\",\r\n      },\r\n      body: Buffer.from(tx.toBinary()),\r\n    });\r\n    const body = (await resp.json()) as { txid: string, success: boolean, error: string, status: number };\r\n    if (resp.status !== 200) {\r\n      return {\r\n        status: \"error\",\r\n        code: resp.status.toString(),\r\n        description: body.error,\r\n      } as BroadcastFailure;\r\n    }\r\n    return {\r\n      status: \"success\",\r\n      txid: body.txid,\r\n      message: \"Transaction broadcast successfully\",\r\n    } as BroadcastResponse;\r\n  }\r\n\r\n  async status(txid: string): Promise<BroadcastStatusResponse | undefined> {\r\n    const resp = await fetch(`${APIS[this.network]}/v1/tx/${txid}/proof`);\r\n    switch (resp.status) {\r\n      case 200:\r\n        return {\r\n          status: BroadcastStatus.CONFIRMED,\r\n          proof: [...Buffer.from(await resp.arrayBuffer())],\r\n        };\r\n      case 404:\r\n        return { status: BroadcastStatus.MEMPOOL };\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  async fetchTxn(txid: string): Promise<Txn> {\r\n    const resp = await fetch(`${APIS[this.network]}/v5/tx/${txid}`);\r\n    console.log(\"Fetching\", txid);\r\n    if (resp.status !== 200)\r\n      throw new Error(`${resp.status} - Failed to fetch tx ${txid}`);\r\n    const data = await resp.arrayBuffer();\r\n    const reader = new Utils.Reader([...Buffer.from(data)]);\r\n    let len = reader.readVarIntNum();\r\n    const txn = {\r\n      rawtx: reader.read(len),\r\n    } as Txn;\r\n    len = reader.readVarIntNum();\r\n    if (len) txn.proof = reader.read(len);\r\n    return txn;\r\n  }\r\n\r\n  async fetchProof(txid: string): Promise<number[] | undefined> {\r\n    const resp = await fetch(`${APIS[this.network]}/v5/tx/${txid}/proof`);\r\n    console.log(\"Fetching\", txid);\r\n    if (resp.status !== 200) return;\r\n    const proof = await resp.arrayBuffer();\r\n    return [...Buffer.from(proof)];\r\n  }\r\n\r\n  async getBlocks(lastHeight: number, limit = 1000): Promise<BlockHeader[]> {\r\n    const resp = await fetch(\r\n      `${APIS[this.network]}/v5/blocks/list/${lastHeight}?limit=${limit}`\r\n    );\r\n    return resp.json() as Promise<BlockHeader[]>;\r\n  }\r\n\r\n  async getChaintip(): Promise<BlockHeader> {\r\n    const resp = await fetch(`${APIS[this.network]}/v5/blocks/tip`);\r\n    if (!resp.ok) throw new Error(\"Failed to fetch chaintip\");\r\n    return resp.json() as Promise<BlockHeader>;\r\n  }\r\n\r\n  async utxos(refresh = false): Promise<Ordinal[]> {\r\n    const resp = await fetch(\r\n      `${APIS[this.network]}/v5/acct/${this.accountId}/utxos?txo=true&limit=0&tags=*${refresh ? \"&refresh=true\" : \"\"}`,\r\n    );\r\n    return ((await resp.json()) as Ordinal[]) || [];\r\n  }\r\n\r\n  async getTxo(outpoint: Outpoint): Promise<Ordinal | undefined> {\r\n    const resp = await fetch(\r\n      `${APIS[this.network]}/v5/txo/${outpoint.toString()}?txo=true&tags=*`\r\n    );\r\n    return resp.ok ? (resp.json() as Promise<Ordinal>) : undefined;\r\n  }\r\n\r\n  async getTxos(outpoints: Outpoint[]): Promise<Ordinal[]> {\r\n    const resp = await fetch(`${APIS[this.network]}/v5/txos/outpoints?txo=true&tags=*`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(outpoints),\r\n    });\r\n    return resp.ok ? (await resp.json() as Ordinal[]).map(o => o) : [];\r\n  }\r\n\r\n  async getBsv20Details(tick: string): Promise<RemoteBsv20 | undefined> {\r\n    const resp = await fetch(`${APIS[this.network]}/api/bsv20/tick/${tick}`);\r\n    return resp.ok ? (resp.json() as Promise<RemoteBsv20>) : undefined;\r\n  }\r\n  \r\n  async getBsv2021Txo(outpoint: Outpoint): Promise<RemoteBsv20 | undefined> {\r\n    const resp = await fetch(\r\n      `${APIS[this.network]}/api/bsv20/outpoint/${outpoint.toString()}`\r\n    );\r\n    return resp.ok ? (resp.json() as Promise<RemoteBsv20>) : undefined;\r\n  }\r\n\r\n  async getOriginAncestors(outpoints: string[]): Promise<Ordinal[]> {\r\n    if (!outpoints.length) return [];\r\n    const resp = await fetch(`${APIS[this.network]}/v5/origins/ancestors`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(outpoints),\r\n    });\r\n    return resp.ok ? (await resp.json() as Ordinal[]) : [];\r\n\r\n  }\r\n\r\n  async getInscriptionFile(outpoint: string): Promise<File | undefined> {\r\n    const [txid, vout] = outpoint.split(\"_\");\r\n    const resp = await fetch(`${APIS[this.network]}/v5/tx/${txid}/parse`);\r\n    if (!resp.ok) return;\r\n    const idxCtx = await resp.json();\r\n    \r\n    return idxCtx.txos[parseInt(vout)]?.data?.insc?.file;\r\n  }\r\n\r\n  subscribed() {\r\n    return !!this.eventSource;\r\n  }\r\n\r\n  subscribe(cb: (topic: string, data: string) => void) {\r\n    if (this.eventSource) this.eventSource.close();\r\n    const acctTopic = `acct:${this.accountId}`;\r\n    const topics = [acctTopic, `block`];\r\n    this.eventSource = new EventSource(`${APIS[this.network]}/v5/sse?${topics.map(t => `topic=${t}`).join('&')}`);\r\n    this.eventSource.addEventListener(acctTopic, (e: MessageEvent) => {\r\n      console.log(acctTopic, e.data);\r\n      cb('tx', e.data)\r\n    });\r\n    this.eventSource.addEventListener('block', (e: MessageEvent) => {\r\n      console.log('block', e.data);\r\n      cb('block', e.data)\r\n    });\r\n    this.eventSource.onmessage = (e: MessageEvent) => {\r\n      console.log('message', e.data);\r\n    }\r\n  }\r\n\r\n  unsubscribe() {\r\n    if (this.eventSource) {\r\n      this.eventSource.close();\r\n      this.eventSource = undefined;\r\n    }\r\n  };\r\n\r\n  async syncTxLogs(from = 0, limit=0, reverse = false): Promise<TxSyncLog[]> {\r\n    const resp = await fetch(\r\n      `${APIS[this.network]}/v5/acct/${this.accountId}/${from}?limit=${limit}&rev=${reverse}`\r\n    );\r\n    if (!resp.ok) throw new Error(\"Failed to fetch tx logs\");\r\n    const logs = await resp.json() as TxSyncLog[];\r\n    return logs.map((log) => {\r\n      if(log.score > 5e16) {\r\n        log.score = 0;\r\n      }\r\n      return log;\r\n    });\r\n  }\r\n}\r\n","import {\r\n  P2PKH,\r\n  type PrivateKey,\r\n  Script,\r\n  type Transaction,\r\n  TransactionSignature,\r\n  type UnlockingScript,\r\n  Utils,\r\n} from \"@bsv/sdk\";\r\n\r\nexport const lockPrefix =\r\n  \"2097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0000\";\r\n\r\nexport const lockSuffix =\r\n  \"610079040065cd1d9f690079547a75537a537a537a5179537a75527a527a7575615579014161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169557961007961007982775179517954947f75517958947f77517a75517a756161007901007e81517a7561517a7561040065cd1d9f6955796100796100798277517951790128947f755179012c947f77517a75517a756161007901007e81517a7561517a756105ffffffff009f69557961007961007982775179517954947f75517958947f77517a75517a756161007901007e81517a7561517a75615279a2695679a95179876957795779ac7777777777777777\";\r\n\r\n/**\r\n * OrdLock class implementing ScriptTemplate.\r\n *\r\n * This class provides methods for interacting with OrdinalLock contract\r\n */\r\nexport class LockTemplate {\r\n  /**\r\n   * Creates a Lock script\r\n   *\r\n   * @param {string} address\r\n   * @param {number} until - Block height when unlockable\r\n   * @returns {LockingScript} - A P2PKH locking script.\r\n   */\r\n  lock(address: string, until: number): Script {\r\n    const pkh = Utils.fromBase58Check(address).data as number[];\r\n\r\n    return new Script()\r\n      .writeScript(Script.fromHex(lockPrefix))\r\n      .writeBin(pkh)\r\n      .writeNumber(until)\r\n      .writeScript(Script.fromHex(lockSuffix));\r\n  }\r\n\r\n  unlock(\r\n    privateKey: PrivateKey,\r\n    signOutputs: \"all\" | \"none\" | \"single\" = \"all\",\r\n    anyoneCanPay = false,\r\n    sourceSatoshis?: number,\r\n    lockingScript?: Script,\r\n  ): {\r\n    sign: (tx: Transaction, inputIndex: number) => Promise<UnlockingScript>;\r\n    estimateLength: (tx: Transaction, inputIndex: number) => Promise<number>;\r\n  } {\r\n    const unlock = {\r\n      sign: async (tx: Transaction, inputIndex: number) => {\r\n        let signatureScope = TransactionSignature.SIGHASH_FORKID\r\n        if (signOutputs === 'all') {\r\n          signatureScope |= TransactionSignature.SIGHASH_ALL\r\n        }\r\n        if (signOutputs === 'none') {\r\n          signatureScope |= TransactionSignature.SIGHASH_NONE\r\n        }\r\n        if (signOutputs === 'single') {\r\n          signatureScope |= TransactionSignature.SIGHASH_SINGLE\r\n        }\r\n        if (anyoneCanPay) {\r\n          signatureScope |= TransactionSignature.SIGHASH_ANYONECANPAY\r\n        }\r\n        const input = tx.inputs[inputIndex]\r\n\r\n        const otherInputs = tx.inputs.filter((_, index) => index !== inputIndex)\r\n\r\n        const sourceTXID = input.sourceTXID ? input.sourceTXID : input.sourceTransaction?.id('hex')\r\n        if (!sourceTXID) {\r\n          throw new Error(\r\n            'The input sourceTXID or sourceTransaction is required for transaction signing.'\r\n          )\r\n        }\r\n        sourceSatoshis ||= input.sourceTransaction?.outputs[input.sourceOutputIndex].satoshis\r\n        if (!sourceSatoshis) {\r\n          throw new Error(\r\n            'The sourceSatoshis or input sourceTransaction is required for transaction signing.'\r\n          )\r\n        }\r\n        lockingScript ||= input.sourceTransaction?.outputs[input.sourceOutputIndex].lockingScript\r\n        if (!lockingScript) {\r\n          throw new Error(\r\n            'The lockingScript or input sourceTransaction is required for transaction signing.'\r\n          )\r\n        }\r\n\r\n        const preimage = TransactionSignature.format({\r\n          sourceTXID,\r\n          sourceOutputIndex: input.sourceOutputIndex,\r\n          sourceSatoshis,\r\n          transactionVersion: tx.version,\r\n          otherInputs,\r\n          outputs: tx.outputs,\r\n          inputIndex,\r\n          subscript: lockingScript,\r\n          inputSequence: input.sequence === undefined ? 0xffffffff : input.sequence,\r\n          lockTime: tx.lockTime,\r\n          scope: signatureScope\r\n        })\r\n\r\n        const p2pkh = new P2PKH().unlock(\r\n          privateKey,\r\n          signOutputs,\r\n          anyoneCanPay,\r\n          sourceSatoshis,\r\n          lockingScript,\r\n        );\r\n        return (await p2pkh.sign(tx, inputIndex)).writeBin(preimage);\r\n      },\r\n      estimateLength: async (tx: Transaction, inputIndex: number) => {\r\n        return (await unlock.sign(tx, inputIndex)).toBinary().length;\r\n      },\r\n    };\r\n    return unlock;\r\n  }\r\n}\r\n","import type { IndexContext } from \"../models/index-context\";\r\nimport { Indexer } from \"../models/indexer\";\r\nimport { IndexData } from \"../models/index-data\";\r\nimport { Script, Utils } from \"@bsv/sdk\";\r\nimport { lockPrefix, lockSuffix } from \"../templates/lock\";\r\nimport type { Event } from \"../models/event\";\r\n\r\nconst PREFIX = Buffer.from(lockPrefix, \"hex\");\r\nconst SUFFIX = Buffer.from(Utils.toArray(lockSuffix, \"hex\"));\r\n\r\nexport class Lock {\r\n  constructor(public until = 0) { }\r\n}\r\n\r\nexport class LockIndexer extends Indexer {\r\n  tag = \"lock\";\r\n  name = \"Locks\";\r\n  async parse(\r\n    ctx: IndexContext,\r\n    vout: number\r\n  ): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    const script = Buffer.from(txo.script);\r\n    const prefixIdx = script.indexOf(PREFIX);\r\n    if (prefixIdx === -1) return;\r\n    const suffixIdx = script.indexOf(SUFFIX, prefixIdx + PREFIX.length);\r\n    if (suffixIdx === -1) return;\r\n    const dataScript = Script.fromBinary(\r\n      Array.from(script.subarray(prefixIdx + PREFIX.length, suffixIdx)),\r\n    );\r\n    if (dataScript.chunks[0]?.data?.length != 20 || !dataScript.chunks[1]?.data)\r\n      return;\r\n    const until = parseInt(\r\n      Buffer.from(dataScript.chunks[1]!.data!).reverse().toString(\"hex\"),\r\n      16,\r\n    );\r\n\r\n    txo.owner = Utils.toBase58Check(dataScript.chunks[0].data!, this.network == 'mainnet' ? [0] : [111]);\r\n    const events: Event[] = [];\r\n    if (txo.owner && this.owners.has(txo.owner)) {\r\n      events.push({ id: \"until\", value: until.toString().padStart(7, \"0\") });\r\n      events.push({ id: \"address\", value: txo.owner });\r\n    }\r\n    return new IndexData(new Lock(until), events);\r\n  }\r\n\r\n  async preSave(ctx: IndexContext): Promise<void> {\r\n    const locksOut = ctx.spends.reduce((acc, spends) => {\r\n      if (!spends.data[this.tag]) return acc;\r\n      return acc + (spends.owner && this.owners.has(spends.owner) ?\r\n        spends.satoshis :\r\n        0n);\r\n    }, 0n)\r\n    const locksIn = ctx.txos.reduce((acc, txo) => {\r\n      if (!txo.data[this.tag]) return acc;\r\n      return acc + (txo.owner && this.owners.has(txo.owner) ?\r\n        txo.satoshis :\r\n        0n);\r\n    }, 0n);\r\n    const balance = Number(locksIn - locksOut);\r\n    if (balance) {\r\n      ctx.summary[this.tag] = {\r\n        amount: balance,\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { IndexData, Indexer, Outpoint, ParseMode, Txo, type Ingest } from \"../models\";\nimport { OneSatProvider } from \"../providers\";\nimport type { TxoStore } from \"../stores\";\nimport { Lock } from \"./lock\";\nimport type { Origin } from \"./origin\";\n\nexport class OneSatIndexer extends Indexer {\n  tag = \"1sat\";\n  name = \"1Sat\";\n\n  async sync(txoStore: TxoStore, ingestQueue: { [txid: string]: Ingest }): Promise<number> {\n    const oneSat = new OneSatProvider(this.network, txoStore.services.account?.accountId || '');\n    const utxos = await oneSat.utxos(true);\n    let maxScore = 0;\n    console.log(\"Syncing\", utxos.length, \"utxos for \", [...txoStore.owners]);\n    let originOutpoints: string[] = [];\n    for (const u of utxos) {\n      const outpoint = new Outpoint(u.outpoint);\n      const txo = new Txo(outpoint, BigInt(u.satoshis), [], 0);\n      txo.owner = u.owners?.find(o => txoStore.owners.has(o));\n      if (txo.owner) {\n        if (txo.satoshis > 1n && !u.data?.lock) {\n          txo.data[\"fund\"] = new IndexData(txo.owner, [{ id: \"address\", value: txo.owner }])\n        }\n        if (u.data?.origin && !u.data?.insc?.file?.type.startsWith('application/bsv-20')) {\n          const origin: Origin = {\n            outpoint: u.data.origin.outpoint,\n            nonce: 0,\n            map: u.data.origin.map,\n            insc: {\n              file: {\n                type: u.data.origin?.type || \"\",\n                size: 0,\n                hash: \"\",\n                content: [],\n              },\n            }\n          };\n          originOutpoints.push(u.outpoint);\n\n          const idxData = new IndexData(origin, []);\n          if (origin.outpoint) {\n            idxData.events.push({ id: \"outpoint\", value: origin.outpoint });\n          }\n          if (origin.insc?.file?.type) {\n            idxData.events.push({ id: \"type\", value: origin.insc.file.type });\n          }\n          txo.data[\"origin\"] = idxData;\n        }\n        if (u.data?.ordlock?.status == 0) {\n          txo.data[\"list\"] = new IndexData(u.data.ordlock, []);\n        }\n        if (u.data?.lock) {\n          txo.data[\"lock\"] = new IndexData(new Lock(u.data.lock.until), [\n            { id: \"until\", value: u.data.lock.until.toString().padStart(7, \"0\") },\n            { id: \"address\", value: txo.owner }\n          ]);\n        }\n        if (Object.keys(txo.data).length > 0) {\n          await txoStore.storage.put(txo);\n        }\n      } else {\n        console.log(\"No owner for\", u.owners);\n      }\n      let ingest = ingestQueue[outpoint.txid];\n      if (!ingest) {\n        ingest = {\n          txid: outpoint.txid,\n          height: u.height || 0,\n          source: \"1sat\",\n          idx: u.idx || 0,\n          parseMode: ParseMode.Persist,\n          outputs: [outpoint.vout],\n        };\n        ingestQueue[outpoint.txid] = ingest;\n      } else {\n        ingest.outputs!.push(outpoint.vout);\n      }\n      if (u.height < 50000000) {\n        maxScore = Math.max(maxScore, u.height * 1000000000 + u.idx);\n      }\n    }\n    if (originOutpoints.length > 0) {\n      const ancestors = await oneSat.getOriginAncestors(originOutpoints);\n      for (const ancestor of ancestors) {\n        const [txid, vout] = ancestor.outpoint.split(\"_\");\n        let ingest = ingestQueue[txid];\n        if (!ingest) {\n          ingest = {\n            txid: txid,\n            height: ancestor.height,\n            idx: Number(ancestor.idx),\n            parseMode: ParseMode.Dependency,\n            outputs: [parseInt(vout)],\n            source: 'ancestor',\n          }\n          ingestQueue[txid] = ingest;\n        } else {\n          ingest.outputs!.push(parseInt(vout));\n        }\n      }\n    }\n    const txSyncs = await oneSat.syncTxLogs() || [];\n    for (const sync of txSyncs) {\n      let ingest = ingestQueue[sync.txid];\n      if (!ingest) {\n        ingest = {\n          txid: sync.txid,\n          height: sync.height,\n          idx: Number(sync.idx),\n          parseMode: ParseMode.Persist,\n          outputs: sync.outs,\n          source: 'history',\n        };\n        ingestQueue[sync.txid] = ingest;\n      } else {\n        ingest.outputs = [...new Set([...ingest.outputs || [], ...sync.outs || []])];\n      }\n    }\n    return maxScore;\n  }\n}\n","import { Hash, HD, Utils } from \"@bsv/sdk\";\r\nimport type { IndexContext } from \"../models/index-context\";\r\nimport { IndexData } from \"../models/index-data\";\r\nimport { Indexer, IndexMode } from \"../models/indexer\";\r\nimport { OneSatProvider } from \"../providers/1sat-provider\";\r\nimport type { Network } from \"../spv-store\";\r\nimport type { RemoteBsv20 } from \"./remote-types\";\r\n\r\nexport const FEE_XPUB = 'xpub661MyMwAqRbcF221R74MPqdipLsgUevAAX4hZP2rywyEeShpbe3v2r9ciAvSGT6FB22TEmFLdUyeEDJL4ekG8s9H5WXbzDQPr6eW1zEYYy9'\r\nconst hdKey = HD.fromString(FEE_XPUB);\r\n\r\nexport enum Bsv20Status {\r\n  Invalid = -1,\r\n  Pending = 0,\r\n  Valid = 1,\r\n}\r\n\r\nexport class Bsv20 {\r\n  status = 0;\r\n  public tick = \"\";\r\n  public op = \"\";\r\n  public amt = 0n;\r\n  public dec = 0;\r\n  public reason?: string;\r\n  public fundAddress = \"\";\r\n\r\n  static fromJSON(obj: any): Bsv20 {\r\n    const bsv20 = new Bsv20();\r\n    Object.assign(bsv20, {\r\n      ...obj,\r\n      amt: BigInt(obj.amt),\r\n    });\r\n    return bsv20;\r\n  }\r\n}\r\n\r\nexport class Bsv20Indexer extends Indexer {\r\n  tag = \"bsv20\";\r\n  name = \"Bsv20s\";\r\n\r\n  provider: OneSatProvider;\r\n  constructor(\r\n    public owners = new Set<string>(),\r\n    public indexMode: IndexMode,\r\n    public network: Network = \"mainnet\",\r\n  ) {\r\n    if (indexMode !== IndexMode.Trust) {\r\n      throw new Error(\"Bsv20 requires Trust mode\");\r\n    }\r\n    super(owners, indexMode, network);\r\n    this.provider = new OneSatProvider(network);\r\n  }\r\n\r\n\r\n  async parse(ctx: IndexContext, vout: number): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    if (!txo.data.insc?.data) return;\r\n    if (txo.data.insc?.data.file.type !== \"application/bsv-20\") return;\r\n    let bsv20: Bsv20;\r\n    try {\r\n      bsv20 = Bsv20.fromJSON(JSON.parse(Utils.toUTF8(txo.data.insc?.data.file.content)));\r\n      const data = new IndexData(bsv20);\r\n      const amt = BigInt(bsv20.amt);\r\n      if (amt <= 0n || amt > 2 ** 64 - 1) return;\r\n      switch (bsv20.op) {\r\n        case \"deploy\":\r\n          if (bsv20.dec || 0 > 18) return;\r\n          break;\r\n        case \"mint\":\r\n        case \"transfer\":\r\n        case \"burn\":\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      if (!bsv20.tick) {\r\n        return;\r\n      }\r\n      bsv20.fundAddress = deriveFundAddress(bsv20.tick)\r\n      if (txo.owner && this.owners.has(txo.owner)) {\r\n        data.events.push({ id: \"tick\", value: bsv20.tick });\r\n      }\r\n      return data;\r\n    } catch (e) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  async preSave(ctx: IndexContext) {\r\n    if(this.indexMode == IndexMode.Trust) return;\r\n    const tokens = new Map<string, RemoteBsv20>();\r\n    let token: Bsv20 | undefined\r\n    let balance = 0;\r\n    for (const spend of ctx.spends) {\r\n      const bsv20 = spend.data.bsv20;\r\n      if (!bsv20) continue;\r\n      if (bsv20.data.status == 0 && this.indexMode !== IndexMode.Verify) {\r\n        const remote = await this.provider.getBsv2021Txo(spend.outpoint);\r\n        if (remote) {\r\n          tokens.set(bsv20.data.tick, remote);\r\n          bsv20.data.status = remote.status;\r\n          bsv20.data.dec = remote.dec;\r\n          if (!token) token = bsv20.data as Bsv20;\r\n          if (token.tick == remote.tick && spend.owner && this.owners.has(spend.owner)) {\r\n            balance -= Number(remote.amt)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const txo of ctx.txos) {\r\n      const bsv20 = txo.data.bsv20;\r\n      if (!bsv20) continue;\r\n      if (!token) token = bsv20.data as Bsv20;\r\n      if (bsv20?.data?.tick == token?.tick && txo.owner && this.owners.has(txo.owner)) {\r\n        balance += Number(bsv20.data.amt)\r\n      }\r\n      if (bsv20?.data?.tick && tokens.has(bsv20.data.tick)) {\r\n        bsv20.data.dec = tokens.get(bsv20.data.tick)!.dec;\r\n      }\r\n    }\r\n    if(token) {\r\n      ctx.summary[this.tag] = {\r\n        id: token.tick,\r\n        amount: balance / Math.pow(10, token.dec || 0),\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function deriveFundAddress(idOrTick: string | number[]): string {\r\n  const hash = Hash.sha256(idOrTick);\r\n  const reader = new Utils.Reader(hash);\r\n  let path = `m/21/${reader.readUInt32BE() >> 1}`;\r\n  reader.pos = 24;\r\n  path += `/${reader.readUInt32BE() >> 1}`;\r\n  return hdKey.derive(path).pubKey.toAddress();\r\n}","\r\nimport type { IndexContext } from \"../models/index-context\";\r\nimport { IndexData } from \"../models/index-data\";\r\nimport { Indexer, IndexMode } from \"../models/indexer\";\r\nimport { Txo } from \"../models/txo\";\r\nimport { Utils } from \"@bsv/sdk\";\r\nimport { Bsv20Status, deriveFundAddress } from \"./bsv20\";\r\nimport { OneSatProvider } from \"../providers/1sat-provider\";\r\nimport type { Network } from \"../spv-store\";\r\n\r\nexport class Bsv21 {\r\n  status = Bsv20Status.Pending;\r\n  public id: string;\r\n  public op = \"\";\r\n  public amt = 0n;\r\n  public dec = 0;\r\n  public sym?: string;\r\n  public icon?: string;\r\n  public supply?: bigint;\r\n  public contract?: string;\r\n  public reason?: string;\r\n  public fundAddress = \"\";\r\n\r\n  constructor(props: Bsv21) {\r\n    this.id = props.id || \"\";\r\n    Object.assign(this, props);\r\n\r\n  }\r\n\r\n  static fromJSON(obj: any): Bsv21 {\r\n    // if (typeof obj.id != \"string\" && !Array.isArray(obj.id)) return;\r\n    const bsv21 = new Bsv21({\r\n      // id: new Outpoint(obj.id as string),x\r\n      ...obj,\r\n      amt: BigInt(obj.amt),\r\n      dec: parseInt(obj.dec || '0'),\r\n    });\r\n    return bsv21;\r\n  }\r\n}\r\n\r\nexport class Bsv21Indexer extends Indexer {\r\n  tag = \"bsv21\";\r\n  name = \"Bsv21s\";\r\n\r\n  provider: OneSatProvider;\r\n  constructor(\r\n    public owners = new Set<string>(),\r\n    public indexMode: IndexMode,\r\n    public network: Network = \"mainnet\",\r\n  ) {\r\n    super(owners, indexMode, network);\r\n    this.provider = new OneSatProvider(network);\r\n  }\r\n\r\n  async parse(ctx: IndexContext, vout: number): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    if (!txo.data.insc?.data) return;\r\n    if (txo.data.insc?.data.file.type !== \"application/bsv-20\") return;\r\n    let bsv21: Bsv21;\r\n    try {\r\n      bsv21 = Bsv21.fromJSON(JSON.parse(Utils.toUTF8(txo.data.insc?.data.file.content)));\r\n    } catch (e) {\r\n      return;\r\n    }\r\n    const data = new IndexData(bsv21);\r\n    if (bsv21.amt <= 0n || bsv21.amt > 2 ** 64 - 1) return;\r\n    switch (bsv21.op) {\r\n      case \"deploy+mint\":\r\n        if (bsv21.dec > 18) return;\r\n        bsv21.id = txo.outpoint.toString();\r\n        bsv21.supply = bsv21.amt;\r\n        bsv21.status = Bsv20Status.Valid;\r\n        break;\r\n      case \"transfer\":\r\n      case \"burn\":\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    if (!bsv21.id) {\r\n      return;\r\n    }\r\n    bsv21.fundAddress = deriveFundAddress(txo.outpoint.toBEBinary());\r\n    if (txo.owner && this.owners.has(txo.owner)) {\r\n      data.events.push({ id: \"address\", value: txo.owner });\r\n      data.events.push({ id: \"id\", value: bsv21.id });\r\n      if (bsv21.contract) {\r\n        data.events.push({ id: \"contract\", value: bsv21.contract });\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async preSave(ctx: IndexContext) {\r\n    if (this.indexMode == IndexMode.Trust) return;\r\n    const balance: { [id: string]: bigint } = {};\r\n    const tokensIn: { [id: string]: Txo[] } = {};\r\n    let summaryToken: Bsv21 | undefined;\r\n    let summaryBalance = 0;\r\n    let hasPending = false;\r\n    for (const spend of ctx.spends) {\r\n      const bsv21 = spend.data.bsv21;\r\n      if (!bsv21) continue;\r\n      // if (bsv21.data.status != Bsv20Status.Valid && this.indexMode == IndexMode.Trust) {\r\n      //   const remote = await this.provider.getBsv2021Txo(spend.outpoint);\r\n      //   if (remote) {\r\n      //     bsv21.data.status = remote.status;\r\n      //     bsv21.data.sym = remote.sym;\r\n      //     bsv21.data.icon = remote.icon;\r\n      //     bsv21.data.dec = remote.dec;\r\n      //   }\r\n      // }\r\n      if (!summaryToken) summaryToken = bsv21.data as Bsv21;\r\n      if (bsv21.data.id == summaryToken.id && spend.owner && this.owners.has(spend.owner)) {\r\n        summaryBalance -= Number(bsv21.data.amt)\r\n      }\r\n      if (bsv21.data.status == Bsv20Status.Pending) {\r\n        for (const txo of ctx.txos) {\r\n          const outBsv21 = txo.data?.bsv21;\r\n          if (outBsv21?.data?.id == bsv21.data.id) {\r\n            outBsv21.data.status = Bsv20Status.Pending;\r\n            outBsv21.data.sym = bsv21.data.sym;\r\n            outBsv21.data.icon = bsv21.data.icon;\r\n            outBsv21.data.dec = bsv21.data.dec;\r\n          }\r\n        }\r\n        hasPending = true;\r\n      } else if (bsv21.data.status == Bsv20Status.Valid) {\r\n        if (!tokensIn[bsv21.data.id]) {\r\n          tokensIn[bsv21.data.id] = [];\r\n        }\r\n        tokensIn[bsv21.data.id].push(spend);\r\n        balance[bsv21.data!.id] =\r\n          (balance[bsv21.data!.id] || 0n) + bsv21.data.amt;\r\n      }\r\n    }\r\n    const tokensOut: { [id: string]: Txo[] } = {};\r\n    const reasons: { [id: string]: string } = {};\r\n    for (const txo of ctx.txos) {\r\n      const bsv21 = txo.data?.bsv21;\r\n      if (!bsv21 || ![\"transfer\", \"burn\"].includes(bsv21.data.op)) continue;\r\n      let token: Bsv21 | undefined;\r\n      for (const spend of tokensIn[bsv21.data.id] || []) {\r\n        token = spend.data.bsv21.data;\r\n        bsv21.deps.push(spend.outpoint);\r\n      }\r\n      if ((balance[bsv21.data.id] || 0n) < bsv21.data.amt) {\r\n        reasons[bsv21.data.id] = \"Insufficient inputs\";\r\n      }\r\n      if (!summaryToken) summaryToken = bsv21.data as Bsv21;\r\n      if (bsv21.data.id == summaryToken?.id && txo.owner && this.owners.has(txo.owner)) {\r\n        summaryBalance += Number(bsv21.data.amt)\r\n      }\r\n\r\n      if (token) {\r\n        bsv21.data.sym = token.sym;\r\n        bsv21.data.icon = token.icon;\r\n        bsv21.data.contract = token.contract;\r\n        bsv21.data.supply = token.supply;\r\n        bsv21.data.dec = token.dec;\r\n      }\r\n\r\n      if (!tokensOut[bsv21.data.id]) {\r\n        tokensOut[bsv21.data.id] = [];\r\n      }\r\n      tokensOut[bsv21.data.id].push(txo);\r\n      balance[bsv21.data.id] =\r\n        (balance[bsv21.data.id] || 0n) - BigInt(bsv21.data.amt);\r\n    }\r\n\r\n    if (!hasPending) {\r\n      for (const [id, txos] of Object.entries(tokensOut)) {\r\n        const reason = reasons[id];\r\n        for (const txo of txos) {\r\n          txo.data.bsv21.data.status = reason\r\n            ? Bsv20Status.Invalid\r\n            : Bsv20Status.Valid;\r\n          txo.data.bsv21.data.reason = reason;\r\n        }\r\n      }\r\n    }\r\n    if (summaryToken) {\r\n      ctx.summary[this.tag] = {\r\n        id: summaryToken.sym,\r\n        amount: summaryBalance / Math.pow(10, summaryToken.dec || 0),\r\n        icon: summaryToken.icon\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { IndexContext } from \"../models/index-context\";\r\nimport { parseAddress } from \"../models/address\";\r\nimport {\r\n  type Event,\r\n  Indexer,\r\n  IndexData,\r\n} from \"../models\";\r\n\r\nexport class FundIndexer extends Indexer {\r\n  tag = \"fund\";\r\n  name = \"Funds\";\r\n\r\n  async parse(ctx: IndexContext, vout: number): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    const script = ctx.tx.outputs[vout].lockingScript;\r\n    const address = parseAddress(script, 0, this.network);\r\n    if (txo.satoshis < 2n) return;\r\n    const events: Event[] = [];\r\n    if (address && this.owners.has(address)) {\r\n      txo.owner = address;\r\n      events.push({ id: \"address\", value: address });\r\n      return new IndexData(txo.owner, events);\r\n    }\r\n  }\r\n\r\n  async preSave(ctx: IndexContext): Promise<void> {\r\n    let satsOut = ctx.spends.reduce((acc, spends) => {\r\n      if (!spends.data[this.tag]) return acc;\r\n      return acc + (spends.owner && this.owners.has(spends.owner) ?\r\n        spends.satoshis :\r\n        0n);\r\n    }, 0n);\r\n    let satsIn = ctx.txos.reduce((acc, txo) => {\r\n      if (!txo.data[this.tag]) return acc;\r\n      return acc + (txo.owner && this.owners.has(txo.owner) ?\r\n        txo.satoshis :\r\n        0n);\r\n    }, 0n);\r\n    const balance = Number(satsIn - satsOut);\r\n    if (balance) {\r\n      ctx.summary[this.tag] = {\r\n        amount: balance,\r\n      };\r\n    }\r\n  }\r\n}\r\n","import type { IndexContext } from \"../models/index-context\";\r\nimport { OP, Script, Utils } from \"@bsv/sdk\";\r\nimport {\r\n  Indexer,\r\n  IndexData,\r\n} from \"../models\";\r\n\r\nexport const MAP_PROTO = \"1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5\"\r\nexport class MapIndexer extends Indexer {\r\n  tag = \"map\";\r\n  name = \"MAP\";\r\n\r\n  async parse(ctx: IndexContext, vout: number): Promise<IndexData | undefined> {\r\n    const script = ctx.tx.outputs[vout].lockingScript;\r\n\r\n    let retPos = 0\r\n    let mapPos = 0;\r\n    for (let i = retPos + 1; i < script.chunks.length; i++) {\r\n      const chunk = script.chunks[i];\r\n      if (!retPos || chunk.op === OP.OP_RETURN) {\r\n        retPos = i;\r\n      } else if (!retPos || chunk.data?.length !== 1 || chunk.data[0] !== 0x7c) {\r\n        continue;\r\n      }\r\n\r\n      if (Utils.toUTF8(script.chunks[++i]?.data || []) !== MAP_PROTO) {\r\n        continue;\r\n      }\r\n      mapPos = ++i;\r\n      break;\r\n    }\r\n    if (!mapPos) return;\r\n    const map = MapIndexer.parseMap(script, mapPos);\r\n    if (!map) return;\r\n    return new IndexData(map);\r\n  }\r\n\r\n  static parseMap(script: Script, mapPos: number): { [key: string]: any } | undefined {\r\n    if (Utils.toUTF8(script.chunks[mapPos]?.data || []) !== \"SET\") {\r\n      return;\r\n    }\r\n    const map: { [key: string]: any } = {};\r\n    for (let i = mapPos+1; i < script.chunks.length; i += 2) {\r\n      const chunk = script.chunks[i];\r\n      if (chunk.op === OP.OP_RETURN || (chunk.data?.length == 1 && chunk.data[0] !== 0x7c)) break;\r\n      const key = Utils.toUTF8(chunk.data || []);\r\n      const value = Utils.toUTF8(script.chunks[i+1]?.data || []);\r\n      if (key == 'subTypeData') {\r\n        map[key] = JSON.parse(value);\r\n      } else {\r\n        map[key] = value;\r\n      }\r\n    }\r\n    return map;\r\n  }\r\n}\r\n","import { Hash, OP, Script, Utils } from \"@bsv/sdk\";\r\nimport type { IndexContext } from \"../models/index-context\";\r\n\r\nimport {\r\n  IndexData,\r\n  Indexer,\r\n  Outpoint,\r\n  parseAddress,\r\n  type Event,\r\n} from \"../models\";\r\nimport { MAP_PROTO, MapIndexer } from \"./map\";\r\n\r\nexport interface File {\r\n  hash: string;\r\n  size: number;\r\n  type: string;\r\n  content: number[];\r\n}\r\n\r\nexport interface Inscription {\r\n  file?: File;\r\n  fields?: { [key: string]: any };\r\n  parent?: string;\r\n}\r\n\r\nexport class InscriptionIndexer extends Indexer {\r\n  tag = \"insc\";\r\n  name = \"Inscriptions\";\r\n\r\n  async parse(\r\n    ctx: IndexContext,\r\n    vout: number,\r\n  ): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    if (txo.satoshis != 1n) return;\r\n    const script = ctx.tx.outputs[vout].lockingScript;\r\n    let fromPos: number | undefined;\r\n    for (let i = 0; i < script.chunks.length; i++) {\r\n      const chunk = script.chunks[i];\r\n      if (\r\n        i >= 2 &&\r\n        chunk.data?.length === 3 &&\r\n        Utils.toUTF8(chunk.data) == \"ord\" &&\r\n        script.chunks[i - 1].op == OP.OP_IF &&\r\n        script.chunks[i - 2].op == OP.OP_FALSE\r\n      ) {\r\n        fromPos = i + 1;\r\n      }\r\n    }\r\n    if (fromPos === undefined) return;\r\n\r\n    if (!txo.owner) txo.owner = parseAddress(script, 0, this.network);\r\n    const insc = {\r\n      file: { hash: \"\", size: 0, type: \"\" },\r\n      fields: {},\r\n    } as Inscription;\r\n\r\n    for (let i = fromPos; i < script.chunks.length; i += 2) {\r\n      const field = script.chunks[i];\r\n      if (field.op == OP.OP_ENDIF) {\r\n        if (!txo.owner) txo.owner = parseAddress(script, i + 1, this.network);\r\n        if (!txo.owner && script.chunks[i + 1]?.op == OP.OP_CODESEPARATOR) {\r\n          txo.owner = parseAddress(script, i + 2);\r\n        }\r\n        break;\r\n      }\r\n      if (field.op > OP.OP_16) return;\r\n      const value = script.chunks[i + 1];\r\n      if (value.op > OP.OP_PUSHDATA4) return;\r\n\r\n      if (field.data?.length || 0 > 1 && Buffer.from(field.data || []).toString() == MAP_PROTO) {\r\n        const map = MapIndexer.parseMap(Script.fromBinary(value.data || []), 0);\r\n        if (map) {\r\n          txo.data[\"map\"] = new IndexData(map);\r\n        }\r\n        // if bitcomData != nil {\r\n        //   b := append(bitcomData.Data.([]*bitcom.Bitcom), &bitcom.Bitcom{\r\n        //     Protocol: string(op.Data),\r\n        //     Script:   op2.Data,\r\n        //     Pos:      pos,\r\n        //   })\r\n        //   bitcomData.Data = b\r\n        // }\r\n        // if (!insc.fields) insc.fields = {};\r\n        // insc.fields[Buffer.from(field.data!).toString()] = value.data;\r\n        continue;\r\n      }\r\n      // TODO: handle MAP\r\n\r\n      let fieldNo = 0;\r\n      if (field.op > OP.OP_PUSHDATA4 && field.op <= OP.OP_16) {\r\n        fieldNo = field.op - 80;\r\n      } else if (field.data?.length) {\r\n        fieldNo = field.data[0];\r\n      }\r\n      switch (fieldNo) {\r\n        case 0:\r\n          insc.file!.size = value.data?.length || 0;\r\n          if (!value.data?.length) break;\r\n          insc.file!.hash = Utils.toBase64(Hash.sha256(value.data));\r\n          insc.file!.content = value.data;\r\n          break;\r\n        case 1:\r\n          insc.file!.type = Buffer.from(value.data || []).toString();\r\n          break;\r\n        case 3:\r\n          if (!value.data || value.data.length != 36) break;\r\n          try {\r\n            const parent = new Outpoint(value.data);\r\n            if (\r\n              !ctx.spends.find(\r\n                (s) => s.outpoint.toString() == parent.toString(),\r\n              )\r\n            )\r\n              continue;\r\n            insc.parent = parent.toString();\r\n          } catch {\r\n            console.log(\"Error parsing parent outpoint\");\r\n          }\r\n          break;\r\n        default:\r\n          if (!insc.fields) insc.fields = {};\r\n          insc.fields[fieldNo.toString()] =\r\n            value.data && Buffer.from(value.data).toString(\"base64\");\r\n      }\r\n    }\r\n\r\n    const events: Event[] = [];\r\n    if (txo.owner && this.owners.has(txo.owner)) {\r\n      events.push({ id: \"address\", value: txo.owner });\r\n    }\r\n    return new IndexData(insc, events);\r\n  }\r\n}\r\n","import type { IndexContext } from \"../models/index-context\";\r\nimport {\r\n  Block,\r\n  IndexData,\r\n  Indexer,\r\n  IndexMode,\r\n  Outpoint,\r\n  parseAddress,\r\n  ParseMode,\r\n  TxoLookup,\r\n  TxoSort,\r\n  type BlockHeader,\r\n  type Event,\r\n  type Ingest,\r\n} from \"../models\";\r\nimport { OneSatProvider } from \"../providers/1sat-provider\";\r\nimport type { Inscription } from \"./insc\";\r\nimport type { Sigma } from \"./remote-types\";\r\nimport type { Network } from \"../spv-store\";\r\nimport type { TxoStore } from \"../stores\";\r\n\r\nconst TRIGGER = 783968;\r\nexport interface Origin {\r\n  outpoint?: string;\r\n  nonce?: number;\r\n  insc?: Inscription;\r\n  map?: { [key: string]: any };\r\n  sigma?: Sigma[];\r\n}\r\n\r\nexport class OriginIndexer extends Indexer {\r\n  tag = \"origin\";\r\n  name = \"Origins\";\r\n  oneSat: OneSatProvider;\r\n\r\n  constructor(\r\n    public owners = new Set<string>(),\r\n    public indexMode: IndexMode,\r\n    public network: Network = \"mainnet\",\r\n  ) {\r\n    super(owners, indexMode, network);\r\n    this.oneSat = new OneSatProvider(network);\r\n  }\r\n\r\n  async parse(ctx: IndexContext, vout: number, parseMode = ParseMode.Persist): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    if (txo.satoshis != 1n || ctx.block.height < TRIGGER || txo.data.insc?.data?.file?.type == \"application/bsv-20\") return;\r\n    if(!txo.owner) {\r\n      txo.owner = parseAddress(ctx.tx.outputs[vout].lockingScript, 0, this.network);;\r\n    }\r\n    let outSat = 0n;\r\n    for (let i = 0; i < vout; i++) {\r\n      outSat += ctx.txos[i].satoshis;\r\n    }\r\n    let satsIn = 0n;\r\n    let origin: Origin = {\r\n      outpoint: \"\",\r\n      insc: txo.data.insc?.data,\r\n      nonce: 0,\r\n      sigma: txo.data.sigma?.data\r\n    };\r\n    const deps: Outpoint[] = [];\r\n    let spendOutpoint: Outpoint | undefined;\r\n    for (const spend of ctx.spends.values()) {\r\n      deps.push(spend.outpoint);\r\n      if (satsIn == outSat && spend.satoshis == 1n && spend.block.height >= TRIGGER) {\r\n        spendOutpoint = spend.outpoint;\r\n        if (spend.data.origin?.data) {\r\n          origin = {\r\n            ...spend.data.origin.data,\r\n          };\r\n          if (origin?.nonce) {\r\n            origin.nonce++;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      satsIn += spend.satoshis;\r\n      if (satsIn > outSat) {\r\n        origin.outpoint = txo.outpoint.toString();\r\n        break;\r\n      }\r\n    }\r\n    const events: Event[] = [];\r\n    origin.map = {\r\n      ...origin.map || {},\r\n      ...txo.data.map?.data || {},\r\n    };\r\n    if (txo.owner && this.owners.has(txo.owner)) {\r\n      events.push({ id: \"outpoint\", value: origin.outpoint?.toString() || \"\" });\r\n      if (origin.insc?.file?.type) {\r\n        events.push({ id: \"type\", value: origin.insc.file.type });\r\n      }\r\n    }\r\n    const file = origin.insc?.file;\r\n    if (file && file.size && file.size > 4096) {\r\n      file.content = [];\r\n    }\r\n    return new IndexData(origin, events, deps);\r\n  }\r\n\r\n  async preSave(ctx: IndexContext): Promise<void> {\r\n    let balance = 0;\r\n    let hasTag = false;\r\n    let icon: string | undefined;\r\n    let id = \"\";\r\n    for (const spend of ctx.spends) {\r\n      if (spend.data[this.tag]) {\r\n        let origin = spend.data[this.tag].data as Origin;\r\n        if (spend.owner && this.owners.has(spend.owner)) {\r\n          hasTag = true;\r\n          balance--;\r\n          if (!icon && origin?.insc?.file?.type.startsWith(\"image/\")) {\r\n            icon = origin?.outpoint;\r\n            id = origin.map?.name || \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (const txo of ctx.txos) {\r\n      if (txo.data[this.tag]) {\r\n        if (txo.owner && this.owners.has(txo.owner)) {\r\n          hasTag = true;\r\n          balance++;\r\n          let origin = txo.data.origin?.data as Origin;\r\n          if (!icon && origin?.insc?.file?.type.startsWith(\"image/\")) {\r\n            icon = origin?.outpoint;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (hasTag) {\r\n      ctx.summary[this.tag] = {\r\n        id,\r\n        amount: balance,\r\n        icon,\r\n      };\r\n    }\r\n  }\r\n\r\n  async resolve(txoStore: TxoStore, block: BlockHeader): Promise<void> {\r\n    if (this.indexMode === IndexMode.Verify) return;\r\n    const results = await txoStore.search(new TxoLookup(this.tag, 'outpoint', ':', undefined, true), TxoSort.ASC, 1000)\r\n\r\n    const ingestQueue: {[txid: string]:Ingest} = {};\r\n    const originOutpoints = new Set<string>();\r\n    for (const txo of results.txos) {\r\n      const originData = txo.data.origin;\r\n      originData.events = originData?.events.filter(e => e.id != \"outpoint\");\r\n      const origin = originData?.data as Origin;\r\n      if (!origin?.outpoint) {\r\n        const remote = await this.oneSat.getTxo(txo.outpoint);\r\n        if (remote?.data?.origin?.outpoint) {\r\n          origin.outpoint = remote?.data?.origin?.outpoint;\r\n          if (this.indexMode == IndexMode.Trust) {\r\n            const file = await this.oneSat.getInscriptionFile(origin.outpoint);\r\n            origin.insc = {file};\r\n            origin.map = remote.data.origin.map;\r\n            origin.nonce = (remote.data.origin.nonce || 0) + 1;\r\n            originData.events.push({ id: \"outpoint\", value: origin.outpoint });\r\n            await txoStore.storage.put(txo)\r\n          } else if (this.indexMode == IndexMode.TrustAndVerify) {\r\n            let ingest = ingestQueue[txo.outpoint.txid];\r\n            originOutpoints.add(origin.outpoint);\r\n            if (!ingest) {\r\n              ingest = {\r\n                txid: txo.outpoint.txid,\r\n                height: txo.block.height,\r\n                idx: Number(txo.block.idx),\r\n                parseMode: ParseMode.Persist,\r\n                outputs: [txo.outpoint.vout],\r\n                source: \"origin\",\r\n                reprocess: true,\r\n              };\r\n              ingestQueue[txo.outpoint.txid] = ingest;\r\n            } else {\r\n              ingest.outputs!.push(txo.outpoint.vout);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.indexMode == IndexMode.TrustAndVerify) {\r\n      const ancestors = await this.oneSat.getOriginAncestors([...originOutpoints]);\r\n      for (const ancestor of ancestors) {\r\n        const [txid, vout] = ancestor.outpoint.split(\"_\");\r\n        let ingest = ingestQueue[txid];\r\n        if (!ingest) {\r\n          ingest = {\r\n            txid: txid,\r\n            height: ancestor.height,\r\n            idx: Number(ancestor.idx),\r\n            parseMode: ParseMode.Persist,\r\n            outputs: [parseInt(vout)],\r\n            source: 'ancestor',\r\n            reprocess: true,\r\n          }\r\n          ingestQueue[txid] = ingest;\r\n        } else {\r\n          ingest.outputs!.push(parseInt(vout));\r\n        }\r\n      }\r\n      const ingests = Object.values(ingestQueue);\r\n      if (ingests.length > 0) {\r\n        await txoStore.queue(ingests);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { IndexContext } from \"../models/index-context\";\r\nimport { BigNumber, BSM, Hash, OP, type PublicKey, Script, Signature, Utils } from \"@bsv/sdk\";\r\nimport {\r\n  Indexer,\r\n  IndexData,\r\n} from \"../models\";\r\n\r\ntype Sigma = {\r\n  algorithm: string;\r\n  address: string;\r\n  signature: number[];\r\n  vin: number;\r\n  valid: boolean;\r\n}\r\n\r\nexport class SigmaIndexer extends Indexer {\r\n  tag = \"sigma\";\r\n  name = \"Sigma\";\r\n\r\n  async parse(ctx: IndexContext, vout: number): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    if(!txo.data?.insc) return;\r\n    const script = ctx.tx.outputs[vout].lockingScript;\r\n    let retPos = 0\r\n    let sigmas: Sigma[] = [];\r\n    for (let i = retPos + 1; i < script.chunks.length; i++) {\r\n      const chunk = script.chunks[i];\r\n      if (!retPos && chunk.op === OP.OP_RETURN) {\r\n        retPos = i;\r\n        continue;\r\n      } else if (!retPos || chunk.data?.length !== 1 || chunk.data[0] !== 0x7c) {\r\n        continue;\r\n      }\r\n\r\n      if (Utils.toUTF8(script.chunks[++i]?.data || []) !== 'SIGMA') {\r\n        continue;\r\n      }\r\n\r\n      const dataPos = i - 1;\r\n      const sigma: Sigma = {\r\n        algorithm: script.chunks[++i]?.data ? Utils.toUTF8(script.chunks[i].data!) : '',\r\n        address: script.chunks[++i]?.data ? Utils.toUTF8(script.chunks[i].data!) : '',\r\n        signature: script.chunks[++i]?.data || [],\r\n        vin: script.chunks[++i]?.data ? parseInt(Utils.toUTF8(script.chunks[i].data!)) : -1,\r\n        valid: false,\r\n      }\r\n      if (sigma.vin == -1) sigma.vin = vout;\r\n      const bw = new Utils.Writer();\r\n      bw.write(Utils.toArray(ctx.spends[sigma.vin].outpoint.txid, 'hex'))\r\n      bw.writeUInt32LE(ctx.spends[sigma.vin].outpoint.vout);\r\n      const inputHash = Hash.sha256(bw.toArray());\r\n      const dataScript = new Script()\r\n      dataScript.chunks = script.chunks.slice(0, dataPos);\r\n      const outputHash = Hash.sha256(dataScript.toBinary());\r\n      const msgHash = Hash.sha256(inputHash.concat(outputHash));\r\n\r\n      const signature = Signature.fromCompact(sigma.signature);\r\n      let publicKey: PublicKey | undefined\r\n      for (let recovery = 0; recovery < 4; recovery++) {\r\n        try {\r\n          publicKey = signature.RecoverPublicKey(recovery, new BigNumber(BSM.magicHash(msgHash)))\r\n          const sigFitsPubkey = BSM.verify(msgHash, signature, publicKey);\r\n          if (sigFitsPubkey && publicKey.toAddress() === sigma.address) {\r\n            sigma.valid = true;\r\n          }\r\n        } catch (e) {\r\n          // try next recovery\r\n        }\r\n      }\r\n      sigmas.push(sigma);\r\n    }\r\n    if (!sigmas.length) return;\r\n\r\n    return new IndexData(\r\n      sigmas,\r\n    );\r\n  }\r\n}\r\n","import type { IndexContext } from \"../models/index-context\";\r\nimport { Indexer } from \"../models/indexer\";\r\nimport { IndexData } from \"../models/index-data\";\r\nimport { BigNumber, Script, Utils } from \"@bsv/sdk\";\r\nimport type { Event } from \"../models/event\";\r\n\r\nconst PREFIX = Buffer.from(\r\n  \"2097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0000\",\r\n  \"hex\",\r\n);\r\nconst SUFFIX = Buffer.from(\r\n  \"615179547a75537a537a537a0079537a75527a527a7575615579008763567901c161517957795779210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081059795679615679aa0079610079517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e81517a75615779567956795679567961537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff00517951796151795179970079009f63007952799367007968517a75517a75517a7561527a75517a517951795296a0630079527994527a75517a6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f7754537993527993013051797e527e54797e58797e527e53797e52797e57797e0079517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a75517a756100795779ac517a75517a75517a75517a75517a75517a75517a75517a75517a7561517a75517a756169587951797e58797eaa577961007982775179517958947f7551790128947f77517a75517a75618777777777777777777767557951876351795779a9876957795779ac777777777777777767006868\",\r\n  \"hex\",\r\n);\r\n\r\nexport class Listing {\r\n  constructor(\r\n    public payout: number[] = [],\r\n    public price = 0n,\r\n  ) { }\r\n}\r\n\r\nexport class OrdLockIndexer extends Indexer {\r\n  tag = \"list\";\r\n  name = \"Listings\"\r\n\r\n  async parse(\r\n    ctx: IndexContext,\r\n    vout: number,\r\n  ): Promise<IndexData | undefined> {\r\n    const txo = ctx.txos[vout];\r\n    const script = Buffer.from(txo.script);\r\n    const prefixIdx = script.indexOf(PREFIX);\r\n    if (prefixIdx === -1) return;\r\n    const suffixIdx = script.indexOf(SUFFIX, prefixIdx + PREFIX.length);\r\n    if (suffixIdx === -1) return;\r\n    const dataScript = Script.fromBinary(\r\n      Array.from(script.subarray(prefixIdx + PREFIX.length, suffixIdx)),\r\n    );\r\n    const listing = new Listing();\r\n    if (!dataScript.chunks[1]!.data || !dataScript.chunks[1]!.data) return;\r\n    listing.payout = dataScript.chunks[1]!.data;\r\n    listing.price = BigInt(\r\n      BigNumber.fromScriptNum(dataScript.chunks[1]!.data!.slice(0, 8)).toString(),\r\n    );\r\n    txo.owner =\r\n      dataScript.chunks[0]?.data &&\r\n      Utils.toBase58Check(Array.from(dataScript.chunks[0]!.data!), this.network == 'mainnet' ? [0] : [111]);\r\n    const events: Event[] = [];\r\n    if (txo.owner && this.owners.has(txo.owner)) {\r\n      events.push({\r\n        id: \"price\",\r\n        value: listing.price.toString(16).padStart(16, \"0\"),\r\n      });\r\n    }\r\n    return new IndexData(listing, events);\r\n  }\r\n\r\n  async preSave(ctx: IndexContext): Promise<void> {\r\n    for (const [vin, spend] of ctx.spends.entries()) {\r\n      if(spend.data[this.tag]) {\r\n        \r\n        if(Buffer.from(ctx.tx.inputs[vin].unlockingScript?.toBinary() || []).includes(SUFFIX)) {\r\n          ctx.summary[this.tag] = {\r\n            amount: 1,\r\n          }\r\n        } else {\r\n          ctx.summary[this.tag] = {\r\n            amount: 0,\r\n          }\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    for (const txo of ctx.txos) {\r\n      if(txo.data[this.tag]) {\r\n        ctx.summary[this.tag] = {\r\n          amount: -1,\r\n        }\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { openDB, type DBSchema, type IDBPDatabase } from \"@tempfix/idb\";\r\nimport type { BlockStorage } from \"../block-storage\";\r\nimport { writeBlockHeader, type BlockHeader } from \"../../models/block-header\";\r\nimport type { Network } from \"../../spv-store\";\r\nimport { Utils } from \"@bsv/sdk\";\r\n\r\nconst BLOCK_DB_VERSION = 1;\r\n\r\nexport interface BlockSchema extends DBSchema {\r\n  blocks: {\r\n    key: number;\r\n    value: BlockHeader;\r\n    indexes: {\r\n      hash: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport class BlockStorageIDB implements BlockStorage {\r\n  private constructor(public db: IDBPDatabase<BlockSchema>) {}\r\n\r\n  static async init(network: Network): Promise<BlockStorageIDB> {\r\n    const db = await openDB<BlockSchema>(\r\n      `blocks-${network}`,\r\n      BLOCK_DB_VERSION,\r\n      {\r\n        upgrade(db) {\r\n          db.createObjectStore(\"blocks\", { keyPath: \"height\" }).createIndex(\r\n            \"hash\",\r\n            \"hash\"\r\n          );\r\n        },\r\n      }\r\n    );\r\n\r\n    return new BlockStorageIDB(db);\r\n  }\r\n\r\n  async destroy() {\r\n    this.db.close();\r\n  }\r\n\r\n  async put(block: BlockHeader): Promise<void> {\r\n    await this.db.put(\"blocks\", block);\r\n  }\r\n\r\n  async putMany(blocks: BlockHeader[]): Promise<void> {\r\n    if (!blocks.length) return;\r\n    const t = this.db.transaction(\"blocks\", \"readwrite\");\r\n    for (const block of blocks) {\r\n      t.store.put(block);\r\n    }\r\n    await t.done;\r\n  }\r\n\r\n  async getByHash(hash: string): Promise<BlockHeader | undefined> {\r\n    return this.db.getFromIndex(\"blocks\", \"hash\", hash).catch(() => undefined);\r\n  }\r\n\r\n  async getByHeight(height: number): Promise<BlockHeader | undefined> {\r\n    return this.db.get(\"blocks\", height).catch(() => undefined);\r\n  }\r\n\r\n  async getSynced(): Promise<BlockHeader | undefined> {\r\n    const db = await this.db;\r\n    const t = db.transaction(\"blocks\", \"readonly\");\r\n    const cursor = await t.store.openCursor(null, \"prev\");\r\n    const block = cursor?.value;\r\n    await t.done;\r\n    return block;\r\n  }\r\n\r\n  async getAll(): Promise<BlockHeader[]> {\r\n    return this.db.getAll(\"blocks\");\r\n  }\r\n\r\n  async getBackup(): Promise<number[][]> {\r\n    let writer = new Utils.Writer();\r\n    const t = this.db.transaction(\"blocks\", \"readonly\");\r\n    let headers: number[][] = [];\r\n    let count = 0;\r\n    let prevHash =\r\n      \"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\";\r\n    for await (const cursor of t.store.iterate()) {\r\n      const header = cursor.value;\r\n      header.prevHash = prevHash;\r\n      prevHash = header.hash;\r\n      writeBlockHeader(writer, cursor.value);\r\n      if (++count === 10000) {\r\n        headers.push(writer.toArray());\r\n        writer = new Utils.Writer();\r\n        count = 0;\r\n      }\r\n    }\r\n    await t.done;\r\n    if (count) {\r\n      headers.push(writer.toArray());\r\n    }\r\n    return headers;\r\n  }\r\n}\r\n","import type { TxnStorage } from \"../storage/txn-storage\";\r\nimport {\r\n  isBroadcastResponse,\r\n  MerklePath,\r\n  Transaction,\r\n  type BroadcastFailure,\r\n  type BroadcastResponse,\r\n} from \"@bsv/sdk\";\r\nimport type { Services, Stores } from \"../spv-store\";\r\nimport type { EventEmitter } from \"../lib/event-emitter\";\r\nimport { Block } from \"../models\";\r\n\r\n/**\r\n * Represents a transaction in the system.\r\n *\r\n * @interface Txn\r\n * @property {string} txid - The unique identifier for the transaction.\r\n * @property {number[]} rawtx - The raw transaction data.\r\n * @property {number[]} [proof] - Optional proof data for the transaction.\r\n * @property {Block} block - The block containing the transaction.\r\n * @property {TxnStatus} status - The current status of the transaction.\r\n */\r\nexport interface Txn {\r\n  txid: string;\r\n  rawtx: number[];\r\n  proof?: number[];\r\n  block: Block;\r\n  status: TxnStatus;\r\n}\r\n\r\n/**\r\n * Enum representing the various statuses a transaction can have.\r\n *\r\n * @enum {number}\r\n * @property {number} REJECTED - The transaction has been rejected.\r\n * @property {number} PENDING - The transaction is pending and awaiting further action.\r\n * @property {number} BROADCASTED - The transaction has been broadcasted to the network.\r\n * @property {number} CONFIRMED - The transaction has been confirmed by the network, but could still be re-orged\r\n * @property {number} IMMUTABLE - The transaction is 6 blocks deep and is considered immutable.\r\n */\r\nexport enum TxnStatus {\r\n  REJECTED = -1,\r\n  PENDING = 0,\r\n  BROADCASTED = 1,\r\n  CONFIRMED = 2,\r\n  IMMUTABLE = 3,\r\n}\r\n\r\nexport class TxnStore {\r\n  private syncRunning: Promise<void> | undefined;\r\n  private stopSync = false;\r\n\r\n  constructor(\r\n    public storage: TxnStorage,\r\n    public services: Services,\r\n    public stores: Stores,\r\n    public events?: EventEmitter\r\n  ) {}\r\n\r\n  async destroy() {\r\n    this.stopSync = true;\r\n    if (this.syncRunning) await this.syncRunning;\r\n    await this.storage.destroy();\r\n  }\r\n\r\n  async broadcast(\r\n    tx: Transaction\r\n  ): Promise<BroadcastResponse | BroadcastFailure> {\r\n    const resp = await this.services.broadcast.broadcast(tx);\r\n    if (isBroadcastResponse(resp)) {\r\n      this.events?.emit(\"broadcastSuccess\", tx);\r\n    } else {\r\n      this.events?.emit(\"broadcastFailure\", tx);\r\n    }\r\n    return resp;\r\n  }\r\n\r\n  async loadTx(\r\n    txid: string,\r\n    fromRemote = false\r\n  ): Promise<Transaction | undefined> {\r\n    let txn = await this.storage.get(txid);\r\n    let saveTx = false;\r\n    if (!txn && fromRemote) {\r\n      this.events?.emit(\"fetchingTx\", { txid });\r\n      txn = await this.services.txns?.fetchTxn(txid);\r\n      saveTx = !!txn;\r\n    }\r\n    if (!txn) return;\r\n    const tx = Transaction.fromBinary(txn.rawtx);\r\n    if (txn.proof) {\r\n      tx.merklePath = MerklePath.fromBinary(txn.proof);\r\n    }\r\n    if (saveTx) {\r\n      await this.saveTx(tx);\r\n    }\r\n    return tx;\r\n  }\r\n\r\n  async saveTx(tx: Transaction) {\r\n    const txn: Txn = {\r\n      txid: tx.id(\"hex\"),\r\n      rawtx: tx.toBinary(),\r\n      block: new Block(),\r\n      status: TxnStatus.BROADCASTED,\r\n    };\r\n    if (tx.merklePath) {\r\n      // if (!(await tx.merklePath.verify(txn.txid, this.stores.blocks!))) {\r\n      //   throw new Error(\"Invalid merkle path\");\r\n      // }\r\n      txn.proof = tx.merklePath!.toBinary();\r\n      txn.block.height = tx.merklePath!.blockHeight;\r\n      txn.block.idx = BigInt(\r\n        tx.merklePath!.path[0].find((p) => p.hash == txn.txid)?.offset || 0\r\n      );\r\n      txn.status = TxnStatus.CONFIRMED;\r\n    }\r\n    await this.storage.put(txn);\r\n  }\r\n\r\n  async processQueue() {\r\n    if (this.syncRunning) return;\r\n    this.syncRunning = Promise.all([\r\n      this.processMempool(),\r\n      this.processConfirmed(),\r\n    ]).then(() => {});\r\n  }\r\n\r\n  async processMempool(): Promise<void> {\r\n    try {\r\n      const txns = await this.storage.getByStatus(\r\n        TxnStatus.BROADCASTED,\r\n        Date.now() - 600000,\r\n        25\r\n      );\r\n      if (txns.length) {\r\n        for (const txn of txns) {\r\n          // this.events?.emit(\"fetchingTx\", { txid: txn.txid });\r\n          const proof = await this.services.txns?.fetchProof(txn.txid);\r\n          if (!proof) {\r\n            txn.block.height = Date.now();\r\n            continue;\r\n          }\r\n          const merklePath = MerklePath.fromBinary(proof);\r\n          if (await merklePath.verify(txn.txid, this.stores.blocks!)) {\r\n            txn.block.height = merklePath.blockHeight;\r\n            txn.block.idx = BigInt(\r\n              merklePath.path[0].find((p) => p.hash == txn.txid)?.offset || 0\r\n            );\r\n            txn.proof = merklePath.toBinary();\r\n            txn.status = TxnStatus.CONFIRMED;\r\n          } else {\r\n            txn.block.height = Date.now();\r\n          }\r\n        }\r\n        await this.storage.putMany(txns);\r\n      } else {\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to ingest txs\", e);\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n    if (this.stopSync) {\r\n      return;\r\n    }\r\n    return this.processMempool();\r\n  }\r\n\r\n  async processConfirmed(): Promise<void> {\r\n    try {\r\n      const chaintip = await this.stores.blocks!.getChaintip();\r\n      const txns = await this.storage.getByStatus(\r\n        TxnStatus.CONFIRMED,\r\n        chaintip!.height - 5,\r\n        25\r\n      );\r\n      if (txns.length) {\r\n        for (const txn of txns) {\r\n          let merklePath = MerklePath.fromBinary(txn.proof!);\r\n          let verified = false;\r\n          try {\r\n            verified = await merklePath.verify(txn.txid, this.stores.blocks!);\r\n          } catch {\r\n            console.error(\"Failed to verify merkle path:\", txn.txid);\r\n          }\r\n          if (verified) {\r\n            txn.status = TxnStatus.IMMUTABLE;\r\n            continue;\r\n          }\r\n          // this.events?.emit(\"fetchingTx\", { txid: txn.txid });\r\n          const proof = await this.services.txns?.fetchProof(txn.txid);\r\n          if (proof) {\r\n            merklePath = MerklePath.fromBinary(proof);\r\n            \r\n            try {\r\n              verified = await merklePath.verify(txn.txid, this.stores.blocks!)\r\n            } catch {\r\n              console.error(\"Failed to verify merkle path:\", txn.txid);\r\n            }\r\n            if (verified) {\r\n              txn.block.height = merklePath!.blockHeight;\r\n              txn.block.idx = BigInt(\r\n                merklePath.path[0].find((p) => p.hash == txn.txid)?.offset || 0\r\n              );\r\n              txn.proof = proof;\r\n              if (txn.block.height <= chaintip!.height - 5) {\r\n                txn.status = TxnStatus.IMMUTABLE;\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          txn.status = TxnStatus.REJECTED;\r\n        }\r\n        await this.storage.putMany(txns);\r\n      } else {\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to ingest txs\", e);\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n    if (this.stopSync) {\r\n      return;\r\n    }\r\n    return this.processConfirmed();\r\n  }\r\n\r\n  // async ensureTxns(txids: string[]) {\r\n  //   console.log(\"Downloading\", txids.length, \"txs\");\r\n  //   const exists = await this.storage.exists(txids);\r\n  //   const missing: { [txid: string]: boolean } = {};\r\n  //   for (const [i, txid] of txids.entries()) {\r\n  //     if (!exists[i]) await this.loadTx(txid, true);\r\n  //   }\r\n  //   const missingTxids = Object.keys(missing);\r\n  //   if (missingTxids.length) {\r\n  //     const results = await this.services.txns?.fetchTxns(missingTxids) || [];\r\n  //     await Promise.all([\r\n  //       ...results.map((txn) => {\r\n  //         if (!txn.proof) return;\r\n  //         let merklePath = MerklePath.fromBinary(txn.proof);\r\n  //         txn.block.height = merklePath!.blockHeight;\r\n  //         txn.block.idx = BigInt(\r\n  //           merklePath!.path[0].find((p) => p.hash == txn.txid)?.offset || 0\r\n  //         );\r\n  //       }),\r\n  //     ]);\r\n  //     await this.storage.putMany(results);\r\n  //   }\r\n  // }\r\n}\r\n","import { openDB, type DBSchema, type IDBPDatabase } from \"@tempfix/idb\";\r\nimport { TxnStatus, type Txn } from \"../../stores/txn-store\";\r\nimport type { TxnStorage } from \"../txn-storage\";\r\nimport type { Network } from \"../../spv-store\";\r\n\r\nconst TXN_DB_VERSION = 1;\r\n\r\nexport interface TxnSchema extends DBSchema {\r\n  txns: {\r\n    key: string;\r\n    value: Txn;\r\n    indexes: {\r\n      status: [number, number];\r\n    };\r\n  };\r\n}\r\n\r\nexport class TxnStorageIDB implements TxnStorage {\r\n  private constructor(public db: IDBPDatabase<TxnSchema>) {}\r\n\r\n  static async init(network: Network): Promise<TxnStorageIDB> {\r\n    const db = await openDB<TxnSchema>(`txns-${network}`, TXN_DB_VERSION, {\r\n      upgrade(db) {\r\n        db.createObjectStore(\"txns\", { keyPath: \"txid\" }).createIndex(\r\n          \"status\",\r\n          [\"status\", \"block.height\"]\r\n        );\r\n      },\r\n    });\r\n\r\n    return new TxnStorageIDB(db);\r\n  }\r\n\r\n  async destroy() {\r\n    this.db.close();\r\n  }\r\n\r\n  async get(txid: string): Promise<Txn | undefined> {\r\n    return this.db.get(\"txns\", txid).catch(() => undefined);\r\n  }\r\n\r\n  async getMany(txids: string[]): Promise<(Txn | undefined)[]> {\r\n    const t = this.db.transaction(\"txns\");\r\n    const txns = await Promise.all(\r\n      txids.map((txid) => t.store.get(txid).catch(() => undefined))\r\n    );\r\n    await t.done;\r\n    return txns;\r\n  }\r\n\r\n  async put(txn: Txn): Promise<void> {\r\n    await this.db.put(\"txns\", txn);\r\n  }\r\n\r\n  async putMany(txns: Txn[]): Promise<void> {\r\n    if (!txns.length) return;\r\n    const t = this.db.transaction(\"txns\", \"readwrite\");\r\n    await Promise.all(\r\n      txns.map((txn) => {\r\n        return t.store.put(txn);\r\n      })\r\n    );\r\n    await t.done;\r\n  }\r\n\r\n  async exists(txids: string[]): Promise<boolean[]> {\r\n    const t = this.db.transaction(\"txns\");\r\n    const foundTxids = await Promise.all([\r\n      ...txids.map((txid) => t.store.getKey(txid).catch(() => null)),\r\n    ]);\r\n    await t.done;\r\n    return foundTxids.map((txid) => !!txid);\r\n  }\r\n\r\n  async getByStatus(\r\n    status: TxnStatus,\r\n    toBlock: number,\r\n    limit = 25\r\n  ): Promise<Txn[]> {\r\n    const t = this.db.transaction(\"txns\");\r\n    const idx = t.store.index(\"status\");\r\n    const query = IDBKeyRange.bound([status, 0], [status, toBlock]);\r\n    const txns: Txn[] = [];\r\n    for await (const cursor of idx.iterate(query)) {\r\n      txns.push(cursor.value);\r\n      if (txns.length >= limit) break;\r\n    }\r\n    await t.done;\r\n    return txns;\r\n  }\r\n}\r\n","import { openDB, type DBSchema, type IDBPDatabase, type IDBPTransaction } from \"@tempfix/idb\";\r\nimport { Txo, TxoStatus } from \"../../models/txo\";\r\nimport { IngestStatus, type Ingest } from \"../../models/ingest\";\r\nimport type { TxoStorage } from \"../txo-storage\";\r\nimport { Outpoint } from \"../../models/outpoint\";\r\nimport { TxoSort, type TxoLookup, type TxoResults } from \"../../models/search\";\r\nimport type { Network } from \"../../spv-store\";\r\nimport { ParseMode, TxLog } from \"../../models\";\r\n\r\nconst TXO_DB_VERSION = 1;\r\n\r\nexport interface TxoSchema extends DBSchema {\r\n  txos: {\r\n    key: [string, number];\r\n    value: Txo;\r\n    indexes: {\r\n      spend: [string, number];\r\n      events: string;\r\n      tags: string;\r\n      logs: string;\r\n      deps: string;\r\n    };\r\n  };\r\n  ingestQueue: {\r\n    key: string;\r\n    value: Ingest;\r\n    indexes: {\r\n      status: [number, number, number];\r\n    };\r\n  };\r\n  txLog: {\r\n    key: string;\r\n    value: TxLog;\r\n    indexes: {\r\n      height: [number, number];\r\n    };\r\n  };\r\n  state: {\r\n    key: string;\r\n    value: {\r\n      key: string;\r\n      value: string;\r\n    };\r\n  };\r\n}\r\n\r\nfunction hydrateTxo(obj: Txo) {\r\n  obj.outpoint = new Outpoint(obj.outpoint.txid, obj.outpoint.vout);\r\n  for (const data of Object.values(obj.data)) {\r\n    data.deps = data.deps.map((dep) => new Outpoint(dep));\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction buildTxoIndex(txo: Txo) {\r\n  const tags: string[] = [];\r\n  const events: string[] = [];\r\n  const logs: string[] = [];\r\n  const blockStr = txo.block.height.toString(10).padStart(7, \"0\");\r\n  const idxStr = txo.block.idx.toString(10).padStart(9, \"0\");\r\n  const sort = `${blockStr}.${idxStr}`;\r\n  const deps = new Set<string>();\r\n  for (const [tag, data] of Object.entries(txo.data)) {\r\n    for (const dep of data.deps) {\r\n      deps.add(dep.toString());\r\n    }\r\n    if (txo.status == TxoStatus.Dependency) continue;\r\n    for (const e of data.events) {\r\n      logs.push(`${tag}:${e.id}:${e.value}:${sort}`);\r\n    }\r\n    if (txo.spend) continue;\r\n    if (data.events.length) tags.push(`${tag}:${sort}`);\r\n    for (const e of data.events) {\r\n      events.push(`${tag}:${e.id}:${e.value}:${sort}`);\r\n    }\r\n  }\r\n  txo.tags = tags;\r\n  txo.events = events;\r\n  txo.logs = logs;\r\n  txo.deps = Array.from(deps);\r\n  txo.hasEvents = events.length;\r\n}\r\n\r\nexport class TxoStorageIDB implements TxoStorage {\r\n  private constructor(public db: IDBPDatabase<TxoSchema>) { }\r\n  static async init(\r\n    accountId: string,\r\n    network: Network\r\n  ): Promise<TxoStorageIDB> {\r\n    const db = await openDB<TxoSchema>(\r\n      `txos-${accountId}-${network}`,\r\n      TXO_DB_VERSION,\r\n      {\r\n        upgrade(db) {\r\n          const txos = db.createObjectStore(\"txos\", {\r\n            keyPath: [\"outpoint.txid\", \"outpoint.vout\"],\r\n          });\r\n          txos.createIndex(\"spend\", [\"spend\", \"hasEvents\"]);\r\n          txos.createIndex(\"events\", \"events\", { multiEntry: true });\r\n          txos.createIndex(\"tags\", \"tags\", { multiEntry: true });\r\n          txos.createIndex(\"logs\", \"logs\", { multiEntry: true });\r\n          txos.createIndex(\"deps\", \"deps\", { multiEntry: true });\r\n          const ingestQueue = db.createObjectStore(\"ingestQueue\", {\r\n            keyPath: \"txid\",\r\n          });\r\n          ingestQueue.createIndex(\"status\", [\"status\", \"height\", \"idx\"]);\r\n          db.createObjectStore(\"state\", { keyPath: \"key\" });\r\n          const txLog = db.createObjectStore(\"txLog\", { keyPath: \"txid\" });\r\n          txLog.createIndex(\"height\", [\"height\", \"idx\"]);\r\n        },\r\n      }\r\n    );\r\n    return new TxoStorageIDB(db);\r\n  }\r\n\r\n  async destroy() {\r\n    this.db.close();\r\n  }\r\n\r\n  async get(outpoint: Outpoint): Promise<Txo | undefined> {\r\n    const txo = await this.db.get(\"txos\", [outpoint.txid, outpoint.vout]);\r\n    return txo && hydrateTxo(txo);\r\n  }\r\n\r\n  async getMany(outpoints: Outpoint[]): Promise<(Txo | undefined)[]> {\r\n    const t = this.db.transaction(\"txos\");\r\n    const txos = await Promise.all(\r\n      outpoints.map((outpoint) => t.store.get([outpoint.txid, outpoint.vout]))\r\n    );\r\n    await t.done;\r\n    return txos.map((txo) => txo && hydrateTxo(txo));\r\n  }\r\n\r\n  async getBySpend(txid: string): Promise<Txo[]> {\r\n    const txos = await this.db.getAllFromIndex(\r\n      \"txos\",\r\n      \"spend\",\r\n      IDBKeyRange.bound([txid], [txid, Number.MAX_SAFE_INTEGER])\r\n    );\r\n    return txos.map((txo) => hydrateTxo(txo));\r\n  }\r\n\r\n  async put(txo: Txo): Promise<void> {\r\n    buildTxoIndex(txo);\r\n    await this.db.put(\"txos\", txo);\r\n  }\r\n\r\n  async putMany(txos: Txo[]): Promise<void> {\r\n    if (!txos.length) return;\r\n    const t = this.db.transaction(\"txos\", \"readwrite\");\r\n    await Promise.all(\r\n      txos.map((txo) => {\r\n        if (!txo) return;\r\n        buildTxoIndex(txo);\r\n        return t.store.put(txo);\r\n      })\r\n    );\r\n    await t.done;\r\n  }\r\n\r\n  async search(\r\n    lookup: TxoLookup,\r\n    sort = TxoSort.DESC,\r\n    limit = 10,\r\n    from?: string,\r\n  ): Promise<TxoResults> {\r\n    const dbkey = lookup.toQueryKey();\r\n    let lower = dbkey\r\n    let upper = dbkey + \"\\uffff\"\r\n    if (from && sort == TxoSort.ASC) {\r\n      lower = from\r\n    } else if (from && sort == TxoSort.DESC) {\r\n      upper = from\r\n    }\r\n    const query = IDBKeyRange.bound(\r\n      lower,\r\n      upper,\r\n      true,\r\n      true\r\n    );\r\n\r\n    const indexName = lookup.includeSpent ? \r\n      \"logs\" :\r\n      lookup.id ? \r\n        \"events\" : \r\n        \"tags\";\r\n    const results: TxoResults = { txos: [] };\r\n    const t = this.db.transaction(\"txos\");\r\n    const index = t.store.index(indexName);\r\n    for await (const cursor of index.iterate(\r\n      query,\r\n      sort == TxoSort.DESC ? \"prev\" : \"next\"\r\n    )) {\r\n      const txo = hydrateTxo(cursor.value);\r\n      results.nextPage = cursor.key;\r\n      if (lookup.owner && txo.owner != lookup.owner) continue;\r\n      results.txos.push(txo);\r\n      if (limit > 0 && results.txos.length >= limit) {\r\n        await t.done;\r\n        return results;\r\n      }\r\n    }\r\n    await t.done;\r\n    delete results.nextPage;\r\n    return results;\r\n  }\r\n\r\n  async getState(key: string): Promise<string | undefined> {\r\n    const state = await this.db.get(\"state\", key);\r\n    return state?.value;\r\n  }\r\n\r\n  async setState(key: string, value: string): Promise<void> {\r\n    await this.db.put(\"state\", { key, value });\r\n  }\r\n\r\n  async getQueueLength(): Promise<number> {\r\n    const queueLength = await this.db.countFromIndex(\r\n      \"ingestQueue\",\r\n      \"status\",\r\n      IDBKeyRange.bound(\r\n        [IngestStatus.QUEUED],\r\n        [IngestStatus.DOWNLOADED, Number.MAX_SAFE_INTEGER]\r\n      )\r\n    );\r\n    return queueLength;\r\n  }\r\n\r\n  async getIngests(\r\n    status: IngestStatus,\r\n    limit: number,\r\n    start: number = 0,\r\n    stop: number = 0\r\n  ): Promise<Ingest[]> {\r\n    const query = IDBKeyRange.bound(\r\n      [status, start],\r\n      [status, stop || Number.MAX_SAFE_INTEGER]\r\n    );\r\n    const ingests = await this.db.getAllFromIndex(\r\n      \"ingestQueue\",\r\n      \"status\",\r\n      query,\r\n      limit\r\n    );\r\n    return ingests;\r\n  }\r\n\r\n  async putIngest(ingest: Ingest, t?: IDBPTransaction<TxoSchema, [\"ingestQueue\"], \"readwrite\">): Promise<void> {\r\n    const tProvided = !!t;\r\n    if (!t) {\r\n      t = this.db.transaction(\"ingestQueue\", \"readwrite\");\r\n    }\r\n    const prev = await t.store.get(ingest.txid).catch(() => undefined);\r\n    if (prev && Number(prev.status) >= Number(ingest.status)) {\r\n      if(ingest.reprocess) {\r\n        ingest.outputs = [...new Set([\r\n          ...(prev.outputs || []), \r\n          ...(ingest.outputs || [])\r\n        ])];\r\n        await t.store.put(ingest);\r\n      } else {\r\n        console.log(\"Skipping ingest\", ingest.txid, \"already ingested\");\r\n        return;\r\n      }\r\n    } else {\r\n      await t.store.put(ingest);\r\n    }\r\n    await t.store.put(ingest);\r\n    if (!tProvided) {\r\n      await t.done;\r\n    }\r\n  }\r\n\r\n  async putIngests(ingests: Ingest[]): Promise<void> {\r\n    if (!ingests.length) return;\r\n    const t = this.db.transaction(\"ingestQueue\", \"readwrite\");\r\n    await Promise.all(\r\n      ingests.map(async (ingest) => {\r\n        await this.putIngest(ingest, t);\r\n      })\r\n    );\r\n    await t.done;\r\n  }\r\n\r\n  async delIngest(txid: string): Promise<void> {\r\n    await this.db.delete(\"ingestQueue\", txid);\r\n  }\r\n\r\n  async delIngests(txids: string[]): Promise<void> {\r\n    const t = this.db.transaction(\"ingestQueue\", \"readwrite\");\r\n    await Promise.all(txids.map((txid) => t.store.delete(txid)));\r\n    await t.done;\r\n  }\r\n\r\n  async getTxLog(txid: string): Promise<TxLog | undefined> {\r\n    return this.db.get(\"txLog\", txid);\r\n  }\r\n\r\n  async getTxLogs(txids: string[]): Promise<(TxLog | undefined)[]> {\r\n    if (!txids.length) return [];\r\n    const t = this.db.transaction(\"txLog\");\r\n    const logs = await Promise.all(\r\n      txids.map((txid) => t.store.get(txid).catch(() => undefined))\r\n    );\r\n    await t.done;\r\n    return logs.filter((log) => log !== undefined);\r\n  }\r\n\r\n  async putTxLog(txLog: TxLog): Promise<void> {\r\n    await this.db.put(\"txLog\", txLog);\r\n  }\r\n\r\n  async getRecentTxLogs(limit = 100): Promise<TxLog[]> {\r\n    const t = this.db.transaction(\"txLog\");\r\n    const idx = t.store.index(\"height\");\r\n    const logs: TxLog[] = [];\r\n    for await (const cursor of idx.iterate(null, \"prev\")) {\r\n      logs.push(cursor.value);\r\n      if (logs.length >= limit) break;\r\n    }\r\n    await t.done;\r\n    return logs;\r\n  }\r\n\r\n  async getBackupLogs(): Promise<Ingest[]> {\r\n    const ingests = new Map<string, DepLog>();\r\n    const t = this.db.transaction(\"txos\");\r\n    const promises: Promise<void>[] = [];\r\n    for await (const cursor of t.store\r\n      .index(\"spend\")\r\n      .iterate(IDBKeyRange.bound([\"\", 1], [\"\", Number.MAX_SAFE_INTEGER]))) {\r\n      const u = cursor.value;\r\n      let ingest = ingests.get(u.outpoint.txid);\r\n      if (!ingest) {\r\n        ingests.set(u.outpoint.txid, {\r\n          txid: u.outpoint.txid,\r\n          height: u.block.height,\r\n          idx: Number(u.block.idx),\r\n          outputs: new Set<number>([u.outpoint.vout]),\r\n        });\r\n      } else {\r\n        ingest.outputs!.add(u.outpoint.vout);\r\n      }\r\n      promises.push(this.loadDeps(u.outpoint, ingests));\r\n    }\r\n\r\n    await Promise.all(promises);\r\n    await t.done;\r\n\r\n    return Array.from(ingests.values())\r\n      .sort((a, b) => a.height - b.height || a.idx - b.idx)\r\n      .map((ingest) => ({\r\n        txid: ingest.txid,\r\n        height: ingest.height,\r\n        idx: ingest.idx,\r\n        outputs: Array.from(ingest.outputs),\r\n        parseMode: ingest.isDep ? ParseMode.Dependency : ParseMode.Persist,\r\n      }));\r\n  }\r\n\r\n  async loadDeps(op: Outpoint, deps: Map<string, DepLog>) {\r\n    const log = deps.get(op.txid);\r\n    if (log && !log.outputs!.has(op.vout)) {\r\n      log.outputs!.add(op.vout);\r\n      return;\r\n    }\r\n    const txo = await this.get(op);\r\n    if (!txo) throw new Error(`Missing dep: ${op.txid}:${op.vout}`);\r\n    if (!log) {\r\n      deps.set(op.txid, {\r\n        txid: op.txid,\r\n        height: txo.block.height,\r\n        idx: Number(txo.block.idx),\r\n        isDep: true,\r\n        outputs: new Set<number>([op.vout]),\r\n      });\r\n    }\r\n\r\n    for (const data of Object.values(txo.data)) {\r\n      for (const dep of data.deps) {\r\n        await this.loadDeps(dep, deps);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype DepLog = {\r\n  txid: string;\r\n  height: number;\r\n  idx: number;\r\n  isDep?: boolean;\r\n  outputs: Set<number>;\r\n};\r\n","import type { ChainTracker } from \"@bsv/sdk\";\r\nimport type { BlockStorage } from \"../storage/block-storage\";\r\nimport type { Services } from \"../spv-store\";\r\nimport type { EventEmitter } from \"../lib/event-emitter\";\r\nimport type { BlockHeader } from \"../models\";\r\n\r\nconst PAGE_SIZE = 10000;\r\n\r\nexport class BlockStore implements ChainTracker {\r\n  private syncRunning: Promise<void> | undefined;\r\n  private stopSync = false;\r\n  constructor(\r\n    public storage: BlockStorage,\r\n    public services: Services,\r\n    public emitter?: EventEmitter\r\n  ) {}\r\n\r\n  async destroy() {\r\n    this.stopSync = true;\r\n    await this.syncRunning;\r\n    await this.storage.destroy();\r\n  }\r\n\r\n  /**\r\n   * Synchronizes the block store with the blockchain.\r\n   * \r\n   * @param returnOnChaintip - If true, the method will wait until the sync is complete before returning.\r\n   * @returns A promise that resolves when the synchronization is complete.\r\n   */\r\n  async sync(returnOnChaintip = true): Promise<void> {\r\n    if (this.syncRunning) return;\r\n    // const doSync = async (returnOnChaintip: boolean) =>\r\n    this.syncRunning = this.doSync(returnOnChaintip);\r\n    if (returnOnChaintip) {\r\n      await this.syncRunning;\r\n      this.syncRunning = undefined;\r\n    }\r\n  }\r\n\r\n  private async doSync(returnOnChaintip = true): Promise<void> {\r\n    let lastHeight = 1;\r\n    let syncedBlock = await this.storage.getSynced();\r\n    if (syncedBlock) {\r\n      lastHeight = syncedBlock.height > 5 ? syncedBlock.height - 5 : 1;\r\n    }\r\n    while (!this.stopSync) {\r\n      try {\r\n        const blocks = await this.services.blocks.getBlocks(\r\n          lastHeight,\r\n          PAGE_SIZE\r\n        );\r\n        console.log(\r\n          `Syncing ${PAGE_SIZE} blocks from ${lastHeight}: ${blocks.length} received`\r\n        );\r\n        await this.storage.putMany(blocks);\r\n        if (blocks.length == 0) break;\r\n        if (syncedBlock?.hash != blocks[blocks.length - 1].hash) {\r\n          this.emitter?.emit(\"syncedBlockHeight\", blocks[blocks.length - 1].height);\r\n        }\r\n        syncedBlock = blocks[blocks.length - 1];\r\n        if (blocks.length < PAGE_SIZE) break;\r\n        lastHeight = syncedBlock.height + 1;\r\n      } catch (e) {\r\n        if (returnOnChaintip) {\r\n          throw e;\r\n        }\r\n        console.error(e);\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      }\r\n    }\r\n    // this.syncInProgress = false;\r\n    if (returnOnChaintip || this.stopSync) {\r\n      return;\r\n    }\r\n    await new Promise((resolve) => setTimeout(resolve, 60 * 1000));\r\n    return this.doSync(returnOnChaintip);\r\n  }\r\n\r\n  /**\r\n   * Checks if the given root is valid for the specified block height.\r\n   *\r\n   * @param root - The Merkle root to validate.\r\n   * @param height - The height of the block to check.\r\n   * @returns A promise that resolves to `true` if the root is valid for the given height, otherwise `false`.\r\n   */\r\n  async isValidRootForHeight(root: string, height: number): Promise<boolean> {\r\n    const block = await this.storage.getByHeight(height);\r\n    return block?.merkleroot == root;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the current chaintip from the storage.\r\n   *\r\n   * @returns {Promise<BlockHeader | undefined>} A promise that resolves to the current chaintip block header, or undefined if not available.\r\n   */\r\n  async getChaintip(): Promise<BlockHeader | undefined> {\r\n    return this.storage.getSynced();\r\n  }\r\n}\r\n","import { Transaction } from \"@bsv/sdk\";\r\nimport type { Indexer } from \"../models/indexer\";\r\nimport { type IndexContext } from \"../models/index-context\";\r\nimport { Txo, TxoStatus } from \"../models/txo\";\r\nimport { type Ingest, IngestStatus } from \"../models/ingest\";\r\nimport { Block } from \"../models/block\";\r\nimport type { TxoStorage } from \"../storage/txo-storage\";\r\nimport { Outpoint } from \"../models/outpoint\";\r\nimport type { Services, Stores } from \"../spv-store\";\r\nimport type { EventEmitter } from \"../lib/event-emitter\";\r\nimport { ParseMode, TxoSort, type TxoLookup, type TxoResults } from \"../models\";\r\nimport type { TxSyncLog } from \"../services\";\r\n\r\nexport class TxoStore {\r\n  private syncRunning: Promise<void> | undefined;\r\n  private stopSync = false;\r\n  constructor(\r\n    public storage: TxoStorage,\r\n    public services: Services,\r\n    public stores: Stores,\r\n    public indexers: Indexer[],\r\n    public owners: Set<string>,\r\n    public events?: EventEmitter,\r\n  ) { }\r\n\r\n\r\n  /**\r\n   * Asynchronously destroys the current instance by stopping synchronization and \r\n   * destroying the associated storage.\r\n   * \r\n   * @returns {Promise<void>} A promise that resolves when the instance is destroyed.\r\n   */\r\n  async destroy() {\r\n    this.stopSync = true;\r\n    if (this.syncRunning) await this.syncRunning;\r\n    await this.storage.destroy();\r\n  }\r\n\r\n  /**\r\n   * Searches for transaction outputs (TXOs) based on the provided lookup criteria.\r\n   *\r\n   * @param lookup - The criteria used to search for TXOs.\r\n   * @param sort - The sorting order of the results. Defaults to `TxoSort.DESC`.\r\n   * @param limit - The maximum number of results to return. Defaults to 100. 0 means no limit.\r\n   * @param from - An optional parameter to specify the starting point for the search. Use for pagination.\r\n   * @returns A promise that resolves to the search results.\r\n   */\r\n  public async search(\r\n    lookup: TxoLookup,\r\n    sort = TxoSort.DESC,\r\n    limit = 100,\r\n    from?: string,\r\n  ): Promise<TxoResults> {\r\n    return this.storage.search(lookup, sort, limit, from);\r\n  }\r\n\r\n  /**\r\n   * Ingests a new transaction into the store, building an index context for it.\r\n   * \r\n   * @param tx - The transaction to ingest.\r\n   * @param source - An optional string indicating the source of the transaction.\r\n   * @param parseMode - The mode to parse the transaction, default is `ParseMode.Persist`.\r\n   * @param resolveParents - Whether to resolve parent transactions, default is `false`.\r\n   * @param outputs - Optional array of output indices to process.\r\n   * @returns A promise that resolves to the index context of the ingested transaction.\r\n   * @throws Will throw an error if an input is missing its source transaction.\r\n   */\r\n  async ingest(\r\n    tx: Transaction,\r\n    source: string = \"\",\r\n    parseMode = ParseMode.Persist,\r\n    resolveParents = false,\r\n    outputs?: number[],\r\n  ): Promise<IndexContext> {\r\n    const ctx = await this.buildIndexContext(tx);\r\n    for (const input of tx.inputs.values()) {\r\n      if (!input.sourceTXID) {\r\n        if (!input.sourceTransaction) {\r\n          throw new Error(\"Input missing source transaction\");\r\n        }\r\n        input.sourceTXID = input.sourceTransaction.id(\"hex\") as string;\r\n      }\r\n      let spend: Txo | undefined;\r\n      if (input.sourceTransaction && parseMode == ParseMode.Deep) {\r\n        const sourceCtx = await this.ingest(\r\n          input.sourceTransaction,\r\n          \"beef\",\r\n          parseMode,\r\n          false,\r\n        );\r\n        spend = sourceCtx.txos[input.sourceOutputIndex];\r\n      } else {\r\n        spend = await this.storage.get(new Outpoint(input.sourceTXID, input.sourceOutputIndex));\r\n        if ((!spend || spend.script.length == 0)) {\r\n          if (resolveParents) {\r\n            const sourceTx = await this.stores.txns!.loadTx(input.sourceTXID, true);\r\n            if (!sourceTx) {\r\n              throw new Error(`Failed to load source tx: ${input.sourceTXID}`);\r\n            }\r\n            const spendCtx = await this.ingest(sourceTx, \"ancestor\", ParseMode.Dependency, false, [input.sourceOutputIndex]);\r\n            spend = spendCtx.txos[input.sourceOutputIndex]\r\n          } else {\r\n            spend = new Txo(\r\n              new Outpoint(input.sourceTXID!, input.sourceOutputIndex),\r\n              0n,\r\n              [],\r\n              TxoStatus.Dependency,\r\n            );\r\n          }\r\n        }\r\n      }\r\n      spend.spend = ctx.txid;\r\n      ctx.spends.push(spend);\r\n    }\r\n\r\n    const txos = await this.storage.getMany(\r\n      tx.outputs.map((_, i) => new Outpoint(ctx.txid, i)),\r\n    );\r\n    for (const [vout, output] of tx.outputs.entries()) {\r\n      let txo = txos[vout];\r\n      if (!txo) {\r\n        txo = new Txo(\r\n          new Outpoint(ctx.txid, vout),\r\n          0n,\r\n          [],\r\n          parseMode == ParseMode.Dependency || (outputs && !outputs.includes(vout)) ?\r\n            TxoStatus.Dependency :\r\n            TxoStatus.Validated,\r\n        );\r\n      }\r\n      txo.satoshis = BigInt(output.satoshis!);\r\n      txo.script = output.lockingScript.toBinary();\r\n      ctx.txos.push(txo);\r\n      for (const i of this.indexers) {\r\n        try {\r\n          const data = i.parse && (await i.parse(ctx, vout, parseMode));\r\n          if (data) {\r\n            txo.data[i.tag] = data;\r\n          }\r\n        } catch (e) {\r\n          console.error(\"indexer error: continuing\", i.tag, e);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const i of this.indexers) {\r\n      i.preSave && await i.preSave(ctx)\r\n    }\r\n\r\n    if (parseMode == ParseMode.Preview) return ctx\r\n    await this.storage.putMany(ctx.spends);\r\n    ctx.txos.forEach((txo) => {\r\n      txo.block = ctx.block;\r\n    });\r\n\r\n    await this.storage.putMany(ctx.txos);\r\n    if(Object.keys(ctx.summary).length) {\r\n      this.storage.putTxLog({\r\n        txid: ctx.txid,\r\n        height: ctx.block.height,\r\n        idx: Number(ctx.block.idx),\r\n        summary: ctx.summary,\r\n        source,\r\n      });\r\n    }\r\n\r\n    const toQueue = Object.entries(ctx.queue);\r\n    if (toQueue.length) {\r\n      await this.queue(toQueue.map(([txid, block]) => ({\r\n        txid: txid,\r\n        height: block.height,\r\n        idx: Number(block.idx),\r\n        source: \"ancestor\",\r\n        parseMode: ParseMode.Dependency,\r\n      })));\r\n    }\r\n\r\n    return ctx;\r\n  }\r\n\r\n  async updateQueueStats() {\r\n    const queueLength = await this.storage.getQueueLength();\r\n    this.events?.emit(\"queueStats\", { length: queueLength });\r\n  }\r\n\r\n  async queue(ingests: Ingest[]) {\r\n    ingests.forEach((i) => (i.status = i.status || IngestStatus.QUEUED));\r\n    await this.storage.putIngests(ingests);\r\n  }\r\n\r\n  async processQueue() {\r\n    if (this.syncRunning) return;\r\n\r\n    await this.updateQueueStats();\r\n    this.syncRunning = Promise.all([\r\n      this.processDownloads(),\r\n      this.processIngests(),\r\n      this.processConfirms(),\r\n      this.processImmutable(),\r\n    ]).then(() => { });\r\n  }\r\n\r\n  async processDownloads(): Promise<void> {\r\n    try {\r\n      const ingests = await this.storage.getIngests(IngestStatus.QUEUED, 25);\r\n      if (ingests.length) {\r\n        const dels: string[] = []\r\n        const updates: Ingest[] = []\r\n        for (const ingest of ingests) {\r\n          try {\r\n            await this.stores.txns!.loadTx(ingest.txid, true);\r\n            if (ingest.downloadOnly) {\r\n              dels.push(ingest.txid)\r\n            } else {\r\n              ingest.status = IngestStatus.DOWNLOADED;\r\n              updates.push(ingest)\r\n            }\r\n          } catch (e) {\r\n            console.error(\"Failed to download tx\", ingest.txid, e);\r\n          }\r\n        }\r\n        if (dels.length) {\r\n          await this.storage.delIngests(dels)\r\n        }\r\n        if (updates.length) {\r\n          await this.storage.putIngests(updates);\r\n        }\r\n        await this.updateQueueStats();\r\n      } else {\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to ingest txs\", e);\r\n      await new Promise((r) => setTimeout(r, 15000));\r\n    }\r\n    if (this.stopSync) {\r\n      return;\r\n    }\r\n    return this.processDownloads();\r\n  }\r\n\r\n  async processIngests(): Promise<void> {\r\n    try {\r\n      const ingests = await this.storage.getIngests(\r\n        IngestStatus.DOWNLOADED,\r\n        25,\r\n      );\r\n      if (ingests.length) {\r\n        console.log(\"Ingesting\", ingests.length, \"txs\");\r\n        for await (const ingest of ingests) {\r\n          try {\r\n            const tx = await this.stores.txns!.loadTx(ingest.txid);\r\n            if (!tx) {\r\n              console.error(\"Failed to get tx\", ingest.txid);\r\n              continue;\r\n            }\r\n            await this.ingest(tx, ingest.source, ingest.parseMode, true, ingest.outputs);\r\n            ingest.status = IngestStatus.INGESTED;\r\n            await this.storage.putIngest(ingest);\r\n            await this.updateQueueStats();\r\n          } catch (e) {\r\n            console.error(\"Failed to ingest tx\", ingest.txid, e);\r\n          }\r\n        }\r\n      } else {\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to ingest txs\", e);\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n    if (this.stopSync) {\r\n      return;\r\n    }\r\n    return this.processIngests();\r\n  }\r\n\r\n  async processConfirms(): Promise<void> {\r\n    try {\r\n      const ingests = await this.storage.getIngests(\r\n        IngestStatus.INGESTED,\r\n        25,\r\n        0,\r\n        Date.now() - 15000,\r\n      );\r\n      if (ingests.length) {\r\n        for await (const ingest of ingests) {\r\n          const tx = await this.stores.txns!.loadTx(ingest.txid, true);\r\n          if (!tx) {\r\n            console.error(\"Failed to get tx\", ingest.txid);\r\n            continue;\r\n          }\r\n          if (!tx.merklePath) {\r\n            ingest.height = Date.now();\r\n          } else {\r\n            const ctx = await this.ingest(tx, ingest.source, ingest.parseMode, true, ingest.outputs);\r\n            ingest.status = IngestStatus.CONFIRMED;\r\n            ingest.height = ctx.block.height;\r\n            ingest.idx = Number(ctx.block.idx);\r\n          }\r\n          await this.storage.putIngest(ingest);\r\n        }\r\n      } else {\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to ingest txs\", e);\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n    if (this.stopSync) {\r\n      return;\r\n    }\r\n    return this.processConfirms();\r\n  }\r\n\r\n  async processImmutable(): Promise<void> {\r\n    try {\r\n      const chaintip = await this.stores.blocks!.storage.getSynced();\r\n      if (!chaintip) {\r\n        await new Promise((r) => setTimeout(r, 10000));\r\n        this.processImmutable();\r\n        return;\r\n      }\r\n      const ingests = await this.storage.getIngests(\r\n        IngestStatus.CONFIRMED,\r\n        25,\r\n        0,\r\n        chaintip?.height - 6,\r\n      );\r\n      if (ingests.length) {\r\n        for await (const ingest of ingests) {\r\n          const tx = await this.stores.txns!.loadTx(ingest.txid, true);\r\n          if (!tx || !tx.merklePath) {\r\n            // TODO: We have a problem and need to clean it up\r\n            console.error(\"Failed to get tx\", ingest.txid);\r\n            continue;\r\n          }\r\n          if (!tx.merklePath.verify(ingest.txid, this.stores.blocks!)) {\r\n            continue;\r\n          }\r\n          ingest.status = IngestStatus.IMMUTABLE;\r\n          await this.storage.putIngest(ingest);\r\n        }\r\n      } else {\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to ingest txs\", e);\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n    }\r\n    if (this.stopSync) {\r\n      return;\r\n    }\r\n    return this.processImmutable();\r\n  }\r\n\r\n  async syncTxLogs() {\r\n    if (!this.services.account) return\r\n    let syncedState = await this.storage.getState(\"lastSync\");\r\n    if (!syncedState) {\r\n      console.log(\"No initial sync. Skipping sync for\", this.services.account.accountId);\r\n      return;\r\n    };\r\n    let lastSync = Number(syncedState || 0);\r\n    console.log(\"Syncing logs from\", lastSync, \"for\", this.services.account.accountId);\r\n    const txSyncs = await this.services.account?.syncTxLogs(lastSync) || [];\r\n    const oldLogs = await this.storage.getTxLogs(\r\n      txSyncs.map((log) => log.txid),\r\n    );\r\n    const puts: TxSyncLog[] = [];\r\n    for (const [i, txLog] of txSyncs.entries()) {\r\n      if (!oldLogs[i]) {\r\n        puts.push(txLog);\r\n        if (txLog.score) {\r\n          lastSync = Math.max(lastSync, txLog.score);\r\n        }\r\n      }\r\n    }\r\n    console.log(\"Queueing new logs:\", puts);\r\n    await this.queue(puts.map((p) => ({\r\n      txid: p.txid,\r\n      height: Number(p.height),\r\n      idx: Number(p.idx || 0),\r\n      outputs: p.outs,\r\n      source: \"sync\",\r\n      parseMode: ParseMode.Persist,\r\n    })));\r\n    if (puts.length) {\r\n      this.events?.emit(\"newTxs\", puts.length)\r\n    }\r\n    await this.storage.setState(\"lastSync\", lastSync.toString());\r\n  }\r\n\r\n  async buildIndexContext(tx: Transaction): Promise<IndexContext> {\r\n    const ctx: IndexContext = {\r\n      tx,\r\n      txid: tx.id(\"hex\"),\r\n      block: new Block(),\r\n      txos: [],\r\n      spends: [],\r\n      queue: {},\r\n      summary: {},\r\n    };\r\n    if (tx.merklePath) {\r\n      if (await tx.merklePath.verify(ctx.txid, this.stores.blocks!)) {\r\n        ctx.block.height = tx.merklePath.blockHeight;\r\n        ctx.block.idx = BigInt(tx.merklePath.path[0].find((p) => p.hash == ctx.txid)!.offset || 0);\r\n      }\r\n    }\r\n    return ctx\r\n  }\r\n\r\n  async resolveBlock() {\r\n    const chaintip = await this.services.blocks.getChaintip();\r\n    if (!chaintip) return;\r\n    for (const indexer of this.stores.txos!.indexers) {\r\n      await indexer.resolve(this.stores.txos!, chaintip);\r\n    }\r\n  }\r\n}\r\n","import { OneSatProvider } from \"../providers/1sat-provider\";\r\nimport {\r\n  SPVStore,\r\n  type Network,\r\n  type Services,\r\n  type Stores,\r\n} from \"../spv-store\";\r\nimport type { Indexer } from \"../models/indexer\";\r\nimport { BlockStorageIDB, TxnStorageIDB, TxoStorageIDB } from \"../storage/idb\";\r\nimport { BlockStore, TxnStore, TxoStore } from \"../stores\";\r\nimport { EventEmitter } from \"../lib/event-emitter\";\r\n\r\nexport class OneSatWebSPV extends SPVStore {\r\n  private constructor(\r\n    public services: Services,\r\n    public stores: Stores,\r\n    public events: EventEmitter,\r\n    startSync = false,\r\n  ) {\r\n    super(services, stores, events, startSync);\r\n  }\r\n\r\n  static async init(\r\n    accountId: string,\r\n    indexers: Indexer[],\r\n    owners = new Set<string>(),\r\n    startSync = false,\r\n    network: Network = \"mainnet\",\r\n  ) {\r\n    const oneSatService = new OneSatProvider(network, accountId);\r\n    const emitter = new EventEmitter();\r\n    const services: Services = {\r\n      account: oneSatService,\r\n      blocks: oneSatService,\r\n      txns: oneSatService,\r\n      broadcast: oneSatService,\r\n    };\r\n    const [blockStorage, txnStorage, txoStorage] = await Promise.all([\r\n      BlockStorageIDB.init(network),\r\n      TxnStorageIDB.init(network),\r\n      TxoStorageIDB.init(accountId, network),\r\n    ]);\r\n\r\n    const stores: Stores = {};\r\n    stores.blocks = new BlockStore(blockStorage, services, emitter);\r\n    stores.txns = new TxnStore(txnStorage, services, stores, emitter);\r\n    stores.txos = new TxoStore(\r\n      txoStorage,\r\n      services,\r\n      stores,\r\n      indexers,\r\n      owners,\r\n      emitter,\r\n    );\r\n\r\n    return new SPVStore(services, stores, emitter, startSync);\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Bsv20Indexer, Bsv21Indexer, FundIndexer, IndexMode, InscriptionIndexer, LockIndexer, MapIndexer, OneSatIndexer, OneSatWebSPV, OrdLockIndexer, OriginIndexer, SigmaIndexer, } from 'spv-store';\nimport { NetWork } from 'yours-wallet-provider';\nimport { YoursEventName } from './inject';\nimport { sendMessage } from './utils/chromeHelpers';\nimport { theme } from './theme';\nexport const initOneSatSPV = async (chromeStorageService, startSync = false) => {\n    const { selectedAccount, account } = chromeStorageService.getCurrentAccountObject();\n    const network = chromeStorageService.getNetwork();\n    let { bsvAddress, identityAddress, ordAddress } = account?.addresses || {};\n    if (!bsvAddress)\n        bsvAddress = '';\n    if (!identityAddress)\n        identityAddress = '';\n    if (!ordAddress)\n        ordAddress = '';\n    const owners = new Set([bsvAddress, identityAddress, ordAddress]);\n    const indexers = [new FundIndexer(owners, IndexMode.TrustAndVerify, network)];\n    const lockIndexer = new LockIndexer(owners, IndexMode.TrustAndVerify, network);\n    const bsv20Indexers = [\n        new Bsv21Indexer(owners, IndexMode.Trust, network),\n        new Bsv20Indexer(owners, IndexMode.Trust, network),\n    ];\n    const ordIndexers = [\n        new OneSatIndexer(owners, IndexMode.TrustAndVerify, network),\n        new OrdLockIndexer(owners, IndexMode.TrustAndVerify, network),\n        new InscriptionIndexer(owners, IndexMode.TrustAndVerify, network),\n        new MapIndexer(owners, IndexMode.Verify, network),\n        new SigmaIndexer(owners, IndexMode.Verify, network),\n        new OriginIndexer(owners, IndexMode.TrustAndVerify, network),\n    ];\n    if (theme.settings.services.locks)\n        indexers.push(lockIndexer);\n    if (theme.settings.services.ordinals)\n        indexers.push(...ordIndexers);\n    if (theme.settings.services.bsv20)\n        indexers.push(...bsv20Indexers);\n    const oneSatSPV = await OneSatWebSPV.init(selectedAccount || '', indexers, owners, startSync && !!account, network == NetWork.Mainnet ? NetWork.Mainnet : NetWork.Testnet);\n    if (!oneSatSPV)\n        throw Error('SPV not initialized!');\n    await registerEventListeners(oneSatSPV, selectedAccount || '', startSync);\n    return oneSatSPV;\n};\nconst registerEventListeners = async (oneSatSPV, selectedAccount, startSync) => {\n    oneSatSPV.events.on('queueStats', (data) => {\n        const message = { action: YoursEventName.QUEUE_STATUS_UPDATE, data };\n        try {\n            sendMessage(message);\n            // eslint-disable-next-line no-empty\n        }\n        catch (e) { }\n    });\n    oneSatSPV.events.on('importing', (data) => {\n        const message = { action: YoursEventName.IMPORT_STATUS_UPDATE, data };\n        try {\n            sendMessage(message);\n            // eslint-disable-next-line no-empty\n        }\n        catch (e) { }\n    });\n    oneSatSPV.events.on('fetchingTx', (data) => {\n        const message = { action: YoursEventName.FETCHING_TX_STATUS_UPDATE, data };\n        try {\n            sendMessage(message);\n            // eslint-disable-next-line no-empty\n        }\n        catch (e) { }\n    });\n    if (startSync) {\n        const tip = await oneSatSPV.getChaintip();\n        oneSatSPV.events.on('syncedBlockHeight', (lastHeight) => {\n            try {\n                const message = {\n                    action: YoursEventName.BLOCK_HEIGHT_UPDATE,\n                    data: { currentHeight: tip?.height || 0, lastHeight },\n                };\n                selectedAccount && sendMessage(message);\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n        });\n    }\n};\n","/* global chrome */\nimport { NetWork, } from 'yours-wallet-provider';\nimport { CustomListenerName, YoursEventName, } from './inject';\nimport { removeWindow, sendTransactionNotification } from './utils/chromeHelpers';\nimport { ChromeStorageService } from './services/ChromeStorage.service';\nimport { GorillaPoolService } from './services/GorillaPool.service';\nimport { mapOrdinal } from './utils/providerHelper';\nimport { TxoLookup, TxoSort } from 'spv-store';\nimport { initOneSatSPV } from './initSPVStore';\nimport { HOSTED_YOURS_IMAGE } from './utils/constants';\nlet chromeStorageService = new ChromeStorageService();\nconst isInServiceWorker = self?.document === undefined;\nconst gorillaPoolService = new GorillaPoolService(chromeStorageService);\nexport let oneSatSPVPromise = chromeStorageService\n    .getAndSetStorage()\n    .then(() => initOneSatSPV(chromeStorageService, isInServiceWorker));\nconsole.log('Yours Wallet Background Script Running!');\nconst WOC_BASE_URL = 'https://api.whatsonchain.com/v1/bsv';\nlet responseCallbackForConnectRequest = null;\nlet responseCallbackForSendBsvRequest = null;\nlet responseCallbackForSendBsv20Request = null;\nlet responseCallbackForTransferOrdinalRequest = null;\nlet responseCallbackForPurchaseOrdinalRequest = null;\nlet responseCallbackForSignMessageRequest = null;\nlet responseCallbackForBroadcastRequest = null;\nlet responseCallbackForGetSignaturesRequest = null;\nlet responseCallbackForGenerateTaggedKeysRequest = null;\nlet responseCallbackForEncryptRequest = null;\nlet responseCallbackForDecryptRequest = null;\nlet popupWindowId;\nconst INACTIVITY_LIMIT = 10 * 60 * 1000; // 10 minutes\n// only run in background worker\nif (isInServiceWorker) {\n    const initNewTxsListener = async () => {\n        const oneSatSPV = await oneSatSPVPromise;\n        oneSatSPV.events.on('newTxs', (data) => {\n            sendTransactionNotification(data);\n        });\n    };\n    initNewTxsListener();\n    const processSyncUtxos = async () => {\n        try {\n            const oneSatSPV = await oneSatSPVPromise;\n            if (!oneSatSPV)\n                throw Error('SPV not initialized!');\n            await chromeStorageService.update({ hasUpgradedToSPV: true });\n            await oneSatSPV.sync();\n            console.log('done importing');\n        }\n        catch (error) {\n            console.error('Error during sync:', error);\n        }\n    };\n    const deleteAllIDBDatabases = async () => {\n        const dbs = await indexedDB.databases();\n        for (const db of dbs) {\n            if (db.name?.startsWith('block'))\n                continue;\n            if (db.name) {\n                indexedDB.deleteDatabase(db.name);\n                console.log(`Deleted database: ${db.name}`);\n            }\n        }\n        console.log('All IndexedDB databases deleted.');\n    };\n    const signOut = async () => {\n        await (await oneSatSPVPromise).destroy();\n        await deleteAllIDBDatabases();\n    };\n    const switchAccount = async () => {\n        await (await oneSatSPVPromise).destroy();\n        chromeStorageService = new ChromeStorageService();\n        await chromeStorageService.getAndSetStorage();\n        oneSatSPVPromise = initOneSatSPV(chromeStorageService, isInServiceWorker);\n        initNewTxsListener();\n    };\n    const launchPopUp = () => {\n        chrome.windows.create({\n            url: chrome.runtime.getURL('index.html'),\n            type: 'popup',\n            width: 392,\n            height: 567,\n        }, (window) => {\n            popupWindowId = window?.id;\n            if (popupWindowId) {\n                chrome.storage.local.set({\n                    popupWindowId,\n                });\n            }\n        });\n    };\n    const verifyAccess = async (requestingDomain) => {\n        const { accounts, selectedAccount } = (await chromeStorageService.getAndSetStorage());\n        if (!accounts || !selectedAccount)\n            return false;\n        const whitelist = accounts[selectedAccount].settings.whitelist;\n        if (!whitelist)\n            return false;\n        return whitelist.map((i) => i.domain).includes(requestingDomain);\n    };\n    const authorizeRequest = async (message) => {\n        if (message.action === YoursEventName.QUEUE_STATUS_UPDATE ||\n            message.action === YoursEventName.IMPORT_STATUS_UPDATE ||\n            message.action === YoursEventName.FETCHING_TX_STATUS_UPDATE) {\n            return true;\n        }\n        const { params } = message;\n        return await verifyAccess(params.domain);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n        if ([YoursEventName.SIGNED_OUT, YoursEventName.SWITCH_ACCOUNT].includes(message.action)) {\n            emitEventToActiveTabs(message);\n        }\n        const noAuthRequired = [\n            YoursEventName.IS_CONNECTED,\n            YoursEventName.USER_CONNECT_RESPONSE,\n            YoursEventName.SEND_BSV_RESPONSE,\n            YoursEventName.SEND_BSV20_RESPONSE,\n            YoursEventName.TRANSFER_ORDINAL_RESPONSE,\n            YoursEventName.PURCHASE_ORDINAL_RESPONSE,\n            YoursEventName.SIGN_MESSAGE_RESPONSE,\n            YoursEventName.BROADCAST_RESPONSE,\n            YoursEventName.GET_SIGNATURES_RESPONSE,\n            YoursEventName.GENERATE_TAGGED_KEYS_RESPONSE,\n            YoursEventName.ENCRYPT_RESPONSE,\n            YoursEventName.DECRYPT_RESPONSE,\n            YoursEventName.SYNC_UTXOS,\n            YoursEventName.SWITCH_ACCOUNT,\n            YoursEventName.SIGNED_OUT,\n        ];\n        if (noAuthRequired.includes(message.action)) {\n            switch (message.action) {\n                case YoursEventName.IS_CONNECTED:\n                    return processIsConnectedRequest(message.params, sendResponse);\n                case YoursEventName.USER_CONNECT_RESPONSE:\n                    return processConnectResponse(message);\n                case YoursEventName.SEND_BSV_RESPONSE:\n                    return processSendBsvResponse(message);\n                case YoursEventName.SEND_BSV20_RESPONSE:\n                    return processSendBsv20Response(message);\n                case YoursEventName.TRANSFER_ORDINAL_RESPONSE:\n                    return processTransferOrdinalResponse(message);\n                case YoursEventName.PURCHASE_ORDINAL_RESPONSE:\n                    return processPurchaseOrdinalResponse(message);\n                case YoursEventName.SIGN_MESSAGE_RESPONSE:\n                    return processSignMessageResponse(message);\n                case YoursEventName.BROADCAST_RESPONSE:\n                    return processBroadcastResponse(message);\n                case YoursEventName.GET_SIGNATURES_RESPONSE:\n                    return processGetSignaturesResponse(message);\n                case YoursEventName.GENERATE_TAGGED_KEYS_RESPONSE:\n                    return processGenerateTaggedKeysResponse(message);\n                case YoursEventName.ENCRYPT_RESPONSE:\n                    return processEncryptResponse(message);\n                case YoursEventName.DECRYPT_RESPONSE:\n                    return processDecryptResponse(message);\n                case YoursEventName.SYNC_UTXOS:\n                    return processSyncUtxos();\n                case YoursEventName.SWITCH_ACCOUNT:\n                    return switchAccount();\n                case YoursEventName.SIGNED_OUT:\n                    return signOut();\n                default:\n                    break;\n            }\n            return;\n        }\n        authorizeRequest(message).then((isAuthorized) => {\n            if (message.action === YoursEventName.CONNECT) {\n                return processConnectRequest(message, sendResponse, isAuthorized);\n            }\n            if (!isAuthorized) {\n                sendResponse({\n                    type: message.action,\n                    success: false,\n                    error: 'Unauthorized!',\n                });\n                return;\n            }\n            switch (message.action) {\n                case YoursEventName.DISCONNECT:\n                    return processDisconnectRequest(message, sendResponse);\n                case YoursEventName.GET_PUB_KEYS:\n                    return processGetPubKeysRequest(sendResponse);\n                case YoursEventName.GET_BALANCE:\n                    return processGetBalanceRequest(sendResponse);\n                case YoursEventName.GET_ADDRESSES:\n                    return processGetAddressesRequest(sendResponse);\n                case YoursEventName.GET_NETWORK:\n                    return processGetNetworkRequest(sendResponse);\n                case YoursEventName.GET_ORDINALS:\n                    return processGetOrdinalsRequest(message, sendResponse);\n                case YoursEventName.GET_BSV20S:\n                    return processGetBsv20sRequest(sendResponse);\n                case YoursEventName.SEND_BSV:\n                case YoursEventName.INSCRIBE: // We use the sendBsv functionality here\n                    return processSendBsvRequest(message, sendResponse);\n                case YoursEventName.SEND_BSV20:\n                    return processSendBsv20Request(message, sendResponse);\n                case YoursEventName.TRANSFER_ORDINAL:\n                    return processTransferOrdinalRequest(message, sendResponse);\n                case YoursEventName.PURCHASE_ORDINAL:\n                case YoursEventName.PURCHASE_BSV20:\n                    return processPurchaseOrdinalRequest(message, sendResponse);\n                case YoursEventName.SIGN_MESSAGE:\n                    return processSignMessageRequest(message, sendResponse);\n                case YoursEventName.BROADCAST:\n                    return processBroadcastRequest(message, sendResponse);\n                case YoursEventName.GET_SIGNATURES:\n                    return processGetSignaturesRequest(message, sendResponse);\n                case YoursEventName.GET_SOCIAL_PROFILE:\n                    return processGetSocialProfileRequest(sendResponse);\n                case YoursEventName.GET_PAYMENT_UTXOS:\n                    return processGetPaymentUtxos(sendResponse);\n                case YoursEventName.GET_EXCHANGE_RATE:\n                    return processGetExchangeRate(sendResponse);\n                case YoursEventName.GENERATE_TAGGED_KEYS:\n                    return processGenerateTaggedKeysRequest(message, sendResponse);\n                case YoursEventName.GET_TAGGED_KEYS:\n                    return processGetTaggedKeys(message, sendResponse);\n                case YoursEventName.ENCRYPT:\n                    return processEncryptRequest(message, sendResponse);\n                case YoursEventName.DECRYPT:\n                    return processDecryptRequest(message, sendResponse);\n                default:\n                    break;\n            }\n        });\n        return true;\n    });\n    // EMIT EVENTS ********************************\n    const emitEventToActiveTabs = (message) => {\n        const { action, params } = message;\n        chrome.tabs.query({}, function (tabs) {\n            tabs.forEach(function (tab) {\n                if (tab.id) {\n                    chrome.tabs.sendMessage(tab.id, { type: CustomListenerName.YOURS_EMIT_EVENT, action, params });\n                }\n            });\n        });\n        return true;\n    };\n    // REQUESTS ***************************************\n    const processConnectRequest = (message, sendResponse, isAuthorized) => {\n        responseCallbackForConnectRequest = sendResponse;\n        chromeStorageService\n            .update({\n            connectRequest: { ...message.params, isAuthorized },\n        })\n            .then(() => {\n            launchPopUp();\n        });\n        return true;\n    };\n    const processDisconnectRequest = (message, sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!account)\n                    throw Error('No account found!');\n                const { whitelist } = account.settings;\n                if (!whitelist)\n                    throw Error('Already disconnected!');\n                const { params } = message;\n                const updatedWhitelist = whitelist.filter((i) => i.domain !== params.domain);\n                const key = 'accounts';\n                const update = {\n                    [account.addresses.identityAddress]: {\n                        ...account,\n                        settings: {\n                            ...account.settings,\n                            whitelist: updatedWhitelist,\n                        },\n                    },\n                };\n                chromeStorageService.updateNested(key, update).then(() => {\n                    sendResponse({\n                        type: YoursEventName.DISCONNECT,\n                        success: true,\n                        data: true,\n                    });\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.DISCONNECT,\n                success: true,\n                data: false,\n            });\n        }\n    };\n    const processIsConnectedRequest = (params, sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const result = chromeStorageService.getCurrentAccountObject();\n                if (!result?.account)\n                    throw Error('No account found!');\n                const currentTime = Date.now();\n                const lastActiveTime = result.lastActiveTime;\n                sendResponse({\n                    type: YoursEventName.IS_CONNECTED,\n                    success: true,\n                    data: !result.isLocked &&\n                        currentTime - Number(lastActiveTime) < INACTIVITY_LIMIT &&\n                        result.account.settings.whitelist?.map((i) => i.domain).includes(params.domain),\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.IS_CONNECTED,\n                success: true,\n                error: false,\n            });\n        }\n        return true;\n    };\n    const processGetBalanceRequest = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!account)\n                    throw Error('No account found!');\n                sendResponse({\n                    type: YoursEventName.GET_BALANCE,\n                    success: true,\n                    data: account.balance,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_BALANCE,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetPubKeysRequest = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!account)\n                    throw Error('No account found!');\n                sendResponse({\n                    type: YoursEventName.GET_PUB_KEYS,\n                    success: true,\n                    data: account.pubKeys,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_PUB_KEYS,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetAddressesRequest = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!account)\n                    throw Error('No account found!');\n                sendResponse({\n                    type: YoursEventName.GET_ADDRESSES,\n                    success: true,\n                    data: account.addresses,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_ADDRESSES,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetNetworkRequest = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!account)\n                    throw Error('No account found!');\n                sendResponse({\n                    type: YoursEventName.GET_NETWORK,\n                    success: true,\n                    data: account?.network ?? NetWork.Mainnet,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_NETWORK,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetOrdinalsRequest = (message, sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(async () => {\n                const oneSatSPV = await oneSatSPVPromise;\n                if (!oneSatSPV)\n                    throw Error('SPV not initialized!');\n                if (message.params.from === undefined || message.params.from === null) {\n                    const result = await oneSatSPV.search(new TxoLookup('origin'), TxoSort.DESC, 0);\n                    const mapped = result.txos.map(mapOrdinal);\n                    sendResponse({\n                        type: YoursEventName.GET_ORDINALS,\n                        success: true,\n                        data: mapped,\n                    });\n                }\n                else {\n                    const results = await oneSatSPV.search(new TxoLookup('origin'), TxoSort.DESC, message.params.limit || 50, message.params.from || '');\n                    const mapped = results.txos.map(mapOrdinal);\n                    sendResponse({\n                        type: YoursEventName.GET_ORDINALS,\n                        success: true,\n                        data: { ordinals: mapped, from: results.nextPage },\n                    });\n                }\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_ORDINALS,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetBsv20sRequest = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(async () => {\n                let data = [];\n                const obj = chromeStorageService.getCurrentAccountObject();\n                if (obj.account?.addresses?.bsvAddress && obj.account?.addresses?.ordAddress) {\n                    const rawData = await gorillaPoolService.getBsv20Balances([\n                        obj.account?.addresses.bsvAddress,\n                        obj.account?.addresses.ordAddress,\n                    ]);\n                    data = rawData.map((d) => {\n                        return {\n                            ...d,\n                            listed: { confirmed: d.listed.confirmed.toString(), pending: d.listed.pending.toString() },\n                            all: { confirmed: d.all.confirmed.toString(), pending: d.all.pending.toString() },\n                        };\n                    });\n                }\n                sendResponse({\n                    type: YoursEventName.GET_BSV20S,\n                    success: true,\n                    data,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_BSV20S,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetExchangeRate = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(async (res) => {\n                if (!res)\n                    throw Error('Could not get storage!');\n                const { exchangeRateCache } = res;\n                if (exchangeRateCache?.rate && Date.now() - exchangeRateCache.timestamp < 5 * 60 * 1000) {\n                    sendResponse({\n                        type: YoursEventName.GET_EXCHANGE_RATE,\n                        success: true,\n                        data: Number(exchangeRateCache.rate.toFixed(2)),\n                    });\n                }\n                else {\n                    const res = await fetch(`${WOC_BASE_URL}/main/exchangerate`);\n                    if (!res.ok) {\n                        throw new Error(`Fetch error: ${res.status} - ${res.statusText}`);\n                    }\n                    const data = await res.json();\n                    const rate = data.rate;\n                    const currentTime = Date.now();\n                    chromeStorageService.update({\n                        exchangeRateCache: { rate, timestamp: currentTime },\n                    });\n                    sendResponse({\n                        type: YoursEventName.GET_EXCHANGE_RATE,\n                        success: true,\n                        data: Number(rate.toFixed(2)),\n                    });\n                }\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_EXCHANGE_RATE,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetPaymentUtxos = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(async () => {\n                const oneSatSPV = await oneSatSPVPromise;\n                if (!oneSatSPV)\n                    throw Error('SPV not initialized!');\n                const results = await oneSatSPV.search(new TxoLookup('fund'));\n                const utxos = results.txos.map((txo) => {\n                    return {\n                        txid: txo.outpoint.txid,\n                        vout: txo.outpoint.vout,\n                        satoshis: Number(txo.satoshis),\n                        script: Buffer.from(txo.script).toString('hex'),\n                    };\n                });\n                sendResponse({\n                    type: YoursEventName.GET_PAYMENT_UTXOS,\n                    success: true,\n                    data: utxos,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_PAYMENT_UTXOS,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    // Important note: We process the InscribeRequest as a SendBsv request.\n    const processSendBsvRequest = (message, sendResponse) => {\n        if (!message.params.data) {\n            sendResponse({\n                type: YoursEventName.SEND_BSV,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForSendBsvRequest = sendResponse;\n            let sendBsvRequest = message.params.data;\n            // If in this if block, it's an inscribe() request.\n            const inscribeRequest = message.params.data;\n            if (inscribeRequest[0].base64Data) {\n                sendBsvRequest = inscribeRequest.map((d) => {\n                    return {\n                        address: d.address,\n                        inscription: {\n                            base64Data: d.base64Data,\n                            mimeType: d.mimeType,\n                            map: d.map,\n                        },\n                        satoshis: d.satoshis ?? 1,\n                    };\n                });\n            }\n            chromeStorageService.update({ sendBsvRequest }).then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.SEND_BSV,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processSendBsv20Request = (message, sendResponse) => {\n        console.log('processSendBsv20Request', message);\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.SEND_BSV20,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForSendBsv20Request = sendResponse;\n            const sendBsv20Request = message.params;\n            chromeStorageService.update({ sendBsv20Request }).then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.SEND_BSV20,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processTransferOrdinalRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.TRANSFER_ORDINAL,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForTransferOrdinalRequest = sendResponse;\n            chromeStorageService\n                .update({\n                transferOrdinalRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.TRANSFER_ORDINAL,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processPurchaseOrdinalRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.PURCHASE_ORDINAL,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForPurchaseOrdinalRequest = sendResponse;\n            chromeStorageService\n                .update({\n                purchaseOrdinalRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.PURCHASE_ORDINAL,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processBroadcastRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.BROADCAST,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForBroadcastRequest = sendResponse;\n            chromeStorageService\n                .update({\n                broadcastRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.BROADCAST,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processSignMessageRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.SIGN_MESSAGE,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForSignMessageRequest = sendResponse;\n            chromeStorageService\n                .update({\n                signMessageRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.SIGN_MESSAGE,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        return true;\n    };\n    const processGetSignaturesRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.GET_SIGNATURES,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForGetSignaturesRequest = sendResponse;\n            chromeStorageService\n                .update({\n                getSignaturesRequest: {\n                    rawtx: message.params.rawtx,\n                    sigRequests: message.params.sigRequests,\n                },\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_SIGNATURES,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetSocialProfileRequest = (sendResponse) => {\n        try {\n            chromeStorageService.getAndSetStorage().then(() => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!account)\n                    throw Error('No account found!');\n                const displayName = account.settings?.socialProfile?.displayName ?? 'Anonymous';\n                const avatar = account.settings?.socialProfile?.avatar ?? HOSTED_YOURS_IMAGE;\n                sendResponse({\n                    type: YoursEventName.GET_SOCIAL_PROFILE,\n                    success: true,\n                    data: { displayName, avatar },\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_SOCIAL_PROFILE,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGenerateTaggedKeysRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.GENERATE_TAGGED_KEYS,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForGenerateTaggedKeysRequest = sendResponse;\n            chromeStorageService\n                .update({\n                generateTaggedKeysRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GENERATE_TAGGED_KEYS,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processGetTaggedKeys = async (message, sendResponse) => {\n        if (!message.params.label) {\n            sendResponse({\n                type: YoursEventName.GET_TAGGED_KEYS,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            chromeStorageService.getAndSetStorage().then((res) => {\n                const { account } = chromeStorageService.getCurrentAccountObject();\n                if (!res || !account)\n                    throw Error('No account found!');\n                const { lastActiveTime, isLocked } = res;\n                const { derivationTags } = account;\n                const currentTime = Date.now();\n                if (isLocked || currentTime - Number(lastActiveTime) > INACTIVITY_LIMIT) {\n                    sendResponse({\n                        type: YoursEventName.GET_TAGGED_KEYS,\n                        success: false,\n                        error: 'Unauthorized! Wallet is locked.',\n                    });\n                }\n                let returnData = derivationTags.length > 0\n                    ? derivationTags?.filter((res) => res.tag.label === message.params.label && res.tag.domain === message.params.domain)\n                    : [];\n                if (returnData.length > 0 && (message?.params?.ids?.length ?? 0 > 0)) {\n                    returnData = returnData?.filter((d) => message?.params?.ids?.includes(d.tag.id));\n                }\n                sendResponse({\n                    type: YoursEventName.GET_TAGGED_KEYS,\n                    success: true,\n                    data: returnData,\n                });\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.GET_TAGGED_KEYS,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n    };\n    const processEncryptRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.ENCRYPT,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForEncryptRequest = sendResponse;\n            chromeStorageService\n                .update({\n                encryptRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.ENCRYPT,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        return true;\n    };\n    const processDecryptRequest = (message, sendResponse) => {\n        if (!message.params) {\n            sendResponse({\n                type: YoursEventName.DECRYPT,\n                success: false,\n                error: 'Must provide valid params!',\n            });\n            return;\n        }\n        try {\n            responseCallbackForDecryptRequest = sendResponse;\n            chromeStorageService\n                .update({\n                decryptRequest: message.params,\n            })\n                .then(() => {\n                launchPopUp();\n            });\n        }\n        catch (error) {\n            sendResponse({\n                type: YoursEventName.DECRYPT,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        return true;\n    };\n    // RESPONSES ********************************\n    const cleanup = (types) => {\n        chromeStorageService.getAndSetStorage().then((res) => {\n            if (res?.popupWindowId) {\n                removeWindow(res.popupWindowId);\n                chromeStorageService.remove([...types, 'popupWindowId']);\n            }\n        });\n    };\n    const processConnectResponse = (response) => {\n        if (!responseCallbackForConnectRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForConnectRequest({\n                type: YoursEventName.CONNECT,\n                success: true,\n                data: response.decision === 'approved' ? response.pubKeys.identityPubKey : undefined,\n            });\n        }\n        catch (error) {\n            responseCallbackForConnectRequest?.({\n                type: YoursEventName.CONNECT,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.CONNECT]);\n        }\n        return true;\n    };\n    const processSendBsvResponse = (response) => {\n        if (!responseCallbackForSendBsvRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForSendBsvRequest({\n                type: YoursEventName.SEND_BSV,\n                success: true,\n                data: { txid: response.txid, rawtx: response.rawtx },\n            });\n        }\n        catch (error) {\n            responseCallbackForSendBsvRequest?.({\n                type: YoursEventName.SEND_BSV,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.SEND_BSV]);\n        }\n        return true;\n    };\n    const processSendBsv20Response = (response) => {\n        if (!responseCallbackForSendBsv20Request)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForSendBsv20Request({\n                type: YoursEventName.SEND_BSV20,\n                success: true,\n                data: { txid: response.txid, rawtx: response.rawtx },\n            });\n        }\n        catch (error) {\n            responseCallbackForSendBsv20Request?.({\n                type: YoursEventName.SEND_BSV20,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.SEND_BSV20]);\n        }\n        return true;\n    };\n    const processTransferOrdinalResponse = (response) => {\n        if (!responseCallbackForTransferOrdinalRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForTransferOrdinalRequest({\n                type: YoursEventName.TRANSFER_ORDINAL,\n                success: true,\n                data: response?.txid,\n            });\n        }\n        catch (error) {\n            responseCallbackForTransferOrdinalRequest?.({\n                type: YoursEventName.TRANSFER_ORDINAL,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.TRANSFER_ORDINAL]);\n        }\n        return true;\n    };\n    const processGenerateTaggedKeysResponse = (response) => {\n        if (!responseCallbackForGenerateTaggedKeysRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForGenerateTaggedKeysRequest({\n                type: YoursEventName.GENERATE_TAGGED_KEYS,\n                success: true,\n                data: {\n                    address: response?.address,\n                    pubKey: response?.pubKey,\n                    tag: response?.tag,\n                },\n            });\n        }\n        catch (error) {\n            responseCallbackForGenerateTaggedKeysRequest?.({\n                type: YoursEventName.GENERATE_TAGGED_KEYS,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.GENERATE_TAGGED_KEYS]);\n        }\n        return true;\n    };\n    const processPurchaseOrdinalResponse = (response) => {\n        if (!responseCallbackForPurchaseOrdinalRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForPurchaseOrdinalRequest({\n                type: YoursEventName.PURCHASE_ORDINAL,\n                success: true,\n                data: response?.txid,\n            });\n        }\n        catch (error) {\n            responseCallbackForPurchaseOrdinalRequest?.({\n                type: YoursEventName.PURCHASE_ORDINAL,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.PURCHASE_ORDINAL]);\n        }\n        return true;\n    };\n    const processSignMessageResponse = (response) => {\n        if (!responseCallbackForSignMessageRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForSignMessageRequest({\n                type: YoursEventName.SIGN_MESSAGE,\n                success: true,\n                data: {\n                    address: response?.address,\n                    pubKey: response?.pubKey,\n                    message: response?.message,\n                    sig: response?.sig,\n                    derivationTag: response?.derivationTag,\n                },\n            });\n        }\n        catch (error) {\n            responseCallbackForSignMessageRequest?.({\n                type: YoursEventName.SIGN_MESSAGE,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.SIGN_MESSAGE]);\n        }\n        return true;\n    };\n    const processBroadcastResponse = (response) => {\n        if (!responseCallbackForBroadcastRequest)\n            throw Error('Missing callback!');\n        try {\n            if (response?.error) {\n                responseCallbackForBroadcastRequest({\n                    type: YoursEventName.BROADCAST,\n                    success: false,\n                    error: response?.error,\n                });\n                return;\n            }\n            responseCallbackForBroadcastRequest({\n                type: YoursEventName.BROADCAST,\n                success: true,\n                data: response?.txid,\n            });\n        }\n        catch (error) {\n            responseCallbackForBroadcastRequest?.({\n                type: YoursEventName.BROADCAST,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.BROADCAST]);\n        }\n        return true;\n    };\n    const processGetSignaturesResponse = (response) => {\n        if (!responseCallbackForGetSignaturesRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForGetSignaturesRequest({\n                type: YoursEventName.GET_SIGNATURES,\n                success: !response?.error,\n                data: response?.sigResponses ?? [],\n                error: response?.error,\n            });\n        }\n        catch (error) {\n            responseCallbackForGetSignaturesRequest?.({\n                type: YoursEventName.GET_SIGNATURES,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.GET_SIGNATURES]);\n        }\n        return true;\n    };\n    const processEncryptResponse = (response) => {\n        if (!responseCallbackForEncryptRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForEncryptRequest({\n                type: YoursEventName.ENCRYPT,\n                success: true,\n                data: response.encryptedMessages,\n            });\n        }\n        catch (error) {\n            responseCallbackForEncryptRequest?.({\n                type: YoursEventName.ENCRYPT,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.ENCRYPT]);\n        }\n        return true;\n    };\n    const processDecryptResponse = (response) => {\n        if (!responseCallbackForDecryptRequest)\n            throw Error('Missing callback!');\n        try {\n            responseCallbackForDecryptRequest({\n                type: YoursEventName.DECRYPT,\n                success: true,\n                data: response.decryptedMessages,\n            });\n        }\n        catch (error) {\n            responseCallbackForDecryptRequest?.({\n                type: YoursEventName.DECRYPT,\n                success: false,\n                error: JSON.stringify(error),\n            });\n        }\n        finally {\n            cleanup([YoursEventName.DECRYPT]);\n        }\n        return true;\n    };\n    // HANDLE WINDOW CLOSE *****************************************\n    chrome.windows.onRemoved.addListener((closedWindowId) => {\n        if (closedWindowId === popupWindowId) {\n            if (responseCallbackForConnectRequest) {\n                responseCallbackForConnectRequest({\n                    type: YoursEventName.CONNECT,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForConnectRequest = null;\n                chromeStorageService.remove('connectRequest');\n            }\n            if (responseCallbackForSendBsvRequest) {\n                responseCallbackForSendBsvRequest({\n                    type: YoursEventName.SEND_BSV,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForSendBsvRequest = null;\n                chromeStorageService.remove('sendBsvRequest');\n            }\n            if (responseCallbackForSendBsv20Request) {\n                responseCallbackForSendBsv20Request({\n                    type: YoursEventName.SEND_BSV20,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForSendBsvRequest = null;\n                chromeStorageService.remove('sendBsv20Request');\n            }\n            if (responseCallbackForSignMessageRequest) {\n                responseCallbackForSignMessageRequest({\n                    type: YoursEventName.SIGN_MESSAGE,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForSignMessageRequest = null;\n                chromeStorageService.remove('signMessageRequest');\n            }\n            if (responseCallbackForTransferOrdinalRequest) {\n                responseCallbackForTransferOrdinalRequest({\n                    type: YoursEventName.TRANSFER_ORDINAL,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForTransferOrdinalRequest = null;\n                chromeStorageService.remove('transferOrdinalRequest');\n            }\n            if (responseCallbackForPurchaseOrdinalRequest) {\n                responseCallbackForPurchaseOrdinalRequest({\n                    type: YoursEventName.PURCHASE_ORDINAL,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForPurchaseOrdinalRequest = null;\n                chromeStorageService.remove('purchaseOrdinalRequest');\n            }\n            if (responseCallbackForBroadcastRequest) {\n                responseCallbackForBroadcastRequest({\n                    type: YoursEventName.BROADCAST,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForBroadcastRequest = null;\n                chromeStorageService.remove('broadcastRequest');\n            }\n            if (responseCallbackForGetSignaturesRequest) {\n                responseCallbackForGetSignaturesRequest({\n                    type: YoursEventName.GET_SIGNATURES,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForGetSignaturesRequest = null;\n                chromeStorageService.remove('getSignaturesRequest');\n            }\n            if (responseCallbackForGenerateTaggedKeysRequest) {\n                responseCallbackForGenerateTaggedKeysRequest({\n                    type: YoursEventName.GENERATE_TAGGED_KEYS,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForGenerateTaggedKeysRequest = null;\n                chromeStorageService.remove('generateTaggedKeysRequest');\n            }\n            if (responseCallbackForEncryptRequest) {\n                responseCallbackForEncryptRequest({\n                    type: YoursEventName.ENCRYPT,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForEncryptRequest = null;\n                chromeStorageService.remove('encryptRequest');\n            }\n            if (responseCallbackForDecryptRequest) {\n                responseCallbackForDecryptRequest({\n                    type: YoursEventName.DECRYPT,\n                    success: false,\n                    error: 'User dismissed the request!',\n                });\n                responseCallbackForDecryptRequest = null;\n                chromeStorageService.remove('decryptRequest');\n            }\n            popupWindowId = undefined;\n            chromeStorageService.remove('popupWindowId');\n        }\n    });\n}\n"],"names":["YoursEventName","CustomListenerName","createYoursMethod","type","async","Promise","resolve","reject","messageId","Date","now","Math","random","requestEvent","CustomEvent","YOURS_REQUEST","detail","params","self","addEventListener","e","responseEvent","success","data","error","once","dispatchEvent","whitelistedEvents","SIGNED_OUT","SWITCH_ACCOUNT","on","removeListener","emit","createYoursEventEmitter","eventListeners","Map","eventName","callback","_eventListeners$get","includes","has","set","get","push","console","listeners","filter","fn","forEach","provider","isReady","connect","CONNECT","disconnect","DISCONNECT","isConnected","IS_CONNECTED","getPubKeys","GET_PUB_KEYS","getAddresses","GET_ADDRESSES","getNetwork","GET_NETWORK","getBalance","GET_BALANCE","getOrdinals","GET_ORDINALS","getBsv20s","GET_BSV20S","sendBsv","SEND_BSV","sendBsv20","SEND_BSV20","transferOrdinal","TRANSFER_ORDINAL","signMessage","SIGN_MESSAGE","broadcast","BROADCAST","getSignatures","GET_SIGNATURES","getSocialProfile","GET_SOCIAL_PROFILE","getPaymentUtxos","GET_PAYMENT_UTXOS","getExchangeRate","GET_EXCHANGE_RATE","purchaseOrdinal","PURCHASE_ORDINAL","purchaseBsv20","PURCHASE_BSV20","generateTaggedKeys","GENERATE_TAGGED_KEYS","getTaggedKeys","GET_TAGGED_KEYS","inscribe","INSCRIBE","encrypt","ENCRYPT","decrypt","DECRYPT","window","panda","yours","YOURS_EMIT_EVENT","event","emitEvent","action","emitWhitelistedEvent","ChromeStorageService","constructor","storage","chrome","local","obj","runtime","lastError","this","getAndSetStorage","keyOrKeys","result","remove","clear","mapDeprecatedStorageToNewInterface","_socialProfile$avatar","_socialProfile$displa","_socialProfile$avatar2","_appState$balance$bsv","_appState$balance","_appState$balance$sat","_appState$balance2","_appState$balance$usd","_appState$balance3","_ref","appState","colorTheme","derivationTags","encryptedKeys","exchangeRateCache","lastActiveTime","network","noApprovalLimit","passKey","popupWindowId","salt","socialProfile","whitelist","oldStorage","newInterface","accounts","addresses","identityAddress","name","icon","avatar","HOSTED_YOURS_IMAGE","settings","isPasswordRequired","displayName","favoriteTokens","customFeeRate","bsvAddress","ordAddress","balance","bsv","satoshis","usdInCents","pubKeys","bsvPubKey","ordPubKey","identityPubKey","NetWork","Mainnet","selectedAccount","accountNumber","isLocked","version","CHROME_STORAGE_OBJECT_VERSION","hasUpgradedToSPV","setOldAppStateIfMissing","keys","retrieveKeysFromOldStorage","ordinals","walletAddress","walletPubKey","updateNested","key","update","_result$key","existingObject","mergedObject","deepMerge","Error","removeNested","nestedKey","_result$key2","getCurrentAccountObject","undefined","account","getCustomFeeRate","_accounts$selectedAcc","_accounts$selectedAcc2","_accounts$selectedAcc3","getAllAccounts","Object","entries","map","_ref2","address","switchAccount","sendMessage","d","JSON","parse","walletAddr","Utils","TESTNET_ADDRESS_PREFIX","MAINNET_ADDRESS_PREFIX","ordAddr","identityAddr","log","GorillaPoolService","chromeStorageService","_this","getUtxoByOutpoint","axios","getBaseUrl","outpoint","ordUtxo","script","stringify","getTokenPriceInSats","tokenId","tokenIds","length","id","satPrice","pricePer","getBsv20Balances","url","join","b","tick","sym","dec","all","confirmed","BigInt","pending","listed","getBSV20Utxos","arguments","utxos","isBSV20v2","utxo","status","listing","getBsv20Details","GP_BASE_URL","GP_TESTNET_BASE_URL","target","source","Array","isArray","theme","color","component","bottomMenuBackground","bottomMenuText","ordinalSelectedBorder","ordinalTypeJson","ordinalTypePlainText","ordinalTypeUnsupported","pageLoaderSpinner","pageLoaderSpinnerBorder","pageLoaderText","primaryButtonLeftGradient","primaryButtonRightGradient","primaryButtonText","progressBar","progressBarTrack","queueBannerSynced","queueBannerSyncedText","queueBannerSyncing","queueBannerSyncingText","secondaryOutlineButtonGradientLeft","secondaryOutlineButtonGradientRight","secondaryOutlineButtonText","snackbarError","snackbarErrorText","snackbarSuccess","snackbarSuccessText","snackbarWarning","snackbarWarningText","tabSelectedLeftGradient","tabSelectedRightGradient","tabSelectedText","tabUnselected","tabUnselectedText","toggleSwitchOn","warningButton","warningButtonText","global","neutral","gray","row","walletBackground","contrast","repo","services","apps","bsv20","locks","walletName","message","warn","removeWindow","windowId","windows","sendTransactionNotification","newTxCount","notifications","create","iconUrl","title","priority","notificationId","saltedCiphertext","password","CryptoJS","Hex","slice","iv","ciphertext","key256Bits","keySize","iterations","toString","Utf8","test","mapOrdinal","t","_t$data","_t$data$origin","_t$data$origin$data","_t$data$origin$data$i","_t$data$origin2","_t$data$origin2$data","_t$data$origin2$data$","_t$data$origin2$data$2","_t$data$origin3","_t$data$origin3$data","_t$data$origin3$data$","_t$data$origin3$data$2","_t$data$origin$data$i2","_t$data$origin$data$i3","_t$data$origin4","_t$data$origin4$data","_t$data$origin4$data$","_t$data$origin4$data$2","_t$data$origin5","_t$data$origin5$data","_t$data$origin5$data$","_t$data$origin5$data$2","_t$data$origin$data2","_t$data$origin$data3","_t$data$origin$data3$","_t$block","_t$block2","_t$data2","_t$data2$insc","_t$data2$insc$data","_t$data$insc","_t$data$insc$data","_t$data$insc$data$fil","_t$data$insc2","_t$data$insc2$data","_t$data$insc2$data$fi","_t$data$lock","_t$data$map","_t$data$bsv","_t$data$bsv2","_t$data$bsv3","_t$data$bsv4","_t$data$bsv5","_t$data$bsv5$data","_t$data$bsv6","_t$data$bsv6$data","txid","vout","Number","owner","spend","origin","nonce","num","block","height","idx","insc","file","size","hash","text","startsWith","content","json","sigma","s","signature","list","payout","price","lock","bsv21","amt","number","n","isSafeInteger","bool","isBytes","a","Uint8Array","bytes","_len","lengths","_key","h","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","exports","assert","_assert_js_1","require","utils_js_1","Chi","c","Maj","HashMD","Hash","padOffset","isLE","super","pos","buffer","view","createView","len","toBytes","take","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","value","setBigUint64","_32n","_u32_max","wh","wl","l","setUint32","oview","outLen","state","digest","res","destroy","_cloneInto","to","fromBig","split","add","U32_MASK64","lst","le","Ah","Uint32Array","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","globalThis","crypto","HMAC","iHash","pad","oHash","buf","getPrototypeOf","hmac","opts","dkLen","DK","PRF","PRFSalt","pbkdf2Init","prfW","arr","u","ti","Ti","setInt32","ui","pbkdf2Output","asyncTick","asyncLoop","hmac_js_1","_password","_salt","_opts","checkOpts","_md_js_1","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","SHA224","wrapConstructor","_u64_js_1","SHA512_Kh","SHA512_Kl","default","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","byteSwap","hex","hexes","hl","al","array","ai","hi","n1","asciiToBase16","charCodeAt","n2","char","iters","cb","ts","diff","nextTick","utf8ToBytes","sum","defaults","toStr","call","assign","hashCons","hashC","msg","tmp","bytesLength","crypto_1","getRandomValues","randomBytes","byteLength","floor","DataView","word","shift","rotl","from","_","padStart","asciis","_0","_9","_A","_F","_a","_f","str","TextEncoder","encode","clone","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","indexOf","start","end","defineProperty","wordlists","_default","czech","err","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","portuguese","english","EN","sha256_1","sha512_1","pbkdf2_1","utils_1","_wordlists_1","DEFAULT_WORDLIST","INVALID_MNEMONIC","INVALID_ENTROPY","WORDLIST_REQUIRED","normalize","lpad","padString","binaryToByte","bin","parseInt","bytesToBinary","x","deriveChecksumBits","entropyBuffer","CS","sha256","mnemonicToEntropy","mnemonic","wordlist","words","bits","index","dividerIndex","entropyBits","checksumBits","entropyBytes","match","entropy","Buffer","entropyToMnemonic","isBuffer","TypeError","binary","base64","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","setPrototypeOf","prototype","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","lo","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","alloc","allocUnsafeSlow","_isBuffer","compare","y","concat","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","getMessage","Base","writable","configurable","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","alphabet","table","i16","BufferBigIntNotDefined","module","BlockCipher","lib","C_algo","algo","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AES","extend","_doReset","_nRounds","_keyPriorReset","keyWords","sigBytes","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","encryptBlock","M","_doCryptBlock","decryptBlock","nRounds","s2","s3","round","t0","t1","t2","t3","_createHelper","factory","N","ORIG_P","ORIG_S","BLOWFISH_CTX","pbox","sbox","ctx","BlowFish_Encrypt","left","right","temp","Xl","Xr","BlowFish_Decrypt","BlowFishInit","keysize","Row","Col","keyIndex","Data1","Data2","Blowfish","blockSize","ivSize","Cipher","C_lib","WordArray","BufferedBlockAlgorithm","C_enc","enc","Base64","EvpKDF","cfg","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","init","xformMode","_xformMode","reset","dataUpdate","_append","_process","finalize","_doFinalize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","C_mode","StreamCipher","mode","BlockCipherMode","Encryptor","Decryptor","_cipher","_iv","CBC","xorBlock","_prevBlock","processBlock","thisBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","CipherParams","modeCreator","_minBufferSize","_mode","__creator","_doProcessBlock","finalProcessedBlocks","_data","cipherParams","mixIn","formatter","OpenSSLFormatter","format","OpenSSL","openSSLStr","ciphertextWords","splice","encryptor","cipherCfg","algorithm","_parse","OpenSSLKdf","kdf","execute","hasher","compute","derivedParams","msCrypto","cryptoSecureRandomInt","subtype","overrides","hasOwnProperty","$super","properties","propertyName","encoder","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","nBytes","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","_nDataBytes","doFlush","processedWords","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","Hasher","messageUpdate","_createHmacHelper","parseLoop","base64Str","base64StrLength","reverseMap","bitsCombined","_map","base64Chars","triplet","charAt","paddingChar","_reverseMap","paddingIndex","Base64url","urlSafe","_safe_map","swapEndian","Utf16","Utf16BE","utf16Chars","utf16Str","utf16StrLength","Utf16LE","MD5","derivedKey","derivedKeyWords","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","typedArrayByteLength","T","sin","_hash","offset_i","M_offset_i","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","HmacMD5","CFB","generateKeystreamAndEncrypt","keystream","CTRGladman","incWord","b1","b2","b3","incCounter","counter","_counter","CTR","ECB","OFB","_keystream","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","PBKDF2","blockIndex","blockIndexWords","blockWords","blockWordsLength","intermediate","intermediateWords","S","C_","RabbitLegacy","K","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","gh","gl","Rabbit","RC4","keySigBytes","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","bl","cl","dl","el","ar","br","cr","dr","er","hr","zl","zr","sl","sr","f1","f2","f3","f4","f5","z","HmacRIPEMD160","W","SHA1","HmacSHA1","HmacSHA224","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","f","g","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","HmacSHA256","X64Word","x64","Word","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","_state","nBlockSizeLanes","M2i","M2i1","lane","high","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","C_x64","X64WordArray","HmacSHA384","X64Word_create","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","bh","ch","dh","eh","fh","fl","hh","Wil","Wih","Wi","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","t1l","chh","chl","majh","majl","Ki","Kih","Kil","t1h","t2l","toX32","HmacSHA512","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","mask","TripleDES","key1","key2","key3","_des1","_des2","_des3","X32WordArray","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","mLen","eLen","eMax","eBias","nBits","NaN","rt","isNaN","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","args","browser","env","argv","versions","addListener","off","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","umask","k","for","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","defaultProps","$$typeof","props","_owner","current","Fragment","jsx","jsxs","r","v","w","iterator","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","context","refs","updater","isReactComponent","setState","forceUpdate","isPureReactComponent","I","J","L","children","O","P","Q","R","next","done","_status","_result","then","U","V","transition","ReactCurrentDispatcher","ReactCurrentBatchConfig","Children","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","YoursIcon","jsx_runtime_1","width","viewBox","xmlns","filterUnits","colorInterpolationFilters","floodOpacity","in","values","dy","stdDeviation","in2","x1","y1","y2","gradientUnits","stopColor","YoursProvider","YoursContext","react_1","yoursWallet","setYoursWallet","checkYoursWallet","intervalId","setInterval","clearInterval","useYoursWallet","YoursWalletContext_1","__createBinding","o","k2","desc","getOwnPropertyDescriptor","__esModule","__exportStar","Bsv20Status","BigNumber","static","negative","red","isBN","wordSize","cmp","base","endian","initNumber","initArray","parseHex","parseBase","strip","parseHex4Bits","parseHexByte","lowerBound","parseBaseWord","limbLen","limbPow","total","mod","imuln","_iaddn","dest","move","expand","normSign","carry","zeros","groupSize","groupSizes","groupBase","groupBases","isZero","modrn","idivn","toNumber","toArrayLikeLE","position","toArrayLikeBE","reqLength","countWordBits","clz32","zeroWordBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","minLength","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","ncarry","rword","maxJ","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","mulTo","isNegNum","muln","sqr","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","Boolean","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","wordDiv","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","toRed","convertTo","forceRed","fromRed","convertFrom","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","verify2","redIMul","redSqr","verify1","redISqr","redSqrt","redInvm","redNeg","redPow","fromHex","toHex","fromJSON","fromNumber","fromSm","reverse","toSm","fromBits","nsize","nword","toBits","unshift","every","byte","reduce","fromScriptNum","requireMinimal","maxNumSize","MAX_SAFE_INTEGER","toScriptNum","Mersenne","_tmp","ireduce","rlen","imulK","K256","prev","ReductionContext","prime","imod","mod3","one","nOne","lpow","inv","wnd","currentLen","MontgomoryMethod","rinv","minv","BasePoint","curve","precomputed","Curve","JacobianPoint","zOne","toP","isInfinity","Point","zinv","zinv2","ax","ay","pz2","z2","u1","u2","dbl","h2","h3","nx","ny","nz","mixedAdd","toJ","dblp","xx","yy","yyyy","yyyy8","c8","z3","pz3","eqXToP","zs","rx","xc","redN","expression","BaseHash","pendingTotal","outSize","_delta8","_delta32","padLength","hmacStrength","_update","_digest","_digestHex","join32","_pad","digestHex","isSurrogatePair","htonl","toHex32","zero8","split32","rotr32","rotl32","sum32","SUM32_3","SUM32_4","SUM32_5","FT_1","ch32","p32","maj32","S0_256","S1_256","G0_256","rh","sh","Kh","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","SHA256HMAC","inner","outer","SHA1HMAC","SHA512HMAC","ripemd160","sha1","sha512","hash256","hash160","sha256hmac","sha512hmac","pbkdf2","keylen","block1","destPos","zero2","currentBit","currentByte","toUTF8","surrogate1","surrogate2","toBase64","byte1","byte2","byte3","encoded2","encoded3","encoded4","base58chars","fromBase58","lz","psz","lastValue","toBase58","base58Map","toBase58Check","prefix","fromBase58Check","prefixLength","check","Writer","bufs","getLength","totalLength","writeReverse","buf2","writeUInt64BEBn","bn","writeUInt64LEBn","writeUInt64LE","writeVarIntNum","varIntNum","writeVarIntBn","varIntBn","bw","Reader","eof","readReverse","readUInt64BEBn","readUInt64LEBn","readVarIntNum","readVarInt","readVarIntBn","minimallyEncode","inf","fromDER","fromX","redSqrtOptimized","exponent","odd","modPow","modulus","sqrtMod","sqrtCandidate","xBigInt","isYOdd","xBN","yBN","zero","isRed","obj2point","pre","beta","doubles","step","points","naf","validate","compact","getX","getY","ys1","dyinv","_hasDoubles","_fixedNafMul","_endoWnafMulAdd","mulAdd","k1","p2","coeffs","jmulAdd","_precompute","negate","JPoint","_getBeta","endo","endoMul","_getDoubles","getNAF","_bitLength","repr","nafW","_wnafMulAdd","defW","jacobianResult","wndWidth","_wnafT1","_wnafT2","_wnafT3","nafPoints","_getNAFPoints","comb","jsf","getJSF","ja","jb","_wnafT4","npoints","_endoWnafT1","ncoeffs","_endoWnafT2","_endoSplit","power","globalCurve","two","tinv","zeroA","threeA","ws","d1","d2","m14","m24","m8","cachedProperty","computer","parseBytes","intFromLE","conf","lambda","basis","gRed","_getEndomorphism","betas","_getEndoRoots","lambdas","vec","_getEndoBasis","ntinv","aprxSqrt","prevR","len1","v1","v2","c1","c2","p1","q1","q2","point","rhs","Signature","initial","place","slen","fromCompact","compactByte","verify","msgHash","toDER","constructLength","rmPadding","backHalf","toCompact","recovery","compressed","RecoverPublicKey","isSecondKey","eNeg","rInv","srInv","eInvrInv","pubKey","PublicKey","CalculateRecoveryFactor","pubkey","Qprime","DRBG","seed","kmac","generate","truncateToN","truncOnly","sign","forceLowS","customK","bigIntToBytes","bkey","drbg","ns1","iter","generateK","k_str","k_hex","modInv","lm","hm","nm","neww","pointAdd","numerator","xR","scalarMul","kInv","rd","r_bn","s_bn","kp","sig","three","old_r","old_s","modMul","modSub","four","eight","pointDouble","X1","Y","Y1","Z","Z1","Y1_sq","X3","Z1Z1","Z2Z2","U1","U2","S1","S2","HHH","scalarMultiply","kBin","verifyECDSA","publicKey","RG","RQ","ZInv","ZInv2","x1_affine","sinv","fromPrivateKey","deriveSharedSecret","priv","toHash","pkh","toAddress","deriveChild","privateKey","invoiceNumber","sharedSecret","invoiceNumberBin","finalPoint","fromMsgHashAndCompactSignature","PointInFiniteField","Polynomial","threshold","randomX","Random","randomY","valueAt","term","xj","denominatorInverse","fraction","KeyShares","integrity","fromBackupFormat","shares","share","shareParts","tInt","toBackupFormat","PrivateKey","fromRandom","fromWif","wif","decoded","modN","checkInField","inField","isValid","toPublicKey","toWif","toKeyShares","totalShares","poly","toBackupShares","fromBackupShares","fromKeyShares","keyShares","createZeroBlock","TransactionSignature","scope","currentInput","sourceTXID","sourceOutputIndex","sequence","inputSequence","inputs","otherInputs","inputIndex","getOutputsHash","outputIndex","writer","outputs","lockingScript","toBinary","hashPrevouts","hashSequence","hashOutputs","SIGHASH_ANYONECANPAY","getPrevoutHash","sourceTransaction","SIGHASH_SINGLE","SIGHASH_NONE","getSequenceHash","transactionVersion","subscriptBin","subscript","sourceSatoshis","sequenceNumber","lockTime","fromChecksigFormat","derbuf","tempSig","hasLowS","toChecksigFormat","OP","OP_FALSE","OP_0","OP_PUSHDATA1","OP_PUSHDATA2","OP_PUSHDATA4","OP_1NEGATE","OP_RESERVED","OP_TRUE","OP_1","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_16","OP_NOP","OP_VER","OP_IF","OP_NOTIF","OP_VERIF","OP_VERNOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_CAT","OP_SUBSTR","OP_SPLIT","OP_LEFT","OP_NUM2BIN","OP_RIGHT","OP_BIN2NUM","OP_SIZE","OP_INVERT","OP_AND","OP_OR","OP_XOR","OP_EQUAL","OP_EQUALVERIFY","OP_RESERVED1","OP_RESERVED2","OP_1ADD","OP_1SUB","OP_2MUL","OP_2DIV","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_MUL","OP_DIV","OP_MOD","OP_LSHIFT","OP_RSHIFT","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CODESEPARATOR","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_NOP1","OP_NOP2","OP_NOP3","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_NOP11","OP_NOP12","OP_NOP13","OP_NOP14","OP_NOP15","OP_NOP16","OP_NOP17","OP_NOP18","OP_NOP19","OP_NOP20","OP_NOP21","OP_NOP22","OP_NOP23","OP_NOP24","OP_NOP25","OP_NOP26","OP_NOP27","OP_NOP28","OP_NOP29","OP_NOP30","OP_NOP31","OP_NOP32","OP_NOP33","OP_NOP34","OP_NOP35","OP_NOP36","OP_NOP37","OP_NOP38","OP_NOP39","OP_NOP40","OP_NOP41","OP_NOP42","OP_NOP43","OP_NOP44","OP_NOP45","OP_NOP46","OP_NOP47","OP_NOP48","OP_NOP49","OP_NOP50","OP_NOP51","OP_NOP52","OP_NOP53","OP_NOP54","OP_NOP55","OP_NOP56","OP_NOP57","OP_NOP58","OP_NOP59","OP_NOP60","OP_NOP61","OP_NOP62","OP_NOP63","OP_NOP64","OP_NOP65","OP_NOP66","OP_NOP67","OP_NOP68","OP_NOP69","OP_NOP70","OP_NOP71","OP_NOP72","OP_NOP73","OP_NOP77","OP_SMALLDATA","OP_SMALLINTEGER","OP_PUBKEYS","OP_PUBKEYHASH","OP_PUBKEY","OP_INVALIDOPCODE","Script","chunks","fromASM","asm","tokens","token","opCode","opCodeNum","op","fromBinary","toASM","chunk","_chunkToString","writeScript","writeOpCode","setChunkOpCode","writeBn","writeBin","writeNumber","removeCodeseparators","findAndDelete","isPushOnly","isLockingScript","isUnlockingScript","LockingScript","UnlockingScript","maxScriptElementSize","maxMultisigKeyCount","requireMinimalPush","Spend","unlockingScript","programCounter","lastCodeSeparator","altStack","ifStack","operation","checkSignatureEncoding","nLEnR","nLEnS","isChecksigFormat","scriptEvaluationError","SIGHASH_FORKID","checkPublicKeyEncoding","verifySignature","preimage","isScriptExecuting","buf1","buf3","spliced","rawnum","signbit","x3","bn1","bn2","bn3","bufSig","bufPubkey","bufHash","fOk","nKeysCount","ikey","ikey2","nSigsCount","isig","fValue","fEqual","fSuccess","currentOpcode","isChunkMinimal","stacktop","castToBool","pop","shifted","bufShifted","padDataToSize","isMinimallyEncoded","MerklePath","blockHeight","path","fromReader","reader","treeHeight","flags","nLeavesAtThisHeight","level","leaf","duplicate","sort","bump","legalOffsets","Set","root","leaves","offsetsAtThisHeight","computeRoot","nLeaves","find","workingHash","findOrComputeLeaf","leaf0","leaf1","workinghash","chainTracker","isValidRootForHeight","combine","other","combinedPath","pushIfNew","dropOffsetsFromLevel","dropOffsets","findIndex","nextComputedOffsets","cos","ncos","computedOffsets","peer","NodejsHttpClient","https","request","requestOptions","req","body","ok","statusCode","mediaType","headers","statusText","statusMessage","FetchHttpClient","fetch","options","fetchOptions","method","defaultHttpClient","noHttpClient","defaultDeploymentId","ARC","URL","apiKey","deploymentId","callbackUrl","callbackToken","httpClient","config","tx","rawTx","toHexEF","requestHeaders","response","extraInfo","txStatus","competingTxs","broadcastRes","st","description","more","Authorization","WhatsOnChain","getHeaders","merkleroot","Accept","BEEF_MAGIC","Transaction","metadata","merklePath","cachedHash","fromBEEF","beef","transactions","BUMPs","parseBEEFData","txids","lastTXID","targetTXID","addPathOrInputs","pathIndex","sourceObj","fromAtomicBEEF","subjectTXIDArray","subjectTXID","beefReader","validTxids","traverseDependencies","inputTxid","numberOfBUMPs","numberOfTransactions","fromEF","ef","inputsLength","scriptLength","scriptBin","lockingScriptLength","lockingScriptBin","outputsLength","parseScriptOffsets","vin","fromHexEF","fromHexBEEF","addInput","addOutput","updateMetadata","fee","modelOrFee","changeDistribution","SatoshisPerKilobyte","sats","computeFee","change","changeCount","perOutput","getFee","totalIn","totalOut","unlockingScripts","unlockingScriptTemplate","broadcaster","toEF","toHexBEEF","toBEEF","toHexAtomicBEEF","toAtomicBEEF","feeModel","verifiedTxids","txQueue","cpTx","inputTotal","sourceOutput","sourceTxid","outputTotal","txs","addPathsAndInputs","hasProof","added","some","beefData","isBroadcastResponse","magicHash","messageBuf","hashBuf","ECDSA","HD","versionBytesNum","depth","parentFingerPrint","childIndex","chainCode","privKey","constants","fromSeed","keyBytes","isPrivate","isPublic","derive","bip32","usePrivate","ibc","ib","il","ir","ilG","Kpar","newpub","pubKeyhash","toPublic","encKey","decKey","_tables","decTable","keyLen","rcon","_crypt","encTable","sboxInv","xInv","th","tEnc","tDec","nInnerRounds","kIndex","Rand","_rand","noRand","ayn","getVarIntSize","estimateLength","thisArg","kindOf","cache","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","toStringTag","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","getOwnPropertyNames","findKey","_global","isContextDefined","isTypedArray","TypedArray","isHTMLForm","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","setImmediate","callbacks","postMessage","asap","queueMicrotask","isFormData","kind","FormData","append","isArrayBufferView","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","stripBOM","inherits","superConstructor","toFlatObject","destObj","propFilter","merged","endsWith","searchString","lastIndex","forEachEntry","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toCamelCase","toFiniteNumber","defaultValue","generateString","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","catch","AxiosError","captureStackTrace","utils","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","isFlatArray","exposedHelpers","build","charMap","AxiosURLSearchParams","_pairs","toFormData","_encode","buildURL","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","location","href","platform","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","transitional","transitionalDefaults","adapter","transformRequest","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","line","substring","parseHeaders","tokensRE","parseTokens","matcher","delete","deleted","deleteHeader","normalized","formatHeader","targets","asStrings","computed","_len2","_key2","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","freq","lastArgs","timer","timestamp","invoke","flush","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","lengthComputable","progressBytes","rate","progress","estimated","progressEventDecorator","throttled","asyncDecorator","msie","userAgent","urlParsingNode","originURL","resolveURL","setAttribute","protocol","host","search","hostname","port","pathname","requestURL","expires","domain","secure","cookie","toGMTString","RegExp","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunkSize","readStream","stream","asyncIterator","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","Request","Response","isReadableStreamSupported","encodeText","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","knownAdapters","http","xhr","xhrAdapter","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","formatMessage","opt","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","Cancel","promises","spread","isAxiosError","payload","formToJSON","getAdapter","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","transactionDoneMap","WeakMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","replaceTraps","wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","unwrap","transformCachableValue","unlisten","complete","DOMException","cacheDonePromiseForTransaction","IDBDatabase","IDBObjectStore","IDBIndex","Proxy","IDBRequest","promisifyRequest","newValue","openDB","blocked","upgrade","blocking","terminated","indexedDB","openPromise","oldVersion","newVersion","transaction","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","_len3","_key3","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","isIteratorProp","REJECTED","MEMPOOL","BROADCASTED","CONFIRMED","prevHash","time","events","deps","Preview","Dependency","Persist","Deep","Trust","Verify","TrustAndVerify","owners","indexMode","tag","preSave","sync","FAILED","QUEUED","DOWNLOADED","INGESTED","IMMUTABLE","toBEBinary","ASC","DESC","includeSpent","toQueryKey","buildQueryKey","Unindexed","Trusted","Validated","logs","tags","hasEvents","stores","interval","txos","blocks","txns","ingest","register","getState","indexers","outs","parseMode","processQueue","syncTxLogs","resolveBlock","getTxo","getTxos","getMany","getTx","loadTx","getRecentTxs","getRecentTxLogs","parseTx","getSyncedBlock","getSynced","getBlock","getByHeight","getChaintip","getBackupTx","rawtx","proof","getBlocksBackup","getBackup","restoreBlocks","putMany","restoreBackupTx","put","getBackupLogs","restoreBackupLogs","mainnet","testnet","accountId","eventSource","fetchTxn","fetchProof","getBlocks","getBsv2021Txo","getOriginAncestors","getInscriptionFile","subscribed","EventSource","onmessage","score","$","until","spends","summary","amount","fund","ordlock","throw","Invalid","Pending","Valid","fundAddress","tt","supply","contract","et","at","parseMap","it","fields","parent","ct","oneSat","reprocess","ut","valid","dt","ht","ft","pt","createObjectStore","keyPath","createIndex","getByHash","getFromIndex","getAll","PENDING","vt","syncRunning","stopSync","saveTx","processMempool","processConfirmed","getByStatus","wt","getKey","IDBKeyRange","bound","yt","xt","mt","multiEntry","getBySpend","getAllFromIndex","nextPage","getQueueLength","countFromIndex","getIngests","putIngest","putIngests","delIngest","delIngests","getTxLog","getTxLogs","putTxLog","loadDeps","isDep","bt","emitter","doSync","kt","buildIndexContext","updateQueueStats","processDownloads","processIngests","processConfirms","processImmutable","downloadOnly","St","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","Function","initOneSatSPV","startSync","FundIndexer","IndexMode","lockIndexer","LockIndexer","bsv20Indexers","Bsv21Indexer","Bsv20Indexer","ordIndexers","OneSatIndexer","OrdLockIndexer","InscriptionIndexer","MapIndexer","SigmaIndexer","OriginIndexer","oneSatSPV","OneSatWebSPV","Testnet","registerEventListeners","QUEUE_STATUS_UPDATE","IMPORT_STATUS_UPDATE","FETCHING_TX_STATUS_UPDATE","tip","lastHeight","BLOCK_HEIGHT_UPDATE","currentHeight","isInServiceWorker","_self","gorillaPoolService","oneSatSPVPromise","responseCallbackForConnectRequest","responseCallbackForSendBsvRequest","responseCallbackForSendBsv20Request","responseCallbackForTransferOrdinalRequest","responseCallbackForPurchaseOrdinalRequest","responseCallbackForSignMessageRequest","responseCallbackForBroadcastRequest","responseCallbackForGetSignaturesRequest","responseCallbackForGenerateTaggedKeysRequest","responseCallbackForEncryptRequest","responseCallbackForDecryptRequest","INACTIVITY_LIMIT","initNewTxsListener","processSyncUtxos","deleteAllIDBDatabases","dbs","databases","_db$name","deleteDatabase","signOut","launchPopUp","getURL","verifyAccess","requestingDomain","authorizeRequest","onMessage","sender","sendResponse","emitEventToActiveTabs","USER_CONNECT_RESPONSE","SEND_BSV_RESPONSE","SEND_BSV20_RESPONSE","TRANSFER_ORDINAL_RESPONSE","PURCHASE_ORDINAL_RESPONSE","SIGN_MESSAGE_RESPONSE","BROADCAST_RESPONSE","GET_SIGNATURES_RESPONSE","GENERATE_TAGGED_KEYS_RESPONSE","ENCRYPT_RESPONSE","DECRYPT_RESPONSE","SYNC_UTXOS","isAuthorized","processConnectRequest","processDisconnectRequest","processGetPubKeysRequest","processGetBalanceRequest","processGetAddressesRequest","processGetNetworkRequest","processGetOrdinalsRequest","processGetBsv20sRequest","processSendBsvRequest","processSendBsv20Request","processTransferOrdinalRequest","processPurchaseOrdinalRequest","processSignMessageRequest","processBroadcastRequest","processGetSignaturesRequest","processGetSocialProfileRequest","processGetPaymentUtxos","processGetExchangeRate","processGenerateTaggedKeysRequest","processGetTaggedKeys","processEncryptRequest","processDecryptRequest","processIsConnectedRequest","processConnectResponse","processSendBsvResponse","processSendBsv20Response","processTransferOrdinalResponse","processPurchaseOrdinalResponse","processSignMessageResponse","processBroadcastResponse","processGetSignaturesResponse","processGenerateTaggedKeysResponse","processEncryptResponse","processDecryptResponse","tabs","query","tab","connectRequest","updatedWhitelist","_result$account$setti","currentTime","_account$network","TxoLookup","TxoSort","results","_obj$account","_obj$account$addresse","_obj$account2","_obj$account2$address","_obj$account3","_obj$account4","toFixed","txo","sendBsvRequest","inscribeRequest","base64Data","_d$satoshis","inscription","mimeType","sendBsv20Request","transferOrdinalRequest","purchaseOrdinalRequest","broadcastRequest","signMessageRequest","getSignaturesRequest","sigRequests","_account$settings$soc","_account$settings","_account$settings$soc2","_account$settings$soc3","_account$settings2","_account$settings2$so","generateTaggedKeysRequest","label","_message$params$ids$l","_message$params","_message$params$ids","returnData","_returnData","ids","_message$params2","_message$params2$ids","encryptRequest","decryptRequest","cleanup","types","decision","_responseCallbackForC","_responseCallbackForS","_responseCallbackForS2","_responseCallbackForT","_responseCallbackForG","_responseCallbackForP","derivationTag","_responseCallbackForS3","_responseCallbackForB","_response$sigResponse","sigResponses","_responseCallbackForG2","encryptedMessages","_responseCallbackForE","decryptedMessages","_responseCallbackForD","onRemoved","closedWindowId"],"sourceRoot":""}